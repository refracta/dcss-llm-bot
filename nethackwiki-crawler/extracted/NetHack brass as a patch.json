{"title":"NetHack brass as a patch","url":"https://nethackwiki.com/wiki/NetHack_brass_as_a_patch","type":"markdown","data":"| **NetHack brass as a patch**                                             |                                                                        |\n| ------------------------------------------------------------------------ | ---------------------------------------------------------------------- |\n| Author                                                                   | Code by Youkan Patch from [Kernigh](/wiki/User:Kernigh \"User:Kernigh\") |\n| Download                                                                 | [link](http://kernigh.pbwiki.com/f/brass-040923.diff)                  |\n| [NetHack PatchDB](/wiki/NetHack_Patch_Database \"NetHack Patch Database\") | [279](http://nhpatchdb.alt.org/?279)                                   |\n\nThis page presents [NetHack brass](/wiki/NetHack_brass \"NetHack brass\") as a [patch](/wiki/Patch \"Patch\") against vanilla [NetHack 3.4.3](/wiki/NetHack_3.4.3 \"NetHack 3.4.3\").\n\n[Kernigh](/wiki/User:Kernigh \"User:Kernigh\") used the [diff](/wiki/Diff \"Diff\") program to generate this \"unified diff\" between NetHack 3.4.3 and NetHack brass 040923 after pruning some files from the 040923. In particular, Youkan's zip of the 040923 source code was not clean of generated files created during the build process on [Microsoft Windows](/wiki/Microsoft_Windows \"Microsoft Windows\"), including some Windows executables. Youkan's zip also contains old versions of some of the [dungeon](/wiki/Dungeon \"Dungeon\") files, with DOS batch (\\*.bat) scripts to enable them.\n\nThe patch presented here contains neither the Windows-generated files, nor the old dungeons and DOS batch script. After applying this patch to the vanilla sources, [you](/wiki/You \"You\") do have everything needed to build NetHack brass 040923 from source code. If you are building upon [Unix](/wiki/Unix \"Unix\"), then you also want the [brass interface patch](/wiki/Brass_interface_patch \"Brass interface patch\"), or at least the Unix fixes from that patch.\n\nDownload the patch from:\n\n- <http://kernigh.pbwiki.com/f/brass-040923.diff>\n\nA user has suggested improving this page or section as follows:\n\n*\"Merge this into the main NetHack brass page. Additionally someone who still has the diff file should upload it and replace this now-dead link.\"*\n\n[ ]\n\n## Contents\n\n- [1 Files patched](#Files_patched)\n\n- [2 Changes to some source files](#Changes_to_some_source_files)\n\n  - [2.1 artifact.h](#artifact.h)\n  - [2.2 artilist.h](#artilist.h)\n  - [2.3 attrib.h](#attrib.h)\n  - [2.4 config.h](#config.h)\n  - [2.5 display.h](#display.h)\n  - [2.6 obj.h](#obj.h)\n  - [2.7 zap.c](#zap.c)\n\n## Files patched\n\n- `dat/*.des`\n\n  - Most objects are made from normal material `mat_normal` to handle a change in the [des-file format](/wiki/Des-file_format \"Des-file format\").\n  - Changes to the maps of the [Quest](/wiki/Quest \"Quest\") levels for the [Monk](/wiki/Monk \"Monk\"), attributed to Bill Foust.\n  - Many, many changes at the [Castle](/wiki/Castle \"Castle\") and below, including a serious redesign of [Gehennom](/wiki/Gehennom \"Gehennom\").\n\n- `dat/rumor.{fal,tru}`\n\n  - This rumor becomes false: \"They say that you can't break an amulet of reflection.\"\n\n- Numerous changes to source files.\n\nNote that the source files do contain several instances of `//` style comments. This comment syntax, borrowed from C++, may not work in compilers older than C99. Some C compilers (including GCC) supported `//` comments in C before C99.\n\n## Changes to some source files\n\nHere are some excerpts of changes to *some* but not all of the source files. These might be useful for those wanting to study the differences between vanilla and NetHack brass.\n\nThe line numbers are those of the diff file.\n\n*The [NetHack General Public License](/wiki/NetHack_General_Public_License \"NetHack General Public License\") applies to screenshots, source code and other content from NetHack.*\n\nThis content was modified from the original NetHack source code distribution (by splitting up NetHack content between wiki pages, and possibly further editing). See the [page history](https://nethackwiki.com/index.php?title=NetHack_brass_as_a_patch\\&action=history) for a list of who changed it, and on what dates.\n\n### artifact.h\n\n```\n2079. diff -pruN nethack-3.4.3/include/artifact.h nhbrass-040923/include/artifact.h\n2080. --- nethack-3.4.3/include/artifact.h\tSun Dec  7 18:39:13 2003\n2081. +++ nhbrass-040923/include/artifact.h\tThu Oct 16 09:05:02 2003\n2082. @@ -38,12 +38,13 @@\n2083.  \n2084.  struct artifact {\n2085.  \tshort\t    otyp;\n2086. -\tconst char  *name;\n2087. +\t/*const*/ char  *name;\n2088.  \tunsigned long spfx;\t/* special effect from wielding/wearing */\n2089.  \tunsigned long cspfx;\t/* special effect just from carrying obj */\n2090.  \tunsigned long mtype;\t/* monster type, symbol, or flag */\n2091.  \tstruct attack attk, defn, cary;\n2092.  \tuchar\t    inv_prop;\t/* property obtained by invoking artifact */\n2093. +\tuchar\t    material;\t/* if artifact is made of special material */\n2094.  \taligntyp    alignment;\t/* alignment of bequeathing gods */\n2095.  \tshort\t    role;\t/* character role associated with */\n2096.  \tshort\t    race;\t/* character race associated with */\n2097. @@ -60,5 +61,13 @@ struct artifact {\n2098.  #define CREATE_PORTAL\t(LAST_PROP+7)\n2099.  #define ENLIGHTENING\t(LAST_PROP+8)\n2100.  #define CREATE_AMMO\t(LAST_PROP+9)\n2101. +#define EMIT_LIGHT\t(LAST_PROP+10)\n2102. +\n2103. +/* additional alighment */\n2104. +#define\tA_CROSSALIGNED\t(-127)\n2105. +\n2106. +/* special damage bonus identifiers */\n2107. +#define ADMG_DOUBLE\t255\n2108. +#define ADMG_MAX\t254\n2109.  \n2110.  #endif /* ARTIFACT_H */\n```\n\n### artilist.h\n\n```\n2111. diff -pruN nethack-3.4.3/include/artilist.h nhbrass-040923/include/artilist.h\n2112. --- nethack-3.4.3/include/artilist.h\tSun Dec  7 18:39:13 2003\n2113. +++ nhbrass-040923/include/artilist.h\tSun Jan  4 01:41:00 2004\n2114. @@ -5,14 +5,14 @@\n2115.  #ifdef MAKEDEFS_C\n2116.  /* in makedefs.c, all we care about is the list of names */\n2117.  \n2118. -#define A(nam,typ,s1,s2,mt,atk,dfn,cry,inv,al,cl,rac,cost) nam\n2119. +#define A(nam,typ,mat,s1,s2,mt,atk,dfn,cry,inv,al,cl,rac,cost) nam\n2120.  \n2121.  static const char *artifact_names[] = {\n2122.  #else\n2123.  /* in artifact.c, set up the actual artifact list structure */\n2124.  \n2125. -#define A(nam,typ,s1,s2,mt,atk,dfn,cry,inv,al,cl,rac,cost) \\\n2126. - { typ, nam, s1, s2, mt, atk, dfn, cry, inv, al, cl, rac, cost }\n2127. +#define A(nam,typ,mat,s1,s2,mt,atk,dfn,cry,inv,al,cl,rac,cost) \\\n2128. + { typ, nam, s1, s2, mt, atk, dfn, cry, inv, mat, al, cl, rac, cost }\n2129.  \n2130.  #define     NO_ATTK\t{0,0,0,0}\t\t/* no attack */\n2131.  #define     NO_DFNS\t{0,0,0,0}\t\t/* no defense */\n2132. @@ -35,42 +35,55 @@ STATIC_OVL NEARDATA struct artifact arti\n2133.   * 3.  Chaotic artifacts are inflated due to scarcity (and balance).\n2134.   */\n2135.  \n2136. +/* Arc\t---\t\t*/\n2137. +/* Bar\tCleaver\t\t*/\n2138. +/* Cav\tSkullcrusher\t*/\n2139. +/* Hea\t---\t\t*/\n2140. +/* Kni\tExcalibur\t*/\n2141. +/* Mon\t---\t\t*/\n2142. +/* Pri\tDisrupter\t*/\n2143. +/* Ran\t---\t\t*/\n2144. +/* Rog\t---\t\t*/\n2145. +/* Sam\tSnickersnee\t*/\n2146. +/* Tou\t---\t\t*/\n2147. +/* Val\tMjollnir\t*/\n2148. +/* Wiz\tMagicbane\t*/\n2149.  \n2150.  /*  dummy element #0, so that all interesting indices are non-zero */\n2151. -A(\"\",\t\t\t\tSTRANGE_OBJECT,\n2152. +A(\"\",\t\t\t\tSTRANGE_OBJECT,\t0,\n2153.  \t0, 0, 0, NO_ATTK, NO_DFNS, NO_CARY, 0, A_NONE, NON_PM, NON_PM, 0L ),\n2154.  \n2155. -A(\"Excalibur\",\t\t\tLONG_SWORD,\n2156. +A(\"Excalibur\",\t\t\tLONG_SWORD,\tMETAL,\n2157.  \t(SPFX_NOGEN|SPFX_RESTR|SPFX_SEEK|SPFX_DEFN|SPFX_INTEL|SPFX_SEARCH),0,0,\n2158.  \tPHYS(5,10),\tDRLI(0,0),\tNO_CARY,\t0, A_LAWFUL, PM_KNIGHT, NON_PM, 4000L ),\n2159.  /*\n2160.   *\tStormbringer only has a 2 because it can drain a level,\n2161.   *\tproviding 8 more.\n2162.   */\n2163. -A(\"Stormbringer\",\t\tRUNESWORD,\n2164. +A(\"Stormbringer\",\t\tRUNESWORD,\t0,\n2165.  \t(SPFX_RESTR|SPFX_ATTK|SPFX_DEFN|SPFX_INTEL|SPFX_DRLI), 0, 0,\n2166.  \tDRLI(5,2),\tDRLI(0,0),\tNO_CARY,\t0, A_CHAOTIC, NON_PM, NON_PM, 8000L ),\n2167.  /*\n2168.   *\tMjollnir will return to the hand of the wielder when thrown\n2169.   *\tif the wielder is a Valkyrie wearing Gauntlets of Power.\n2170.   */\n2171. -A(\"Mjollnir\",\t\t\tWAR_HAMMER,\t\t/* Mjo:llnir */\n2172. +A(\"Mjollnir\",\t\t\tHEAVY_HAMMER,\t0,\t/* Mjo:llnir */\n2173.  \t(SPFX_RESTR|SPFX_ATTK),  0, 0,\n2174. -\tELEC(5,24),\tNO_DFNS,\tNO_CARY,\t0, A_NEUTRAL, PM_VALKYRIE, NON_PM, 4000L ),\n2175. +\tELEC(0,20),\tNO_DFNS,\tNO_CARY,\t0, A_NEUTRAL, PM_VALKYRIE, NON_PM, 4000L ),\n2176.  \n2177. -A(\"Cleaver\",\t\t\tBATTLE_AXE,\n2178. +A(\"Cleaver\",\t\t\tBATTLE_AXE,\t0,\n2179.  \tSPFX_RESTR, 0, 0,\n2180. -\tPHYS(3,6),\tNO_DFNS,\tNO_CARY,\t0, A_NEUTRAL, PM_BARBARIAN, NON_PM, 1500L ),\n2181. +\tPHYS(3,10),\tNO_DFNS,\tNO_CARY,\t0, A_NEUTRAL, PM_BARBARIAN, NON_PM, 1500L ),\n2182.  \n2183. -A(\"Grimtooth\",\t\t\tORCISH_DAGGER,\n2184. +A(\"Grimtooth\",\t\t\tORCISH_DAGGER,\t0,\n2185.  \tSPFX_RESTR, 0, 0,\n2186.  \tPHYS(2,6),\tNO_DFNS,\tNO_CARY,\t0, A_CHAOTIC, NON_PM, PM_ORC, 300L ),\n2187.  /*\n2188.   *\tOrcrist and Sting have same alignment as elves.\n2189.   */\n2190. -A(\"Orcrist\",\t\t\tELVEN_BROADSWORD,\n2191. -\tSPFX_DFLAG2, 0, M2_ORC,\n2192. -\tPHYS(5,0),\tNO_DFNS,\tNO_CARY,\t0, A_CHAOTIC, NON_PM, PM_ELF, 2000L ),\n2193. +A(\"Orcrist\",\t\t\tELVEN_BROADSWORD,\t0,\n2194. +\t(SPFX_WARN|SPFX_DFLAG2), 0, M2_ORC,\n2195. +\tPHYS(15,ADMG_DOUBLE),\tNO_DFNS,\tNO_CARY,\t0, A_CHAOTIC, NON_PM, PM_ELF, 2000L ),\n2196.  \n2197.  /*\n2198.   *\tThe combination of SPFX_WARN and M2_something on an artifact\n2199. @@ -78,60 +91,72 @@ A(\"Orcrist\",\t\t\tELVEN_BROADSWORD,\n2200.   *\tM2_something flags.  In Sting's case it will trigger EWarn_of_mon\n2201.   *\tfor M2_ORC monsters.\n2202.   */\n2203. -A(\"Sting\",\t\t\tELVEN_DAGGER,\n2204. +A(\"Sting\",\t\t\tELVEN_DAGGER,\t0,\n2205.  \t(SPFX_WARN|SPFX_DFLAG2), 0, M2_ORC,\n2206. -\tPHYS(5,0),\tNO_DFNS,\tNO_CARY,\t0, A_CHAOTIC, NON_PM, PM_ELF, 800L ),\n2207. +\tPHYS(15,ADMG_DOUBLE),\tNO_DFNS,\tNO_CARY,\t0, A_CHAOTIC, NON_PM, PM_ELF, 800L ),\n2208.  /*\n2209.   *\tMagicbane is a bit different!  Its magic fanfare\n2210.   *\tunbalances victims in addition to doing some damage.\n2211.   */\n2212. -A(\"Magicbane\",\t\t\tATHAME,\n2213. +A(\"Magicbane\",\t\t\tATHAME,\t0,\n2214.  \t(SPFX_RESTR|SPFX_ATTK|SPFX_DEFN), 0, 0,\n2215.  \tSTUN(3,4),\tDFNS(AD_MAGM),\tNO_CARY,\t0, A_NEUTRAL, PM_WIZARD, NON_PM, 3500L ),\n2216.  \n2217. -A(\"Frost Brand\",\t\tLONG_SWORD,\n2218. +A(\"Disrupter\",\t\t\tMACE,\tSILVER,\n2219. +\t(SPFX_RESTR|SPFX_DFLAG2), 0, M2_UNDEAD,\n2220. +\tPHYS(10,30),\tNO_DFNS,\tNO_CARY,\t0, A_NONE, PM_PRIEST, NON_PM, 2000L ),\n2221. +\n2222. +A(\"Skullcrusher\",\t\t\tCLUB,\tBONE,\n2223. +\t(SPFX_RESTR|SPFX_ATTK), 0, 0,\n2224. +\tPHYS(3,15),\tNO_DFNS,\tNO_CARY,\t0, A_NONE, PM_CAVEMAN, NON_PM, 1000L ),\n2225. +\n2226. +A(\"Frost Brand\",\t\tLONG_SWORD,\t0,\n2227.  \t(SPFX_RESTR|SPFX_ATTK|SPFX_DEFN), 0, 0,\n2228. -\tCOLD(5,0),\tCOLD(0,0),\tNO_CARY,\t0, A_NONE, NON_PM, NON_PM, 3000L ),\n2229. +\tCOLD(5,ADMG_DOUBLE),\tCOLD(0,0),\tNO_CARY,\t0, A_NONE, NON_PM, NON_PM, 3000L ),\n2230.  \n2231. -A(\"Fire Brand\",\t\t\tLONG_SWORD,\n2232. +A(\"Fire Brand\",\t\t\tLONG_SWORD,\t0,\n2233.  \t(SPFX_RESTR|SPFX_ATTK|SPFX_DEFN), 0, 0,\n2234. -\tFIRE(5,0),\tFIRE(0,0),\tNO_CARY,\t0, A_NONE, NON_PM, NON_PM, 3000L ),\n2235. +\tFIRE(5,ADMG_DOUBLE),\tFIRE(0,0),\tNO_CARY,\t0, A_NONE, NON_PM, NON_PM, 3000L ),\n2236.  \n2237. -A(\"Dragonbane\",\t\t\tBROADSWORD,\n2238. -\t(SPFX_RESTR|SPFX_DCLAS), 0, S_DRAGON,\n2239. -\tPHYS(5,0),\tNO_DFNS,\tNO_CARY,\t0, A_NONE, NON_PM, NON_PM, 500L ),\n2240. +A(\"Dragonslayer\",\t\tBROADSWORD,\t0,\n2241. +\t(SPFX_RESTR|SPFX_DCLAS|SPFX_REFLECT), 0, S_DRAGON,\n2242. +\tPHYS(10,ADMG_DOUBLE),\tNO_DFNS,\tNO_CARY,\t0, A_NONE, NON_PM, NON_PM, 2500L ),\n2243.  \n2244. -A(\"Demonbane\",\t\t\tLONG_SWORD,\n2245. +A(\"Demonbane\",\t\t\tLONG_SWORD,\tSILVER,\n2246.  \t(SPFX_RESTR|SPFX_DFLAG2), 0, M2_DEMON,\n2247. -\tPHYS(5,0),\tNO_DFNS,\tNO_CARY,\t0, A_LAWFUL, NON_PM, NON_PM, 2500L ),\n2248. +\tPHYS(10,ADMG_DOUBLE),\tNO_DFNS,\tNO_CARY,\t0, A_LAWFUL, NON_PM, NON_PM, 2500L ),\n2249.  \n2250. -A(\"Werebane\",\t\t\tSILVER_SABER,\n2251. +A(\"Werebane\",\t\t\tREVOLVER,\t0,\n2252.  \t(SPFX_RESTR|SPFX_DFLAG2), 0, M2_WERE,\n2253. -\tPHYS(5,0),\tDFNS(AD_WERE),\tNO_CARY,\t0, A_NONE, NON_PM, NON_PM, 1500L ),\n2254. -\n2255. -A(\"Grayswandir\",\t\tSILVER_SABER,\n2256. +\tPHYS(20,ADMG_DOUBLE),\tDFNS(AD_WERE),\tNO_CARY,\n2257. +\tCREATE_AMMO, A_NONE, NON_PM, NON_PM, 5000L ),\n2258. +A(\"Grayswandir\",\t\tSABER,\t\tSILVER,\n2259.  \t(SPFX_RESTR|SPFX_HALRES), 0, 0,\n2260. -\tPHYS(5,0),\tNO_DFNS,\tNO_CARY,\t0, A_LAWFUL, NON_PM, NON_PM, 8000L ),\n2261. +\tPHYS(3,12),\tNO_DFNS,\tNO_CARY,\t0, A_LAWFUL, NON_PM, NON_PM, 8000L ),\n2262.  \n2263. -A(\"Giantslayer\",\t\tLONG_SWORD,\n2264. +A(\"Quick Blade\",\t\tELVEN_SHORT_SWORD,\t0,\n2265. +\tSPFX_RESTR,\t\t  0, 0,\n2266. +\tPHYS(10,0),\tNO_DFNS,\tNO_CARY,\t0, A_NONE, NON_PM, NON_PM, 1500L ),\n2267. +\n2268. +A(\"Giantkiller\",\t\tTWO_HANDED_SWORD,\t0,\n2269.  \t(SPFX_RESTR|SPFX_DFLAG2), 0, M2_GIANT,\n2270. -\tPHYS(5,0),\tNO_DFNS,\tNO_CARY,\t0, A_NEUTRAL, NON_PM, NON_PM, 200L ),\n2271. +\tPHYS(15,ADMG_DOUBLE),\tNO_DFNS,\tNO_CARY,\t0, A_NEUTRAL, NON_PM, NON_PM, 200L ),\n2272.  \n2273. -A(\"Ogresmasher\",\t\tWAR_HAMMER,\n2274. +A(\"Ogresmasher\",\t\tLUCERN_HAMMER,\t0,\n2275.  \t(SPFX_RESTR|SPFX_DCLAS), 0, S_OGRE,\n2276. -\tPHYS(5,0),\tNO_DFNS,\tNO_CARY,\t0, A_NONE, NON_PM, NON_PM, 200L ),\n2277. +\tPHYS(15,ADMG_DOUBLE),\tNO_DFNS,\tNO_CARY,\t0, A_NONE, NON_PM, NON_PM, 200L ),\n2278.  \n2279. -A(\"Trollsbane\",\t\t\tMORNING_STAR,\n2280. +A(\"Trollsbane\",\t\t\tMORNING_STAR,\t0,\n2281.  \t(SPFX_RESTR|SPFX_DCLAS), 0, S_TROLL,\n2282. -\tPHYS(5,0),\tNO_DFNS,\tNO_CARY,\t0, A_NONE, NON_PM, NON_PM, 200L ),\n2283. +\tPHYS(15,ADMG_DOUBLE),\tNO_DFNS,\tNO_CARY,\t0, A_NONE, NON_PM, NON_PM, 800L ),\n2284.  /*\n2285.   *\tTwo problems:  1) doesn't let trolls regenerate heads,\n2286.   *\t2) doesn't give unusual message for 2-headed monsters (but\n2287.   *\tallowing those at all causes more problems than worth the effort).\n2288.   */\n2289. -A(\"Vorpal Blade\",\t\tLONG_SWORD,\n2290. +A(\"Vorpal Blade\",\t\tLONG_SWORD,\t0,\n2291.  \t(SPFX_RESTR|SPFX_BEHEAD), 0, 0,\n2292. -\tPHYS(5,1),\tNO_DFNS,\tNO_CARY,\t0, A_NEUTRAL, NON_PM, NON_PM, 4000L ),\n2293. +\tPHYS(15,0),\tNO_DFNS,\tNO_CARY,\t0, A_NEUTRAL, NON_PM, NON_PM, 4000L ),\n2294.  /*\n2295.   *\tAh, never shall I forget the cry,\n2296.   *\t\tor the shriek that shrieked he,\n2297. @@ -140,101 +165,122 @@ A(\"Vorpal Blade\",\t\tLONG_SWORD,\n2298.   *\t\t\t--Koko, Lord high executioner of Titipu\n2299.   *\t\t\t  (From Sir W.S. Gilbert's \"The Mikado\")\n2300.   */\n2301. -A(\"Snickersnee\",\t\tKATANA,\n2302. +A(\"Snickersnee\",\t\tKATANA,\t0,\n2303.  \tSPFX_RESTR, 0, 0,\n2304. -\tPHYS(0,8),\tNO_DFNS,\tNO_CARY,\t0, A_LAWFUL, PM_SAMURAI, NON_PM, 1200L ),\n2305. +\tPHYS(10,8),\tNO_DFNS,\tNO_CARY,\t0, A_LAWFUL, PM_SAMURAI, NON_PM, 1200L ),\n2306.  \n2307. -A(\"Sunsword\",\t\t\tLONG_SWORD,\n2308. +A(\"Sunsword\",\t\t\tLONG_SWORD,\t0,\n2309.  \t(SPFX_RESTR|SPFX_DFLAG2), 0, M2_UNDEAD,\n2310. -\tPHYS(5,0),\tDFNS(AD_BLND),\tNO_CARY,\t0, A_LAWFUL, NON_PM, NON_PM, 1500L ),\n2311. +\tPHYS(10,ADMG_DOUBLE),\tDFNS(AD_BLND),\tNO_CARY,\n2312. +\tEMIT_LIGHT, A_LAWFUL, NON_PM, NON_PM, 1500L ),\n2313. +/*\n2314. + *\tArtifact gloves for Monks\n2315. + */\n2316. +A(\"Gauntlets of Defence\",\tGAUNTLETS_OF_DEXTERITY,\t0,\n2317. +\t(SPFX_RESTR|SPFX_HPHDAM|SPFX_INTEL), 0, 0,\n2318. +\tNO_ATTK,\tNO_DFNS,\tNO_CARY,\n2319. +\t0,\t\tA_CROSSALIGNED, PM_MONK, NON_PM, 2000L ),\n2320.  \n2321. +A(\"Fist of Fury\",\t\tGAUNTLETS,\tSILVER,\n2322. +\t(SPFX_RESTR|SPFX_INTEL), 0,\t0,\n2323. +\tPHYS(5,10),\tNO_DFNS,\tNO_CARY,\n2324. +\t0,\t\tA_CROSSALIGNED, PM_MONK, NON_PM, 2000L ),\n2325. +\n2326.  /*\n2327.   *\tThe artifacts for the quest dungeon, all self-willed.\n2328.   */\n2329.  \n2330. -A(\"The Orb of Detection\",\tCRYSTAL_BALL,\n2331. +A(\"The Orb of Detection\",\tCRYSTAL_BALL,\t0,\n2332.  \t(SPFX_NOGEN|SPFX_RESTR|SPFX_INTEL), (SPFX_ESP|SPFX_HSPDAM), 0,\n2333.  \tNO_ATTK,\tNO_DFNS,\tCARY(AD_MAGM),\n2334.  \tINVIS,\t\tA_LAWFUL, PM_ARCHEOLOGIST, NON_PM, 2500L ),\n2335.  \n2336. -A(\"The Heart of Ahriman\",\tLUCKSTONE,\n2337. +A(\"The Heart of Ahriman\",\tLUCKSTONE,\t0,\n2338.  \t(SPFX_NOGEN|SPFX_RESTR|SPFX_INTEL), SPFX_STLTH, 0,\n2339.  \t/* this stone does double damage if used as a projectile weapon */\n2340.  \tPHYS(5,0),\tNO_DFNS,\tNO_CARY,\n2341.  \tLEVITATION,\tA_NEUTRAL, PM_BARBARIAN, NON_PM, 2500L ),\n2342.  \n2343. -A(\"The Sceptre of Might\",\tMACE,\n2344. +A(\"The Sceptre of Might\",\tMACE,\t0,\n2345.  \t(SPFX_NOGEN|SPFX_RESTR|SPFX_INTEL|SPFX_DALIGN), 0, 0,\n2346. -\tPHYS(5,0),\tNO_DFNS,\tCARY(AD_MAGM),\n2347. +\tPHYS(5,ADMG_DOUBLE),\tNO_DFNS,\tCARY(AD_MAGM),\n2348.  \tCONFLICT,\tA_LAWFUL, PM_CAVEMAN, NON_PM, 2500L ),\n2349.  \n2350.  #if 0\t/* OBSOLETE */\n2351. -A(\"The Palantir of Westernesse\",\tCRYSTAL_BALL,\n2352. +A(\"The Palantir of Westernesse\",\tCRYSTAL_BALL,\t0,\n2353.  \t(SPFX_NOGEN|SPFX_RESTR|SPFX_INTEL),\n2354.  \t\t(SPFX_ESP|SPFX_REGEN|SPFX_HSPDAM), 0,\n2355.  \tNO_ATTK,\tNO_DFNS,\tNO_CARY,\n2356.  \tTAMING,\t\tA_CHAOTIC, NON_PM , PM_ELF, 8000L ),\n2357.  #endif\n2358.  \n2359. -A(\"The Staff of Aesculapius\",\tQUARTERSTAFF,\n2360. +A(\"The Staff of Aesculapius\",\tQUARTERSTAFF,\t0,\n2361.  \t(SPFX_NOGEN|SPFX_RESTR|SPFX_ATTK|SPFX_INTEL|SPFX_DRLI|SPFX_REGEN), 0,0,\n2362. -\tDRLI(0,0),\tDRLI(0,0),\tNO_CARY,\n2363. +\tDRLI(0,ADMG_DOUBLE),\tDRLI(0,0),\tNO_CARY,\n2364.  \tHEALING,\tA_NEUTRAL, PM_HEALER, NON_PM, 5000L ),\n2365.  \n2366. -A(\"The Magic Mirror of Merlin\", MIRROR,\n2367. +A(\"The Magic Mirror of Merlin\", MIRROR,\t0,\n2368.  \t(SPFX_NOGEN|SPFX_RESTR|SPFX_INTEL|SPFX_SPEAK), SPFX_ESP, 0,\n2369.  \tNO_ATTK,\tNO_DFNS,\tCARY(AD_MAGM),\n2370.  \t0,\t\tA_LAWFUL, PM_KNIGHT, NON_PM, 1500L ),\n2371.  \n2372. -A(\"The Eyes of the Overworld\",\tLENSES,\n2373. +A(\"The Eyes of the Overworld\",\tLENSES, 0,\n2374.  \t(SPFX_NOGEN|SPFX_RESTR|SPFX_INTEL|SPFX_XRAY), 0, 0,\n2375.  \tNO_ATTK,\tNO_DFNS,\tCARY(AD_MAGM),\n2376.  \tENLIGHTENING,\tA_NEUTRAL,\t PM_MONK, NON_PM, 2500L ),\n2377.  \n2378. -A(\"The Mitre of Holiness\",\tHELM_OF_BRILLIANCE,\n2379. +A(\"The Mitre of Holiness\",\tHELM_OF_BRILLIANCE,\t0,\n2380.  \t(SPFX_NOGEN|SPFX_RESTR|SPFX_DFLAG2|SPFX_INTEL), 0, M2_UNDEAD,\n2381.  \tNO_ATTK,\tNO_DFNS,\tCARY(AD_FIRE),\n2382.  \tENERGY_BOOST,\tA_LAWFUL, PM_PRIEST, NON_PM, 2000L ),\n2383.  \n2384. -A(\"The Longbow of Diana\", BOW,\n2385. -\t(SPFX_NOGEN|SPFX_RESTR|SPFX_INTEL|SPFX_REFLECT), SPFX_ESP, 0,\n2386. -\tPHYS(5,0),\tNO_DFNS,\tNO_CARY,\n2387. +A(\"The Longbow of Diana\", BOW, 0,\n2388. +\t(SPFX_NOGEN|SPFX_RESTR|SPFX_INTEL/*|SPFX_REFLECT*/), SPFX_ESP, 0,\n2389. +\tPHYS(5,3),\tNO_DFNS,\tNO_CARY,\n2390.  \tCREATE_AMMO, A_CHAOTIC, PM_RANGER, NON_PM, 4000L ),\n2391.  \n2392. -A(\"The Master Key of Thievery\", SKELETON_KEY,\n2393. +A(\"The Master Key of Thievery\", SKELETON_KEY, 0,\n2394.  \t(SPFX_NOGEN|SPFX_RESTR|SPFX_INTEL|SPFX_SPEAK),\n2395.  \t\t(SPFX_WARN|SPFX_TCTRL|SPFX_HPHDAM), 0,\n2396.  \tNO_ATTK,\tNO_DFNS,\tNO_CARY,\n2397.  \tUNTRAP,\t\tA_CHAOTIC, PM_ROGUE, NON_PM, 3500L ),\n2398.  \n2399. -A(\"The Tsurugi of Muramasa\",\tTSURUGI,\n2400. +A(\"The Tsurugi of Muramasa\",\tTSURUGI, 0,\n2401.  \t(SPFX_NOGEN|SPFX_RESTR|SPFX_INTEL|SPFX_BEHEAD|SPFX_LUCK), 0, 0,\n2402.  \tPHYS(0,8),\tNO_DFNS,\tNO_CARY,\n2403.  \t0,\t\tA_LAWFUL, PM_SAMURAI, NON_PM, 4500L ),\n2404.  \n2405.  #ifdef TOURIST\n2406. -A(\"The Platinum Yendorian Express Card\", CREDIT_CARD,\n2407. +A(\"The Platinum Yendorian Express Card\", CREDIT_CARD, 0,\n2408.  \t(SPFX_NOGEN|SPFX_RESTR|SPFX_INTEL|SPFX_DEFN),\n2409.  \t\t(SPFX_ESP|SPFX_HSPDAM), 0,\n2410.  \tNO_ATTK,\tNO_DFNS,\tCARY(AD_MAGM),\n2411.  \tCHARGE_OBJ,\tA_NEUTRAL, PM_TOURIST, NON_PM, 7000L ),\n2412.  #endif\n2413.  \n2414. -A(\"The Orb of Fate\",\t\tCRYSTAL_BALL,\n2415. +A(\"The Orb of Fate\",\t\tCRYSTAL_BALL, 0,\n2416.  \t(SPFX_NOGEN|SPFX_RESTR|SPFX_INTEL|SPFX_LUCK),\n2417.  \t\t(SPFX_WARN|SPFX_HSPDAM|SPFX_HPHDAM), 0,\n2418.  \tNO_ATTK,\tNO_DFNS,\tNO_CARY,\n2419.  \tLEV_TELE,\tA_NEUTRAL, PM_VALKYRIE, NON_PM, 3500L ),\n2420.  \n2421. -A(\"The Eye of the Aethiopica\",\tAMULET_OF_ESP,\n2422. +A(\"The Eye of the Aethiopica\",\tAMULET_OF_ESP, 0,\n2423.  \t(SPFX_NOGEN|SPFX_RESTR|SPFX_INTEL), (SPFX_EREGEN|SPFX_HSPDAM), 0,\n2424.  \tNO_ATTK,\tNO_DFNS,\tCARY(AD_MAGM),\n2425.  \tCREATE_PORTAL,\tA_NEUTRAL, PM_WIZARD, NON_PM, 4000L ),\n2426.  \n2427.  /*\n2428. + *\tdummy entry for user-made weapon\n2429. + */\n2430. +A(\"Custom Made Weapon\",\tTIN_OPENER, 0,  /* dummy otyp */\n2431. +\t(SPFX_NOGEN|SPFX_RESTR), 0, 0,\n2432. +\tNO_ATTK,\tNO_DFNS,\tNO_CARY,\n2433. +\t0,\tA_NONE, NON_PM, NON_PM, 0L ),\n2434. +\n2435. +/*\n2436.   *  terminator; otyp must be zero\n2437.   */\n2438. -A(0, 0, 0, 0, 0, NO_ATTK, NO_DFNS, NO_CARY, 0, A_NONE, NON_PM, NON_PM, 0L )\n2439. +A(0, 0, 0, 0, 0, 0, NO_ATTK, NO_DFNS, NO_CARY, 0, A_NONE, NON_PM, NON_PM, 0L )\n2440.  \n2441.  };\t/* artilist[] (or artifact_names[]) */\n2442.  \n```\n\n### attrib.h\n\n```\n2443. diff -pruN nethack-3.4.3/include/attrib.h nhbrass-040923/include/attrib.h\n2444. --- nethack-3.4.3/include/attrib.h\tSun Dec  7 18:39:13 2003\n2445. +++ nhbrass-040923/include/attrib.h\tWed Apr 10 11:29:56 2002\n2446. @@ -38,7 +38,8 @@ struct\tattribs {\n2447.  \tschar\ta[A_MAX];\n2448.  };\n2449.  \n2450. -#define ATTRMAX(x) ((x == A_STR && Upolyd && strongmonst(youmonst.data)) ? STR18(100) : urace.attrmax[x])\n2451. +/* #define ATTRMAX(x) ((x == A_STR && Upolyd && strongmonst(youmonst.data)) ? STR18(100) : urace.attrmax[x])*/\n2452. +#define ATTRMAX(x) ((x == A_STR && Upolyd && strongmonst(youmonst.data)) ? STR18(100) : urole.attrmax[x])\n2453.  #define ATTRMIN(x) (urace.attrmin[x])\n2454.  \n2455.  #endif /* ATTRIB_H */\n```\n\n### config.h\n\n```\n2456. diff -pruN nethack-3.4.3/include/config.h nhbrass-040923/include/config.h\n2457. --- nethack-3.4.3/include/config.h\tSun Dec  7 18:39:13 2003\n2458. +++ nhbrass-040923/include/config.h\tSat Dec 27 17:30:16 2003\n2459. @@ -338,6 +338,15 @@ typedef unsigned char\tuchar;\n2460.  #endif\n2461.  \n2462.  #define EXP_ON_BOTL\t/* Show experience on bottom line */\n2463. +//#define AUTOTHRUST\t/* Automatically target a monster in range with polearms */\n2464. +#define FIRSTAID\t/* scissors/bandage */\n2465. +#define NOPOLYPILE\t/* polymorph affects only one item on the first pile */\n2466. +#define SHOWDMG\t\t/* show damage value */\n2467. +#define RAND_MT\t\t/* use mersenne twister for random number */\n2468. +#define NEWGEHENNOM\t/* under construction */\n2469. +#ifdef STEED\n2470. +# define MONSTEED\t/* monster is riding steeds */\n2471. +#endif /*STEED*/\n2472.  /* #define SCORE_ON_BOTL */\t/* added by Gary Erickson (erickson@ucivax) */\n2473.  \n2474.  /*\n```\n\nThe AUTOTHRUST line is commented out because the AUTOTHRUST macro no longer does anything. The [autothrust](/index.php?title=Autothrust\\&action=edit\\&redlink=1 \"Autothrust (page does not exist)\") feature (pressing \\[v] to hit the nearest [monster](/wiki/Monster \"Monster\") with your wielded [polearm](/wiki/Polearm \"Polearm\")) is always on, and it is not possible to disable it by defining or undefining a macro.\n\n### display.h\n\n```\n2551. diff -pruN nethack-3.4.3/include/display.h nhbrass-040923/include/display.h\n2552. --- nethack-3.4.3/include/display.h\tSun Dec  7 18:39:13 2003\n2553. +++ nhbrass-040923/include/display.h\tSat Dec 27 14:11:50 2003\n2554. @@ -40,9 +40,11 @@\n2555.   * vicinity, and a glyph representing the warning level is displayed.\n2556.   */\n2557.  \n2558. +//#define mon_warning(mon) (Warning && !(mon)->mpeaceful &&\n2559. +//\t\t\t (distu((mon)->mx, (mon)->my) < 100) &&\n2560. +//\t\t\t (((int) ((mon)->m_lev / 4)) >= flags.warnlevel))\n2561.  #define mon_warning(mon) (Warning && !(mon)->mpeaceful && \t\t\t\t\\\n2562. -\t\t\t (distu((mon)->mx, (mon)->my) < 100) &&\t\t\t\t\\\n2563. -\t\t\t (((int) ((mon)->m_lev / 4)) >= flags.warnlevel))\n2564. +\t\t\t (distu((mon)->mx, (mon)->my) < 100))\n2565.  \n2566.  /*\n2567.   * mon_visible()\n2568. @@ -92,6 +94,23 @@\n2569.  #define canspotmon(mon) \\\n2570.  \t(canseemon(mon) || sensemon(mon))\n2571.  \n2572. +\n2573. +/*\n2574. + * canspotmons(mon)\n2575. + *\n2576. + * This function is variation of canspotmon() which returns TRUE if\n2577. + * you can spot any monsters in the same place as mon's.\n2578. + */\n2579. +#ifndef MONSTEED\n2580. +#define canspotmons canspotmon\n2581. +#else\n2582. +#define canspotmons(mon) \\\n2583. +\t(canspotmon(mon) || \\\n2584. +\t ((mon)->mriding && canspotmon((mon)->mchild)) || \\\n2585. +\t ((mon)->msteed && canspotmon((mon)->mparent)))\n2586. +#endif /*MONSTEED*/\n2587. +\n2588. +\n2589.  /* knowninvisible(mon)\n2590.   * This one checks to see if you know a monster is both there and invisible.\n2591.   * 1) If you can see the monster and have see invisible, it is assumed the\n2592. @@ -234,7 +253,8 @@\n2593.   *\n2594.   * ridden\tRepresents all monsters being ridden.  Count: NUMMONS \n2595.   *\n2596. - * object\tOne for each object.  Count: NUM_OBJECTS\n2597. + * object\t32(number of materials) for each object.\n2598. + *\t\tLower 5 bits indicate materials.  Count: NUM_OBJECTS << 5\n2599.   *\n2600.   * cmap\t\tOne for each entry in the character map.  The character map\n2601.   *\t\tis the dungeon features and other miscellaneous things.\n2602. @@ -258,16 +278,18 @@\n2603.   *\n2604.   * The following are offsets used to convert to and from a glyph.\n2605.   */\n2606. -#define NUM_ZAP 8\t/* number of zap beam types */\n2607. +#define NUM_ZAP 9\t/* number of zap beam types */\n2608.  \n2609.  #define GLYPH_MON_OFF\t\t0\n2610.  #define GLYPH_PET_OFF\t\t(NUMMONS\t+ GLYPH_MON_OFF)\n2611.  #define GLYPH_INVIS_OFF\t\t(NUMMONS\t+ GLYPH_PET_OFF)\n2612.  #define GLYPH_DETECT_OFF\t(1\t\t+ GLYPH_INVIS_OFF)\n2613.  #define GLYPH_BODY_OFF\t\t(NUMMONS\t+ GLYPH_DETECT_OFF)\n2614. -#define GLYPH_RIDDEN_OFF\t(NUMMONS\t+ GLYPH_BODY_OFF)\n2615. +#define GLYPH_RIDING_OFF\t(NUMMONS\t+ GLYPH_BODY_OFF)\n2616. +#define GLYPH_RIDDEN_OFF\t(NUMMONS\t+ GLYPH_RIDING_OFF)\n2617.  #define GLYPH_OBJ_OFF\t\t(NUMMONS\t+ GLYPH_RIDDEN_OFF)\n2618. -#define GLYPH_CMAP_OFF\t\t(NUM_OBJECTS\t+ GLYPH_OBJ_OFF)\n2619. +#define GLYPH_CMAP_OFF\t\t((NUM_OBJECTS << 5) + GLYPH_OBJ_OFF) /* material patch */\n2620. +/*#define GLYPH_CMAP_OFF\t\t(NUM_OBJECTS\t+ GLYPH_OBJ_OFF)*/\n2621.  #define GLYPH_EXPLODE_OFF\t((MAXPCHARS - MAXEXPCHARS) + GLYPH_CMAP_OFF)\n2622.  #define GLYPH_ZAP_OFF\t\t((MAXEXPCHARS * EXPL_MAX) + GLYPH_EXPLODE_OFF)\n2623.  #define GLYPH_SWALLOW_OFF\t((NUM_ZAP << 2) + GLYPH_ZAP_OFF)\n2624. @@ -281,6 +303,7 @@\n2625.  #define warning_to_glyph(mwarnlev) ((mwarnlev)+GLYPH_WARNING_OFF)\n2626.  #define mon_to_glyph(mon) ((int) what_mon(monsndx((mon)->data))+GLYPH_MON_OFF)\n2627.  #define detected_mon_to_glyph(mon) ((int) what_mon(monsndx((mon)->data))+GLYPH_DETECT_OFF)\n2628. +#define riding_mon_to_glyph(mon) ((int) what_mon(monsndx((mon)->data))+GLYPH_RIDING_OFF)\n2629.  #define ridden_mon_to_glyph(mon) ((int) what_mon(monsndx((mon)->data))+GLYPH_RIDDEN_OFF)\n2630.  #define pet_to_glyph(mon) ((int) what_mon(monsndx((mon)->data))+GLYPH_PET_OFF)\n2631.  \n2632. @@ -290,10 +313,11 @@\n2633.      (Hallucination ?\t\t\t\t\t\t\t      \\\n2634.  \t((otg_temp = random_object()) == CORPSE ?\t\t\t      \\\n2635.  \t    random_monster() + GLYPH_BODY_OFF :\t\t\t\t      \\\n2636. -\t    otg_temp + GLYPH_OBJ_OFF)\t:\t\t\t\t      \\\n2637. +\t    (otg_temp<<5) + rnd(MAX_MATERIAL) + GLYPH_OBJ_OFF)\t:\t      \\\n2638.  \t((obj)->otyp == CORPSE ?\t\t\t\t\t      \\\n2639.  \t    (int) (obj)->corpsenm + GLYPH_BODY_OFF :\t\t\t      \\\n2640. -\t    (int) (obj)->otyp + GLYPH_OBJ_OFF))\n2641. +\t    ((int) (obj)->otyp << 5) +\t\t\t\t\t      \\\n2642. +\t\t(is_material_variable(obj) ? get_material(obj) : 0) + GLYPH_OBJ_OFF))\n2643.  \n2644.  #define cmap_to_glyph(cmap_idx) ((int) (cmap_idx)   + GLYPH_CMAP_OFF)\n2645.  #define explosion_to_glyph(expltype,idx)\t\\\n2646. @@ -303,7 +327,7 @@\n2647.  \t\t\tcmap_to_glyph(trap_to_defsym(what_trap((trap)->ttyp)))\n2648.  \n2649.  /* Not affected by hallucination.  Gives a generic body for CORPSE */\n2650. -#define objnum_to_glyph(onum)\t((int) (onum) + GLYPH_OBJ_OFF)\n2651. +#define objnum_to_glyph(onum)\t(((int) (onum) << 5) + GLYPH_OBJ_OFF)\n2652.  #define monnum_to_glyph(mnum)\t((int) (mnum) + GLYPH_MON_OFF)\n2653.  #define detected_monnum_to_glyph(mnum)\t((int) (mnum) + GLYPH_DETECT_OFF)\n2654.  #define ridden_monnum_to_glyph(mnum)\t((int) (mnum) + GLYPH_RIDDEN_OFF)\n2655. @@ -316,7 +340,6 @@\n2656.  \t                (flags.female && urace.femalenum != NON_PM) ? urace.femalenum : \\\n2657.  \t                urace.malenum)\n2658.  \n2659. -\n2660.  /*\n2661.   * Change the given glyph into it's given type.  Note:\n2662.   *\t1) Pets, detected, and ridden monsters are animals and are converted\n2663. @@ -333,11 +356,12 @@\n2664.  \t(glyph_is_normal_monster(glyph) ? ((glyph)-GLYPH_MON_OFF) :\t\\\n2665.  \tglyph_is_pet(glyph) ? ((glyph)-GLYPH_PET_OFF) :\t\t\t\\\n2666.  \tglyph_is_detected_monster(glyph) ? ((glyph)-GLYPH_DETECT_OFF) :\t\\\n2667. +\tglyph_is_riding_monster(glyph) ? ((glyph)-GLYPH_RIDING_OFF) :\t\\\n2668.  \tglyph_is_ridden_monster(glyph) ? ((glyph)-GLYPH_RIDDEN_OFF) :\t\\\n2669.  \tNO_GLYPH)\n2670.  #define glyph_to_obj(glyph)\t\t\t\t\t\t\\\n2671.  \t(glyph_is_body(glyph) ? CORPSE :\t\t\t\t\\\n2672. -\tglyph_is_normal_object(glyph) ? ((glyph)-GLYPH_OBJ_OFF) :\t\\\n2673. +\tglyph_is_normal_object(glyph) ? (((glyph)-GLYPH_OBJ_OFF) >> 5) :\t\\\n2674.  \tNO_GLYPH)\n2675.  #define glyph_to_trap(glyph)\t\t\t\t\t\t\\\n2676.  \t(glyph_is_trap(glyph) ?\t\t\t\t\t\t\\\n2677. @@ -360,6 +384,7 @@\n2678.  #define glyph_is_monster(glyph)\t\t\t\t\t\t\\\n2679.  \t\t(glyph_is_normal_monster(glyph)\t\t\t\t\\\n2680.  \t\t|| glyph_is_pet(glyph)\t\t\t\t\t\\\n2681. +\t\t|| glyph_is_riding_monster(glyph)\t\t\t\\\n2682.  \t\t|| glyph_is_ridden_monster(glyph)\t\t\t\\\n2683.  \t\t|| glyph_is_detected_monster(glyph))\n2684.  #define glyph_is_normal_monster(glyph)\t\t\t\t\t\\\n2685. @@ -368,13 +393,15 @@\n2686.      ((glyph) >= GLYPH_PET_OFF && (glyph) < (GLYPH_PET_OFF+NUMMONS))\n2687.  #define glyph_is_body(glyph)\t\t\t\t\t\t\\\n2688.      ((glyph) >= GLYPH_BODY_OFF && (glyph) < (GLYPH_BODY_OFF+NUMMONS))\n2689. +#define glyph_is_riding_monster(glyph)\t\t\t\t\t\\\n2690. +    ((glyph) >= GLYPH_RIDING_OFF && (glyph) < (GLYPH_RIDING_OFF+NUMMONS))\n2691.  #define glyph_is_ridden_monster(glyph)\t\t\t\t\t\\\n2692.      ((glyph) >= GLYPH_RIDDEN_OFF && (glyph) < (GLYPH_RIDDEN_OFF+NUMMONS))\n2693.  #define glyph_is_detected_monster(glyph)\t\t\t\t\\\n2694.      ((glyph) >= GLYPH_DETECT_OFF && (glyph) < (GLYPH_DETECT_OFF+NUMMONS))\n2695.  #define glyph_is_invisible(glyph) ((glyph) == GLYPH_INVISIBLE)\n2696.  #define glyph_is_normal_object(glyph)\t\t\t\t\t\\\n2697. -    ((glyph) >= GLYPH_OBJ_OFF && (glyph) < (GLYPH_OBJ_OFF+NUM_OBJECTS))\n2698. +    ((glyph) >= GLYPH_OBJ_OFF && (glyph) < (GLYPH_OBJ_OFF+(NUM_OBJECTS<<5)))\n2699.  #define glyph_is_object(glyph)\t\t\t\t\t\t\\\n2700.  \t\t(glyph_is_normal_object(glyph)\t\t\t\t\\\n2701.  \t\t|| glyph_is_body(glyph))\n```\n\nBecause [monsters riding steeds](/index.php?title=Monsters_riding_steeds\\&action=edit\\&redlink=1 \"Monsters riding steeds (page does not exist)\") is a new feature in NetHack brass, the display code needs to know how to draw them on screen.\n\n### obj.h\n\n```\n3623. diff -pruN nethack-3.4.3/include/obj.h nhbrass-040923/include/obj.h\n3624. --- nethack-3.4.3/include/obj.h\tSun Dec  7 18:39:13 2003\n3625. +++ nhbrass-040923/include/obj.h\tWed Dec 10 07:49:36 2003\n3626. @@ -72,12 +72,15 @@ struct obj {\n3627.  #define norevive oeroded2\n3628.  \tBitfield(oerodeproof,1); /* erodeproof weapon/armor */\n3629.  \tBitfield(olocked,1);\t/* object is locked */\n3630. +#define sokoprize olocked\t/* special flag for sokoban prize */\n3631.  \tBitfield(obroken,1);\t/* lock has been broken */\n3632. +#define oshot obroken\t\t/* a bullet is shot from a gun, not thrown */\n3633.  \tBitfield(otrapped,1);\t/* container is trapped */\n3634.  \t\t\t\t/* or accidental tripped rolling boulder trap */\n3635.  #define opoisoned otrapped\t/* object (weapon) is coated with poison */\n3636.  \n3637.  \tBitfield(recharged,3);\t/* number of times it's been recharged */\n3638. +#define oacadjust recharged\t/* armor-class adjustment (-4 to +3) */\n3639.  \tBitfield(lamplit,1);\t/* a light-source -- can be lit */\n3640.  #ifdef INVISIBLE_OBJECTS\n3641.  \tBitfield(oinvis,1);\t/* invisible */\n3642. @@ -91,13 +94,15 @@ struct obj {\n3643.  \n3644.  \tBitfield(in_use,1);\t/* for magic items before useup items */\n3645.  \tBitfield(bypass,1);\t/* mark this as an object to be skipped by bhito() */\n3646. -\t/* 6 free bits */\n3647. +\tBitfield(etherial,1);\t/* magically created object */\n3648. +\tBitfield(madeof,5);\t/* material num if obj is made of unusual material */\n3649.  \n3650.  \tint\tcorpsenm;\t/* type of corpse is mons[corpsenm] */\n3651.  #define leashmon  corpsenm\t/* gets m_id of attached pet */\n3652.  #define spestudied corpsenm\t/* # of times a spellbook has been studied */\n3653.  #define fromsink  corpsenm\t/* a potion from a sink */\n3654.  \tunsigned oeaten;\t/* nutrition left in food, if partly eaten */\n3655. +#define odamaged oeaten\t\t/* how much object's special power worn out */\n3656.  \tlong age;\t\t/* creation date */\n3657.  \n3658.  \tuchar onamelth;\t\t/* length of name (following oxlth) */\n3659. @@ -125,50 +130,69 @@ struct obj {\n3660.   *\t#define is_poisonable(otyp) (otyp <= BEC_DE_CORBIN)\n3661.   */\n3662.  #define is_blade(otmp)\t(otmp->oclass == WEAPON_CLASS && \\\n3663. -\t\t\t objects[otmp->otyp].oc_skill >= P_DAGGER && \\\n3664. -\t\t\t objects[otmp->otyp].oc_skill <= P_SABER)\n3665. +\t\t\t objects[otmp->otyp].oc_skill >= P_DAGGER_GROUP && \\\n3666. +\t\t\t objects[otmp->otyp].oc_skill <= P_SABER_GROUP)\n3667.  #define is_axe(otmp)\t((otmp->oclass == WEAPON_CLASS || \\\n3668.  \t\t\t otmp->oclass == TOOL_CLASS) && \\\n3669. -\t\t\t objects[otmp->otyp].oc_skill == P_AXE)\n3670. +\t\t\t objects[otmp->otyp].oc_skill == P_AXE_GROUP)\n3671.  #define is_pick(otmp)\t((otmp->oclass == WEAPON_CLASS || \\\n3672.  \t\t\t otmp->oclass == TOOL_CLASS) && \\\n3673. -\t\t\t objects[otmp->otyp].oc_skill == P_PICK_AXE)\n3674. +\t\t\t objects[otmp->otyp].oc_skill == P_PICKAXE_GROUP)\n3675.  #define is_sword(otmp)\t(otmp->oclass == WEAPON_CLASS && \\\n3676. -\t\t\t objects[otmp->otyp].oc_skill >= P_SHORT_SWORD && \\\n3677. -\t\t\t objects[otmp->otyp].oc_skill <= P_SABER)\n3678. +\t\t\t objects[otmp->otyp].oc_skill >= P_SHORT_BLADE_GROUP && \\\n3679. +\t\t\t objects[otmp->otyp].oc_skill <= P_SABER_GROUP)\n3680.  #define is_pole(otmp)\t((otmp->oclass == WEAPON_CLASS || \\\n3681.  \t\t\totmp->oclass == TOOL_CLASS) && \\\n3682. -\t\t\t (objects[otmp->otyp].oc_skill == P_POLEARMS || \\\n3683. -\t\t\t objects[otmp->otyp].oc_skill == P_LANCE))\n3684. +\t\t\t objects[otmp->otyp].oc_skill == P_POLEARM_GROUP)\n3685.  #define is_spear(otmp)\t(otmp->oclass == WEAPON_CLASS && \\\n3686. -\t\t\t objects[otmp->otyp].oc_skill >= P_SPEAR && \\\n3687. -\t\t\t objects[otmp->otyp].oc_skill <= P_JAVELIN)\n3688. +\t\t\t objects[otmp->otyp].oc_skill == P_SPEAR_GROUP)\n3689. +#define is_gun(otmp)\t(otmp->oclass == WEAPON_CLASS && \\\n3690. +\t\t\t objects[otmp->otyp].oc_skill == P_FIREARM_GROUP)\n3691. +#define maxbullets(otmp) (otmp->otyp == REVOLVER ? 6 : \\\n3692. +                          otmp->otyp == MUSKET ? 1 : 0)\n3693.  #define is_launcher(otmp)\t(otmp->oclass == WEAPON_CLASS && \\\n3694. -\t\t\t objects[otmp->otyp].oc_skill >= P_BOW && \\\n3695. -\t\t\t objects[otmp->otyp].oc_skill <= P_CROSSBOW)\n3696. +\t\t\t (objects[otmp->otyp].oc_wprop & WP_WEAPONTYPE) == WP_LAUNCHER)\n3697.  #define is_ammo(otmp)\t((otmp->oclass == WEAPON_CLASS || \\\n3698.  \t\t\t otmp->oclass == GEM_CLASS) && \\\n3699. -\t\t\t objects[otmp->otyp].oc_skill >= -P_CROSSBOW && \\\n3700. -\t\t\t objects[otmp->otyp].oc_skill <= -P_BOW)\n3701. +\t\t\t (objects[otmp->otyp].oc_wprop & WP_WEAPONTYPE) == WP_AMMUNITION)\n3702. +#define is_bullet(otmp)\t(otmp->oclass == WEAPON_CLASS && \\\n3703. +\t\t\t (objects[otmp->otyp].oc_wprop & (WP_WEAPONTYPE|WP_SUBTYPE)) == \\\n3704. +\t\t\t (WP_AMMUNITION|WP_BULLET))\n3705.  #define ammo_and_launcher(otmp,ltmp) \\\n3706. -\t\t\t (is_ammo(otmp) && (ltmp) && \\\n3707. -\t\t\t objects[(otmp)->otyp].oc_skill == -objects[(ltmp)->otyp].oc_skill)\n3708. -#define is_missile(otmp)\t((otmp->oclass == WEAPON_CLASS || \\\n3709. -\t\t\t otmp->oclass == TOOL_CLASS) && \\\n3710. -\t\t\t objects[otmp->otyp].oc_skill >= -P_BOOMERANG && \\\n3711. -\t\t\t objects[otmp->otyp].oc_skill <= -P_DART)\n3712. +\t\t\t (is_ammo(otmp) && (ltmp) && is_launcher(ltmp) && \\\n3713. +\t\t\t ((objects[(otmp)->otyp].oc_wprop & WP_SUBTYPE) == \\\n3714. +\t\t\t  (objects[(ltmp)->otyp].oc_wprop & WP_SUBTYPE) ))\n3715. +#define is_missile(otmp)\t(otmp->oclass == WEAPON_CLASS && \\\n3716. +\t\t\t (objects[otmp->otyp].oc_wprop & WP_THROWING) && \\\n3717. +\t\t\t (objects[otmp->otyp].oc_wprop & WP_CONSUMABLE) && \\\n3718. +\t\t\t (objects[otmp->otyp].oc_wprop & WP_WEAPONTYPE) == WP_NORMAL)\n3719.  #define is_weptool(o)\t((o)->oclass == TOOL_CLASS && \\\n3720.  \t\t\t objects[(o)->otyp].oc_skill != P_NONE)\n3721.  #define bimanual(otmp)\t((otmp->oclass == WEAPON_CLASS || \\\n3722.  \t\t\t otmp->oclass == TOOL_CLASS) && \\\n3723.  \t\t\t objects[otmp->otyp].oc_bimanual)\n3724. -#define is_multigen(otmp)\t(otmp->oclass == WEAPON_CLASS && \\\n3725. -\t\t\t objects[otmp->otyp].oc_skill >= -P_SHURIKEN && \\\n3726. -\t\t\t objects[otmp->otyp].oc_skill <= -P_BOW)\n3727. +#define is_multigen(otmp)\t(is_ammo(otmp) || is_missile(otmp))\n3728.  #define is_poisonable(otmp)\t(otmp->oclass == WEAPON_CLASS && \\\n3729. -\t\t\t objects[otmp->otyp].oc_skill >= -P_SHURIKEN && \\\n3730. -\t\t\t objects[otmp->otyp].oc_skill <= -P_BOW)\n3731. -#define uslinging()\t(uwep && objects[uwep->otyp].oc_skill == P_SLING)\n3732. +\t\t\t(objects[otmp->otyp].oc_wprop & WP_POISONABLE))\n3733. +#define is_consumable(otmp)\t((otmp->oclass == WEAPON_CLASS || otmp->oclass == GEM_CLASS) && \\\n3734. +\t\t\t(objects[otmp->otyp].oc_wprop & WP_CONSUMABLE))\n3735. +#define is_ranged(otmp)\t((otmp->oclass == WEAPON_CLASS || is_weptool(otmp)) && \\\n3736. +\t\t\t (objects[otmp->otyp].oc_wprop & WP_WEAPONTYPE) == WP_RANGED)\n3737. +#define uslinging()\t(uwep && uwep->oclass == WEAPON_CLASS && \\\n3738. +\t\t\t(objects[uwep->otyp].oc_wprop & (WP_WEAPONTYPE|WP_SUBTYPE)) == (WP_LAUNCHER|WP_STONE))\n3739. +#define is_hammer(otmp)\t(otmp->oclass == WEAPON_CLASS && \\\n3740. +\t\t\t (objects[otmp->otyp].oc_skill == P_CRUSHING_GROUP || \\\n3741. +\t\t\t  objects[otmp->otyp].oc_skill == P_FLAIL_GROUP || \\\n3742. +\t\t\t  otmp->otyp == LUCERN_HAMMER || otmp->otyp == BEC_DE_CORBIN))\n3743. +/* The amount added to the victim's total hit points to insure that the\n3744. +   victim will be killed even after damage bonus/penalty adjustments.\n3745. +   Most such penalties are small, and 200 is plenty; the exception is\n3746. +   half physical damage.  3.3.1 and previous versions tried to use a very\n3747. +   large number to account for this case; now, we just compute the fatal\n3748. +   damage by adding it to 2 times the total hit points instead of 1 time.\n3749. +   Note: this will still break if they have more than about half the number\n3750. +   of hit points that will fit in a 15 bit integer. */\n3751. +#define FATAL_DAMAGE_MODIFIER 200\n3752.  \n3753.  /* Armor */\n3754.  #define is_shield(otmp) (otmp->oclass == ARMOR_CLASS && \\\n3755. @@ -185,6 +209,10 @@ struct obj {\n3756.  \t\t\t objects[otmp->otyp].oc_armcat == ARM_SHIRT)\n3757.  #define is_suit(otmp)\t(otmp->oclass == ARMOR_CLASS && \\\n3758.  \t\t\t objects[otmp->otyp].oc_armcat == ARM_SUIT)\n3759. +#define is_robe(otmp)\t(otmp->oclass == ARMOR_CLASS && \\\n3760. +\t\t\t otmp->otyp >= ROBE && otmp->otyp <= ROBE_OF_WEAKNESS)\n3761. +#define is_clothes(otmp) (otmp->oclass == ARMOR_CLASS && \\\n3762. +\t\t\t  (get_material(otmp) == CLOTH || otmp->otyp == LEATHER_JACKET))\n3763.  #define is_elven_armor(otmp)\t((otmp)->otyp == ELVEN_LEATHER_HELM\\\n3764.  \t\t\t\t|| (otmp)->otyp == ELVEN_MITHRIL_COAT\\\n3765.  \t\t\t\t|| (otmp)->otyp == ELVEN_CLOAK\\\n3766. @@ -202,7 +230,9 @@ struct obj {\n3767.  \t\t\t\t|| (otmp)->otyp == DWARVISH_ROUNDSHIELD)\n3768.  #define is_gnomish_armor(otmp)\t(FALSE)\n3769.  \n3770. -\t\t\t\t\n3771. +#define WEP_ENCHANT_MAX  5\n3772. +#define WEP_ENCHANT_WARN 3\n3773. +\n3774.  /* Eggs and other food */\n3775.  #define MAX_EGG_HATCH_TIME 200\t/* longest an egg can remain unhatched */\n3776.  #define stale_egg(egg)\t((monstermoves - (egg)->age) > (2*MAX_EGG_HATCH_TIME))\n3777. @@ -222,6 +252,8 @@ struct obj {\n3778.  #define Is_mbag(otmp)\t(otmp->otyp == BAG_OF_HOLDING || \\\n3779.  \t\t\t otmp->otyp == BAG_OF_TRICKS)\n3780.  \n3781. +#define Is_sokoprize(otmp)\t((otmp)->sokoprize && !Is_box(otmp))\n3782. +\n3783.  /* dragon gear */\n3784.  #define Is_dragon_scales(obj)\t((obj)->otyp >= GRAY_DRAGON_SCALES && \\\n3785.  \t\t\t\t (obj)->otyp <= YELLOW_DRAGON_SCALES)\n3786. @@ -260,9 +292,14 @@ struct obj {\n3787.  /* Gnomish gear */\n3788.  #define is_gnomish_obj(otmp)\t(is_gnomish_armor(otmp))\n3789.  \n3790. +#define is_special_armor(obj)\t(is_elven_armor(obj) || \\\n3791. +\t\t\t(Role_if(PM_WIZARD) && (obj)->otyp == CORNUTHAUM))\n3792. +\n3793. +\n3794.  /* Light sources */\n3795.  #define Is_candle(otmp) (otmp->otyp == TALLOW_CANDLE || \\\n3796. -\t\t\t otmp->otyp == WAX_CANDLE)\n3797. +\t\t\t otmp->otyp == WAX_CANDLE || \\\n3798. +\t\t\t otmp->otyp == MAGIC_CANDLE)\n3799.  #define MAX_OIL_IN_FLASK 400\t/* maximum amount of oil in a potion of oil */\n3800.  \n3801.  /* MAGIC_LAMP intentionally excluded below */\n3802. @@ -289,10 +326,10 @@ struct obj {\n3803.  \n3804.  /* misc */\n3805.  #ifdef KOPS\n3806. -#define is_flimsy(otmp)\t\t(objects[(otmp)->otyp].oc_material <= LEATHER || \\\n3807. +#define is_flimsy(otmp)\t\t(get_material(otmp) <= LEATHER || \\\n3808.  \t\t\t\t (otmp)->otyp == RUBBER_HOSE)\n3809.  #else\n3810. -#define is_flimsy(otmp)\t\t(objects[(otmp)->otyp].oc_material <= LEATHER)\n3811. +#define is_flimsy(otmp)\t\t(get_material(otmp) <= LEATHER) /* material patch */\n3812.  #endif\n3813.  \n3814.  /* helpers, simple enough to be macros */\n```\n\nAmong the changes to objects: support for the [Sokoban prizes](/index.php?title=Sokoban_prize\\&action=edit\\&redlink=1 \"Sokoban prize (page does not exist)\"), the three items from which you may take only one; support for unusual [materials](/wiki/Material \"Material\") for some objects. Also, some of the macros here have to be adjusted to work with the new [skills](/wiki/Skills_\\(NetHack_brass\\) \"Skills (NetHack brass)\") system.\n\n### zap.c\n\n```\n30960.diff -pruN nethack-3.4.3/src/zap.c nhbrass-040923/src/zap.c\n30961.--- nethack-3.4.3/src/zap.c\tSun Dec  7 18:39:13 2003\n30962.+++ nhbrass-040923/src/zap.c\tSun Jun 13 13:37:04 2004\n30963.@@ -48,7 +48,8 @@ STATIC_DCL int FDECL(spell_hit_bonus, (i\n30964. #define ZT_LIGHTNING\t\t(AD_ELEC-1)\n30965. #define ZT_POISON_GAS\t\t(AD_DRST-1)\n30966. #define ZT_ACID\t\t\t(AD_ACID-1)\n30967.-/* 8 and 9 are currently unassigned */\n30968.+#define ZT_PARALYSIS\t\t(AD_PLYS-1)\n30969.+/* 9 is currently unassigned */\n30970. \n30971. #define ZT_WAND(x)\t\t(x)\n30972. #define ZT_SPELL(x)\t\t(10+(x))\n30973.@@ -93,7 +94,7 @@ const char * const flash_types[] = {\t/* \n30974. \t\"blast of lightning\",\n30975. \t\"blast of poison gas\",\n30976. \t\"blast of acid\",\n30977.-\t\"\",\n30978.+\t\"blast of paralysis gas\",\n30979. \t\"\"\n30980. };\n30981. \n30982.@@ -259,7 +260,10 @@ struct obj *otmp;\n30983. \t\treveal_invis = TRUE;\n30984. \t    if (mtmp->data != &mons[PM_PESTILENCE]) {\n30985. \t\twake = FALSE;\t\t/* wakeup() makes the target angry */\n30986.-\t\tmtmp->mhp += d(6, otyp == SPE_EXTRA_HEALING ? 8 : 4);\n30987.+\t\tmtmp->mhp += d( 6+(Role_if(PM_HEALER) ? 1 : 0)+\n30988.+\t\t\t\t  ((flags.female && uarmh && uarmh->otyp == NURSE_CAP) ? 1 : 0)+\n30989.+\t\t\t\t  ((flags.female && uarm  && uarm->otyp  == NURSE_UNIFORM) ? 1 : 0),\n30990.+\t\t\t\totyp == SPE_EXTRA_HEALING ? 8 : 4);\n30991. \t\tif (mtmp->mhp > mtmp->mhpmax)\n30992. \t\t    mtmp->mhp = mtmp->mhpmax;\n30993. \t\tif (mtmp->mblinded) {\n30994.@@ -354,7 +358,7 @@ struct obj *otmp;\n30995. \t */\n30996. \tif (reveal_invis) {\n30997. \t    if (mtmp->mhp > 0 && cansee(bhitpos.x, bhitpos.y) &&\n30998.-\t\t\t\t\t\t\t!canspotmon(mtmp))\n30999.+\t\t\t\t\t\t\t!canspotmons(mtmp))\n31000. \t\tmap_invisible(bhitpos.x, bhitpos.y);\n31001. \t}\n31002. \treturn 0;\n31003.@@ -674,7 +678,7 @@ register struct obj *obj;\n31004. \t\t    }\n31005. \t\t}\n31006. \t\tif (mtmp) {\n31007.-\t\t\tif (obj->oeaten)\n31008.+\t\t\tif (obj->oclass == FOOD_CLASS && obj->oeaten)\n31009. \t\t\t\tmtmp->mhp = eaten_stat(mtmp->mhp, obj);\n31010. \t\t\t/* track that this monster was revived at least once */\n31011. \t\t\tmtmp->mrevived = 1;\n31012.@@ -822,6 +826,7 @@ register struct obj *obj;\n31013. \t\tcase RIN_GAIN_CONSTITUTION:\n31014. \t\t\tif ((obj->owornmask & W_RING) && u_ring) {\n31015. \t\t\t\tABON(A_CON) -= obj->spe;\n31016.+\t\t\t\trecalchpmax();\n31017. \t\t\t\tflags.botl = 1;\n31018. \t\t\t}\n31019. \t\t\tbreak;\n31020.@@ -839,12 +844,16 @@ register struct obj *obj;\n31021. \t\t\tif ((obj->owornmask & W_RING) && u_ring)\n31022. \t\t\t\tu.udaminc -= obj->spe;\n31023. \t\t\tbreak;\n31024.-\t\tcase GAUNTLETS_OF_DEXTERITY:\n31025.-\t\t\tif ((obj->owornmask & W_ARMG) && (obj == uarmg)) {\n31026.-\t\t\t\tABON(A_DEX) -= obj->spe;\n31027.-\t\t\t\tflags.botl = 1;\n31028.-\t\t\t}\n31029.+\t\tcase RIN_PROTECTION:\n31030.+\t\t\tif ((obj->owornmask & W_RING) && u_ring)\n31031.+\t\t\t\tu.uprotection -= obj->spe;\n31032. \t\t\tbreak;\n31033.+//\t\tcase GAUNTLETS_OF_DEXTERITY:\n31034.+//\t\t\tif ((obj->owornmask & W_ARMG) && (obj == uarmg)) {\n31035.+//\t\t\t\tABON(A_DEX) -= obj->spe;\n31036.+//\t\t\t\tflags.botl = 1;\n31037.+//\t\t\t}\n31038.+//\t\t\tbreak;\n31039. \t\tcase HELM_OF_BRILLIANCE:\n31040. \t\t\tif ((obj->owornmask & W_ARMH) && (obj == uarmh)) {\n31041. \t\t\t\tABON(A_INT) -= obj->spe;\n31042.@@ -938,6 +947,7 @@ register struct obj *obj;\n31043. \tcase RIN_GAIN_CONSTITUTION:\n31044. \t    if ((obj->owornmask & W_RING) && u_ring) {\n31045. \t    \tABON(A_CON)--;\n31046.+\t\trecalchpmax();\n31047. \t    \tflags.botl = 1;\n31048. \t    }\n31049. \t    break;\n31050.@@ -1040,7 +1050,7 @@ polyuse(objhdr, mat, minwt)\n31051. \tif (otmp->otyp == SCR_MAIL) continue;\n31052. #endif\n31053. \n31054.-\tif (((int) objects[otmp->otyp].oc_material == mat) ==\n31055.+\tif (((int) get_material(otmp) == mat) ==\n31056. \t\t(rn2(minwt + 1) != 0)) {\n31057. \t    /* appropriately add damage to bill */\n31058. \t    if (costly_spot(otmp->ox, otmp->oy)) {\n31059.@@ -1161,7 +1171,7 @@ struct obj *obj;\n31060. \t    /* some may metamorphosize */\n31061. \t    for (i = obj->quan; i; i--)\n31062. \t\tif (! rn2(Luck + 45)) {\n31063.-\t\t    poly_zapped = objects[obj->otyp].oc_material;\n31064.+\t\t    poly_zapped = get_material(obj);\n31065. \t\t    break;\n31066. \t\t}\n31067. \t}\n31068.@@ -1348,12 +1358,20 @@ poly_obj(obj, id)\n31069. \n31070. \tcase GEM_CLASS:\n31071. \t    if (otmp->quan > (long) rnd(4) &&\n31072.-\t\t    objects[obj->otyp].oc_material == MINERAL &&\n31073.-\t\t    objects[otmp->otyp].oc_material != MINERAL) {\n31074.+\t\t    get_material(obj) == MINERAL &&\n31075.+\t\t    get_material(otmp) != MINERAL) {\n31076. \t\totmp->otyp = ROCK;\t/* transmutation backfired */\n31077. \t\totmp->quan /= 2L;\t/* some material has been lost */\n31078. \t    }\n31079. \t    break;\n31080.+\n31081.+\tcase FOOD_CLASS:\n31082.+\t    if (otmp->otyp == CORPSE) {\n31083.+\t\totmp->age = monstermoves; /* if stone-to-freshed, make it fresh */\n31084.+\t\tstart_corpse_timeout(otmp);\n31085.+\t    }\n31086.+\t    break;\n31087.+\n31088. \t}\n31089. \n31090. \t/* update the weight */\n31091.@@ -1603,8 +1621,8 @@ struct obj *obj, *otmp;\n31092. \t\tbreak;\n31093. \tcase SPE_STONE_TO_FLESH:\n31094. \t\trefresh_x = obj->ox; refresh_y = obj->oy;\n31095.-\t\tif (objects[obj->otyp].oc_material != MINERAL &&\n31096.-\t\t\tobjects[obj->otyp].oc_material != GEMSTONE) {\n31097.+\t\tif (get_material(obj) != MINERAL &&\n31098.+\t\t\tget_material(obj) != GEMSTONE) {\n31099. \t\t    res = 0;\n31100. \t\t    break;\n31101. \t\t}\n31102.@@ -1734,6 +1752,9 @@ bhitpile(obj,fhito,tx,ty)\n31103. \t/* Fix for polymorph bug, Tim Wright */\n31104. \tnext_obj = otmp->nexthere;\n31105. \thitanything += (*fhito)(otmp, obj);\n31106.+#ifdef NOPOLYPILE\n31107.+\tif (obj->otyp == WAN_POLYMORPH || obj->otyp == SPE_POLYMORPH) break;\n31108.+#endif /*NOPOLYPILE*/\n31109.     }\n31110.     if(poly_zapped >= 0)\n31111. \tcreate_polymon(level.objects[tx][ty], poly_zapped);\n31112.@@ -1829,7 +1850,7 @@ dozap()\n31113. \tint\tdamage;\n31114. \n31115. \tif(check_capacity((char *)0)) return(0);\n31116.-\tobj = getobj(zap_syms, \"zap\");\n31117.+\tobj = getobj(zap_syms, \"zap\", 0);\n31118. \tif(!obj) return(0);\n31119. \n31120. \tcheck_unpaid(obj);\n31121.@@ -1883,29 +1904,31 @@ boolean ordinary;\n31122. \t\tcase WAN_STRIKING:\n31123. \t\t    makeknown(WAN_STRIKING);\n31124. \t\tcase SPE_FORCE_BOLT:\n31125.-\t\t    if(Antimagic) {\n31126.-\t\t\tshieldeff(u.ux, u.uy);\n31127.-\t\t\tpline(\"Boing!\");\n31128.-\t\t    } else {\n31129.+/* Striking/force bolt is now physical attack */\n31130.+//\t\t    if(Antimagic) {\n31131.+//\t\t\tshieldeff(u.ux, u.uy);\n31132.+//\t\t\tpline(\"Boing!\");\n31133.+//\t\t    } else {\n31134. \t\t\tif (ordinary) {\n31135. \t\t\t    You(\"bash yourself!\");\n31136. \t\t\t    damage = d(2,12);\n31137. \t\t\t} else\n31138. \t\t\t    damage = d(1 + obj->spe,6);\n31139. \t\t\texercise(A_STR, FALSE);\n31140.-\t\t    }\n31141.+//\t\t    }\n31142. \t\t    break;\n31143. \n31144. \t\tcase WAN_LIGHTNING:\n31145. \t\t    makeknown(WAN_LIGHTNING);\n31146.-\t\t    if (!Shock_resistance) {\n31147.-\t\t\tYou(\"shock yourself!\");\n31148.-\t\t\tdamage = d(12,6);\n31149.-\t\t\texercise(A_CON, FALSE);\n31150.-\t\t    } else {\n31151.+\t\t    if (Shock_resistance && is_full_resist(SHOCK_RES)) {\n31152. \t\t\tshieldeff(u.ux, u.uy);\n31153. \t\t\tYou(\"zap yourself, but seem unharmed.\");\n31154. \t\t\tugolemeffects(AD_ELEC, d(12,6));\n31155.+\t\t\tbreak;\n31156.+\t\t    } else {\n31157.+\t\t\tYou(\"shock yourself!\");\n31158.+\t\t\tdamage = d((Shock_resistance) ? 3: 12, 6);\n31159.+\t\t\texercise(A_CON, FALSE);\n31160. \t\t    }\n31161. \t\t    destroy_item(WAND_CLASS, AD_ELEC);\n31162. \t\t    destroy_item(RING_CLASS, AD_ELEC);\n31163.@@ -1923,32 +1946,33 @@ boolean ordinary;\n31164. \t\tcase WAN_FIRE:\n31165. \t\t    makeknown(WAN_FIRE);\n31166. \t\tcase FIRE_HORN:\n31167.-\t\t    if (Fire_resistance) {\n31168.+\t\t    if (Fire_resistance && is_full_resist(FIRE_RES)) {\n31169. \t\t\tshieldeff(u.ux, u.uy);\n31170. \t\t\tYou_feel(\"rather warm.\");\n31171. \t\t\tugolemeffects(AD_FIRE, d(12,6));\n31172. \t\t    } else {\n31173. \t\t\tpline(\"You've set yourself afire!\");\n31174.-\t\t\tdamage = d(12,6);\n31175.+\t\t\tdamage = d((Fire_resistance) ? 3 : 12, 6);\n31176. \t\t    }\n31177. \t\t    burn_away_slime();\n31178. \t\t    (void) burnarmor(&youmonst);\n31179. \t\t    destroy_item(SCROLL_CLASS, AD_FIRE);\n31180. \t\t    destroy_item(POTION_CLASS, AD_FIRE);\n31181. \t\t    destroy_item(SPBOOK_CLASS, AD_FIRE);\n31182.+\t\t    destroy_item(TOOL_CLASS, AD_FIRE);\n31183. \t\t    break;\n31184. \n31185. \t\tcase WAN_COLD:\n31186. \t\t    makeknown(WAN_COLD);\n31187. \t\tcase SPE_CONE_OF_COLD:\n31188. \t\tcase FROST_HORN:\n31189.-\t\t    if (Cold_resistance) {\n31190.+\t\t    if (Cold_resistance && is_full_resist(COLD_RES)) {\n31191. \t\t\tshieldeff(u.ux, u.uy);\n31192. \t\t\tYou_feel(\"a little chill.\");\n31193. \t\t\tugolemeffects(AD_COLD, d(12,6));\n31194. \t\t    } else {\n31195. \t\t\tYou(\"imitate a popsicle!\");\n31196.-\t\t\tdamage = d(12,6);\n31197.+\t\t\tdamage = d((Cold_resistance) ? 3 : 12, 6);\n31198. \t\t    }\n31199. \t\t    destroy_item(POTION_CLASS, AD_COLD);\n31200. \t\t    break;\n31201.@@ -1959,6 +1983,7 @@ boolean ordinary;\n31202. \t\t    if(Antimagic) {\n31203. \t\t\tshieldeff(u.ux, u.uy);\n31204. \t\t\tpline_The(\"missiles bounce!\");\n31205.+\t\t\tdamage_resistant_obj(ANTIMAGIC, 1);\n31206. \t\t    } else {\n31207. \t\t\tdamage = d(4,6);\n31208. \t\t\tpline(\"Idiot!  You've shot yourself!\");\n31209.@@ -1997,11 +2022,12 @@ boolean ordinary;\n31210. \t\t        You_feel(\"rather itchy under your %s.\", xname(uarmc));\n31211. \t\t        break;\n31212. \t\t    }\n31213.-\t\t    if (ordinary || !rn2(10)) {\t/* permanent */\n31214.-\t\t\tHInvis |= FROMOUTSIDE;\n31215.-\t\t    } else {\t\t\t/* temporary */\n31216.+/* never get permanent invisibity by wand - youkan */\n31217.+//\t\t    if (ordinary || !rn2(10)) {\t/* permanent */\n31218.+//\t\t\tHInvis |= FROMOUTSIDE;\n31219.+//\t\t    } else {\t\t\t/* temporary */\n31220. \t\t    \tincr_itimeout(&HInvis, d(obj->spe, 250));\n31221.-\t\t    }\n31222.+//\t\t    }\n31223. \t\t    if (msg) {\n31224. \t\t\tmakeknown(WAN_MAKE_INVISIBLE);\n31225. \t\t\tnewsym(u.ux, u.uy);\n31226.@@ -2011,15 +2037,25 @@ boolean ordinary;\n31227. \t\t}\n31228. \n31229. \t\tcase WAN_SPEED_MONSTER:\n31230.-\t\t    if (!(HFast & INTRINSIC)) {\n31231.-\t\t\tif (!Fast)\n31232.-\t\t\t    You(\"speed up.\");\n31233.-\t\t\telse\n31234.-\t\t\t    Your(\"quickness feels more natural.\");\n31235.-\t\t\tmakeknown(WAN_SPEED_MONSTER);\n31236.-\t\t\texercise(A_DEX, TRUE);\n31237.+\t\t    if (Very_fast) {\n31238.+\t\t\tYour(\"%s get new energy.\",\n31239.+\t\t\t\tmakeplural(body_part(LEG)));\n31240.+\t\t\tbreak;\n31241. \t\t    }\n31242.-\t\t    HFast |= FROMOUTSIDE;\n31243.+\t\t    You(\"are suddenly moving %sfaster.\",\n31244.+\t\t\t\t(Fast || BFast) ? \"\" : \"much \");\n31245.+\t\t    u.uspdbon2 = 2;\n31246.+\t\t    incr_itimeout(&HFast, rn1(10, 10));\n31247.+/* wand of speed monster no longer convey intrinsic speed */\n31248.+//\t\t    if (!(HFast & INTRINSIC)) {\n31249.+//\t\t\tif (!Fast)\n31250.+//\t\t\t    You(\"speed up.\");\n31251.+//\t\t\telse\n31252.+//\t\t\t    Your(\"quickness feels more natural.\");\n31253.+//\t\t\tmakeknown(WAN_SPEED_MONSTER);\n31254.+//\t\t\texercise(A_DEX, TRUE);\n31255.+//\t\t    }\n31256.+//\t\t    HFast |= FROMOUTSIDE;\n31257. \t\t    break;\n31258. \n31259. \t\tcase WAN_SLEEP:\n31260.@@ -2049,7 +2085,7 @@ boolean ordinary;\n31261. \n31262. \t\tcase WAN_DEATH:\n31263. \t\tcase SPE_FINGER_OF_DEATH:\n31264.-\t\t    if (nonliving(youmonst.data) || is_demon(youmonst.data)) {\n31265.+\t\t    if (vs_death_factor(youmonst.data)) {\n31266. \t\t\tpline((obj->otyp == WAN_DEATH) ?\n31267. \t\t\t  \"The wand shoots an apparently harmless beam at you.\"\n31268. \t\t\t  : \"You seem no deader than before.\");\n31269.@@ -2537,13 +2573,11 @@ int skill;\n31270.     int hit_bon = 0;\n31271.     int dex = ACURR(A_DEX);\n31272. \n31273.-    switch (P_SKILL(spell_skilltype(skill))) {\n31274.-\tcase P_ISRESTRICTED:\n31275.-\tcase P_UNSKILLED:   hit_bon = -4; break;\n31276.-\tcase P_BASIC:       hit_bon =  0; break;\n31277.-\tcase P_SKILLED:     hit_bon =  2; break;\n31278.-\tcase P_EXPERT:      hit_bon =  3; break;\n31279.-    }\n31280.+    schar hbon[11] = {\n31281.+\t   /*  0% 10% 20% 30% 40% 50% 60% 70% 80% 90% 100% */\n31282.+\t\t-4, -2, -2, -1, -1,  0,  0, +1, +2, +2, +3\n31283.+    };\n31284.+    hit_bon = hbon[P_SKILL(spell_skilltype(skill))/10];\n31285. \n31286.     if (dex < 4)\n31287. \thit_bon -= 3;\n31288.@@ -2622,23 +2656,41 @@ int FDECL((*fhitm), (MONST_P, OBJ_P)),\t/\n31289.     FDECL((*fhito), (OBJ_P, OBJ_P));\n31290. struct obj *obj;\t\t\t/* object tossed/used */\n31291. {\n31292.-\tstruct monst *mtmp;\n31293.-\tuchar typ;\n31294.-\tboolean shopdoor = FALSE, point_blank = TRUE;\n31295.+\tregister boolean shopdoor = FALSE;\n31296.+\tint sx, sy;\n31297. \n31298. \tif (weapon == KICKED_WEAPON) {\n31299. \t    /* object starts one square in front of player */\n31300.-\t    bhitpos.x = u.ux + ddx;\n31301.-\t    bhitpos.y = u.uy + ddy;\n31302.+\t    sx = u.ux + ddx;\n31303.+\t    sy = u.uy + ddy;\n31304. \t    range--;\n31305. \t} else {\n31306.-\t    bhitpos.x = u.ux;\n31307.-\t    bhitpos.y = u.uy;\n31308.+\t    sx = u.ux;\n31309.+\t    sy = u.uy;\n31310. \t}\n31311.+\treturn bhitcore(sx,sy, ddx, ddy, range, weapon, fhitm, fhito, obj, TRUE);\n31312.+}\n31313. \n31314.-\tif (weapon == FLASHED_LIGHT) {\n31315.+struct monst *\n31316.+bhitcore(startx,starty, ddx,ddy, range, weapon, fhitm,fhito, obj, youshoot)\n31317.+int startx, starty;\t\t\t/* starting position */\n31318.+int ddx,ddy,range;\t\t\t/* direction and range */\n31319.+int weapon;\t\t\t\t/* see values in hack.h */\n31320.+int FDECL((*fhitm), (MONST_P, OBJ_P)),\t/* fns called when mon/obj hit (return value: ) */\n31321.+    FDECL((*fhito), (OBJ_P, OBJ_P));\t/* \treturn value -- 0:keep going 1:stop */\n31322.+struct obj *obj;\t\t\t/* object tossed/used */\n31323.+boolean youshoot;\t\t\t/* TRUE:you shot it */\n31324.+{\n31325.+\tstruct monst *mtmp;\n31326.+\tuchar typ;\n31327.+\tboolean shopdoor = FALSE, point_blank = TRUE;\n31328.+\n31329.+\tbhitpos.x = startx;\n31330.+\tbhitpos.y = starty;\n31331.+\n31332.+\tif ((weapon & BHIT_GLYPHMASK) == BHIT_GLYPH_FLASH) {\n31333. \t    tmp_at(DISP_BEAM, cmap_to_glyph(S_flashbeam));\n31334.-\t} else if (weapon != ZAPPED_WAND && weapon != INVIS_BEAM)\n31335.+\t} else if ((weapon & BHIT_GLYPHMASK) == BHIT_GLYPH_OBJ)\n31336. \t    tmp_at(DISP_FLASH, obj_to_glyph(obj));\n31337. \n31338. \twhile(range-- > 0) {\n31339.@@ -2654,7 +2706,7 @@ struct obj *obj;\t\t\t/* object tossed/used\n31340. \t\tbreak;\n31341. \t    }\n31342. \n31343.-\t    if(is_pick(obj) && inside_shop(x, y) &&\n31344.+\t    if(obj && is_pick(obj) && inside_shop(x, y) &&\n31345. \t\t\t\t\t   (mtmp = shkcatch(obj, x, y))) {\n31346. \t\ttmp_at(DISP_END, 0);\n31347. \t\treturn(mtmp);\n31348.@@ -2663,8 +2715,8 @@ struct obj *obj;\t\t\t/* object tossed/used\n31349. \t    typ = levl[bhitpos.x][bhitpos.y].typ;\n31350. \n31351. \t    /* iron bars will block anything big enough */\n31352.-\t    if ((weapon == THROWN_WEAPON || weapon == KICKED_WEAPON) &&\n31353.-\t\t    typ == IRONBARS &&\n31354.+\t    if ((weapon & BHIT_OBJTHROWN) /* physical flying or sliding object */\n31355.+\t    \t\t && typ == IRONBARS &&\n31356. \t\t    hits_bars(&obj, x - ddx, y - ddy,\n31357. \t\t\t      point_blank ? 0 : !rn2(5), 1)) {\n31358. \t\t/* caveat: obj might now be null... */\n31359.@@ -2673,7 +2725,8 @@ struct obj *obj;\t\t\t/* object tossed/used\n31360. \t\tbreak;\n31361. \t    }\n31362. \n31363.-\t    if (weapon == ZAPPED_WAND && find_drawbridge(&x,&y))\n31364.+\t    /* drawbridge handling */\n31365.+\t    if ((weapon & BHIT_ZAPPEDWAND) && find_drawbridge(&x,&y))\n31366. \t\tswitch (obj->otyp) {\n31367. \t\t    case WAN_OPENING:\n31368. \t\t    case SPE_KNOCK:\n31369.@@ -2696,45 +2749,39 @@ struct obj *obj;\t\t\t/* object tossed/used\n31370. \t\t\t    destroy_drawbridge(x,y);\n31371. \t\t\tmakeknown(obj->otyp);\n31372. \t\t\tbreak;\n31373.+\t\t    default:\n31374.+\t\t\tbreak;\n31375. \t\t}\n31376. \n31377.-\t    if ((mtmp = m_at(bhitpos.x, bhitpos.y)) != 0) {\n31378.+\t    if (!youshoot && bhitpos.x==u.ux && bhitpos.y==u.uy)\n31379.+\t\t mtmp = &youmonst;\n31380.+\t    else mtmp = m_at(bhitpos.x, bhitpos.y);\n31381.+\t    if (mtmp) {\n31382.+#ifdef MONSTEED\n31383.+\t\tmtmp = mrider_or_msteed(mtmp, !rn2(3));\n31384.+#endif\n31385.+\t\t/* hit a monster */\n31386. \t\tnotonhead = (bhitpos.x != mtmp->mx ||\n31387. \t\t\t     bhitpos.y != mtmp->my);\n31388.-\t\tif (weapon != FLASHED_LIGHT) {\n31389.-\t\t\tif(weapon != ZAPPED_WAND) {\n31390.-\t\t\t    if(weapon != INVIS_BEAM) tmp_at(DISP_END, 0);\n31391.-\t\t\t    if (cansee(bhitpos.x,bhitpos.y) && !canspotmon(mtmp)) {\n31392.-\t\t\t\tif (weapon != INVIS_BEAM) {\n31393.-\t\t\t\t    map_invisible(bhitpos.x, bhitpos.y);\n31394.-\t\t\t\t    return(mtmp);\n31395.-\t\t\t\t}\n31396.-\t\t\t    } else\n31397.-\t\t\t\treturn(mtmp);\n31398.-\t\t\t}\n31399.-\t\t\tif (weapon != INVIS_BEAM) {\n31400.-\t\t\t    (*fhitm)(mtmp, obj);\n31401.-\t\t\t    range -= 3;\n31402.-\t\t\t}\n31403.-\t\t} else {\n31404.-\t\t    /* FLASHED_LIGHT hitting invisible monster\n31405.-\t\t       should pass through instead of stop so\n31406.-\t\t       we call flash_hits_mon() directly rather\n31407.-\t\t       than returning mtmp back to caller. That\n31408.-\t\t       allows the flash to keep on going. Note\n31409.-\t\t       that we use mtmp->minvis not canspotmon()\n31410.-\t\t       because it makes no difference whether\n31411.-\t\t       the hero can see the monster or not.*/\n31412.-\t\t    if (mtmp->minvis) {\n31413.-\t\t\tobj->ox = u.ux,  obj->oy = u.uy;\n31414.-\t\t\t(void) flash_hits_mon(mtmp, obj);\n31415.+\t\tif (!((weapon & BHIT_PASSINVIS) && mtmp->minvis)) {\n31416.+\t\t    if (!fhitm) {\n31417.+\t\t\t/* no hitmon callback -- return the first monster hit */\n31418.+\t\t\tif ((weapon & BHIT_SENSEINVIS) &&\n31419.+\t\t\t    cansee(bhitpos.x,bhitpos.y) && !canspotmons(mtmp))\n31420.+\t\t\t\tmap_invisible(bhitpos.x, bhitpos.y);\n31421.+\t\t\tif((weapon & BHIT_GLYPHMASK) != BHIT_GLYPH_NONE)\n31422.+\t\t\t\ttmp_at(DISP_END, 0);\n31423.+\t\t\treturn(mtmp);\n31424. \t\t    } else {\n31425.-\t\t\ttmp_at(DISP_END, 0);\n31426.-\t\t    \treturn(mtmp); \t/* caller will call flash_hits_mon */\n31427.+\t\t\t/* hitmon callback -- call fhitm for every monster to hit */\n31428.+\t\t\tif ((*fhitm)(mtmp, obj)) break; /* stopped: exit the loop */\n31429.+\t\t\trange -= 3;\t\t\t/* keep going */\n31430. \t\t    }\n31431. \t\t}\n31432.+\n31433. \t    } else {\n31434.-\t\tif (weapon == ZAPPED_WAND && obj->otyp == WAN_PROBING &&\n31435.+\t\t/* did not hit a monster */\n31436.+\t\tif ((weapon & BHIT_ZAPPEDWAND) && obj->otyp == WAN_PROBING &&\n31437. \t\t   glyph_is_invisible(levl[bhitpos.x][bhitpos.y].glyph)) {\n31438. \t\t    unmap_object(bhitpos.x, bhitpos.y);\n31439. \t\t    newsym(x, y);\n31440.@@ -2743,7 +2790,13 @@ struct obj *obj;\t\t\t/* object tossed/used\n31441. \t    if(fhito) {\n31442. \t\tif(bhitpile(obj,fhito,bhitpos.x,bhitpos.y))\n31443. \t\t    range--;\n31444.+#ifdef NOPOLYPILE\n31445.+\t\tif ((weapon & BHIT_ZAPPEDWAND) &&\n31446.+\t\t    (obj->otyp == WAN_POLYMORPH || obj->otyp == SPE_POLYMORPH))\n31447.+\t\t    range = 0;\n31448.+#endif /*NOPOLYPILE*/\n31449. \t    } else {\n31450.+\t\t/* hero tries to kick dropped gold out of the shop */\n31451. \t\tif(weapon == KICKED_WEAPON &&\n31452. \t\t      ((obj->oclass == COIN_CLASS &&\n31453. \t\t\t OBJ_AT(bhitpos.x, bhitpos.y)) ||\n31454.@@ -2753,7 +2806,9 @@ struct obj *obj;\t\t\t/* object tossed/used\n31455. \t\t\treturn (struct monst *)0;\n31456. \t\t}\n31457. \t    }\n31458.-\t    if(weapon == ZAPPED_WAND && (IS_DOOR(typ) || typ == SDOOR)) {\n31459.+\n31460.+\t    /* door handling(open/close/crash etc.) */\n31461.+\t    if((weapon & BHIT_ZAPPEDWAND) && (IS_DOOR(typ) || typ == SDOOR)) {\n31462. \t\tswitch (obj->otyp) {\n31463. \t\tcase WAN_OPENING:\n31464. \t\tcase WAN_LOCKING:\n31465.@@ -2768,39 +2823,46 @@ struct obj *obj;\t\t\t/* object tossed/used\n31466. \t\t\tif (levl[bhitpos.x][bhitpos.y].doormask == D_BROKEN\n31467. \t\t\t    && *in_rooms(bhitpos.x, bhitpos.y, SHOPBASE)) {\n31468. \t\t\t    shopdoor = TRUE;\n31469.-\t\t\t    add_damage(bhitpos.x, bhitpos.y, 400L);\n31470.+\t\t\t    add_damage(bhitpos.x, bhitpos.y, youshoot ? 400L : 0L);\n31471. \t\t\t}\n31472. \t\t    }\n31473. \t\t    break;\n31474.+\t\tdefault:\n31475.+\t\t    break;\n31476. \t\t}\n31477. \t    }\n31478.+\n31479.+\t    /* blocked by door */\n31480. \t    if(!ZAP_POS(typ) || closed_door(bhitpos.x, bhitpos.y)) {\n31481. \t\tbhitpos.x -= ddx;\n31482. \t\tbhitpos.y -= ddy;\n31483. \t\tbreak;\n31484. \t    }\n31485.-\t    if(weapon != ZAPPED_WAND && weapon != INVIS_BEAM) {\n31486.-\t\t/* 'I' present but no monster: erase */\n31487.-\t\t/* do this before the tmp_at() */\n31488.-\t\tif (glyph_is_invisible(levl[bhitpos.x][bhitpos.y].glyph)\n31489.-\t\t\t&& cansee(x, y)) {\n31490.-\t\t    unmap_object(bhitpos.x, bhitpos.y);\n31491.-\t\t    newsym(x, y);\n31492.-\t\t}\n31493.+\t    /* 'I' present but no monster: erase */\n31494.+\t    /* do this before the tmp_at() */\n31495.+\t    if (!(weapon & BHIT_PASSINVIS) &&\n31496.+\t\tglyph_is_invisible(levl[bhitpos.x][bhitpos.y].glyph) &&\n31497.+\t\tcansee(x, y)) {\n31498.+\t\tunmap_object(bhitpos.x, bhitpos.y);\n31499.+\t\tnewsym(x, y);\n31500.+\t    }\n31501.+\t    /* show the symbol flying */\n31502.+\t    if((weapon & BHIT_GLYPHMASK) != BHIT_GLYPH_NONE) {\n31503. \t\ttmp_at(bhitpos.x, bhitpos.y);\n31504. \t\tdelay_output();\n31505.-\t\t/* kicked objects fall in pools */\n31506.-\t\tif((weapon == KICKED_WEAPON) &&\n31507.-\t\t   (is_pool(bhitpos.x, bhitpos.y) ||\n31508.-\t\t   is_lava(bhitpos.x, bhitpos.y)))\n31509.+\t    }\n31510.+\t    /* kicked objects fall in pools */\n31511.+\t    if((weapon & BHIT_FALLTOPOOL) &&\n31512.+\t       (is_pool(bhitpos.x, bhitpos.y) ||\n31513.+\t\tis_lava(bhitpos.x, bhitpos.y)))\n31514. \t\t    break;\n31515. #ifdef SINKS\n31516.-\t\tif(IS_SINK(typ) && weapon != FLASHED_LIGHT)\n31517.-\t\t    break;\t/* physical objects fall onto sink */\n31518.+\t    /* physical objects fall onto sink */\n31519.+\t    if(IS_SINK(typ) && (weapon & BHIT_STOPATSINK))\n31520.+\t\tbreak;\n31521. #endif\n31522.-\t    }\n31523. \t    /* limit range of ball so hero won't make an invalid move */\n31524.-\t    if (weapon == THROWN_WEAPON && range > 0 &&\n31525.+\t    if ((weapon & BHIT_OBJTHROWN) && range > 0 &&\n31526. \t\tobj->otyp == HEAVY_IRON_BALL) {\n31527. \t\tstruct obj *bobj;\n31528. \t\tstruct trap *t;\n31529.@@ -2829,9 +2891,9 @@ struct obj *obj;\t\t\t/* object tossed/used\n31530. \t    point_blank = FALSE;\t/* affects passing through iron bars */\n31531. \t}\n31532. \n31533.-\tif (weapon != ZAPPED_WAND && weapon != INVIS_BEAM) tmp_at(DISP_END, 0);\n31534.+\tif ((weapon & BHIT_GLYPHMASK) != BHIT_GLYPH_NONE) tmp_at(DISP_END, 0);\n31535. \n31536.-\tif(shopdoor)\n31537.+\tif(shopdoor && youshoot)\n31538. \t    pay_for_damage(\"destroy\", FALSE);\n31539. \n31540. \treturn (struct monst *)0;\n31541.@@ -2962,6 +3024,15 @@ struct obj **ootmp;\t/* to return worn ar\n31542. \t\t(void)sleep_monst(mon, d(nd, 25),\n31543. \t\t\t\ttype == ZT_WAND(ZT_SLEEP) ? WAND_CLASS : '\\0');\n31544. \t\tbreak;\n31545.+\tcase ZT_PARALYSIS:\n31546.+\t\ttmp = 0;\n31547.+\t\tif (resists_paraly(mon)) {\n31548.+\t\t    sho_shieldeff = TRUE;\n31549.+\t\t    break;\n31550.+\t\t}\n31551.+\t\tmon->mcanmove = 0;\n31552.+\t\tmon->mfrozen = d(nd, 6);\n31553.+\t\tbreak;\n31554. \tcase ZT_DEATH:\t\t/* death/disintegration */\n31555. \t\tif(abs(type) != ZT_BREATH(ZT_DEATH)) {\t/* death */\n31556. \t\t    if(mon->data == &mons[PM_DEATH]) {\n31557.@@ -2972,8 +3043,8 @@ struct obj **ootmp;\t/* to return worn ar\n31558. \t\t\ttmp = 0;\n31559. \t\t\tbreak;\n31560. \t\t    }\n31561.-\t\t    if (nonliving(mon->data) || is_demon(mon->data) ||\n31562.-\t\t\t    resists_magm(mon)) {\t/* similar to player */\n31563.+\t\t    if (vs_death_factor(mon->data) ||\n31564.+\t\t\tresists_magm(mon)) {\t/* similar to player */\n31565. \t\t\tsho_shieldeff = TRUE;\n31566. \t\t\tbreak;\n31567. \t\t    }\n31568.@@ -3071,41 +3142,55 @@ const char *fltxt;\n31569. xchar sx, sy;\n31570. {\n31571. \tint dam = 0;\n31572.+\tboolean not_effected = FALSE;\n31573. \n31574. \tswitch (abs(type) % 10) {\n31575. \tcase ZT_MAGIC_MISSILE:\n31576. \t    if (Antimagic) {\n31577. \t\tshieldeff(sx, sy);\n31578. \t\tpline_The(\"missiles bounce off!\");\n31579.+\t\tdamage_resistant_obj(ANTIMAGIC, 1);\n31580. \t    } else {\n31581. \t\tdam = d(nd,6);\n31582. \t\texercise(A_STR, FALSE);\n31583. \t    }\n31584. \t    break;\n31585. \tcase ZT_FIRE:\n31586.+\t    dam = d(nd, 6);\n31587. \t    if (Fire_resistance) {\n31588.-\t\tshieldeff(sx, sy);\n31589.-\t\tYou(\"don't feel hot!\");\n31590.+\t\tif (not_effected = is_full_resist(FIRE_RES)) {\n31591.+\t\t    shieldeff(sx, sy);\n31592.+\t\t    You(\"don't feel hot!\");\n31593.+\t\t    dam = 0;\n31594.+\t\t} else {\n31595.+\t\t    You(\"endure the heat.\");\n31596.+\t\t    dam = (dam+3) / 4;\n31597.+\t\t}\n31598. \t\tugolemeffects(AD_FIRE, d(nd, 6));\n31599.-\t    } else {\n31600.-\t\tdam = d(nd, 6);\n31601. \t    }\n31602. \t    burn_away_slime();\n31603.-\t    if (burnarmor(&youmonst)) {\t/* \"body hit\" */\n31604.+\t    if (!not_effected && burnarmor(&youmonst)) {\t/* \"body hit\" */\n31605. \t\tif (!rn2(3)) destroy_item(POTION_CLASS, AD_FIRE);\n31606. \t\tif (!rn2(3)) destroy_item(SCROLL_CLASS, AD_FIRE);\n31607. \t\tif (!rn2(5)) destroy_item(SPBOOK_CLASS, AD_FIRE);\n31608.+\t\tif (!rn2(3)) destroy_item(TOOL_CLASS, AD_FIRE);\n31609. \t    }\n31610. \t    break;\n31611. \tcase ZT_COLD:\n31612.+\t    dam = d(nd, 6);\n31613. \t    if (Cold_resistance) {\n31614.-\t\tshieldeff(sx, sy);\n31615.-\t\tYou(\"don't feel cold.\");\n31616.+\t\tif (not_effected = is_full_resist(COLD_RES)) {\n31617.+\t\t    shieldeff(sx, sy);\n31618.+\t\t    You(\"don't feel cold.\");\n31619.+\t\t    dam = 0;\n31620.+\t\t} else {\n31621.+\t\t    You(\"feel slightly cold.\");\n31622.+\t\t    dam = (dam+3) / 4;\n31623.+\t\t}\n31624. \t\tugolemeffects(AD_COLD, d(nd, 6));\n31625.-\t    } else {\n31626.-\t\tdam = d(nd, 6);\n31627. \t    }\n31628.-\t    if (!rn2(3)) destroy_item(POTION_CLASS, AD_COLD);\n31629.+\t    if (!not_effected && !rn2(3))\n31630.+\t\tdestroy_item(POTION_CLASS, AD_COLD);\n31631. \t    break;\n31632. \tcase ZT_SLEEP:\n31633. \t    if (Sleep_resistance) {\n31634.@@ -3115,10 +3200,22 @@ xchar sx, sy;\n31635. \t\tfall_asleep(-d(nd,25), TRUE); /* sleep ray */\n31636. \t    }\n31637. \t    break;\n31638.+\tcase ZT_PARALYSIS:\n31639.+\t    if (Free_action) {\n31640.+\t\tshieldeff(u.ux, u.uy);\n31641.+\t\tYou(\"stiffen momentarily.\");\n31642.+\t    } else {\n31643.+\t\tYou(\"are frozen!\");\n31644.+\t\tnomul(-d(nd, 4));\n31645.+\t\tnomovemsg = You_can_move_again;\n31646.+\t\texercise(A_DEX, FALSE);\n31647.+\t    }\n31648.+\t    break;\n31649. \tcase ZT_DEATH:\n31650. \t    if (abs(type) == ZT_BREATH(ZT_DEATH)) {\n31651.-\t\tif (Disint_resistance) {\n31652.-\t\t    You(\"are not disintegrated.\");\n31653.+\t\tif (is_full_resist(DISINT_RES)) {\n31654.+\t\t    shieldeff(sx, sy);\n31655.+\t\t    You(\"aren't affected.\");\n31656. \t\t    break;\n31657. \t\t} else if (uarms) {\n31658. \t\t    /* destroy shield; other possessions are safe */\n31659.@@ -3136,13 +3233,18 @@ xchar sx, sy;\n31660. #ifdef TOURIST\n31661. \t\tif (uarmu) (void) destroy_arm(uarmu);\n31662. #endif\n31663.-\t    } else if (nonliving(youmonst.data) || is_demon(youmonst.data)) {\n31664.+\t\tif (Disint_resistance) {\n31665.+\t\t    You(\"are not disintegrated.\");\n31666.+\t\t    break;\n31667.+\t\t}\n31668.+\t    } else if (vs_death_factor(youmonst.data)) {\n31669. \t\tshieldeff(sx, sy);\n31670. \t\tYou(\"seem unaffected.\");\n31671. \t\tbreak;\n31672. \t    } else if (Antimagic) {\n31673. \t\tshieldeff(sx, sy);\n31674. \t\tYou(\"aren't affected.\");\n31675.+\t\tdamage_resistant_obj(ANTIMAGIC, rnd(3));\n31676. \t\tbreak;\n31677. \t    }\n31678. \t    killer_format = KILLED_BY_AN;\n31679.@@ -3152,19 +3254,30 @@ xchar sx, sy;\n31680. \t    done(DIED);\n31681. \t    return; /* lifesaved */\n31682. \tcase ZT_LIGHTNING:\n31683.+\t    dam = d(nd, 6);\n31684. \t    if (Shock_resistance) {\n31685.-\t\tshieldeff(sx, sy);\n31686.-\t\tYou(\"aren't affected.\");\n31687.+\t\tif (not_effected = is_full_resist(SHOCK_RES)) {\n31688.+\t\t    shieldeff(sx, sy);\n31689.+\t\t    You(\"aren't affected.\");\n31690.+\t\t    dam = 0;\n31691.+\t\t} else {\n31692.+\t\t    You(\"nearly resist the shock.\");\n31693.+\t\t    dam = (dam+3) / 4;\n31694.+\t\t}\n31695. \t\tugolemeffects(AD_ELEC, d(nd, 6));\n31696. \t    } else {\n31697.-\t\tdam = d(nd, 6);\n31698. \t\texercise(A_CON, FALSE);\n31699. \t    }\n31700.-\t    if (!rn2(3)) destroy_item(WAND_CLASS, AD_ELEC);\n31701.-\t    if (!rn2(3)) destroy_item(RING_CLASS, AD_ELEC);\n31702.+\t    if (!not_effected) {\n31703.+\t\tif (!rn2(3)) destroy_item(WAND_CLASS, AD_ELEC);\n31704.+\t\tif (!rn2(3)) destroy_item(RING_CLASS, AD_ELEC);\n31705.+\t    }\n31706. \t    break;\n31707. \tcase ZT_POISON_GAS:\n31708. \t    poisoned(\"blast\", A_DEX, \"poisoned blast\", 15);\n31709.+\t    if (!is_full_resist(POISON_RES)) {\n31710.+\t\tif (!rn2(3)) hurtarmor(AD_DCAY);\n31711.+\t    }\n31712. \t    break;\n31713. \tcase ZT_ACID:\n31714. \t    if (Acid_resistance) {\n31715.@@ -3174,10 +3287,12 @@ xchar sx, sy;\n31716. \t\tdam = d(nd,6);\n31717. \t\texercise(A_STR, FALSE);\n31718. \t    }\n31719.-\t    /* using two weapons at once makes both of them more vulnerable */\n31720.-\t    if (!rn2(u.twoweap ? 3 : 6)) erode_obj(uwep, TRUE, TRUE);\n31721.-\t    if (u.twoweap && !rn2(3)) erode_obj(uswapwep, TRUE, TRUE);\n31722.-\t    if (!rn2(6)) erode_armor(&youmonst, TRUE);\n31723.+\t    if (!is_full_resist(ACID_RES)) {\n31724.+\t\t/* using two weapons at once makes both of them more vulnerable */\n31725.+\t\tif (!rn2(u.twoweap ? 3 : 6)) erode_obj(uwep, TRUE, TRUE);\n31726.+\t\tif (u.twoweap && !rn2(3)) erode_obj(uswapwep, TRUE, TRUE);\n31727.+\t\tif (!rn2(6)) erode_armor(&youmonst, TRUE);\n31728.+\t    }\n31729. \t    break;\n31730. \t}\n31731. \n31732.@@ -3239,6 +3354,19 @@ boolean u_caused;\n31733. \t\t\t    pline(\"%s burns.\", An(buf1));\n31734. \t\t    }\n31735. \t\t}\n31736.+\t    } else if (obj->otyp == STATUE && get_material(obj) == LIQUID) {\n31737.+\t\tstruct trap *trap;\n31738.+\t\tif ((trap = t_at(x,y)) && trap->ttyp == STATUE_TRAP) {\n31739.+\t\t    activate_statue_trap(trap, x, y, TRUE);\n31740.+\t\t    continue;\n31741.+\t\t}\n31742.+\t\tif (give_feedback) {\n31743.+\t\t    pline(\"%s thaws.\", An(xname(obj)));\n31744.+\t\t}\n31745.+\t\t(void) mkcorpstat(CORPSE, (struct monst *) 0,\n31746.+\t\t\t\t  &mons[obj->corpsenm], x, y, TRUE);\n31747.+\t\tif (u_caused) useupf(obj, 1);\n31748.+\t\telse delobj(obj);\n31749. \t    }\n31750. \t}\n31751. \treturn cnt;\n31752.@@ -3317,7 +3445,7 @@ register int dx,dy;\n31753. \t    mon = m_at(sx, sy);\n31754. \t    if(cansee(sx,sy)) {\n31755. \t\t/* reveal/unreveal invisible monsters before tmp_at() */\n31756.-\t\tif (mon && !canspotmon(mon))\n31757.+\t\tif (mon && !canspotmons(mon))\n31758. \t\t    map_invisible(sx, sy);\n31759. \t\telse if (!mon && glyph_is_invisible(levl[sx][sy].glyph)) {\n31760. \t\t    unmap_object(sx, sy);\n31761.@@ -3327,6 +3455,9 @@ register int dx,dy;\n31762. \t\t    tmp_at(sx,sy);\n31763. \t\tdelay_output(); /* wait a little */\n31764. \t    }\n31765.+#ifdef MONSTEED\n31766.+\t    if (mon) mon = mrider_or_msteed(mon, !rn2(3));\n31767.+#endif\n31768. \t} else\n31769. \t    goto make_bounce;\n31770. \n31771.@@ -3447,6 +3578,7 @@ register int dx,dy;\n31772. \t\trange -= 2;\n31773. \t\tpline(\"%s hits you!\", The(fltxt));\n31774. \t\tif (Reflecting) {\n31775.+\t\t    int objdmg = 0;\n31776. \t\t    if (!Blind) {\n31777. \t\t    \t(void) ureflects(\"But %s reflects from your %s!\", \"it\");\n31778. \t\t    } else\n31779.@@ -3454,13 +3586,35 @@ register int dx,dy;\n31780. \t\t    dx = -dx;\n31781. \t\t    dy = -dy;\n31782. \t\t    shieldeff(sx, sy);\n31783.+\t\t    switch (abstype) {\t\t/* reflector gets damaged */\n31784.+\t\t\tcase ZT_MAGIC_MISSILE:\n31785.+\t\t\tcase ZT_SLEEP:\n31786.+\t\t\tcase ZT_POISON_GAS:\n31787.+\t\t\tcase ZT_PARALYSIS:\n31788.+\t\t\t\tobjdmg = d(1,4);\n31789.+\t\t\t\tbreak;\n31790.+\t\t\tcase ZT_FIRE:\n31791.+\t\t\tcase ZT_COLD:\n31792.+\t\t\tcase ZT_LIGHTNING:\n31793.+\t\t\tcase ZT_ACID:\n31794.+\t\t\t\tobjdmg = d(2,4);\n31795.+\t\t\tcase ZT_DEATH:\n31796.+\t\t\t\tif (abs(type) == ZT_BREATH(ZT_DEATH))\n31797.+\t\t\t\t    objdmg = rn1(10, 10);\n31798.+\t\t\t\telse\n31799.+\t\t\t\t    objdmg = d(3,4);\n31800.+\t\t\tdefault:\n31801.+\t\t\t\tbreak;\n31802.+\t\t    }\n31803.+\t\t    damage_resistant_obj(REFLECTING, objdmg);\n31804. \t\t} else {\n31805. \t\t    zhitu(type, nd, fltxt, sx, sy);\n31806. \t\t}\n31807. \t    } else {\n31808. \t\tpline(\"%s whizzes by you!\", The(fltxt));\n31809. \t    }\n31810.-\t    if (abstype == ZT_LIGHTNING && !resists_blnd(&youmonst)) {\n31811.+\t    if (abstype == ZT_LIGHTNING && !resists_blnd(&youmonst) &&\n31812.+\t\t!is_full_resist(SHOCK_RES)) {\n31813. \t\tYou(are_blinded_by_the_flash);\n31814. \t\tmake_blinded((long)d(nd,50),FALSE);\n31815. \t\tif (!Blind) Your(vision_clears);\n31816.@@ -3584,7 +3738,7 @@ boolean *shopdamage;\n31817. \t    }\n31818. \t    if(is_ice(x, y)) {\n31819. \t\tmelt_ice(x, y);\n31820.-\t    } else if(is_pool(x,y)) {\n31821.+\t    } else if(is_pool(x,y) || is_swamp(x,y)) {\n31822. \t\tconst char *msgtxt = \"You hear hissing gas.\";\n31823. \t\tif(lev->typ != POOL) {\t/* MOAT or DRAWBRIDGE_UP */\n31824. \t\t    if (cansee(x,y)) msgtxt = \"Some water evaporates.\";\n31825.@@ -3767,13 +3921,7 @@ register struct obj *obj;\t\t   /* no text\n31826. \tif (obj->otyp == BOULDER && In_sokoban(&u.uz) && !flags.mon_moving)\n31827. \t    change_luck(-1);\n31828. \n31829.-\tobj->otyp = ROCK;\n31830.-\tobj->quan = (long) rn1(60, 7);\n31831.-\tobj->owt = weight(obj);\n31832.-\tobj->oclass = GEM_CLASS;\n31833.-\tobj->known = FALSE;\n31834.-\tobj->onamelth = 0;\t\t/* no names */\n31835.-\tobj->oxlth = 0;\t\t\t/* no extra data */\n31836.+\ttrans_to_rock(obj);\n31837. \tobj->oattached = OATTACHED_NOTHING;\n31838. \tif (obj->where == OBJ_FLOOR) {\n31839. \t\tobj_extract_self(obj);\t\t/* move rocks back on top */\n31840.@@ -3785,6 +3933,20 @@ register struct obj *obj;\t\t   /* no text\n31841. \t}\n31842. }\n31843. \n31844.+void\n31845.+trans_to_rock(obj)\n31846.+register struct obj *obj;\n31847.+{\n31848.+\tobj->otyp = (get_material(obj) == MINERAL) ? ROCK : LAST_GEM + 1;\n31849.+\tobj->quan = (long) rn1(60, 7);\n31850.+\tobj->owt = weight(obj);\n31851.+\tobj->oclass = GEM_CLASS;\n31852.+\tobj->known = FALSE;\n31853.+\tobj->bknown = FALSE;\n31854.+\tobj->onamelth = 0;\t\t/* no names */\n31855.+\tobj->oxlth = 0;\t\t\t/* no extra data */\n31856.+}\n31857.+\n31858. /* handle statue hit by striking/force bolt/pick-axe */\n31859. boolean\n31860. break_statue(obj)\n31861.@@ -3793,7 +3955,10 @@ register struct obj *obj;\n31862. \t/* [obj is assumed to be on floor, so no get_obj_location() needed] */\n31863. \tstruct trap *trap = t_at(obj->ox, obj->oy);\n31864. \tstruct obj *item;\n31865.+\tint mat = get_material(obj);\n31866. \n31867.+\tif (mat != MINERAL && mat != GLASS) return FALSE;\t/* do not shatter */\n31868.+\n31869. \tif (trap && trap->ttyp == STATUE_TRAP &&\n31870. \t\tactivate_statue_trap(trap, obj->ox, obj->oy, TRUE))\n31871. \t    return FALSE;\n31872.@@ -3830,6 +3995,10 @@ register int osym, dmgtyp;\n31873. \tregister int dindx;\n31874. \tconst char *mult;\n31875. \n31876.+\tif (dmgtyp == AD_FIRE && is_full_resist(FIRE_RES)) return;\n31877.+\tif (dmgtyp == AD_COLD && is_full_resist(COLD_RES)) return;\n31878.+\tif (dmgtyp == AD_ELEC && is_full_resist(SHOCK_RES)) return;\n31879.+\n31880. \tfor(obj = invent; obj; obj = obj2) {\n31881. \t    obj2 = obj->nobj;\n31882. \t    if(obj->oclass != osym) continue; /* test only objs of type osym */\n31883.@@ -3873,6 +4042,20 @@ register int osym, dmgtyp;\n31884. \t\t\t    dindx = 3;\n31885. \t\t\t    dmg = 1;\n31886. \t\t\t    break;\n31887.+\t\t\tcase TOOL_CLASS:\n31888.+\t\t\t    if (get_material(obj) == CLOTH) {\n31889.+\t\t\t\tdindx = 3;\n31890.+\t\t\t\tdmg = 0;\n31891.+\t\t\t\tif (!objects[obj->otyp].oc_merge &&\n31892.+\t\t\t\t    obj->oeroded < MAX_ERODE) {\n31893.+\t\t\t\t    skip++;\n31894.+\t\t\t\t    if (!rn2(3+(obj->blessed*2))) {\n31895.+\t\t\t\t\tobj->oeroded++;\n31896.+\t\t\t\t\tpline(\"Your %s catches fire and smoulders!\", xname(obj));\n31897.+\t\t\t\t    }\n31898.+\t\t\t\t}\n31899.+\t\t\t    } else skip++;\n31900.+\t\t\t    break;\n31901. \t\t\tdefault:\n31902. \t\t\t    skip++;\n31903. \t\t\t    break;\n31904.@@ -3927,6 +4110,25 @@ register int osym, dmgtyp;\n31905. \t\t\tsetnotworn(obj);\n31906. \t\t}\n31907. \t\tif (obj == current_wand) current_wand = 0;\t/* destroyed */\n31908.+\t\tif (Is_container(obj) && Has_contents(obj)) {\n31909.+\t\t    struct obj *otmp;\n31910.+\t\t    long ccnt;\n31911.+\t\t    schar typ = levl[u.ux][u.uy].typ;\n31912.+\t\t    for (ccnt = 0, otmp = obj->cobj; otmp; otmp = otmp->nobj)\n31913.+\t\t\tccnt += otmp->quan;\n31914.+\t\t    if (ccnt) pline_The(\"content%s of %s fall%s %sto the %s!\",\n31915.+\t\t\t\t\t(ccnt > 1) ? \"s\" : \"\", the(xname(obj)),\n31916.+\t\t\t\t\t(ccnt == 1) ? \"s\" : \"\",\n31917.+\t\t\t\t\t(IS_SOFT(typ) || IS_FOUNTAIN(typ) ||\n31918.+\t\t\t\t\t typ == LAVAPOOL) ? \"in\" : \"\",\n31919.+\t\t\t\t\tsurface(u.ux, u.uy));\n31920.+\t\t    while (obj->cobj) {\n31921.+\t\t\totmp = obj->cobj;\n31922.+\t\t\tobj_extract_self(otmp);\n31923.+\t\t\tplace_object(otmp, u.ux, u.uy);\n31924.+\t\t\tstackobj(otmp);\n31925.+\t\t    }\n31926.+\t\t}\n31927. \t\tfor (i = 0; i < cnt; i++)\n31928. \t\t    useup(obj);\n31929. \t\tif(dmg) {\n31930.@@ -3945,6 +4147,29 @@ register int osym, dmgtyp;\n31931. \treturn;\n31932. }\n31933. \n31934.+void\n31935.+destroy_items(dmgtyp)\n31936.+register int dmgtyp;\n31937.+{\n31938.+\tswitch (dmgtyp) {\n31939.+\t    case AD_FIRE:\n31940.+\t\tdestroy_item(SCROLL_CLASS, AD_FIRE);\n31941.+\t\tdestroy_item(POTION_CLASS, AD_FIRE);\n31942.+\t\tif (rn2(5) < 3) destroy_item(SPBOOK_CLASS, AD_FIRE);\n31943.+\t\tdestroy_item(TOOL_CLASS, AD_FIRE);\n31944.+\t\tbreak;\n31945.+\t    case AD_COLD:\n31946.+\t\tdestroy_item(POTION_CLASS, AD_COLD);\n31947.+\t\tbreak;\n31948.+\t    case AD_ELEC:\n31949.+\t\tdestroy_item(WAND_CLASS, AD_ELEC);\n31950.+\t\tdestroy_item(RING_CLASS, AD_ELEC);\n31951.+\t\tbreak;\n31952.+\t    default:\n31953.+\t\tbreak;\n31954.+\t}\n31955.+}\n31956.+\n31957. int\n31958. destroy_mitem(mtmp, osym, dmgtyp)\n31959. struct monst *mtmp;\n31960.@@ -4142,5 +4367,169 @@ retry:\n31961. }\n31962. \n31963. #endif /*OVL2*/\n31964.+\n31965.+\n31966.+\n31967.+\n31968.+struct resiobj {\n31969.+\tlong\tmask;\n31970.+\tstruct obj **objp;\n31971.+\tuchar\tobjclass;\n31972.+\tuchar\tobjsubc;\n31973.+};\n31974.+\n31975.+const struct resiobj resiobjtbl[] = {\n31976.+\t/* reversed order */\n31977.+\t{ W_ARMF,    &uarmf,\tARMOR_CLASS,  ARM_BOOTS  },\n31978.+\t{ W_ARMG,    &uarmg,\tARMOR_CLASS,  ARM_GLOVES },\n31979.+\t{ W_ARMH,    &uarmh,\tARMOR_CLASS,  ARM_HELM   },\n31980.+\t{ W_ARM,     &uarm,\tARMOR_CLASS,  ARM_SUIT   },\n31981.+//\t{ W_SWAPWEP, &uswapwep,\tWEAPON_CLASS, 2          },\n31982.+\t{ W_WEP,     &uwep,\tWEAPON_CLASS, 1          },\n31983.+\t{ W_ARMC,    &uarmc,\tARMOR_CLASS,  ARM_CLOAK  },\n31984.+\t{ W_ARMS,    &uarms,\tARMOR_CLASS,  ARM_SHIELD },\n31985.+\t{ W_RINGR,   &uright,\tRING_CLASS,   2          },\n31986.+\t{ W_RINGL,   &uleft,\tRING_CLASS,   1          },\n31987.+\t{ W_AMUL,    &uamul,\tAMULET_CLASS, 0          },\n31988.+\t{ 0, 0, 0, 0 }\n31989.+};\n31990.+\n31991.+void\n31992.+damage_resistant_obj(prop, damval)\n31993.+uchar prop;\n31994.+int damval;\n31995.+{\n31996.+\tlong e = u.uprops[prop].extrinsic;\n31997.+\tint oc1 = 0, oc2 = 0;\n31998.+\tint oldtmp, newtmp = 0;\n31999.+\tconst struct resiobj *tbl;\n32000.+\tstruct obj *otmp;\n32001.+\n32002.+\tif (e & (W_ART|W_ARTI)) return;\t/* artifacts */\n32003.+\n32004.+\tfor ( tbl = resiobjtbl; tbl->mask; tbl++ ) {\n32005.+\t\tif ( e & tbl->mask ) {\n32006.+\t\t\t/* artifacts do not get damaged */\n32007.+\t\t\tif ((*(tbl->objp))->oartifact) return;\n32008.+\t\t\toc1 = tbl->objclass;\n32009.+\t\t\toc2 = tbl->objsubc;\n32010.+\t\t\tbreak;\n32011.+\t\t}\n32012.+\t}\n32013.+\tif ( !oc1 ) return;\t/* there is no object to get damaged */\n32014.+\tif ( oc1 == WEAPON_CLASS && oc2 == 2 && !u.twoweap ) return;\t/* do not count unwield weapon */\n32015.+\n32016.+\tswitch (oc1) {\n32017.+\t    case AMULET_CLASS:\n32018.+\t\tif (prop != ANTIMAGIC && prop != REFLECTING ) break;\n32019.+\t\tif (uamul) {\n32020.+\t\t\tif (uamul->oartifact) break;\n32021.+\t\t\toldtmp = uamul->odamaged;\n32022.+\t\t\tnewtmp = oldtmp + damval;\n32023.+\t\t\tif ( newtmp>100 ) {\n32024.+\t\t\t\tif (Blind) You_feel(\"your medallion breaks in pieces!\");\n32025.+\t\t\t\telse Your(\"medallion glows brightly, and breaks in pieces!\");\n32026.+\t\t\t\totmp = uamul;\n32027.+\t\t\t\tAmulet_off();\n32028.+\t\t\t\tuseup(otmp);\n32029.+\t\t\t\tbreak;\n32030.+\t\t\t} else if ( /*oldtmp<90 &&*/ newtmp>=90 )\n32031.+\t\t\t\tif (!Blind) Your(\"medallion gives a faint glimmer of light!\");\n32032.+\t\t\t\telse Your(\"medallion vibrates violently!\");\n32033.+\t\t\telse if ( oldtmp<75 && newtmp>=75 )\n32034.+\t\t\t\tYour(\"medallion vibrates unexpectedly.\");\n32035.+\t\t\tuamul->odamaged = newtmp;\n32036.+\t\t}\n32037.+\t\tbreak;\n32038.+\t    case ARMOR_CLASS:\n32039.+\t\tswitch (oc2) {\n32040.+\t\t    case ARM_CLOAK:\n32041.+\t\t\tif (uarmc) {\n32042.+\t\t\t\tif (uarmc->oartifact) break;\n32043.+\t\t\t\toldtmp = uarmc->odamaged;\n32044.+\t\t\t\tnewtmp = oldtmp + damval;\n32045.+\t\t\t\tif ( newtmp>100 ) {\n32046.+\t\t\t\t\tif (Blind)\n32047.+\t\t\t\t\t    You_feel(\"your %s is gone away!\", cloak_simple_name(uarmc));\n32048.+\t\t\t\t\telse\n32049.+\t\t\t\t\t    Your(\"%s crumbles and turns to dust!\", cloak_simple_name(uarmc));\n32050.+\t\t\t\t\totmp = uarmc;\n32051.+\t       \t\t\t\t(void) Cloak_off();\n32052.+\t\t\t\t\tuseup(otmp);\n32053.+\t\t\t\t\tbreak;\n32054.+\t\t\t\t} else if ( /*oldtmp<90 &&*/ newtmp>=90 )\n32055.+\t\t\t\t\tYour(\"%s is about to come apart!\", cloak_simple_name(uarmc));\n32056.+\t\t\t\telse if ( oldtmp<75 && newtmp>=75 )\n32057.+\t\t\t\t\tYour(\"%s becomes slightly shabby.\", cloak_simple_name(uarmc));\n32058.+\t\t\t\tuarmc->odamaged = newtmp;\n32059.+\t\t\t}\n32060.+\t\t\tbreak;\n32061.+\t\t    case ARM_SHIELD:\n32062.+\t\t\tif (uarms && uarms->oartifact) break;\n32063.+\t\t\tif (uarms && prop == REFLECTING) {\t/* shield of reflection */\n32064.+\t\t\t\toldtmp = uarms->odamaged;\n32065.+\t\t\t\tnewtmp = oldtmp + damval;\n32066.+\t\t\t\tif ( newtmp>100 ) {\n32067.+\t\t\t\t\tif (!Blind) Your(\"shield is completely tarnished.\");\n32068.+\t\t\t\t\telse You_feel(\"your shield is somewhat helpless.\");\n32069.+\t\t\t\t\totmp = uarms;\n32070.+\t\t\t\t\tShield_off();\n32071.+\t\t\t\t\totmp->otyp = SHIELD;\n32072.+\t\t\t\t\totmp->odamaged = 0;\n32073.+\t\t\t\t\tchange_material(otmp, SILVER);\t/* mere silver shield */\n32074.+\t\t\t\t\tsetworn(otmp, W_ARMS);\n32075.+\t\t\t\t\tbreak;\n32076.+\t\t\t\t} else if ( /*oldtmp<90 &&*/ newtmp>=90 ) {\n32077.+\t\t\t\t    if (!Blind) Your(\"shield looks much duller!\");\n32078.+\t\t\t\t    else Your(\"shield shivers!\");\n32079.+\t\t\t\t} else if ( oldtmp<75 && newtmp>=75 ) {\n32080.+\t\t\t\t    if (!Blind) Your(\"shield looks slightly dull.\");\n32081.+\t\t\t\t    else Your(\"shield shivers slightly.\");\n32082.+\t\t\t\t}\n32083.+\t\t\t\tuarms->odamaged = newtmp;\n32084.+\t\t\t}\n32085.+\t\t\tbreak;\n32086.+\t\t    case ARM_SUIT:\n32087.+\t\t\tif (uarm && uarm->oartifact) break;\n32088.+\t\t\tif (prop != ANTIMAGIC && prop != REFLECTING ) break;\n32089.+\t\t\tif (uarm && Is_dragon_armor(uarm)) {\t/* gray or silver dragon */\n32090.+\t\t\t\tchar buf[BUFSZ];\n32091.+\t\t\t\tint isdm = Is_dragon_mail(uarm);\n32092.+\t\t\t\toldtmp = uarm->odamaged;\n32093.+\t\t\t\tnewtmp = oldtmp + damval;\n32094.+\t\t\t\tSprintf(buf, \"dragon scale%s\", isdm ? \" mail\" : \"s\");\n32095.+\t\t\t\tif ( newtmp>100 ) {\n32096.+\t\t\t\t    if (isdm) {\n32097.+\t\t\t\t\tYour(\"%s seems to lose its power.\", buf);\n32098.+\t\t\t\t\totmp = uarm;\n32099.+\t\t\t\t\tArmor_off();\n32100.+\t\t\t\t\totmp->otyp = PLAIN_DRAGON_SCALE_MAIL;\t/* mere scale mail */\n32101.+\t\t\t\t\totmp->odamaged = 0;\n32102.+\t\t\t\t\tsetworn(otmp, W_ARM);\n32103.+\t\t\t\t    } else {\n32104.+\t\t\t\t\tYour(\"%s crumble and fall apart!\", buf);\n32105.+\t\t\t\t\totmp = uarm;\n32106.+\t\t\t\t\tArmor_off();\n32107.+\t\t\t\t\tuseup(otmp);\n32108.+\t\t\t\t    }\n32109.+\t\t\t\t    break;\n32110.+\t\t\t\t} else if ( /*oldtmp<90 &&*/ newtmp>=90 )\n32111.+\t\t\t\t    Your(\"%s shiver%s!\", buf, isdm ? \"s\" : \"\");\n32112.+\t\t\t\telse if ( oldtmp<75 && newtmp>=75 )\n32113.+\t\t\t\t    Your(\"%s shiver%s slightly.\", buf, isdm ? \"s\" : \"\");\n32114.+\t\t\t\tuarm->odamaged = newtmp;\n32115.+\t\t\t}\n32116.+\t\t\tbreak;\n32117.+\t\t    default:\n32118.+\t\t\tbreak;\n32119.+\t\t}\n32120.+\t\tbreak;\n32121.+\t    default:\n32122.+\t\t/*impossible(\"Damage to strange object???\")*/;\n32123.+\t}\n32124.+\tif (wizard) pline(\"[%d%]\", newtmp);\n32125.+\treturn;\n32126.+}\n32127.+\n32128. \n32129. /*zap.c*/\n```\n\nYou may want to give your attention to the above code that controls gradual wear to items that provide [magic resistance](/wiki/Magic_resistance \"Magic resistance\") or [reflection](/wiki/Reflection \"Reflection\"). The `damage_resistant_obj` function applies damage to an [object](/wiki/Object \"Object\"). As the object resists magic or reflects ray, its damage points will increase.\n\nNote in line 32006 that [artifacts](/wiki/Artifact \"Artifact\") are immune to damage.\n","html":"<!DOCTYPE html>\n<html class=\"client-nojs\" lang=\"en\" dir=\"ltr\">\n<head>\n<meta charset=\"UTF-8\"/>\n<title>NetHack brass as a patch - NetHack Wiki</title>\n<script>document.documentElement.className = document.documentElement.className.replace( /(^|\\s)client-nojs(\\s|$)/, \"$1client-js$2\" );</script>\n<script>(window.RLQ=window.RLQ||[]).push(function(){mw.config.set({\"wgCanonicalNamespace\":\"\",\"wgCanonicalSpecialPageName\":false,\"wgNamespaceNumber\":0,\"wgPageName\":\"NetHack_brass_as_a_patch\",\"wgTitle\":\"NetHack brass as a patch\",\"wgCurRevisionId\":141795,\"wgRevisionId\":141795,\"wgArticleId\":8402,\"wgIsArticle\":true,\"wgIsRedirect\":false,\"wgAction\":\"view\",\"wgUserName\":null,\"wgUserGroups\":[\"*\"],\"wgCategories\":[\"Todo\",\"NGPL\",\"Patches\"],\"wgBreakFrames\":false,\"wgPageContentLanguage\":\"en\",\"wgPageContentModel\":\"wikitext\",\"wgSeparatorTransformTable\":[\"\",\"\"],\"wgDigitTransformTable\":[\"\",\"\"],\"wgDefaultDateFormat\":\"dmy\",\"wgMonthNames\":[\"\",\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"],\"wgMonthNamesShort\":[\"\",\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"],\"wgRelevantPageName\":\"NetHack_brass_as_a_patch\",\"wgRelevantArticleId\":8402,\"wgRequestId\":\"a003663733da9e8350f8e781\",\"wgCSPNonce\":false,\"wgIsProbablyEditable\":false,\"wgRelevantPageIsProbablyEditable\":false,\"wgRestrictionEdit\":[],\"wgRestrictionMove\":[],\"wgWikiEditorEnabledModules\":[],\"wgCategoryTreePageCategoryOptions\":\"{\\\"mode\\\":0,\\\"hideprefix\\\":20,\\\"showcount\\\":true,\\\"namespaces\\\":false}\"});mw.loader.state({\"site.styles\":\"ready\",\"noscript\":\"ready\",\"user.styles\":\"ready\",\"user\":\"ready\",\"user.options\":\"ready\",\"user.tokens\":\"loading\",\"mediawiki.legacy.shared\":\"ready\",\"mediawiki.legacy.commonPrint\":\"ready\",\"mediawiki.toc.styles\":\"ready\",\"mediawiki.skinning.interface\":\"ready\",\"skins.vector.styles\":\"ready\"});mw.loader.implement(\"user.tokens@0tffind\",function($,jQuery,require,module){/*@nomin*/mw.user.tokens.set({\"editToken\":\"+\\\\\",\"patrolToken\":\"+\\\\\",\"watchToken\":\"+\\\\\",\"csrfToken\":\"+\\\\\"});\n});RLPAGEMODULES=[\"site\",\"mediawiki.page.startup\",\"mediawiki.user\",\"mediawiki.page.ready\",\"mediawiki.toc\",\"mediawiki.searchSuggest\",\"skins.vector.js\"];mw.loader.load(RLPAGEMODULES);});</script>\n<link rel=\"stylesheet\" href=\"/load.php?debug=false&amp;lang=en&amp;modules=mediawiki.legacy.commonPrint%2Cshared%7Cmediawiki.skinning.interface%7Cmediawiki.toc.styles%7Cskins.vector.styles&amp;only=styles&amp;skin=vector\"/>\n<script async=\"\" src=\"/load.php?debug=false&amp;lang=en&amp;modules=startup&amp;only=scripts&amp;skin=vector\"></script>\n<meta name=\"ResourceLoaderDynamicStyles\" content=\"\"/>\n<link rel=\"stylesheet\" href=\"/load.php?debug=false&amp;lang=en&amp;modules=site.styles&amp;only=styles&amp;skin=vector\"/>\n<meta name=\"generator\" content=\"MediaWiki 1.32.5\"/>\n<meta name=\"description\" content=\"This page presents NetHack brass as a patch against vanilla NetHack 3.4.3.\"/>\n<link rel=\"image_src\" href=\"/images/6/65/Nethackwiki-logo.png\"/>\n<link rel=\"shortcut icon\" href=\"/images/6/64/Favicon.ico\"/>\n<link rel=\"search\" type=\"application/opensearchdescription+xml\" href=\"/opensearch_desc.php\" title=\"NetHackWiki\"/>\n<link rel=\"EditURI\" type=\"application/rsd+xml\" href=\"https://nethackwiki.com/api.php?action=rsd\"/>\n<link rel=\"canonical\" href=\"/wiki/NetHack_brass_as_a_patch\"/>\n<!--[if lt IE 9]><script src=\"/load.php?debug=false&amp;lang=en&amp;modules=html5shiv&amp;only=scripts&amp;skin=vector&amp;sync=1\"></script><![endif]-->\n</head>\n<body class=\"mediawiki ltr sitedir-ltr mw-hide-empty-elt ns-0 ns-subject page-NetHack_brass_as_a_patch rootpage-NetHack_brass_as_a_patch skin-vector action-view\">\t\t<div id=\"mw-page-base\" class=\"noprint\"></div>\n\t\t<div id=\"mw-head-base\" class=\"noprint\"></div>\n\t\t<div id=\"content\" class=\"mw-body\" role=\"main\">\n\t\t\t<a id=\"top\"></a>\n\t\t\t<div class=\"mw-indicators mw-body-content\">\n</div>\n<h1 id=\"firstHeading\" class=\"firstHeading\" lang=\"en\">NetHack brass as a patch</h1>\t\t\t<div id=\"bodyContent\" class=\"mw-body-content\">\n\t\t\t\t<div id=\"siteSub\" class=\"noprint\">From NetHackWiki</div>\t\t\t\t<div id=\"contentSub\"></div>\n\t\t\t\t<div id=\"jump-to-nav\"></div>\t\t\t\t<a class=\"mw-jump-link\" href=\"#mw-head\">Jump to navigation</a>\n\t\t\t\t<a class=\"mw-jump-link\" href=\"#p-search\">Jump to search</a>\n\t\t\t\t<div id=\"mw-content-text\" lang=\"en\" dir=\"ltr\" class=\"mw-content-ltr\"><div class=\"mw-parser-output\"><div class=\"thumb tright\">\n<table class=\"prettytable\" style=\"margin:0\">\n<tbody><tr>\n<th colspan=\"2\"><b>NetHack brass as a patch</b>\n</th></tr>\n<tr>\n<th>Author\n</th>\n<td>Code by Youkan<br />Patch from <a href=\"/wiki/User:Kernigh\" title=\"User:Kernigh\">Kernigh</a>\n</td></tr>\n<tr>\n<th>Download\n</th>\n<td><a class=\"external text\" href=\"http://kernigh.pbwiki.com/f/brass-040923.diff\">link</a>\n</td></tr>\n<tr>\n<th><a href=\"/wiki/NetHack_Patch_Database\" title=\"NetHack Patch Database\">NetHack PatchDB</a>\n</th>\n<td style=\"background-color: #ccffcc;\"><a class=\"external text\" href=\"http://nhpatchdb.alt.org/?279\">279</a>\n</td></tr></tbody></table>\n</div>\n<p>This page presents <a href=\"/wiki/NetHack_brass\" title=\"NetHack brass\">NetHack brass</a> as a <a href=\"/wiki/Patch\" title=\"Patch\">patch</a> against vanilla <a href=\"/wiki/NetHack_3.4.3\" title=\"NetHack 3.4.3\">NetHack 3.4.3</a>.\n</p><p><a href=\"/wiki/User:Kernigh\" title=\"User:Kernigh\">Kernigh</a> used the <a href=\"/wiki/Diff\" title=\"Diff\">diff</a> program to generate this \"unified diff\" between NetHack 3.4.3 and NetHack brass 040923 after pruning some files from the 040923. In particular, Youkan's zip of the 040923 source code was not clean of generated files created during the build process on <a href=\"/wiki/Microsoft_Windows\" title=\"Microsoft Windows\">Microsoft Windows</a>, including some Windows executables. Youkan's zip also contains old versions of some of the <a href=\"/wiki/Dungeon\" title=\"Dungeon\">dungeon</a> files, with DOS batch (*.bat) scripts to enable them.\n</p><p>The patch presented here contains neither the Windows-generated files, nor the old dungeons and DOS batch script. After applying this patch to the vanilla sources, <a href=\"/wiki/You\" class=\"mw-redirect\" title=\"You\">you</a> do have everything needed to build NetHack brass 040923 from source code. If you are building upon <a href=\"/wiki/Unix\" title=\"Unix\">Unix</a>, then you also want the <a href=\"/wiki/Brass_interface_patch\" title=\"Brass interface patch\">brass interface patch</a>, or at least the Unix fixes from that patch.\n</p><p>Download the patch from:\n</p>\n<dl><dd><a class=\"external free\" href=\"http://kernigh.pbwiki.com/f/brass-040923.diff\">http://kernigh.pbwiki.com/f/brass-040923.diff</a></dd></dl>\n<div class=\"todo\">\n<p>A user has suggested improving this page or section as follows:\n</p><p><i>\"Merge this into the main NetHack brass page. Additionally someone who still has the diff file should upload it and replace this now-dead link.\"</i>\n</p>\n</div>\n<div id=\"toc\" class=\"toc\"><input type=\"checkbox\" role=\"button\" id=\"toctogglecheckbox\" class=\"toctogglecheckbox\" style=\"display:none\" /><div class=\"toctitle\" lang=\"en\" dir=\"ltr\"><h2>Contents</h2><span class=\"toctogglespan\"><label class=\"toctogglelabel\" for=\"toctogglecheckbox\"></label></span></div>\n<ul>\n<li class=\"toclevel-1 tocsection-1\"><a href=\"#Files_patched\"><span class=\"tocnumber\">1</span> <span class=\"toctext\">Files patched</span></a></li>\n<li class=\"toclevel-1 tocsection-2\"><a href=\"#Changes_to_some_source_files\"><span class=\"tocnumber\">2</span> <span class=\"toctext\">Changes to some source files</span></a>\n<ul>\n<li class=\"toclevel-2 tocsection-3\"><a href=\"#artifact.h\"><span class=\"tocnumber\">2.1</span> <span class=\"toctext\">artifact.h</span></a></li>\n<li class=\"toclevel-2 tocsection-4\"><a href=\"#artilist.h\"><span class=\"tocnumber\">2.2</span> <span class=\"toctext\">artilist.h</span></a></li>\n<li class=\"toclevel-2 tocsection-5\"><a href=\"#attrib.h\"><span class=\"tocnumber\">2.3</span> <span class=\"toctext\">attrib.h</span></a></li>\n<li class=\"toclevel-2 tocsection-6\"><a href=\"#config.h\"><span class=\"tocnumber\">2.4</span> <span class=\"toctext\">config.h</span></a></li>\n<li class=\"toclevel-2 tocsection-7\"><a href=\"#display.h\"><span class=\"tocnumber\">2.5</span> <span class=\"toctext\">display.h</span></a></li>\n<li class=\"toclevel-2 tocsection-8\"><a href=\"#obj.h\"><span class=\"tocnumber\">2.6</span> <span class=\"toctext\">obj.h</span></a></li>\n<li class=\"toclevel-2 tocsection-9\"><a href=\"#zap.c\"><span class=\"tocnumber\">2.7</span> <span class=\"toctext\">zap.c</span></a></li>\n</ul>\n</li>\n</ul>\n</div>\n\n<h2><span class=\"mw-headline\" id=\"Files_patched\">Files patched</span></h2>\n<ul><li><tt>dat/*.des</tt>\n<ul><li>Most objects are made from normal material <tt>mat_normal</tt> to handle a change in the <a href=\"/wiki/Des-file_format\" title=\"Des-file format\">des-file format</a>.</li>\n<li>Changes to the maps of the <a href=\"/wiki/Quest\" title=\"Quest\">Quest</a> levels for the <a href=\"/wiki/Monk\" title=\"Monk\">Monk</a>, attributed to Bill Foust.</li>\n<li>Many, many changes at the <a href=\"/wiki/Castle\" title=\"Castle\">Castle</a> and below, including a serious redesign of <a href=\"/wiki/Gehennom\" title=\"Gehennom\">Gehennom</a>.</li></ul></li>\n<li><tt>dat/rumor.{fal,tru}</tt>\n<ul><li>This rumor becomes false: \"They say that you can't break an amulet of reflection.\"</li></ul></li>\n<li>Numerous changes to source files.</li></ul>\n<p>Note that the source files do contain several instances of <tt>//</tt> style comments. This comment syntax, borrowed from C++, may not work in compilers older than C99. Some C compilers (including GCC) supported <tt>//</tt> comments in C before C99.\n</p>\n<h2><span class=\"mw-headline\" id=\"Changes_to_some_source_files\">Changes to some source files</span></h2>\n<p>Here are some excerpts of changes to <i>some</i> but not all of the source files. These might be useful for those wanting to study the differences between vanilla and NetHack brass.\n</p><p>The line numbers are those of the diff file.\n</p>\n<div class=\"license_ngpl\">\n<p><i>The <a href=\"/wiki/NetHack_General_Public_License\" title=\"NetHack General Public License\">NetHack General Public License</a> applies to screenshots, source code and other content from NetHack.</i>\n</p><p>This content was modified from the original NetHack source code distribution (by splitting up NetHack content between wiki pages, and possibly further editing). See the <span class=\"plainlinks\"><a class=\"external text\" href=\"https://nethackwiki.com/index.php?title=NetHack_brass_as_a_patch&amp;action=history\">page history</a></span> for a list of who changed it, and on what dates.\n</p>\n</div>\n<h3><span class=\"mw-headline\" id=\"artifact.h\">artifact.h</span></h3>\n<pre><span id=\"line2079\">2079. diff -pruN nethack-3.4.3/include/<a href=\"/wiki/Artifact.h\" class=\"mw-redirect\" title=\"Artifact.h\">artifact.h</a> nhbrass-040923/include/artifact.h</span>\n<span id=\"line2080\">2080. --- nethack-3.4.3/include/artifact.h\tSun Dec  7 18:39:13 2003</span>\n<span id=\"line2081\">2081. +++ nhbrass-040923/include/artifact.h\tThu Oct 16 09:05:02 2003</span>\n<span id=\"line2082\">2082. @@ -38,12 +38,13 @@</span>\n<span id=\"line2083\">2083.  </span>\n<span id=\"line2084\">2084.  struct artifact {</span>\n<span id=\"line2085\">2085.  \tshort\t    otyp;</span>\n<span id=\"line2086\">2086. -\tconst char  *name;</span>\n<span id=\"line2087\">2087. +\t/*const*/ char  *name;</span>\n<span id=\"line2088\">2088.  \tunsigned long spfx;\t/* special effect from wielding/wearing */</span>\n<span id=\"line2089\">2089.  \tunsigned long cspfx;\t/* special effect just from carrying obj */</span>\n<span id=\"line2090\">2090.  \tunsigned long mtype;\t/* monster type, symbol, or flag */</span>\n<span id=\"line2091\">2091.  \tstruct attack attk, defn, cary;</span>\n<span id=\"line2092\">2092.  \tuchar\t    inv_prop;\t/* property obtained by invoking artifact */</span>\n<span id=\"line2093\">2093. +\tuchar\t    material;\t/* if artifact is made of special material */</span>\n<span id=\"line2094\">2094.  \taligntyp    alignment;\t/* alignment of bequeathing gods */</span>\n<span id=\"line2095\">2095.  \tshort\t    role;\t/* character role associated with */</span>\n<span id=\"line2096\">2096.  \tshort\t    race;\t/* character race associated with */</span>\n<span id=\"line2097\">2097. @@ -60,5 +61,13 @@ struct artifact {</span>\n<span id=\"line2098\">2098.  #define CREATE_PORTAL\t(LAST_PROP+7)</span>\n<span id=\"line2099\">2099.  #define ENLIGHTENING\t(LAST_PROP+8)</span>\n<span id=\"line2100\">2100.  #define CREATE_AMMO\t(LAST_PROP+9)</span>\n<span id=\"line2101\">2101. +#define EMIT_LIGHT\t(LAST_PROP+10)</span>\n<span id=\"line2102\">2102. +</span>\n<span id=\"line2103\">2103. +/* additional alighment */</span>\n<span id=\"line2104\">2104. +#define\tA_CROSSALIGNED\t(-127)</span>\n<span id=\"line2105\">2105. +</span>\n<span id=\"line2106\">2106. +/* special damage bonus identifiers */</span>\n<span id=\"line2107\">2107. +#define ADMG_DOUBLE\t255</span>\n<span id=\"line2108\">2108. +#define ADMG_MAX\t254</span>\n<span id=\"line2109\">2109.  </span>\n<span id=\"line2110\">2110.  #endif /* ARTIFACT_H */</span>\n</pre>\n<h3><span class=\"mw-headline\" id=\"artilist.h\">artilist.h</span></h3>\n<pre><span id=\"line2111\">2111. diff -pruN nethack-3.4.3/include/artilist.h nhbrass-040923/include/<a href=\"/wiki/Artilist.h\" class=\"mw-redirect\" title=\"Artilist.h\">artilist.h</a></span>\n<span id=\"line2112\">2112. --- nethack-3.4.3/include/artilist.h\tSun Dec  7 18:39:13 2003</span>\n<span id=\"line2113\">2113. +++ nhbrass-040923/include/artilist.h\tSun Jan  4 01:41:00 2004</span>\n<span id=\"line2114\">2114. @@ -5,14 +5,14 @@</span>\n<span id=\"line2115\">2115.  #ifdef MAKEDEFS_C</span>\n<span id=\"line2116\">2116.  /* in makedefs.c, all we care about is the list of names */</span>\n<span id=\"line2117\">2117.  </span>\n<span id=\"line2118\">2118. -#define A(nam,typ,s1,s2,mt,atk,dfn,cry,inv,al,cl,rac,cost) nam</span>\n<span id=\"line2119\">2119. +#define A(nam,typ,mat,s1,s2,mt,atk,dfn,cry,inv,al,cl,rac,cost) nam</span>\n<span id=\"line2120\">2120.  </span>\n<span id=\"line2121\">2121.  static const char *artifact_names[] = {</span>\n<span id=\"line2122\">2122.  #else</span>\n<span id=\"line2123\">2123.  /* in artifact.c, set up the actual artifact list structure */</span>\n<span id=\"line2124\">2124.  </span>\n<span id=\"line2125\">2125. -#define A(nam,typ,s1,s2,mt,atk,dfn,cry,inv,al,cl,rac,cost) \\</span>\n<span id=\"line2126\">2126. - { typ, nam, s1, s2, mt, atk, dfn, cry, inv, al, cl, rac, cost }</span>\n<span id=\"line2127\">2127. +#define A(nam,typ,mat,s1,s2,mt,atk,dfn,cry,inv,al,cl,rac,cost) \\</span>\n<span id=\"line2128\">2128. + { typ, nam, s1, s2, mt, atk, dfn, cry, inv, mat, al, cl, rac, cost }</span>\n<span id=\"line2129\">2129.  </span>\n<span id=\"line2130\">2130.  #define     NO_ATTK\t{0,0,0,0}\t\t/* no attack */</span>\n<span id=\"line2131\">2131.  #define     NO_DFNS\t{0,0,0,0}\t\t/* no defense */</span>\n<span id=\"line2132\">2132. @@ -35,42 +35,55 @@ STATIC_OVL NEARDATA struct artifact arti</span>\n<span id=\"line2133\">2133.   * 3.  Chaotic artifacts are inflated due to scarcity (and balance).</span>\n<span id=\"line2134\">2134.   */</span>\n<span id=\"line2135\">2135.  </span>\n<span id=\"line2136\">2136. +/* Arc\t---\t\t*/</span>\n<span id=\"line2137\">2137. +/* Bar\tCleaver\t\t*/</span>\n<span id=\"line2138\">2138. +/* Cav\tSkullcrusher\t*/</span>\n<span id=\"line2139\">2139. +/* Hea\t---\t\t*/</span>\n<span id=\"line2140\">2140. +/* Kni\tExcalibur\t*/</span>\n<span id=\"line2141\">2141. +/* Mon\t---\t\t*/</span>\n<span id=\"line2142\">2142. +/* Pri\tDisrupter\t*/</span>\n<span id=\"line2143\">2143. +/* Ran\t---\t\t*/</span>\n<span id=\"line2144\">2144. +/* Rog\t---\t\t*/</span>\n<span id=\"line2145\">2145. +/* Sam\tSnickersnee\t*/</span>\n<span id=\"line2146\">2146. +/* Tou\t---\t\t*/</span>\n<span id=\"line2147\">2147. +/* Val\tMjollnir\t*/</span>\n<span id=\"line2148\">2148. +/* Wiz\tMagicbane\t*/</span>\n<span id=\"line2149\">2149.  </span>\n<span id=\"line2150\">2150.  /*  dummy element #0, so that all interesting indices are non-zero */</span>\n<span id=\"line2151\">2151. -A(\"\",\t\t\t\tSTRANGE_OBJECT,</span>\n<span id=\"line2152\">2152. +A(\"\",\t\t\t\tSTRANGE_OBJECT,\t0,</span>\n<span id=\"line2153\">2153.  \t0, 0, 0, NO_ATTK, NO_DFNS, NO_CARY, 0, A_NONE, NON_PM, NON_PM, 0L ),</span>\n<span id=\"line2154\">2154.  </span>\n<span id=\"line2155\">2155. -A(\"Excalibur\",\t\t\tLONG_SWORD,</span>\n<span id=\"line2156\">2156. +A(\"Excalibur\",\t\t\tLONG_SWORD,\tMETAL,</span>\n<span id=\"line2157\">2157.  \t(SPFX_NOGEN|SPFX_RESTR|SPFX_SEEK|SPFX_DEFN|SPFX_INTEL|SPFX_SEARCH),0,0,</span>\n<span id=\"line2158\">2158.  \tPHYS(5,10),\tDRLI(0,0),\tNO_CARY,\t0, A_LAWFUL, PM_KNIGHT, NON_PM, 4000L ),</span>\n<span id=\"line2159\">2159.  /*</span>\n<span id=\"line2160\">2160.   *\tStormbringer only has a 2 because it can drain a level,</span>\n<span id=\"line2161\">2161.   *\tproviding 8 more.</span>\n<span id=\"line2162\">2162.   */</span>\n<span id=\"line2163\">2163. -A(\"Stormbringer\",\t\tRUNESWORD,</span>\n<span id=\"line2164\">2164. +A(\"Stormbringer\",\t\tRUNESWORD,\t0,</span>\n<span id=\"line2165\">2165.  \t(SPFX_RESTR|SPFX_ATTK|SPFX_DEFN|SPFX_INTEL|SPFX_DRLI), 0, 0,</span>\n<span id=\"line2166\">2166.  \tDRLI(5,2),\tDRLI(0,0),\tNO_CARY,\t0, A_CHAOTIC, NON_PM, NON_PM, 8000L ),</span>\n<span id=\"line2167\">2167.  /*</span>\n<span id=\"line2168\">2168.   *\tMjollnir will return to the hand of the wielder when thrown</span>\n<span id=\"line2169\">2169.   *\tif the wielder is a Valkyrie wearing Gauntlets of Power.</span>\n<span id=\"line2170\">2170.   */</span>\n<span id=\"line2171\">2171. -A(\"Mjollnir\",\t\t\tWAR_HAMMER,\t\t/* Mjo:llnir */</span>\n<span id=\"line2172\">2172. +A(\"Mjollnir\",\t\t\tHEAVY_HAMMER,\t0,\t/* Mjo:llnir */</span>\n<span id=\"line2173\">2173.  \t(SPFX_RESTR|SPFX_ATTK),  0, 0,</span>\n<span id=\"line2174\">2174. -\tELEC(5,24),\tNO_DFNS,\tNO_CARY,\t0, A_NEUTRAL, PM_VALKYRIE, NON_PM, 4000L ),</span>\n<span id=\"line2175\">2175. +\tELEC(0,20),\tNO_DFNS,\tNO_CARY,\t0, A_NEUTRAL, PM_VALKYRIE, NON_PM, 4000L ),</span>\n<span id=\"line2176\">2176.  </span>\n<span id=\"line2177\">2177. -A(\"Cleaver\",\t\t\tBATTLE_AXE,</span>\n<span id=\"line2178\">2178. +A(\"Cleaver\",\t\t\tBATTLE_AXE,\t0,</span>\n<span id=\"line2179\">2179.  \tSPFX_RESTR, 0, 0,</span>\n<span id=\"line2180\">2180. -\tPHYS(3,6),\tNO_DFNS,\tNO_CARY,\t0, A_NEUTRAL, PM_BARBARIAN, NON_PM, 1500L ),</span>\n<span id=\"line2181\">2181. +\tPHYS(3,10),\tNO_DFNS,\tNO_CARY,\t0, A_NEUTRAL, PM_BARBARIAN, NON_PM, 1500L ),</span>\n<span id=\"line2182\">2182.  </span>\n<span id=\"line2183\">2183. -A(\"Grimtooth\",\t\t\tORCISH_DAGGER,</span>\n<span id=\"line2184\">2184. +A(\"Grimtooth\",\t\t\tORCISH_DAGGER,\t0,</span>\n<span id=\"line2185\">2185.  \tSPFX_RESTR, 0, 0,</span>\n<span id=\"line2186\">2186.  \tPHYS(2,6),\tNO_DFNS,\tNO_CARY,\t0, A_CHAOTIC, NON_PM, PM_ORC, 300L ),</span>\n<span id=\"line2187\">2187.  /*</span>\n<span id=\"line2188\">2188.   *\tOrcrist and Sting have same alignment as elves.</span>\n<span id=\"line2189\">2189.   */</span>\n<span id=\"line2190\">2190. -A(\"Orcrist\",\t\t\tELVEN_BROADSWORD,</span>\n<span id=\"line2191\">2191. -\tSPFX_DFLAG2, 0, M2_ORC,</span>\n<span id=\"line2192\">2192. -\tPHYS(5,0),\tNO_DFNS,\tNO_CARY,\t0, A_CHAOTIC, NON_PM, PM_ELF, 2000L ),</span>\n<span id=\"line2193\">2193. +A(\"Orcrist\",\t\t\tELVEN_BROADSWORD,\t0,</span>\n<span id=\"line2194\">2194. +\t(SPFX_WARN|SPFX_DFLAG2), 0, M2_ORC,</span>\n<span id=\"line2195\">2195. +\tPHYS(15,ADMG_DOUBLE),\tNO_DFNS,\tNO_CARY,\t0, A_CHAOTIC, NON_PM, PM_ELF, 2000L ),</span>\n<span id=\"line2196\">2196.  </span>\n<span id=\"line2197\">2197.  /*</span>\n<span id=\"line2198\">2198.   *\tThe combination of SPFX_WARN and M2_something on an artifact</span>\n<span id=\"line2199\">2199. @@ -78,60 +91,72 @@ A(\"Orcrist\",\t\t\tELVEN_BROADSWORD,</span>\n<span id=\"line2200\">2200.   *\tM2_something flags.  In Sting's case it will trigger EWarn_of_mon</span>\n<span id=\"line2201\">2201.   *\tfor M2_ORC monsters.</span>\n<span id=\"line2202\">2202.   */</span>\n<span id=\"line2203\">2203. -A(\"Sting\",\t\t\tELVEN_DAGGER,</span>\n<span id=\"line2204\">2204. +A(\"Sting\",\t\t\tELVEN_DAGGER,\t0,</span>\n<span id=\"line2205\">2205.  \t(SPFX_WARN|SPFX_DFLAG2), 0, M2_ORC,</span>\n<span id=\"line2206\">2206. -\tPHYS(5,0),\tNO_DFNS,\tNO_CARY,\t0, A_CHAOTIC, NON_PM, PM_ELF, 800L ),</span>\n<span id=\"line2207\">2207. +\tPHYS(15,ADMG_DOUBLE),\tNO_DFNS,\tNO_CARY,\t0, A_CHAOTIC, NON_PM, PM_ELF, 800L ),</span>\n<span id=\"line2208\">2208.  /*</span>\n<span id=\"line2209\">2209.   *\tMagicbane is a bit different!  Its magic fanfare</span>\n<span id=\"line2210\">2210.   *\tunbalances victims in addition to doing some damage.</span>\n<span id=\"line2211\">2211.   */</span>\n<span id=\"line2212\">2212. -A(\"Magicbane\",\t\t\tATHAME,</span>\n<span id=\"line2213\">2213. +A(\"Magicbane\",\t\t\tATHAME,\t0,</span>\n<span id=\"line2214\">2214.  \t(SPFX_RESTR|SPFX_ATTK|SPFX_DEFN), 0, 0,</span>\n<span id=\"line2215\">2215.  \tSTUN(3,4),\tDFNS(AD_MAGM),\tNO_CARY,\t0, A_NEUTRAL, PM_WIZARD, NON_PM, 3500L ),</span>\n<span id=\"line2216\">2216.  </span>\n<span id=\"line2217\">2217. -A(\"Frost Brand\",\t\tLONG_SWORD,</span>\n<span id=\"line2218\">2218. +A(\"Disrupter\",\t\t\tMACE,\tSILVER,</span>\n<span id=\"line2219\">2219. +\t(SPFX_RESTR|SPFX_DFLAG2), 0, M2_UNDEAD,</span>\n<span id=\"line2220\">2220. +\tPHYS(10,30),\tNO_DFNS,\tNO_CARY,\t0, A_NONE, PM_PRIEST, NON_PM, 2000L ),</span>\n<span id=\"line2221\">2221. +</span>\n<span id=\"line2222\">2222. +A(\"Skullcrusher\",\t\t\tCLUB,\tBONE,</span>\n<span id=\"line2223\">2223. +\t(SPFX_RESTR|SPFX_ATTK), 0, 0,</span>\n<span id=\"line2224\">2224. +\tPHYS(3,15),\tNO_DFNS,\tNO_CARY,\t0, A_NONE, PM_CAVEMAN, NON_PM, 1000L ),</span>\n<span id=\"line2225\">2225. +</span>\n<span id=\"line2226\">2226. +A(\"Frost Brand\",\t\tLONG_SWORD,\t0,</span>\n<span id=\"line2227\">2227.  \t(SPFX_RESTR|SPFX_ATTK|SPFX_DEFN), 0, 0,</span>\n<span id=\"line2228\">2228. -\tCOLD(5,0),\tCOLD(0,0),\tNO_CARY,\t0, A_NONE, NON_PM, NON_PM, 3000L ),</span>\n<span id=\"line2229\">2229. +\tCOLD(5,ADMG_DOUBLE),\tCOLD(0,0),\tNO_CARY,\t0, A_NONE, NON_PM, NON_PM, 3000L ),</span>\n<span id=\"line2230\">2230.  </span>\n<span id=\"line2231\">2231. -A(\"Fire Brand\",\t\t\tLONG_SWORD,</span>\n<span id=\"line2232\">2232. +A(\"Fire Brand\",\t\t\tLONG_SWORD,\t0,</span>\n<span id=\"line2233\">2233.  \t(SPFX_RESTR|SPFX_ATTK|SPFX_DEFN), 0, 0,</span>\n<span id=\"line2234\">2234. -\tFIRE(5,0),\tFIRE(0,0),\tNO_CARY,\t0, A_NONE, NON_PM, NON_PM, 3000L ),</span>\n<span id=\"line2235\">2235. +\tFIRE(5,ADMG_DOUBLE),\tFIRE(0,0),\tNO_CARY,\t0, A_NONE, NON_PM, NON_PM, 3000L ),</span>\n<span id=\"line2236\">2236.  </span>\n<span id=\"line2237\">2237. -A(\"Dragonbane\",\t\t\tBROADSWORD,</span>\n<span id=\"line2238\">2238. -\t(SPFX_RESTR|SPFX_DCLAS), 0, S_DRAGON,</span>\n<span id=\"line2239\">2239. -\tPHYS(5,0),\tNO_DFNS,\tNO_CARY,\t0, A_NONE, NON_PM, NON_PM, 500L ),</span>\n<span id=\"line2240\">2240. +A(\"Dragonslayer\",\t\tBROADSWORD,\t0,</span>\n<span id=\"line2241\">2241. +\t(SPFX_RESTR|SPFX_DCLAS|SPFX_REFLECT), 0, S_DRAGON,</span>\n<span id=\"line2242\">2242. +\tPHYS(10,ADMG_DOUBLE),\tNO_DFNS,\tNO_CARY,\t0, A_NONE, NON_PM, NON_PM, 2500L ),</span>\n<span id=\"line2243\">2243.  </span>\n<span id=\"line2244\">2244. -A(\"Demonbane\",\t\t\tLONG_SWORD,</span>\n<span id=\"line2245\">2245. +A(\"Demonbane\",\t\t\tLONG_SWORD,\tSILVER,</span>\n<span id=\"line2246\">2246.  \t(SPFX_RESTR|SPFX_DFLAG2), 0, M2_DEMON,</span>\n<span id=\"line2247\">2247. -\tPHYS(5,0),\tNO_DFNS,\tNO_CARY,\t0, A_LAWFUL, NON_PM, NON_PM, 2500L ),</span>\n<span id=\"line2248\">2248. +\tPHYS(10,ADMG_DOUBLE),\tNO_DFNS,\tNO_CARY,\t0, A_LAWFUL, NON_PM, NON_PM, 2500L ),</span>\n<span id=\"line2249\">2249.  </span>\n<span id=\"line2250\">2250. -A(\"Werebane\",\t\t\tSILVER_SABER,</span>\n<span id=\"line2251\">2251. +A(\"Werebane\",\t\t\tREVOLVER,\t0,</span>\n<span id=\"line2252\">2252.  \t(SPFX_RESTR|SPFX_DFLAG2), 0, M2_WERE,</span>\n<span id=\"line2253\">2253. -\tPHYS(5,0),\tDFNS(AD_WERE),\tNO_CARY,\t0, A_NONE, NON_PM, NON_PM, 1500L ),</span>\n<span id=\"line2254\">2254. -</span>\n<span id=\"line2255\">2255. -A(\"Grayswandir\",\t\tSILVER_SABER,</span>\n<span id=\"line2256\">2256. +\tPHYS(20,ADMG_DOUBLE),\tDFNS(AD_WERE),\tNO_CARY,</span>\n<span id=\"line2257\">2257. +\tCREATE_AMMO, A_NONE, NON_PM, NON_PM, 5000L ),</span>\n<span id=\"line2258\">2258. +A(\"Grayswandir\",\t\tSABER,\t\tSILVER,</span>\n<span id=\"line2259\">2259.  \t(SPFX_RESTR|SPFX_HALRES), 0, 0,</span>\n<span id=\"line2260\">2260. -\tPHYS(5,0),\tNO_DFNS,\tNO_CARY,\t0, A_LAWFUL, NON_PM, NON_PM, 8000L ),</span>\n<span id=\"line2261\">2261. +\tPHYS(3,12),\tNO_DFNS,\tNO_CARY,\t0, A_LAWFUL, NON_PM, NON_PM, 8000L ),</span>\n<span id=\"line2262\">2262.  </span>\n<span id=\"line2263\">2263. -A(\"Giantslayer\",\t\tLONG_SWORD,</span>\n<span id=\"line2264\">2264. +A(\"Quick Blade\",\t\tELVEN_SHORT_SWORD,\t0,</span>\n<span id=\"line2265\">2265. +\tSPFX_RESTR,\t\t  0, 0,</span>\n<span id=\"line2266\">2266. +\tPHYS(10,0),\tNO_DFNS,\tNO_CARY,\t0, A_NONE, NON_PM, NON_PM, 1500L ),</span>\n<span id=\"line2267\">2267. +</span>\n<span id=\"line2268\">2268. +A(\"Giantkiller\",\t\tTWO_HANDED_SWORD,\t0,</span>\n<span id=\"line2269\">2269.  \t(SPFX_RESTR|SPFX_DFLAG2), 0, M2_GIANT,</span>\n<span id=\"line2270\">2270. -\tPHYS(5,0),\tNO_DFNS,\tNO_CARY,\t0, A_NEUTRAL, NON_PM, NON_PM, 200L ),</span>\n<span id=\"line2271\">2271. +\tPHYS(15,ADMG_DOUBLE),\tNO_DFNS,\tNO_CARY,\t0, A_NEUTRAL, NON_PM, NON_PM, 200L ),</span>\n<span id=\"line2272\">2272.  </span>\n<span id=\"line2273\">2273. -A(\"Ogresmasher\",\t\tWAR_HAMMER,</span>\n<span id=\"line2274\">2274. +A(\"Ogresmasher\",\t\tLUCERN_HAMMER,\t0,</span>\n<span id=\"line2275\">2275.  \t(SPFX_RESTR|SPFX_DCLAS), 0, S_OGRE,</span>\n<span id=\"line2276\">2276. -\tPHYS(5,0),\tNO_DFNS,\tNO_CARY,\t0, A_NONE, NON_PM, NON_PM, 200L ),</span>\n<span id=\"line2277\">2277. +\tPHYS(15,ADMG_DOUBLE),\tNO_DFNS,\tNO_CARY,\t0, A_NONE, NON_PM, NON_PM, 200L ),</span>\n<span id=\"line2278\">2278.  </span>\n<span id=\"line2279\">2279. -A(\"Trollsbane\",\t\t\tMORNING_STAR,</span>\n<span id=\"line2280\">2280. +A(\"Trollsbane\",\t\t\tMORNING_STAR,\t0,</span>\n<span id=\"line2281\">2281.  \t(SPFX_RESTR|SPFX_DCLAS), 0, S_TROLL,</span>\n<span id=\"line2282\">2282. -\tPHYS(5,0),\tNO_DFNS,\tNO_CARY,\t0, A_NONE, NON_PM, NON_PM, 200L ),</span>\n<span id=\"line2283\">2283. +\tPHYS(15,ADMG_DOUBLE),\tNO_DFNS,\tNO_CARY,\t0, A_NONE, NON_PM, NON_PM, 800L ),</span>\n<span id=\"line2284\">2284.  /*</span>\n<span id=\"line2285\">2285.   *\tTwo problems:  1) doesn't let trolls regenerate heads,</span>\n<span id=\"line2286\">2286.   *\t2) doesn't give unusual message for 2-headed monsters (but</span>\n<span id=\"line2287\">2287.   *\tallowing those at all causes more problems than worth the effort).</span>\n<span id=\"line2288\">2288.   */</span>\n<span id=\"line2289\">2289. -A(\"Vorpal Blade\",\t\tLONG_SWORD,</span>\n<span id=\"line2290\">2290. +A(\"Vorpal Blade\",\t\tLONG_SWORD,\t0,</span>\n<span id=\"line2291\">2291.  \t(SPFX_RESTR|SPFX_BEHEAD), 0, 0,</span>\n<span id=\"line2292\">2292. -\tPHYS(5,1),\tNO_DFNS,\tNO_CARY,\t0, A_NEUTRAL, NON_PM, NON_PM, 4000L ),</span>\n<span id=\"line2293\">2293. +\tPHYS(15,0),\tNO_DFNS,\tNO_CARY,\t0, A_NEUTRAL, NON_PM, NON_PM, 4000L ),</span>\n<span id=\"line2294\">2294.  /*</span>\n<span id=\"line2295\">2295.   *\tAh, never shall I forget the cry,</span>\n<span id=\"line2296\">2296.   *\t\tor the shriek that shrieked he,</span>\n<span id=\"line2297\">2297. @@ -140,101 +165,122 @@ A(\"Vorpal Blade\",\t\tLONG_SWORD,</span>\n<span id=\"line2298\">2298.   *\t\t\t--Koko, Lord high executioner of Titipu</span>\n<span id=\"line2299\">2299.   *\t\t\t  (From Sir W.S. Gilbert's \"The Mikado\")</span>\n<span id=\"line2300\">2300.   */</span>\n<span id=\"line2301\">2301. -A(\"Snickersnee\",\t\tKATANA,</span>\n<span id=\"line2302\">2302. +A(\"Snickersnee\",\t\tKATANA,\t0,</span>\n<span id=\"line2303\">2303.  \tSPFX_RESTR, 0, 0,</span>\n<span id=\"line2304\">2304. -\tPHYS(0,8),\tNO_DFNS,\tNO_CARY,\t0, A_LAWFUL, PM_SAMURAI, NON_PM, 1200L ),</span>\n<span id=\"line2305\">2305. +\tPHYS(10,8),\tNO_DFNS,\tNO_CARY,\t0, A_LAWFUL, PM_SAMURAI, NON_PM, 1200L ),</span>\n<span id=\"line2306\">2306.  </span>\n<span id=\"line2307\">2307. -A(\"Sunsword\",\t\t\tLONG_SWORD,</span>\n<span id=\"line2308\">2308. +A(\"Sunsword\",\t\t\tLONG_SWORD,\t0,</span>\n<span id=\"line2309\">2309.  \t(SPFX_RESTR|SPFX_DFLAG2), 0, M2_UNDEAD,</span>\n<span id=\"line2310\">2310. -\tPHYS(5,0),\tDFNS(AD_BLND),\tNO_CARY,\t0, A_LAWFUL, NON_PM, NON_PM, 1500L ),</span>\n<span id=\"line2311\">2311. +\tPHYS(10,ADMG_DOUBLE),\tDFNS(AD_BLND),\tNO_CARY,</span>\n<span id=\"line2312\">2312. +\tEMIT_LIGHT, A_LAWFUL, NON_PM, NON_PM, 1500L ),</span>\n<span id=\"line2313\">2313. +/*</span>\n<span id=\"line2314\">2314. + *\tArtifact gloves for Monks</span>\n<span id=\"line2315\">2315. + */</span>\n<span id=\"line2316\">2316. +A(\"Gauntlets of Defence\",\tGAUNTLETS_OF_DEXTERITY,\t0,</span>\n<span id=\"line2317\">2317. +\t(SPFX_RESTR|SPFX_HPHDAM|SPFX_INTEL), 0, 0,</span>\n<span id=\"line2318\">2318. +\tNO_ATTK,\tNO_DFNS,\tNO_CARY,</span>\n<span id=\"line2319\">2319. +\t0,\t\tA_CROSSALIGNED, PM_MONK, NON_PM, 2000L ),</span>\n<span id=\"line2320\">2320.  </span>\n<span id=\"line2321\">2321. +A(\"Fist of Fury\",\t\tGAUNTLETS,\tSILVER,</span>\n<span id=\"line2322\">2322. +\t(SPFX_RESTR|SPFX_INTEL), 0,\t0,</span>\n<span id=\"line2323\">2323. +\tPHYS(5,10),\tNO_DFNS,\tNO_CARY,</span>\n<span id=\"line2324\">2324. +\t0,\t\tA_CROSSALIGNED, PM_MONK, NON_PM, 2000L ),</span>\n<span id=\"line2325\">2325. +</span>\n<span id=\"line2326\">2326.  /*</span>\n<span id=\"line2327\">2327.   *\tThe artifacts for the quest dungeon, all self-willed.</span>\n<span id=\"line2328\">2328.   */</span>\n<span id=\"line2329\">2329.  </span>\n<span id=\"line2330\">2330. -A(\"The Orb of Detection\",\tCRYSTAL_BALL,</span>\n<span id=\"line2331\">2331. +A(\"The Orb of Detection\",\tCRYSTAL_BALL,\t0,</span>\n<span id=\"line2332\">2332.  \t(SPFX_NOGEN|SPFX_RESTR|SPFX_INTEL), (SPFX_ESP|SPFX_HSPDAM), 0,</span>\n<span id=\"line2333\">2333.  \tNO_ATTK,\tNO_DFNS,\tCARY(AD_MAGM),</span>\n<span id=\"line2334\">2334.  \tINVIS,\t\tA_LAWFUL, PM_ARCHEOLOGIST, NON_PM, 2500L ),</span>\n<span id=\"line2335\">2335.  </span>\n<span id=\"line2336\">2336. -A(\"The Heart of Ahriman\",\tLUCKSTONE,</span>\n<span id=\"line2337\">2337. +A(\"The Heart of Ahriman\",\tLUCKSTONE,\t0,</span>\n<span id=\"line2338\">2338.  \t(SPFX_NOGEN|SPFX_RESTR|SPFX_INTEL), SPFX_STLTH, 0,</span>\n<span id=\"line2339\">2339.  \t/* this stone does double damage if used as a projectile weapon */</span>\n<span id=\"line2340\">2340.  \tPHYS(5,0),\tNO_DFNS,\tNO_CARY,</span>\n<span id=\"line2341\">2341.  \tLEVITATION,\tA_NEUTRAL, PM_BARBARIAN, NON_PM, 2500L ),</span>\n<span id=\"line2342\">2342.  </span>\n<span id=\"line2343\">2343. -A(\"The Sceptre of Might\",\tMACE,</span>\n<span id=\"line2344\">2344. +A(\"The Sceptre of Might\",\tMACE,\t0,</span>\n<span id=\"line2345\">2345.  \t(SPFX_NOGEN|SPFX_RESTR|SPFX_INTEL|SPFX_DALIGN), 0, 0,</span>\n<span id=\"line2346\">2346. -\tPHYS(5,0),\tNO_DFNS,\tCARY(AD_MAGM),</span>\n<span id=\"line2347\">2347. +\tPHYS(5,ADMG_DOUBLE),\tNO_DFNS,\tCARY(AD_MAGM),</span>\n<span id=\"line2348\">2348.  \tCONFLICT,\tA_LAWFUL, PM_CAVEMAN, NON_PM, 2500L ),</span>\n<span id=\"line2349\">2349.  </span>\n<span id=\"line2350\">2350.  #if 0\t/* OBSOLETE */</span>\n<span id=\"line2351\">2351. -A(\"The Palantir of Westernesse\",\tCRYSTAL_BALL,</span>\n<span id=\"line2352\">2352. +A(\"The Palantir of Westernesse\",\tCRYSTAL_BALL,\t0,</span>\n<span id=\"line2353\">2353.  \t(SPFX_NOGEN|SPFX_RESTR|SPFX_INTEL),</span>\n<span id=\"line2354\">2354.  \t\t(SPFX_ESP|SPFX_REGEN|SPFX_HSPDAM), 0,</span>\n<span id=\"line2355\">2355.  \tNO_ATTK,\tNO_DFNS,\tNO_CARY,</span>\n<span id=\"line2356\">2356.  \tTAMING,\t\tA_CHAOTIC, NON_PM , PM_ELF, 8000L ),</span>\n<span id=\"line2357\">2357.  #endif</span>\n<span id=\"line2358\">2358.  </span>\n<span id=\"line2359\">2359. -A(\"The Staff of Aesculapius\",\tQUARTERSTAFF,</span>\n<span id=\"line2360\">2360. +A(\"The Staff of Aesculapius\",\tQUARTERSTAFF,\t0,</span>\n<span id=\"line2361\">2361.  \t(SPFX_NOGEN|SPFX_RESTR|SPFX_ATTK|SPFX_INTEL|SPFX_DRLI|SPFX_REGEN), 0,0,</span>\n<span id=\"line2362\">2362. -\tDRLI(0,0),\tDRLI(0,0),\tNO_CARY,</span>\n<span id=\"line2363\">2363. +\tDRLI(0,ADMG_DOUBLE),\tDRLI(0,0),\tNO_CARY,</span>\n<span id=\"line2364\">2364.  \tHEALING,\tA_NEUTRAL, PM_HEALER, NON_PM, 5000L ),</span>\n<span id=\"line2365\">2365.  </span>\n<span id=\"line2366\">2366. -A(\"The Magic Mirror of Merlin\", MIRROR,</span>\n<span id=\"line2367\">2367. +A(\"The Magic Mirror of Merlin\", MIRROR,\t0,</span>\n<span id=\"line2368\">2368.  \t(SPFX_NOGEN|SPFX_RESTR|SPFX_INTEL|SPFX_SPEAK), SPFX_ESP, 0,</span>\n<span id=\"line2369\">2369.  \tNO_ATTK,\tNO_DFNS,\tCARY(AD_MAGM),</span>\n<span id=\"line2370\">2370.  \t0,\t\tA_LAWFUL, PM_KNIGHT, NON_PM, 1500L ),</span>\n<span id=\"line2371\">2371.  </span>\n<span id=\"line2372\">2372. -A(\"The Eyes of the Overworld\",\tLENSES,</span>\n<span id=\"line2373\">2373. +A(\"The Eyes of the Overworld\",\tLENSES, 0,</span>\n<span id=\"line2374\">2374.  \t(SPFX_NOGEN|SPFX_RESTR|SPFX_INTEL|SPFX_XRAY), 0, 0,</span>\n<span id=\"line2375\">2375.  \tNO_ATTK,\tNO_DFNS,\tCARY(AD_MAGM),</span>\n<span id=\"line2376\">2376.  \tENLIGHTENING,\tA_NEUTRAL,\t PM_MONK, NON_PM, 2500L ),</span>\n<span id=\"line2377\">2377.  </span>\n<span id=\"line2378\">2378. -A(\"The Mitre of Holiness\",\tHELM_OF_BRILLIANCE,</span>\n<span id=\"line2379\">2379. +A(\"The Mitre of Holiness\",\tHELM_OF_BRILLIANCE,\t0,</span>\n<span id=\"line2380\">2380.  \t(SPFX_NOGEN|SPFX_RESTR|SPFX_DFLAG2|SPFX_INTEL), 0, M2_UNDEAD,</span>\n<span id=\"line2381\">2381.  \tNO_ATTK,\tNO_DFNS,\tCARY(AD_FIRE),</span>\n<span id=\"line2382\">2382.  \tENERGY_BOOST,\tA_LAWFUL, PM_PRIEST, NON_PM, 2000L ),</span>\n<span id=\"line2383\">2383.  </span>\n<span id=\"line2384\">2384. -A(\"The Longbow of Diana\", BOW,</span>\n<span id=\"line2385\">2385. -\t(SPFX_NOGEN|SPFX_RESTR|SPFX_INTEL|SPFX_REFLECT), SPFX_ESP, 0,</span>\n<span id=\"line2386\">2386. -\tPHYS(5,0),\tNO_DFNS,\tNO_CARY,</span>\n<span id=\"line2387\">2387. +A(\"The Longbow of Diana\", BOW, 0,</span>\n<span id=\"line2388\">2388. +\t(SPFX_NOGEN|SPFX_RESTR|SPFX_INTEL/*|SPFX_REFLECT*/), SPFX_ESP, 0,</span>\n<span id=\"line2389\">2389. +\tPHYS(5,3),\tNO_DFNS,\tNO_CARY,</span>\n<span id=\"line2390\">2390.  \tCREATE_AMMO, A_CHAOTIC, PM_RANGER, NON_PM, 4000L ),</span>\n<span id=\"line2391\">2391.  </span>\n<span id=\"line2392\">2392. -A(\"The Master Key of Thievery\", SKELETON_KEY,</span>\n<span id=\"line2393\">2393. +A(\"The Master Key of Thievery\", SKELETON_KEY, 0,</span>\n<span id=\"line2394\">2394.  \t(SPFX_NOGEN|SPFX_RESTR|SPFX_INTEL|SPFX_SPEAK),</span>\n<span id=\"line2395\">2395.  \t\t(SPFX_WARN|SPFX_TCTRL|SPFX_HPHDAM), 0,</span>\n<span id=\"line2396\">2396.  \tNO_ATTK,\tNO_DFNS,\tNO_CARY,</span>\n<span id=\"line2397\">2397.  \tUNTRAP,\t\tA_CHAOTIC, PM_ROGUE, NON_PM, 3500L ),</span>\n<span id=\"line2398\">2398.  </span>\n<span id=\"line2399\">2399. -A(\"The Tsurugi of Muramasa\",\tTSURUGI,</span>\n<span id=\"line2400\">2400. +A(\"The Tsurugi of Muramasa\",\tTSURUGI, 0,</span>\n<span id=\"line2401\">2401.  \t(SPFX_NOGEN|SPFX_RESTR|SPFX_INTEL|SPFX_BEHEAD|SPFX_LUCK), 0, 0,</span>\n<span id=\"line2402\">2402.  \tPHYS(0,8),\tNO_DFNS,\tNO_CARY,</span>\n<span id=\"line2403\">2403.  \t0,\t\tA_LAWFUL, PM_SAMURAI, NON_PM, 4500L ),</span>\n<span id=\"line2404\">2404.  </span>\n<span id=\"line2405\">2405.  #ifdef TOURIST</span>\n<span id=\"line2406\">2406. -A(\"The Platinum Yendorian Express Card\", CREDIT_CARD,</span>\n<span id=\"line2407\">2407. +A(\"The Platinum Yendorian Express Card\", CREDIT_CARD, 0,</span>\n<span id=\"line2408\">2408.  \t(SPFX_NOGEN|SPFX_RESTR|SPFX_INTEL|SPFX_DEFN),</span>\n<span id=\"line2409\">2409.  \t\t(SPFX_ESP|SPFX_HSPDAM), 0,</span>\n<span id=\"line2410\">2410.  \tNO_ATTK,\tNO_DFNS,\tCARY(AD_MAGM),</span>\n<span id=\"line2411\">2411.  \tCHARGE_OBJ,\tA_NEUTRAL, PM_TOURIST, NON_PM, 7000L ),</span>\n<span id=\"line2412\">2412.  #endif</span>\n<span id=\"line2413\">2413.  </span>\n<span id=\"line2414\">2414. -A(\"The Orb of Fate\",\t\tCRYSTAL_BALL,</span>\n<span id=\"line2415\">2415. +A(\"The Orb of Fate\",\t\tCRYSTAL_BALL, 0,</span>\n<span id=\"line2416\">2416.  \t(SPFX_NOGEN|SPFX_RESTR|SPFX_INTEL|SPFX_LUCK),</span>\n<span id=\"line2417\">2417.  \t\t(SPFX_WARN|SPFX_HSPDAM|SPFX_HPHDAM), 0,</span>\n<span id=\"line2418\">2418.  \tNO_ATTK,\tNO_DFNS,\tNO_CARY,</span>\n<span id=\"line2419\">2419.  \tLEV_TELE,\tA_NEUTRAL, PM_VALKYRIE, NON_PM, 3500L ),</span>\n<span id=\"line2420\">2420.  </span>\n<span id=\"line2421\">2421. -A(\"The Eye of the Aethiopica\",\tAMULET_OF_ESP,</span>\n<span id=\"line2422\">2422. +A(\"The Eye of the Aethiopica\",\tAMULET_OF_ESP, 0,</span>\n<span id=\"line2423\">2423.  \t(SPFX_NOGEN|SPFX_RESTR|SPFX_INTEL), (SPFX_EREGEN|SPFX_HSPDAM), 0,</span>\n<span id=\"line2424\">2424.  \tNO_ATTK,\tNO_DFNS,\tCARY(AD_MAGM),</span>\n<span id=\"line2425\">2425.  \tCREATE_PORTAL,\tA_NEUTRAL, PM_WIZARD, NON_PM, 4000L ),</span>\n<span id=\"line2426\">2426.  </span>\n<span id=\"line2427\">2427.  /*</span>\n<span id=\"line2428\">2428. + *\tdummy entry for user-made weapon</span>\n<span id=\"line2429\">2429. + */</span>\n<span id=\"line2430\">2430. +A(\"Custom Made Weapon\",\tTIN_OPENER, 0,  /* dummy otyp */</span>\n<span id=\"line2431\">2431. +\t(SPFX_NOGEN|SPFX_RESTR), 0, 0,</span>\n<span id=\"line2432\">2432. +\tNO_ATTK,\tNO_DFNS,\tNO_CARY,</span>\n<span id=\"line2433\">2433. +\t0,\tA_NONE, NON_PM, NON_PM, 0L ),</span>\n<span id=\"line2434\">2434. +</span>\n<span id=\"line2435\">2435. +/*</span>\n<span id=\"line2436\">2436.   *  terminator; otyp must be zero</span>\n<span id=\"line2437\">2437.   */</span>\n<span id=\"line2438\">2438. -A(0, 0, 0, 0, 0, NO_ATTK, NO_DFNS, NO_CARY, 0, A_NONE, NON_PM, NON_PM, 0L )</span>\n<span id=\"line2439\">2439. +A(0, 0, 0, 0, 0, 0, NO_ATTK, NO_DFNS, NO_CARY, 0, A_NONE, NON_PM, NON_PM, 0L )</span>\n<span id=\"line2440\">2440.  </span>\n<span id=\"line2441\">2441.  };\t/* artilist[] (or artifact_names[]) */</span>\n<span id=\"line2442\">2442.  </span>\n</pre>\n<h3><span class=\"mw-headline\" id=\"attrib.h\">attrib.h</span></h3>\n<pre><span id=\"line2443\">2443. diff -pruN nethack-3.4.3/include/<a href=\"/wiki/Attrib.h\" class=\"mw-redirect\" title=\"Attrib.h\">attrib.h</a> nhbrass-040923/include/attrib.h</span>\n<span id=\"line2444\">2444. --- nethack-3.4.3/include/attrib.h\tSun Dec  7 18:39:13 2003</span>\n<span id=\"line2445\">2445. +++ nhbrass-040923/include/attrib.h\tWed Apr 10 11:29:56 2002</span>\n<span id=\"line2446\">2446. @@ -38,7 +38,8 @@ struct\tattribs {</span>\n<span id=\"line2447\">2447.  \tschar\ta[A_MAX];</span>\n<span id=\"line2448\">2448.  };</span>\n<span id=\"line2449\">2449.  </span>\n<span id=\"line2450\">2450. -#define ATTRMAX(x) ((x == A_STR &amp;&amp; Upolyd &amp;&amp; strongmonst(youmonst.data))&#160;? STR18(100)&#160;: urace.attrmax[x])</span>\n<span id=\"line2451\">2451. +/* #define ATTRMAX(x) ((x == A_STR &amp;&amp; Upolyd &amp;&amp; strongmonst(youmonst.data))&#160;? STR18(100)&#160;: urace.attrmax[x])*/</span>\n<span id=\"line2452\">2452. +#define ATTRMAX(x) ((x == A_STR &amp;&amp; Upolyd &amp;&amp; strongmonst(youmonst.data))&#160;? STR18(100)&#160;: urole.attrmax[x])</span>\n<span id=\"line2453\">2453.  #define ATTRMIN(x) (urace.attrmin[x])</span>\n<span id=\"line2454\">2454.  </span>\n<span id=\"line2455\">2455.  #endif /* ATTRIB_H */</span>\n</pre>\n<h3><span class=\"mw-headline\" id=\"config.h\">config.h</span></h3>\n<pre><span id=\"line2456\">2456. diff -pruN nethack-3.4.3/include/<a href=\"/wiki/Config.h\" class=\"mw-redirect\" title=\"Config.h\">config.h</a> nhbrass-040923/include/config.h</span>\n<span id=\"line2457\">2457. --- nethack-3.4.3/include/config.h\tSun Dec  7 18:39:13 2003</span>\n<span id=\"line2458\">2458. +++ nhbrass-040923/include/config.h\tSat Dec 27 17:30:16 2003</span>\n<span id=\"line2459\">2459. @@ -338,6 +338,15 @@ typedef unsigned char\tuchar;</span>\n<span id=\"line2460\">2460.  #endif</span>\n<span id=\"line2461\">2461.  </span>\n<span id=\"line2462\">2462.  #define EXP_ON_BOTL\t/* Show experience on bottom line */</span>\n<span id=\"line2463\">2463. +//#define AUTOTHRUST\t/* Automatically target a monster in range with polearms */</span>\n<span id=\"line2464\">2464. +#define FIRSTAID\t/* scissors/bandage */</span>\n<span id=\"line2465\">2465. +#define NOPOLYPILE\t/* polymorph affects only one item on the first pile */</span>\n<span id=\"line2466\">2466. +#define SHOWDMG\t\t/* show damage value */</span>\n<span id=\"line2467\">2467. +#define RAND_MT\t\t/* use mersenne twister for random number */</span>\n<span id=\"line2468\">2468. +#define NEWGEHENNOM\t/* under construction */</span>\n<span id=\"line2469\">2469. +#ifdef STEED</span>\n<span id=\"line2470\">2470. +# define MONSTEED\t/* monster is riding steeds */</span>\n<span id=\"line2471\">2471. +#endif /*STEED*/</span>\n<span id=\"line2472\">2472.  /* #define SCORE_ON_BOTL */\t/* added by Gary Erickson (erickson@ucivax) */</span>\n<span id=\"line2473\">2473.  </span>\n<span id=\"line2474\">2474.  /*</span>\n</pre>\n<p>The AUTOTHRUST line is commented out because the AUTOTHRUST macro no longer does anything. The <a href=\"/index.php?title=Autothrust&amp;action=edit&amp;redlink=1\" class=\"new\" title=\"Autothrust (page does not exist)\">autothrust</a> feature (pressing [v] to hit the nearest <a href=\"/wiki/Monster\" title=\"Monster\">monster</a> with your wielded <a href=\"/wiki/Polearm\" title=\"Polearm\">polearm</a>) is always on, and it is not possible to disable it by defining or undefining a macro.\n</p>\n<h3><span class=\"mw-headline\" id=\"display.h\">display.h</span></h3>\n<pre><span id=\"line2551\">2551. diff -pruN nethack-3.4.3/include/<a href=\"/wiki/Display.h\" class=\"mw-redirect\" title=\"Display.h\">display.h</a> nhbrass-040923/include/display.h</span>\n<span id=\"line2552\">2552. --- nethack-3.4.3/include/display.h\tSun Dec  7 18:39:13 2003</span>\n<span id=\"line2553\">2553. +++ nhbrass-040923/include/display.h\tSat Dec 27 14:11:50 2003</span>\n<span id=\"line2554\">2554. @@ -40,9 +40,11 @@</span>\n<span id=\"line2555\">2555.   * vicinity, and a glyph representing the warning level is displayed.</span>\n<span id=\"line2556\">2556.   */</span>\n<span id=\"line2557\">2557.  </span>\n<span id=\"line2558\">2558. +//#define mon_warning(mon) (Warning &amp;&amp;&#160;!(mon)-&gt;mpeaceful &amp;&amp;</span>\n<span id=\"line2559\">2559. +//\t\t\t (distu((mon)-&gt;mx, (mon)-&gt;my) &lt; 100) &amp;&amp;</span>\n<span id=\"line2560\">2560. +//\t\t\t (((int) ((mon)-&gt;m_lev / 4)) &gt;= flags.warnlevel))</span>\n<span id=\"line2561\">2561.  #define mon_warning(mon) (Warning &amp;&amp;&#160;!(mon)-&gt;mpeaceful &amp;&amp; \t\t\t\t\\</span>\n<span id=\"line2562\">2562. -\t\t\t (distu((mon)-&gt;mx, (mon)-&gt;my) &lt; 100) &amp;&amp;\t\t\t\t\\</span>\n<span id=\"line2563\">2563. -\t\t\t (((int) ((mon)-&gt;m_lev / 4)) &gt;= flags.warnlevel))</span>\n<span id=\"line2564\">2564. +\t\t\t (distu((mon)-&gt;mx, (mon)-&gt;my) &lt; 100))</span>\n<span id=\"line2565\">2565.  </span>\n<span id=\"line2566\">2566.  /*</span>\n<span id=\"line2567\">2567.   * mon_visible()</span>\n<span id=\"line2568\">2568. @@ -92,6 +94,23 @@</span>\n<span id=\"line2569\">2569.  #define canspotmon(mon) \\</span>\n<span id=\"line2570\">2570.  \t(canseemon(mon) || sensemon(mon))</span>\n<span id=\"line2571\">2571.  </span>\n<span id=\"line2572\">2572. +</span>\n<span id=\"line2573\">2573. +/*</span>\n<span id=\"line2574\">2574. + * canspotmons(mon)</span>\n<span id=\"line2575\">2575. + *</span>\n<span id=\"line2576\">2576. + * This function is variation of canspotmon() which returns TRUE if</span>\n<span id=\"line2577\">2577. + * you can spot any monsters in the same place as mon's.</span>\n<span id=\"line2578\">2578. + */</span>\n<span id=\"line2579\">2579. +#ifndef MONSTEED</span>\n<span id=\"line2580\">2580. +#define canspotmons canspotmon</span>\n<span id=\"line2581\">2581. +#else</span>\n<span id=\"line2582\">2582. +#define canspotmons(mon) \\</span>\n<span id=\"line2583\">2583. +\t(canspotmon(mon) || \\</span>\n<span id=\"line2584\">2584. +\t ((mon)-&gt;mriding &amp;&amp; canspotmon((mon)-&gt;mchild)) || \\</span>\n<span id=\"line2585\">2585. +\t ((mon)-&gt;msteed &amp;&amp; canspotmon((mon)-&gt;mparent)))</span>\n<span id=\"line2586\">2586. +#endif /*MONSTEED*/</span>\n<span id=\"line2587\">2587. +</span>\n<span id=\"line2588\">2588. +</span>\n<span id=\"line2589\">2589.  /* knowninvisible(mon)</span>\n<span id=\"line2590\">2590.   * This one checks to see if you know a monster is both there and invisible.</span>\n<span id=\"line2591\">2591.   * 1) If you can see the monster and have see invisible, it is assumed the</span>\n<span id=\"line2592\">2592. @@ -234,7 +253,8 @@</span>\n<span id=\"line2593\">2593.   *</span>\n<span id=\"line2594\">2594.   * ridden\tRepresents all monsters being ridden.  Count: NUMMONS </span>\n<span id=\"line2595\">2595.   *</span>\n<span id=\"line2596\">2596. - * object\tOne for each object.  Count: NUM_OBJECTS</span>\n<span id=\"line2597\">2597. + * object\t32(number of materials) for each object.</span>\n<span id=\"line2598\">2598. + *\t\tLower 5 bits indicate materials.  Count: NUM_OBJECTS &lt;&lt; 5</span>\n<span id=\"line2599\">2599.   *</span>\n<span id=\"line2600\">2600.   * cmap\t\tOne for each entry in the character map.  The character map</span>\n<span id=\"line2601\">2601.   *\t\tis the dungeon features and other miscellaneous things.</span>\n<span id=\"line2602\">2602. @@ -258,16 +278,18 @@</span>\n<span id=\"line2603\">2603.   *</span>\n<span id=\"line2604\">2604.   * The following are offsets used to convert to and from a glyph.</span>\n<span id=\"line2605\">2605.   */</span>\n<span id=\"line2606\">2606. -#define NUM_ZAP 8\t/* number of zap beam types */</span>\n<span id=\"line2607\">2607. +#define NUM_ZAP 9\t/* number of zap beam types */</span>\n<span id=\"line2608\">2608.  </span>\n<span id=\"line2609\">2609.  #define GLYPH_MON_OFF\t\t0</span>\n<span id=\"line2610\">2610.  #define GLYPH_PET_OFF\t\t(NUMMONS\t+ GLYPH_MON_OFF)</span>\n<span id=\"line2611\">2611.  #define GLYPH_INVIS_OFF\t\t(NUMMONS\t+ GLYPH_PET_OFF)</span>\n<span id=\"line2612\">2612.  #define GLYPH_DETECT_OFF\t(1\t\t+ GLYPH_INVIS_OFF)</span>\n<span id=\"line2613\">2613.  #define GLYPH_BODY_OFF\t\t(NUMMONS\t+ GLYPH_DETECT_OFF)</span>\n<span id=\"line2614\">2614. -#define GLYPH_RIDDEN_OFF\t(NUMMONS\t+ GLYPH_BODY_OFF)</span>\n<span id=\"line2615\">2615. +#define GLYPH_RIDING_OFF\t(NUMMONS\t+ GLYPH_BODY_OFF)</span>\n<span id=\"line2616\">2616. +#define GLYPH_RIDDEN_OFF\t(NUMMONS\t+ GLYPH_RIDING_OFF)</span>\n<span id=\"line2617\">2617.  #define GLYPH_OBJ_OFF\t\t(NUMMONS\t+ GLYPH_RIDDEN_OFF)</span>\n<span id=\"line2618\">2618. -#define GLYPH_CMAP_OFF\t\t(NUM_OBJECTS\t+ GLYPH_OBJ_OFF)</span>\n<span id=\"line2619\">2619. +#define GLYPH_CMAP_OFF\t\t((NUM_OBJECTS &lt;&lt; 5) + GLYPH_OBJ_OFF) /* material patch */</span>\n<span id=\"line2620\">2620. +/*#define GLYPH_CMAP_OFF\t\t(NUM_OBJECTS\t+ GLYPH_OBJ_OFF)*/</span>\n<span id=\"line2621\">2621.  #define GLYPH_EXPLODE_OFF\t((MAXPCHARS - MAXEXPCHARS) + GLYPH_CMAP_OFF)</span>\n<span id=\"line2622\">2622.  #define GLYPH_ZAP_OFF\t\t((MAXEXPCHARS * EXPL_MAX) + GLYPH_EXPLODE_OFF)</span>\n<span id=\"line2623\">2623.  #define GLYPH_SWALLOW_OFF\t((NUM_ZAP &lt;&lt; 2) + GLYPH_ZAP_OFF)</span>\n<span id=\"line2624\">2624. @@ -281,6 +303,7 @@</span>\n<span id=\"line2625\">2625.  #define warning_to_glyph(mwarnlev) ((mwarnlev)+GLYPH_WARNING_OFF)</span>\n<span id=\"line2626\">2626.  #define mon_to_glyph(mon) ((int) what_mon(monsndx((mon)-&gt;data))+GLYPH_MON_OFF)</span>\n<span id=\"line2627\">2627.  #define detected_mon_to_glyph(mon) ((int) what_mon(monsndx((mon)-&gt;data))+GLYPH_DETECT_OFF)</span>\n<span id=\"line2628\">2628. +#define riding_mon_to_glyph(mon) ((int) what_mon(monsndx((mon)-&gt;data))+GLYPH_RIDING_OFF)</span>\n<span id=\"line2629\">2629.  #define ridden_mon_to_glyph(mon) ((int) what_mon(monsndx((mon)-&gt;data))+GLYPH_RIDDEN_OFF)</span>\n<span id=\"line2630\">2630.  #define pet_to_glyph(mon) ((int) what_mon(monsndx((mon)-&gt;data))+GLYPH_PET_OFF)</span>\n<span id=\"line2631\">2631.  </span>\n<span id=\"line2632\">2632. @@ -290,10 +313,11 @@</span>\n<span id=\"line2633\">2633.      (Hallucination&#160;?\t\t\t\t\t\t\t      \\</span>\n<span id=\"line2634\">2634.  \t((otg_temp = random_object()) == CORPSE&#160;?\t\t\t      \\</span>\n<span id=\"line2635\">2635.  \t    random_monster() + GLYPH_BODY_OFF&#160;:\t\t\t\t      \\</span>\n<span id=\"line2636\">2636. -\t    otg_temp + GLYPH_OBJ_OFF)\t:\t\t\t\t      \\</span>\n<span id=\"line2637\">2637. +\t    (otg_temp&lt;&lt;5) + rnd(MAX_MATERIAL) + GLYPH_OBJ_OFF)\t:\t      \\</span>\n<span id=\"line2638\">2638.  \t((obj)-&gt;otyp == CORPSE&#160;?\t\t\t\t\t      \\</span>\n<span id=\"line2639\">2639.  \t    (int) (obj)-&gt;corpsenm + GLYPH_BODY_OFF&#160;:\t\t\t      \\</span>\n<span id=\"line2640\">2640. -\t    (int) (obj)-&gt;otyp + GLYPH_OBJ_OFF))</span>\n<span id=\"line2641\">2641. +\t    ((int) (obj)-&gt;otyp &lt;&lt; 5) +\t\t\t\t\t      \\</span>\n<span id=\"line2642\">2642. +\t\t(is_material_variable(obj)&#160;? get_material(obj)&#160;: 0) + GLYPH_OBJ_OFF))</span>\n<span id=\"line2643\">2643.  </span>\n<span id=\"line2644\">2644.  #define cmap_to_glyph(cmap_idx) ((int) (cmap_idx)   + GLYPH_CMAP_OFF)</span>\n<span id=\"line2645\">2645.  #define explosion_to_glyph(expltype,idx)\t\\</span>\n<span id=\"line2646\">2646. @@ -303,7 +327,7 @@</span>\n<span id=\"line2647\">2647.  \t\t\tcmap_to_glyph(trap_to_defsym(what_trap((trap)-&gt;ttyp)))</span>\n<span id=\"line2648\">2648.  </span>\n<span id=\"line2649\">2649.  /* Not affected by hallucination.  Gives a generic body for CORPSE */</span>\n<span id=\"line2650\">2650. -#define objnum_to_glyph(onum)\t((int) (onum) + GLYPH_OBJ_OFF)</span>\n<span id=\"line2651\">2651. +#define objnum_to_glyph(onum)\t(((int) (onum) &lt;&lt; 5) + GLYPH_OBJ_OFF)</span>\n<span id=\"line2652\">2652.  #define monnum_to_glyph(mnum)\t((int) (mnum) + GLYPH_MON_OFF)</span>\n<span id=\"line2653\">2653.  #define detected_monnum_to_glyph(mnum)\t((int) (mnum) + GLYPH_DETECT_OFF)</span>\n<span id=\"line2654\">2654.  #define ridden_monnum_to_glyph(mnum)\t((int) (mnum) + GLYPH_RIDDEN_OFF)</span>\n<span id=\"line2655\">2655. @@ -316,7 +340,6 @@</span>\n<span id=\"line2656\">2656.  \t                (flags.female &amp;&amp; urace.femalenum&#160;!= NON_PM)&#160;? urace.femalenum&#160;: \\</span>\n<span id=\"line2657\">2657.  \t                urace.malenum)</span>\n<span id=\"line2658\">2658.  </span>\n<span id=\"line2659\">2659. -</span>\n<span id=\"line2660\">2660.  /*</span>\n<span id=\"line2661\">2661.   * Change the given glyph into it's given type.  Note:</span>\n<span id=\"line2662\">2662.   *\t1) Pets, detected, and ridden monsters are animals and are converted</span>\n<span id=\"line2663\">2663. @@ -333,11 +356,12 @@</span>\n<span id=\"line2664\">2664.  \t(glyph_is_normal_monster(glyph)&#160;? ((glyph)-GLYPH_MON_OFF)&#160;:\t\\</span>\n<span id=\"line2665\">2665.  \tglyph_is_pet(glyph)&#160;? ((glyph)-GLYPH_PET_OFF)&#160;:\t\t\t\\</span>\n<span id=\"line2666\">2666.  \tglyph_is_detected_monster(glyph)&#160;? ((glyph)-GLYPH_DETECT_OFF)&#160;:\t\\</span>\n<span id=\"line2667\">2667. +\tglyph_is_riding_monster(glyph)&#160;? ((glyph)-GLYPH_RIDING_OFF)&#160;:\t\\</span>\n<span id=\"line2668\">2668.  \tglyph_is_ridden_monster(glyph)&#160;? ((glyph)-GLYPH_RIDDEN_OFF)&#160;:\t\\</span>\n<span id=\"line2669\">2669.  \tNO_GLYPH)</span>\n<span id=\"line2670\">2670.  #define glyph_to_obj(glyph)\t\t\t\t\t\t\\</span>\n<span id=\"line2671\">2671.  \t(glyph_is_body(glyph)&#160;? CORPSE&#160;:\t\t\t\t\\</span>\n<span id=\"line2672\">2672. -\tglyph_is_normal_object(glyph)&#160;? ((glyph)-GLYPH_OBJ_OFF)&#160;:\t\\</span>\n<span id=\"line2673\">2673. +\tglyph_is_normal_object(glyph)&#160;? (((glyph)-GLYPH_OBJ_OFF) &gt;&gt; 5)&#160;:\t\\</span>\n<span id=\"line2674\">2674.  \tNO_GLYPH)</span>\n<span id=\"line2675\">2675.  #define glyph_to_trap(glyph)\t\t\t\t\t\t\\</span>\n<span id=\"line2676\">2676.  \t(glyph_is_trap(glyph)&#160;?\t\t\t\t\t\t\\</span>\n<span id=\"line2677\">2677. @@ -360,6 +384,7 @@</span>\n<span id=\"line2678\">2678.  #define glyph_is_monster(glyph)\t\t\t\t\t\t\\</span>\n<span id=\"line2679\">2679.  \t\t(glyph_is_normal_monster(glyph)\t\t\t\t\\</span>\n<span id=\"line2680\">2680.  \t\t|| glyph_is_pet(glyph)\t\t\t\t\t\\</span>\n<span id=\"line2681\">2681. +\t\t|| glyph_is_riding_monster(glyph)\t\t\t\\</span>\n<span id=\"line2682\">2682.  \t\t|| glyph_is_ridden_monster(glyph)\t\t\t\\</span>\n<span id=\"line2683\">2683.  \t\t|| glyph_is_detected_monster(glyph))</span>\n<span id=\"line2684\">2684.  #define glyph_is_normal_monster(glyph)\t\t\t\t\t\\</span>\n<span id=\"line2685\">2685. @@ -368,13 +393,15 @@</span>\n<span id=\"line2686\">2686.      ((glyph) &gt;= GLYPH_PET_OFF &amp;&amp; (glyph) &lt; (GLYPH_PET_OFF+NUMMONS))</span>\n<span id=\"line2687\">2687.  #define glyph_is_body(glyph)\t\t\t\t\t\t\\</span>\n<span id=\"line2688\">2688.      ((glyph) &gt;= GLYPH_BODY_OFF &amp;&amp; (glyph) &lt; (GLYPH_BODY_OFF+NUMMONS))</span>\n<span id=\"line2689\">2689. +#define glyph_is_riding_monster(glyph)\t\t\t\t\t\\</span>\n<span id=\"line2690\">2690. +    ((glyph) &gt;= GLYPH_RIDING_OFF &amp;&amp; (glyph) &lt; (GLYPH_RIDING_OFF+NUMMONS))</span>\n<span id=\"line2691\">2691.  #define glyph_is_ridden_monster(glyph)\t\t\t\t\t\\</span>\n<span id=\"line2692\">2692.      ((glyph) &gt;= GLYPH_RIDDEN_OFF &amp;&amp; (glyph) &lt; (GLYPH_RIDDEN_OFF+NUMMONS))</span>\n<span id=\"line2693\">2693.  #define glyph_is_detected_monster(glyph)\t\t\t\t\\</span>\n<span id=\"line2694\">2694.      ((glyph) &gt;= GLYPH_DETECT_OFF &amp;&amp; (glyph) &lt; (GLYPH_DETECT_OFF+NUMMONS))</span>\n<span id=\"line2695\">2695.  #define glyph_is_invisible(glyph) ((glyph) == GLYPH_INVISIBLE)</span>\n<span id=\"line2696\">2696.  #define glyph_is_normal_object(glyph)\t\t\t\t\t\\</span>\n<span id=\"line2697\">2697. -    ((glyph) &gt;= GLYPH_OBJ_OFF &amp;&amp; (glyph) &lt; (GLYPH_OBJ_OFF+NUM_OBJECTS))</span>\n<span id=\"line2698\">2698. +    ((glyph) &gt;= GLYPH_OBJ_OFF &amp;&amp; (glyph) &lt; (GLYPH_OBJ_OFF+(NUM_OBJECTS&lt;&lt;5)))</span>\n<span id=\"line2699\">2699.  #define glyph_is_object(glyph)\t\t\t\t\t\t\\</span>\n<span id=\"line2700\">2700.  \t\t(glyph_is_normal_object(glyph)\t\t\t\t\\</span>\n<span id=\"line2701\">2701.  \t\t|| glyph_is_body(glyph))</span>\n</pre>\n<p>Because <a href=\"/index.php?title=Monsters_riding_steeds&amp;action=edit&amp;redlink=1\" class=\"new\" title=\"Monsters riding steeds (page does not exist)\">monsters riding steeds</a> is a new feature in NetHack brass, the display code needs to know how to draw them on screen.\n</p>\n<h3><span class=\"mw-headline\" id=\"obj.h\">obj.h</span></h3>\n<pre><span id=\"line3623\">3623. diff -pruN nethack-3.4.3/include/<a href=\"/wiki/Obj.h\" class=\"mw-redirect\" title=\"Obj.h\">obj.h</a> nhbrass-040923/include/obj.h</span>\n<span id=\"line3624\">3624. --- nethack-3.4.3/include/obj.h\tSun Dec  7 18:39:13 2003</span>\n<span id=\"line3625\">3625. +++ nhbrass-040923/include/obj.h\tWed Dec 10 07:49:36 2003</span>\n<span id=\"line3626\">3626. @@ -72,12 +72,15 @@ struct obj {</span>\n<span id=\"line3627\">3627.  #define norevive oeroded2</span>\n<span id=\"line3628\">3628.  \tBitfield(oerodeproof,1); /* erodeproof weapon/armor */</span>\n<span id=\"line3629\">3629.  \tBitfield(olocked,1);\t/* object is locked */</span>\n<span id=\"line3630\">3630. +#define sokoprize olocked\t/* special flag for sokoban prize */</span>\n<span id=\"line3631\">3631.  \tBitfield(obroken,1);\t/* lock has been broken */</span>\n<span id=\"line3632\">3632. +#define oshot obroken\t\t/* a bullet is shot from a gun, not thrown */</span>\n<span id=\"line3633\">3633.  \tBitfield(otrapped,1);\t/* container is trapped */</span>\n<span id=\"line3634\">3634.  \t\t\t\t/* or accidental tripped rolling boulder trap */</span>\n<span id=\"line3635\">3635.  #define opoisoned otrapped\t/* object (weapon) is coated with poison */</span>\n<span id=\"line3636\">3636.  </span>\n<span id=\"line3637\">3637.  \tBitfield(recharged,3);\t/* number of times it's been recharged */</span>\n<span id=\"line3638\">3638. +#define oacadjust recharged\t/* armor-class adjustment (-4 to +3) */</span>\n<span id=\"line3639\">3639.  \tBitfield(lamplit,1);\t/* a light-source -- can be lit */</span>\n<span id=\"line3640\">3640.  #ifdef INVISIBLE_OBJECTS</span>\n<span id=\"line3641\">3641.  \tBitfield(oinvis,1);\t/* invisible */</span>\n<span id=\"line3642\">3642. @@ -91,13 +94,15 @@ struct obj {</span>\n<span id=\"line3643\">3643.  </span>\n<span id=\"line3644\">3644.  \tBitfield(in_use,1);\t/* for magic items before useup items */</span>\n<span id=\"line3645\">3645.  \tBitfield(bypass,1);\t/* mark this as an object to be skipped by bhito() */</span>\n<span id=\"line3646\">3646. -\t/* 6 free bits */</span>\n<span id=\"line3647\">3647. +\tBitfield(etherial,1);\t/* magically created object */</span>\n<span id=\"line3648\">3648. +\tBitfield(madeof,5);\t/* material num if obj is made of unusual material */</span>\n<span id=\"line3649\">3649.  </span>\n<span id=\"line3650\">3650.  \tint\tcorpsenm;\t/* type of corpse is mons[corpsenm] */</span>\n<span id=\"line3651\">3651.  #define leashmon  corpsenm\t/* gets m_id of attached pet */</span>\n<span id=\"line3652\">3652.  #define spestudied corpsenm\t/* # of times a spellbook has been studied */</span>\n<span id=\"line3653\">3653.  #define fromsink  corpsenm\t/* a potion from a sink */</span>\n<span id=\"line3654\">3654.  \tunsigned oeaten;\t/* nutrition left in food, if partly eaten */</span>\n<span id=\"line3655\">3655. +#define odamaged oeaten\t\t/* how much object's special power worn out */</span>\n<span id=\"line3656\">3656.  \tlong age;\t\t/* creation date */</span>\n<span id=\"line3657\">3657.  </span>\n<span id=\"line3658\">3658.  \tuchar onamelth;\t\t/* length of name (following oxlth) */</span>\n<span id=\"line3659\">3659. @@ -125,50 +130,69 @@ struct obj {</span>\n<span id=\"line3660\">3660.   *\t#define is_poisonable(otyp) (otyp &lt;= BEC_DE_CORBIN)</span>\n<span id=\"line3661\">3661.   */</span>\n<span id=\"line3662\">3662.  #define is_blade(otmp)\t(otmp-&gt;oclass == WEAPON_CLASS &amp;&amp; \\</span>\n<span id=\"line3663\">3663. -\t\t\t objects[otmp-&gt;otyp].oc_skill &gt;= P_DAGGER &amp;&amp; \\</span>\n<span id=\"line3664\">3664. -\t\t\t objects[otmp-&gt;otyp].oc_skill &lt;= P_SABER)</span>\n<span id=\"line3665\">3665. +\t\t\t objects[otmp-&gt;otyp].oc_skill &gt;= P_DAGGER_GROUP &amp;&amp; \\</span>\n<span id=\"line3666\">3666. +\t\t\t objects[otmp-&gt;otyp].oc_skill &lt;= P_SABER_GROUP)</span>\n<span id=\"line3667\">3667.  #define is_axe(otmp)\t((otmp-&gt;oclass == WEAPON_CLASS || \\</span>\n<span id=\"line3668\">3668.  \t\t\t otmp-&gt;oclass == TOOL_CLASS) &amp;&amp; \\</span>\n<span id=\"line3669\">3669. -\t\t\t objects[otmp-&gt;otyp].oc_skill == P_AXE)</span>\n<span id=\"line3670\">3670. +\t\t\t objects[otmp-&gt;otyp].oc_skill == P_AXE_GROUP)</span>\n<span id=\"line3671\">3671.  #define is_pick(otmp)\t((otmp-&gt;oclass == WEAPON_CLASS || \\</span>\n<span id=\"line3672\">3672.  \t\t\t otmp-&gt;oclass == TOOL_CLASS) &amp;&amp; \\</span>\n<span id=\"line3673\">3673. -\t\t\t objects[otmp-&gt;otyp].oc_skill == P_PICK_AXE)</span>\n<span id=\"line3674\">3674. +\t\t\t objects[otmp-&gt;otyp].oc_skill == P_PICKAXE_GROUP)</span>\n<span id=\"line3675\">3675.  #define is_sword(otmp)\t(otmp-&gt;oclass == WEAPON_CLASS &amp;&amp; \\</span>\n<span id=\"line3676\">3676. -\t\t\t objects[otmp-&gt;otyp].oc_skill &gt;= P_SHORT_SWORD &amp;&amp; \\</span>\n<span id=\"line3677\">3677. -\t\t\t objects[otmp-&gt;otyp].oc_skill &lt;= P_SABER)</span>\n<span id=\"line3678\">3678. +\t\t\t objects[otmp-&gt;otyp].oc_skill &gt;= P_SHORT_BLADE_GROUP &amp;&amp; \\</span>\n<span id=\"line3679\">3679. +\t\t\t objects[otmp-&gt;otyp].oc_skill &lt;= P_SABER_GROUP)</span>\n<span id=\"line3680\">3680.  #define is_pole(otmp)\t((otmp-&gt;oclass == WEAPON_CLASS || \\</span>\n<span id=\"line3681\">3681.  \t\t\totmp-&gt;oclass == TOOL_CLASS) &amp;&amp; \\</span>\n<span id=\"line3682\">3682. -\t\t\t (objects[otmp-&gt;otyp].oc_skill == P_POLEARMS || \\</span>\n<span id=\"line3683\">3683. -\t\t\t objects[otmp-&gt;otyp].oc_skill == P_LANCE))</span>\n<span id=\"line3684\">3684. +\t\t\t objects[otmp-&gt;otyp].oc_skill == P_POLEARM_GROUP)</span>\n<span id=\"line3685\">3685.  #define is_spear(otmp)\t(otmp-&gt;oclass == WEAPON_CLASS &amp;&amp; \\</span>\n<span id=\"line3686\">3686. -\t\t\t objects[otmp-&gt;otyp].oc_skill &gt;= P_SPEAR &amp;&amp; \\</span>\n<span id=\"line3687\">3687. -\t\t\t objects[otmp-&gt;otyp].oc_skill &lt;= P_JAVELIN)</span>\n<span id=\"line3688\">3688. +\t\t\t objects[otmp-&gt;otyp].oc_skill == P_SPEAR_GROUP)</span>\n<span id=\"line3689\">3689. +#define is_gun(otmp)\t(otmp-&gt;oclass == WEAPON_CLASS &amp;&amp; \\</span>\n<span id=\"line3690\">3690. +\t\t\t objects[otmp-&gt;otyp].oc_skill == P_FIREARM_GROUP)</span>\n<span id=\"line3691\">3691. +#define maxbullets(otmp) (otmp-&gt;otyp == REVOLVER&#160;? 6&#160;: \\</span>\n<span id=\"line3692\">3692. +                          otmp-&gt;otyp == MUSKET&#160;? 1&#160;: 0)</span>\n<span id=\"line3693\">3693.  #define is_launcher(otmp)\t(otmp-&gt;oclass == WEAPON_CLASS &amp;&amp; \\</span>\n<span id=\"line3694\">3694. -\t\t\t objects[otmp-&gt;otyp].oc_skill &gt;= P_BOW &amp;&amp; \\</span>\n<span id=\"line3695\">3695. -\t\t\t objects[otmp-&gt;otyp].oc_skill &lt;= P_CROSSBOW)</span>\n<span id=\"line3696\">3696. +\t\t\t (objects[otmp-&gt;otyp].oc_wprop &amp; WP_WEAPONTYPE) == WP_LAUNCHER)</span>\n<span id=\"line3697\">3697.  #define is_ammo(otmp)\t((otmp-&gt;oclass == WEAPON_CLASS || \\</span>\n<span id=\"line3698\">3698.  \t\t\t otmp-&gt;oclass == GEM_CLASS) &amp;&amp; \\</span>\n<span id=\"line3699\">3699. -\t\t\t objects[otmp-&gt;otyp].oc_skill &gt;= -P_CROSSBOW &amp;&amp; \\</span>\n<span id=\"line3700\">3700. -\t\t\t objects[otmp-&gt;otyp].oc_skill &lt;= -P_BOW)</span>\n<span id=\"line3701\">3701. +\t\t\t (objects[otmp-&gt;otyp].oc_wprop &amp; WP_WEAPONTYPE) == WP_AMMUNITION)</span>\n<span id=\"line3702\">3702. +#define is_bullet(otmp)\t(otmp-&gt;oclass == WEAPON_CLASS &amp;&amp; \\</span>\n<span id=\"line3703\">3703. +\t\t\t (objects[otmp-&gt;otyp].oc_wprop &amp; (WP_WEAPONTYPE|WP_SUBTYPE)) == \\</span>\n<span id=\"line3704\">3704. +\t\t\t (WP_AMMUNITION|WP_BULLET))</span>\n<span id=\"line3705\">3705.  #define ammo_and_launcher(otmp,ltmp) \\</span>\n<span id=\"line3706\">3706. -\t\t\t (is_ammo(otmp) &amp;&amp; (ltmp) &amp;&amp; \\</span>\n<span id=\"line3707\">3707. -\t\t\t objects[(otmp)-&gt;otyp].oc_skill == -objects[(ltmp)-&gt;otyp].oc_skill)</span>\n<span id=\"line3708\">3708. -#define is_missile(otmp)\t((otmp-&gt;oclass == WEAPON_CLASS || \\</span>\n<span id=\"line3709\">3709. -\t\t\t otmp-&gt;oclass == TOOL_CLASS) &amp;&amp; \\</span>\n<span id=\"line3710\">3710. -\t\t\t objects[otmp-&gt;otyp].oc_skill &gt;= -P_BOOMERANG &amp;&amp; \\</span>\n<span id=\"line3711\">3711. -\t\t\t objects[otmp-&gt;otyp].oc_skill &lt;= -P_DART)</span>\n<span id=\"line3712\">3712. +\t\t\t (is_ammo(otmp) &amp;&amp; (ltmp) &amp;&amp; is_launcher(ltmp) &amp;&amp; \\</span>\n<span id=\"line3713\">3713. +\t\t\t ((objects[(otmp)-&gt;otyp].oc_wprop &amp; WP_SUBTYPE) == \\</span>\n<span id=\"line3714\">3714. +\t\t\t  (objects[(ltmp)-&gt;otyp].oc_wprop &amp; WP_SUBTYPE) ))</span>\n<span id=\"line3715\">3715. +#define is_missile(otmp)\t(otmp-&gt;oclass == WEAPON_CLASS &amp;&amp; \\</span>\n<span id=\"line3716\">3716. +\t\t\t (objects[otmp-&gt;otyp].oc_wprop &amp; WP_THROWING) &amp;&amp; \\</span>\n<span id=\"line3717\">3717. +\t\t\t (objects[otmp-&gt;otyp].oc_wprop &amp; WP_CONSUMABLE) &amp;&amp; \\</span>\n<span id=\"line3718\">3718. +\t\t\t (objects[otmp-&gt;otyp].oc_wprop &amp; WP_WEAPONTYPE) == WP_NORMAL)</span>\n<span id=\"line3719\">3719.  #define is_weptool(o)\t((o)-&gt;oclass == TOOL_CLASS &amp;&amp; \\</span>\n<span id=\"line3720\">3720.  \t\t\t objects[(o)-&gt;otyp].oc_skill&#160;!= P_NONE)</span>\n<span id=\"line3721\">3721.  #define bimanual(otmp)\t((otmp-&gt;oclass == WEAPON_CLASS || \\</span>\n<span id=\"line3722\">3722.  \t\t\t otmp-&gt;oclass == TOOL_CLASS) &amp;&amp; \\</span>\n<span id=\"line3723\">3723.  \t\t\t objects[otmp-&gt;otyp].oc_bimanual)</span>\n<span id=\"line3724\">3724. -#define is_multigen(otmp)\t(otmp-&gt;oclass == WEAPON_CLASS &amp;&amp; \\</span>\n<span id=\"line3725\">3725. -\t\t\t objects[otmp-&gt;otyp].oc_skill &gt;= -P_SHURIKEN &amp;&amp; \\</span>\n<span id=\"line3726\">3726. -\t\t\t objects[otmp-&gt;otyp].oc_skill &lt;= -P_BOW)</span>\n<span id=\"line3727\">3727. +#define is_multigen(otmp)\t(is_ammo(otmp) || is_missile(otmp))</span>\n<span id=\"line3728\">3728.  #define is_poisonable(otmp)\t(otmp-&gt;oclass == WEAPON_CLASS &amp;&amp; \\</span>\n<span id=\"line3729\">3729. -\t\t\t objects[otmp-&gt;otyp].oc_skill &gt;= -P_SHURIKEN &amp;&amp; \\</span>\n<span id=\"line3730\">3730. -\t\t\t objects[otmp-&gt;otyp].oc_skill &lt;= -P_BOW)</span>\n<span id=\"line3731\">3731. -#define uslinging()\t(uwep &amp;&amp; objects[uwep-&gt;otyp].oc_skill == P_SLING)</span>\n<span id=\"line3732\">3732. +\t\t\t(objects[otmp-&gt;otyp].oc_wprop &amp; WP_POISONABLE))</span>\n<span id=\"line3733\">3733. +#define is_consumable(otmp)\t((otmp-&gt;oclass == WEAPON_CLASS || otmp-&gt;oclass == GEM_CLASS) &amp;&amp; \\</span>\n<span id=\"line3734\">3734. +\t\t\t(objects[otmp-&gt;otyp].oc_wprop &amp; WP_CONSUMABLE))</span>\n<span id=\"line3735\">3735. +#define is_ranged(otmp)\t((otmp-&gt;oclass == WEAPON_CLASS || is_weptool(otmp)) &amp;&amp; \\</span>\n<span id=\"line3736\">3736. +\t\t\t (objects[otmp-&gt;otyp].oc_wprop &amp; WP_WEAPONTYPE) == WP_RANGED)</span>\n<span id=\"line3737\">3737. +#define uslinging()\t(uwep &amp;&amp; uwep-&gt;oclass == WEAPON_CLASS &amp;&amp; \\</span>\n<span id=\"line3738\">3738. +\t\t\t(objects[uwep-&gt;otyp].oc_wprop &amp; (WP_WEAPONTYPE|WP_SUBTYPE)) == (WP_LAUNCHER|WP_STONE))</span>\n<span id=\"line3739\">3739. +#define is_hammer(otmp)\t(otmp-&gt;oclass == WEAPON_CLASS &amp;&amp; \\</span>\n<span id=\"line3740\">3740. +\t\t\t (objects[otmp-&gt;otyp].oc_skill == P_CRUSHING_GROUP || \\</span>\n<span id=\"line3741\">3741. +\t\t\t  objects[otmp-&gt;otyp].oc_skill == P_FLAIL_GROUP || \\</span>\n<span id=\"line3742\">3742. +\t\t\t  otmp-&gt;otyp == LUCERN_HAMMER || otmp-&gt;otyp == BEC_DE_CORBIN))</span>\n<span id=\"line3743\">3743. +/* The amount added to the victim's total hit points to insure that the</span>\n<span id=\"line3744\">3744. +   victim will be killed even after damage bonus/penalty adjustments.</span>\n<span id=\"line3745\">3745. +   Most such penalties are small, and 200 is plenty; the exception is</span>\n<span id=\"line3746\">3746. +   half physical damage.  3.3.1 and previous versions tried to use a very</span>\n<span id=\"line3747\">3747. +   large number to account for this case; now, we just compute the fatal</span>\n<span id=\"line3748\">3748. +   damage by adding it to 2 times the total hit points instead of 1 time.</span>\n<span id=\"line3749\">3749. +   Note: this will still break if they have more than about half the number</span>\n<span id=\"line3750\">3750. +   of hit points that will fit in a 15 bit integer. */</span>\n<span id=\"line3751\">3751. +#define FATAL_DAMAGE_MODIFIER 200</span>\n<span id=\"line3752\">3752.  </span>\n<span id=\"line3753\">3753.  /* Armor */</span>\n<span id=\"line3754\">3754.  #define is_shield(otmp) (otmp-&gt;oclass == ARMOR_CLASS &amp;&amp; \\</span>\n<span id=\"line3755\">3755. @@ -185,6 +209,10 @@ struct obj {</span>\n<span id=\"line3756\">3756.  \t\t\t objects[otmp-&gt;otyp].oc_armcat == ARM_SHIRT)</span>\n<span id=\"line3757\">3757.  #define is_suit(otmp)\t(otmp-&gt;oclass == ARMOR_CLASS &amp;&amp; \\</span>\n<span id=\"line3758\">3758.  \t\t\t objects[otmp-&gt;otyp].oc_armcat == ARM_SUIT)</span>\n<span id=\"line3759\">3759. +#define is_robe(otmp)\t(otmp-&gt;oclass == ARMOR_CLASS &amp;&amp; \\</span>\n<span id=\"line3760\">3760. +\t\t\t otmp-&gt;otyp &gt;= ROBE &amp;&amp; otmp-&gt;otyp &lt;= ROBE_OF_WEAKNESS)</span>\n<span id=\"line3761\">3761. +#define is_clothes(otmp) (otmp-&gt;oclass == ARMOR_CLASS &amp;&amp; \\</span>\n<span id=\"line3762\">3762. +\t\t\t  (get_material(otmp) == CLOTH || otmp-&gt;otyp == LEATHER_JACKET))</span>\n<span id=\"line3763\">3763.  #define is_elven_armor(otmp)\t((otmp)-&gt;otyp == ELVEN_LEATHER_HELM\\</span>\n<span id=\"line3764\">3764.  \t\t\t\t|| (otmp)-&gt;otyp == ELVEN_MITHRIL_COAT\\</span>\n<span id=\"line3765\">3765.  \t\t\t\t|| (otmp)-&gt;otyp == ELVEN_CLOAK\\</span>\n<span id=\"line3766\">3766. @@ -202,7 +230,9 @@ struct obj {</span>\n<span id=\"line3767\">3767.  \t\t\t\t|| (otmp)-&gt;otyp == DWARVISH_ROUNDSHIELD)</span>\n<span id=\"line3768\">3768.  #define is_gnomish_armor(otmp)\t(FALSE)</span>\n<span id=\"line3769\">3769.  </span>\n<span id=\"line3770\">3770. -\t\t\t\t</span>\n<span id=\"line3771\">3771. +#define WEP_ENCHANT_MAX  5</span>\n<span id=\"line3772\">3772. +#define WEP_ENCHANT_WARN 3</span>\n<span id=\"line3773\">3773. +</span>\n<span id=\"line3774\">3774.  /* Eggs and other food */</span>\n<span id=\"line3775\">3775.  #define MAX_EGG_HATCH_TIME 200\t/* longest an egg can remain unhatched */</span>\n<span id=\"line3776\">3776.  #define stale_egg(egg)\t((monstermoves - (egg)-&gt;age) &gt; (2*MAX_EGG_HATCH_TIME))</span>\n<span id=\"line3777\">3777. @@ -222,6 +252,8 @@ struct obj {</span>\n<span id=\"line3778\">3778.  #define Is_mbag(otmp)\t(otmp-&gt;otyp == BAG_OF_HOLDING || \\</span>\n<span id=\"line3779\">3779.  \t\t\t otmp-&gt;otyp == BAG_OF_TRICKS)</span>\n<span id=\"line3780\">3780.  </span>\n<span id=\"line3781\">3781. +#define Is_sokoprize(otmp)\t((otmp)-&gt;sokoprize &amp;&amp; !Is_box(otmp))</span>\n<span id=\"line3782\">3782. +</span>\n<span id=\"line3783\">3783.  /* dragon gear */</span>\n<span id=\"line3784\">3784.  #define Is_dragon_scales(obj)\t((obj)-&gt;otyp &gt;= GRAY_DRAGON_SCALES &amp;&amp; \\</span>\n<span id=\"line3785\">3785.  \t\t\t\t (obj)-&gt;otyp &lt;= YELLOW_DRAGON_SCALES)</span>\n<span id=\"line3786\">3786. @@ -260,9 +292,14 @@ struct obj {</span>\n<span id=\"line3787\">3787.  /* Gnomish gear */</span>\n<span id=\"line3788\">3788.  #define is_gnomish_obj(otmp)\t(is_gnomish_armor(otmp))</span>\n<span id=\"line3789\">3789.  </span>\n<span id=\"line3790\">3790. +#define is_special_armor(obj)\t(is_elven_armor(obj) || \\</span>\n<span id=\"line3791\">3791. +\t\t\t(Role_if(PM_WIZARD) &amp;&amp; (obj)-&gt;otyp == CORNUTHAUM))</span>\n<span id=\"line3792\">3792. +</span>\n<span id=\"line3793\">3793. +</span>\n<span id=\"line3794\">3794.  /* Light sources */</span>\n<span id=\"line3795\">3795.  #define Is_candle(otmp) (otmp-&gt;otyp == TALLOW_CANDLE || \\</span>\n<span id=\"line3796\">3796. -\t\t\t otmp-&gt;otyp == WAX_CANDLE)</span>\n<span id=\"line3797\">3797. +\t\t\t otmp-&gt;otyp == WAX_CANDLE || \\</span>\n<span id=\"line3798\">3798. +\t\t\t otmp-&gt;otyp == MAGIC_CANDLE)</span>\n<span id=\"line3799\">3799.  #define MAX_OIL_IN_FLASK 400\t/* maximum amount of oil in a potion of oil */</span>\n<span id=\"line3800\">3800.  </span>\n<span id=\"line3801\">3801.  /* MAGIC_LAMP intentionally excluded below */</span>\n<span id=\"line3802\">3802. @@ -289,10 +326,10 @@ struct obj {</span>\n<span id=\"line3803\">3803.  </span>\n<span id=\"line3804\">3804.  /* misc */</span>\n<span id=\"line3805\">3805.  #ifdef KOPS</span>\n<span id=\"line3806\">3806. -#define is_flimsy(otmp)\t\t(objects[(otmp)-&gt;otyp].oc_material &lt;= LEATHER || \\</span>\n<span id=\"line3807\">3807. +#define is_flimsy(otmp)\t\t(get_material(otmp) &lt;= LEATHER || \\</span>\n<span id=\"line3808\">3808.  \t\t\t\t (otmp)-&gt;otyp == RUBBER_HOSE)</span>\n<span id=\"line3809\">3809.  #else</span>\n<span id=\"line3810\">3810. -#define is_flimsy(otmp)\t\t(objects[(otmp)-&gt;otyp].oc_material &lt;= LEATHER)</span>\n<span id=\"line3811\">3811. +#define is_flimsy(otmp)\t\t(get_material(otmp) &lt;= LEATHER) /* material patch */</span>\n<span id=\"line3812\">3812.  #endif</span>\n<span id=\"line3813\">3813.  </span>\n<span id=\"line3814\">3814.  /* helpers, simple enough to be macros */</span>\n</pre>\n<p>Among the changes to objects: support for the <a href=\"/index.php?title=Sokoban_prize&amp;action=edit&amp;redlink=1\" class=\"new\" title=\"Sokoban prize (page does not exist)\">Sokoban prizes</a>, the three items from which you may take only one; support for unusual <a href=\"/wiki/Material\" title=\"Material\">materials</a> for some objects. Also, some of the macros here have to be adjusted to work with the new <a href=\"/wiki/Skills_(NetHack_brass)\" title=\"Skills (NetHack brass)\">skills</a> system.\n</p>\n<h3><span class=\"mw-headline\" id=\"zap.c\">zap.c</span></h3>\n<pre><span id=\"line30960\">30960.diff -pruN nethack-3.4.3/src/zap.c nhbrass-040923/src/zap.c</span>\n<span id=\"line30961\">30961.--- nethack-3.4.3/src/zap.c\tSun Dec  7 18:39:13 2003</span>\n<span id=\"line30962\">30962.+++ nhbrass-040923/src/zap.c\tSun Jun 13 13:37:04 2004</span>\n<span id=\"line30963\">30963.@@ -48,7 +48,8 @@ STATIC_DCL int FDECL(spell_hit_bonus, (i</span>\n<span id=\"line30964\">30964. #define ZT_LIGHTNING\t\t(AD_ELEC-1)</span>\n<span id=\"line30965\">30965. #define ZT_POISON_GAS\t\t(AD_DRST-1)</span>\n<span id=\"line30966\">30966. #define ZT_ACID\t\t\t(AD_ACID-1)</span>\n<span id=\"line30967\">30967.-/* 8 and 9 are currently unassigned */</span>\n<span id=\"line30968\">30968.+#define ZT_PARALYSIS\t\t(AD_PLYS-1)</span>\n<span id=\"line30969\">30969.+/* 9 is currently unassigned */</span>\n<span id=\"line30970\">30970. </span>\n<span id=\"line30971\">30971. #define ZT_WAND(x)\t\t(x)</span>\n<span id=\"line30972\">30972. #define ZT_SPELL(x)\t\t(10+(x))</span>\n<span id=\"line30973\">30973.@@ -93,7 +94,7 @@ const char * const flash_types[] = {\t/* </span>\n<span id=\"line30974\">30974. \t\"blast of lightning\",</span>\n<span id=\"line30975\">30975. \t\"blast of poison gas\",</span>\n<span id=\"line30976\">30976. \t\"blast of acid\",</span>\n<span id=\"line30977\">30977.-\t\"\",</span>\n<span id=\"line30978\">30978.+\t\"blast of paralysis gas\",</span>\n<span id=\"line30979\">30979. \t\"\"</span>\n<span id=\"line30980\">30980. };</span>\n<span id=\"line30981\">30981. </span>\n<span id=\"line30982\">30982.@@ -259,7 +260,10 @@ struct obj *otmp;</span>\n<span id=\"line30983\">30983. \t\treveal_invis = TRUE;</span>\n<span id=\"line30984\">30984. \t    if (mtmp-&gt;data&#160;!= &amp;mons[PM_PESTILENCE]) {</span>\n<span id=\"line30985\">30985. \t\twake = FALSE;\t\t/* wakeup() makes the target angry */</span>\n<span id=\"line30986\">30986.-\t\tmtmp-&gt;mhp += d(6, otyp == SPE_EXTRA_HEALING&#160;? 8&#160;: 4);</span>\n<span id=\"line30987\">30987.+\t\tmtmp-&gt;mhp += d( 6+(Role_if(PM_HEALER)&#160;? 1&#160;: 0)+</span>\n<span id=\"line30988\">30988.+\t\t\t\t  ((flags.female &amp;&amp; uarmh &amp;&amp; uarmh-&gt;otyp == NURSE_CAP)&#160;? 1&#160;: 0)+</span>\n<span id=\"line30989\">30989.+\t\t\t\t  ((flags.female &amp;&amp; uarm  &amp;&amp; uarm-&gt;otyp  == NURSE_UNIFORM)&#160;? 1&#160;: 0),</span>\n<span id=\"line30990\">30990.+\t\t\t\totyp == SPE_EXTRA_HEALING&#160;? 8&#160;: 4);</span>\n<span id=\"line30991\">30991. \t\tif (mtmp-&gt;mhp &gt; mtmp-&gt;mhpmax)</span>\n<span id=\"line30992\">30992. \t\t    mtmp-&gt;mhp = mtmp-&gt;mhpmax;</span>\n<span id=\"line30993\">30993. \t\tif (mtmp-&gt;mblinded) {</span>\n<span id=\"line30994\">30994.@@ -354,7 +358,7 @@ struct obj *otmp;</span>\n<span id=\"line30995\">30995. \t */</span>\n<span id=\"line30996\">30996. \tif (reveal_invis) {</span>\n<span id=\"line30997\">30997. \t    if (mtmp-&gt;mhp &gt; 0 &amp;&amp; cansee(bhitpos.x, bhitpos.y) &amp;&amp;</span>\n<span id=\"line30998\">30998.-\t\t\t\t\t\t\t!canspotmon(mtmp))</span>\n<span id=\"line30999\">30999.+\t\t\t\t\t\t\t!canspotmons(mtmp))</span>\n<span id=\"line31000\">31000. \t\tmap_invisible(bhitpos.x, bhitpos.y);</span>\n<span id=\"line31001\">31001. \t}</span>\n<span id=\"line31002\">31002. \treturn 0;</span>\n<span id=\"line31003\">31003.@@ -674,7 +678,7 @@ register struct obj *obj;</span>\n<span id=\"line31004\">31004. \t\t    }</span>\n<span id=\"line31005\">31005. \t\t}</span>\n<span id=\"line31006\">31006. \t\tif (mtmp) {</span>\n<span id=\"line31007\">31007.-\t\t\tif (obj-&gt;oeaten)</span>\n<span id=\"line31008\">31008.+\t\t\tif (obj-&gt;oclass == FOOD_CLASS &amp;&amp; obj-&gt;oeaten)</span>\n<span id=\"line31009\">31009. \t\t\t\tmtmp-&gt;mhp = eaten_stat(mtmp-&gt;mhp, obj);</span>\n<span id=\"line31010\">31010. \t\t\t/* track that this monster was revived at least once */</span>\n<span id=\"line31011\">31011. \t\t\tmtmp-&gt;mrevived = 1;</span>\n<span id=\"line31012\">31012.@@ -822,6 +826,7 @@ register struct obj *obj;</span>\n<span id=\"line31013\">31013. \t\tcase RIN_GAIN_CONSTITUTION:</span>\n<span id=\"line31014\">31014. \t\t\tif ((obj-&gt;owornmask &amp; W_RING) &amp;&amp; u_ring) {</span>\n<span id=\"line31015\">31015. \t\t\t\tABON(A_CON) -= obj-&gt;spe;</span>\n<span id=\"line31016\">31016.+\t\t\t\trecalchpmax();</span>\n<span id=\"line31017\">31017. \t\t\t\tflags.botl = 1;</span>\n<span id=\"line31018\">31018. \t\t\t}</span>\n<span id=\"line31019\">31019. \t\t\tbreak;</span>\n<span id=\"line31020\">31020.@@ -839,12 +844,16 @@ register struct obj *obj;</span>\n<span id=\"line31021\">31021. \t\t\tif ((obj-&gt;owornmask &amp; W_RING) &amp;&amp; u_ring)</span>\n<span id=\"line31022\">31022. \t\t\t\tu.udaminc -= obj-&gt;spe;</span>\n<span id=\"line31023\">31023. \t\t\tbreak;</span>\n<span id=\"line31024\">31024.-\t\tcase GAUNTLETS_OF_DEXTERITY:</span>\n<span id=\"line31025\">31025.-\t\t\tif ((obj-&gt;owornmask &amp; W_ARMG) &amp;&amp; (obj == uarmg)) {</span>\n<span id=\"line31026\">31026.-\t\t\t\tABON(A_DEX) -= obj-&gt;spe;</span>\n<span id=\"line31027\">31027.-\t\t\t\tflags.botl = 1;</span>\n<span id=\"line31028\">31028.-\t\t\t}</span>\n<span id=\"line31029\">31029.+\t\tcase RIN_PROTECTION:</span>\n<span id=\"line31030\">31030.+\t\t\tif ((obj-&gt;owornmask &amp; W_RING) &amp;&amp; u_ring)</span>\n<span id=\"line31031\">31031.+\t\t\t\tu.uprotection -= obj-&gt;spe;</span>\n<span id=\"line31032\">31032. \t\t\tbreak;</span>\n<span id=\"line31033\">31033.+//\t\tcase GAUNTLETS_OF_DEXTERITY:</span>\n<span id=\"line31034\">31034.+//\t\t\tif ((obj-&gt;owornmask &amp; W_ARMG) &amp;&amp; (obj == uarmg)) {</span>\n<span id=\"line31035\">31035.+//\t\t\t\tABON(A_DEX) -= obj-&gt;spe;</span>\n<span id=\"line31036\">31036.+//\t\t\t\tflags.botl = 1;</span>\n<span id=\"line31037\">31037.+//\t\t\t}</span>\n<span id=\"line31038\">31038.+//\t\t\tbreak;</span>\n<span id=\"line31039\">31039. \t\tcase HELM_OF_BRILLIANCE:</span>\n<span id=\"line31040\">31040. \t\t\tif ((obj-&gt;owornmask &amp; W_ARMH) &amp;&amp; (obj == uarmh)) {</span>\n<span id=\"line31041\">31041. \t\t\t\tABON(A_INT) -= obj-&gt;spe;</span>\n<span id=\"line31042\">31042.@@ -938,6 +947,7 @@ register struct obj *obj;</span>\n<span id=\"line31043\">31043. \tcase RIN_GAIN_CONSTITUTION:</span>\n<span id=\"line31044\">31044. \t    if ((obj-&gt;owornmask &amp; W_RING) &amp;&amp; u_ring) {</span>\n<span id=\"line31045\">31045. \t    \tABON(A_CON)--;</span>\n<span id=\"line31046\">31046.+\t\trecalchpmax();</span>\n<span id=\"line31047\">31047. \t    \tflags.botl = 1;</span>\n<span id=\"line31048\">31048. \t    }</span>\n<span id=\"line31049\">31049. \t    break;</span>\n<span id=\"line31050\">31050.@@ -1040,7 +1050,7 @@ polyuse(objhdr, mat, minwt)</span>\n<span id=\"line31051\">31051. \tif (otmp-&gt;otyp == SCR_MAIL) continue;</span>\n<span id=\"line31052\">31052. #endif</span>\n<span id=\"line31053\">31053. </span>\n<span id=\"line31054\">31054.-\tif (((int) objects[otmp-&gt;otyp].oc_material == mat) ==</span>\n<span id=\"line31055\">31055.+\tif (((int) get_material(otmp) == mat) ==</span>\n<span id=\"line31056\">31056. \t\t(rn2(minwt + 1)&#160;!= 0)) {</span>\n<span id=\"line31057\">31057. \t    /* appropriately add damage to bill */</span>\n<span id=\"line31058\">31058. \t    if (costly_spot(otmp-&gt;ox, otmp-&gt;oy)) {</span>\n<span id=\"line31059\">31059.@@ -1161,7 +1171,7 @@ struct obj *obj;</span>\n<span id=\"line31060\">31060. \t    /* some may metamorphosize */</span>\n<span id=\"line31061\">31061. \t    for (i = obj-&gt;quan; i; i--)</span>\n<span id=\"line31062\">31062. \t\tif (! rn2(Luck + 45)) {</span>\n<span id=\"line31063\">31063.-\t\t    poly_zapped = objects[obj-&gt;otyp].oc_material;</span>\n<span id=\"line31064\">31064.+\t\t    poly_zapped = get_material(obj);</span>\n<span id=\"line31065\">31065. \t\t    break;</span>\n<span id=\"line31066\">31066. \t\t}</span>\n<span id=\"line31067\">31067. \t}</span>\n<span id=\"line31068\">31068.@@ -1348,12 +1358,20 @@ poly_obj(obj, id)</span>\n<span id=\"line31069\">31069. </span>\n<span id=\"line31070\">31070. \tcase GEM_CLASS:</span>\n<span id=\"line31071\">31071. \t    if (otmp-&gt;quan &gt; (long) rnd(4) &amp;&amp;</span>\n<span id=\"line31072\">31072.-\t\t    objects[obj-&gt;otyp].oc_material == MINERAL &amp;&amp;</span>\n<span id=\"line31073\">31073.-\t\t    objects[otmp-&gt;otyp].oc_material&#160;!= MINERAL) {</span>\n<span id=\"line31074\">31074.+\t\t    get_material(obj) == MINERAL &amp;&amp;</span>\n<span id=\"line31075\">31075.+\t\t    get_material(otmp)&#160;!= MINERAL) {</span>\n<span id=\"line31076\">31076. \t\totmp-&gt;otyp = ROCK;\t/* transmutation backfired */</span>\n<span id=\"line31077\">31077. \t\totmp-&gt;quan /= 2L;\t/* some material has been lost */</span>\n<span id=\"line31078\">31078. \t    }</span>\n<span id=\"line31079\">31079. \t    break;</span>\n<span id=\"line31080\">31080.+</span>\n<span id=\"line31081\">31081.+\tcase FOOD_CLASS:</span>\n<span id=\"line31082\">31082.+\t    if (otmp-&gt;otyp == CORPSE) {</span>\n<span id=\"line31083\">31083.+\t\totmp-&gt;age = monstermoves; /* if stone-to-freshed, make it fresh */</span>\n<span id=\"line31084\">31084.+\t\tstart_corpse_timeout(otmp);</span>\n<span id=\"line31085\">31085.+\t    }</span>\n<span id=\"line31086\">31086.+\t    break;</span>\n<span id=\"line31087\">31087.+</span>\n<span id=\"line31088\">31088. \t}</span>\n<span id=\"line31089\">31089. </span>\n<span id=\"line31090\">31090. \t/* update the weight */</span>\n<span id=\"line31091\">31091.@@ -1603,8 +1621,8 @@ struct obj *obj, *otmp;</span>\n<span id=\"line31092\">31092. \t\tbreak;</span>\n<span id=\"line31093\">31093. \tcase SPE_STONE_TO_FLESH:</span>\n<span id=\"line31094\">31094. \t\trefresh_x = obj-&gt;ox; refresh_y = obj-&gt;oy;</span>\n<span id=\"line31095\">31095.-\t\tif (objects[obj-&gt;otyp].oc_material&#160;!= MINERAL &amp;&amp;</span>\n<span id=\"line31096\">31096.-\t\t\tobjects[obj-&gt;otyp].oc_material&#160;!= GEMSTONE) {</span>\n<span id=\"line31097\">31097.+\t\tif (get_material(obj)&#160;!= MINERAL &amp;&amp;</span>\n<span id=\"line31098\">31098.+\t\t\tget_material(obj)&#160;!= GEMSTONE) {</span>\n<span id=\"line31099\">31099. \t\t    res = 0;</span>\n<span id=\"line31100\">31100. \t\t    break;</span>\n<span id=\"line31101\">31101. \t\t}</span>\n<span id=\"line31102\">31102.@@ -1734,6 +1752,9 @@ bhitpile(obj,fhito,tx,ty)</span>\n<span id=\"line31103\">31103. \t/* Fix for polymorph bug, Tim Wright */</span>\n<span id=\"line31104\">31104. \tnext_obj = otmp-&gt;nexthere;</span>\n<span id=\"line31105\">31105. \thitanything += (*fhito)(otmp, obj);</span>\n<span id=\"line31106\">31106.+#ifdef NOPOLYPILE</span>\n<span id=\"line31107\">31107.+\tif (obj-&gt;otyp == WAN_POLYMORPH || obj-&gt;otyp == SPE_POLYMORPH) break;</span>\n<span id=\"line31108\">31108.+#endif /*NOPOLYPILE*/</span>\n<span id=\"line31109\">31109.     }</span>\n<span id=\"line31110\">31110.     if(poly_zapped &gt;= 0)</span>\n<span id=\"line31111\">31111. \tcreate_polymon(level.objects[tx][ty], poly_zapped);</span>\n<span id=\"line31112\">31112.@@ -1829,7 +1850,7 @@ dozap()</span>\n<span id=\"line31113\">31113. \tint\tdamage;</span>\n<span id=\"line31114\">31114. </span>\n<span id=\"line31115\">31115. \tif(check_capacity((char *)0)) return(0);</span>\n<span id=\"line31116\">31116.-\tobj = getobj(zap_syms, \"zap\");</span>\n<span id=\"line31117\">31117.+\tobj = getobj(zap_syms, \"zap\", 0);</span>\n<span id=\"line31118\">31118. \tif(!obj) return(0);</span>\n<span id=\"line31119\">31119. </span>\n<span id=\"line31120\">31120. \tcheck_unpaid(obj);</span>\n<span id=\"line31121\">31121.@@ -1883,29 +1904,31 @@ boolean ordinary;</span>\n<span id=\"line31122\">31122. \t\tcase WAN_STRIKING:</span>\n<span id=\"line31123\">31123. \t\t    makeknown(WAN_STRIKING);</span>\n<span id=\"line31124\">31124. \t\tcase SPE_FORCE_BOLT:</span>\n<span id=\"line31125\">31125.-\t\t    if(Antimagic) {</span>\n<span id=\"line31126\">31126.-\t\t\tshieldeff(u.ux, u.uy);</span>\n<span id=\"line31127\">31127.-\t\t\tpline(\"Boing!\");</span>\n<span id=\"line31128\">31128.-\t\t    } else {</span>\n<span id=\"line31129\">31129.+/* Striking/force bolt is now physical attack */</span>\n<span id=\"line31130\">31130.+//\t\t    if(Antimagic) {</span>\n<span id=\"line31131\">31131.+//\t\t\tshieldeff(u.ux, u.uy);</span>\n<span id=\"line31132\">31132.+//\t\t\tpline(\"Boing!\");</span>\n<span id=\"line31133\">31133.+//\t\t    } else {</span>\n<span id=\"line31134\">31134. \t\t\tif (ordinary) {</span>\n<span id=\"line31135\">31135. \t\t\t    You(\"bash yourself!\");</span>\n<span id=\"line31136\">31136. \t\t\t    damage = d(2,12);</span>\n<span id=\"line31137\">31137. \t\t\t} else</span>\n<span id=\"line31138\">31138. \t\t\t    damage = d(1 + obj-&gt;spe,6);</span>\n<span id=\"line31139\">31139. \t\t\texercise(A_STR, FALSE);</span>\n<span id=\"line31140\">31140.-\t\t    }</span>\n<span id=\"line31141\">31141.+//\t\t    }</span>\n<span id=\"line31142\">31142. \t\t    break;</span>\n<span id=\"line31143\">31143. </span>\n<span id=\"line31144\">31144. \t\tcase WAN_LIGHTNING:</span>\n<span id=\"line31145\">31145. \t\t    makeknown(WAN_LIGHTNING);</span>\n<span id=\"line31146\">31146.-\t\t    if (!Shock_resistance) {</span>\n<span id=\"line31147\">31147.-\t\t\tYou(\"shock yourself!\");</span>\n<span id=\"line31148\">31148.-\t\t\tdamage = d(12,6);</span>\n<span id=\"line31149\">31149.-\t\t\texercise(A_CON, FALSE);</span>\n<span id=\"line31150\">31150.-\t\t    } else {</span>\n<span id=\"line31151\">31151.+\t\t    if (Shock_resistance &amp;&amp; is_full_resist(SHOCK_RES)) {</span>\n<span id=\"line31152\">31152. \t\t\tshieldeff(u.ux, u.uy);</span>\n<span id=\"line31153\">31153. \t\t\tYou(\"zap yourself, but seem unharmed.\");</span>\n<span id=\"line31154\">31154. \t\t\tugolemeffects(AD_ELEC, d(12,6));</span>\n<span id=\"line31155\">31155.+\t\t\tbreak;</span>\n<span id=\"line31156\">31156.+\t\t    } else {</span>\n<span id=\"line31157\">31157.+\t\t\tYou(\"shock yourself!\");</span>\n<span id=\"line31158\">31158.+\t\t\tdamage = d((Shock_resistance)&#160;? 3: 12, 6);</span>\n<span id=\"line31159\">31159.+\t\t\texercise(A_CON, FALSE);</span>\n<span id=\"line31160\">31160. \t\t    }</span>\n<span id=\"line31161\">31161. \t\t    destroy_item(WAND_CLASS, AD_ELEC);</span>\n<span id=\"line31162\">31162. \t\t    destroy_item(RING_CLASS, AD_ELEC);</span>\n<span id=\"line31163\">31163.@@ -1923,32 +1946,33 @@ boolean ordinary;</span>\n<span id=\"line31164\">31164. \t\tcase WAN_FIRE:</span>\n<span id=\"line31165\">31165. \t\t    makeknown(WAN_FIRE);</span>\n<span id=\"line31166\">31166. \t\tcase FIRE_HORN:</span>\n<span id=\"line31167\">31167.-\t\t    if (Fire_resistance) {</span>\n<span id=\"line31168\">31168.+\t\t    if (Fire_resistance &amp;&amp; is_full_resist(FIRE_RES)) {</span>\n<span id=\"line31169\">31169. \t\t\tshieldeff(u.ux, u.uy);</span>\n<span id=\"line31170\">31170. \t\t\tYou_feel(\"rather warm.\");</span>\n<span id=\"line31171\">31171. \t\t\tugolemeffects(AD_FIRE, d(12,6));</span>\n<span id=\"line31172\">31172. \t\t    } else {</span>\n<span id=\"line31173\">31173. \t\t\tpline(\"You've set yourself afire!\");</span>\n<span id=\"line31174\">31174.-\t\t\tdamage = d(12,6);</span>\n<span id=\"line31175\">31175.+\t\t\tdamage = d((Fire_resistance)&#160;? 3&#160;: 12, 6);</span>\n<span id=\"line31176\">31176. \t\t    }</span>\n<span id=\"line31177\">31177. \t\t    burn_away_slime();</span>\n<span id=\"line31178\">31178. \t\t    (void) burnarmor(&amp;youmonst);</span>\n<span id=\"line31179\">31179. \t\t    destroy_item(SCROLL_CLASS, AD_FIRE);</span>\n<span id=\"line31180\">31180. \t\t    destroy_item(POTION_CLASS, AD_FIRE);</span>\n<span id=\"line31181\">31181. \t\t    destroy_item(SPBOOK_CLASS, AD_FIRE);</span>\n<span id=\"line31182\">31182.+\t\t    destroy_item(TOOL_CLASS, AD_FIRE);</span>\n<span id=\"line31183\">31183. \t\t    break;</span>\n<span id=\"line31184\">31184. </span>\n<span id=\"line31185\">31185. \t\tcase WAN_COLD:</span>\n<span id=\"line31186\">31186. \t\t    makeknown(WAN_COLD);</span>\n<span id=\"line31187\">31187. \t\tcase SPE_CONE_OF_COLD:</span>\n<span id=\"line31188\">31188. \t\tcase FROST_HORN:</span>\n<span id=\"line31189\">31189.-\t\t    if (Cold_resistance) {</span>\n<span id=\"line31190\">31190.+\t\t    if (Cold_resistance &amp;&amp; is_full_resist(COLD_RES)) {</span>\n<span id=\"line31191\">31191. \t\t\tshieldeff(u.ux, u.uy);</span>\n<span id=\"line31192\">31192. \t\t\tYou_feel(\"a little chill.\");</span>\n<span id=\"line31193\">31193. \t\t\tugolemeffects(AD_COLD, d(12,6));</span>\n<span id=\"line31194\">31194. \t\t    } else {</span>\n<span id=\"line31195\">31195. \t\t\tYou(\"imitate a popsicle!\");</span>\n<span id=\"line31196\">31196.-\t\t\tdamage = d(12,6);</span>\n<span id=\"line31197\">31197.+\t\t\tdamage = d((Cold_resistance)&#160;? 3&#160;: 12, 6);</span>\n<span id=\"line31198\">31198. \t\t    }</span>\n<span id=\"line31199\">31199. \t\t    destroy_item(POTION_CLASS, AD_COLD);</span>\n<span id=\"line31200\">31200. \t\t    break;</span>\n<span id=\"line31201\">31201.@@ -1959,6 +1983,7 @@ boolean ordinary;</span>\n<span id=\"line31202\">31202. \t\t    if(Antimagic) {</span>\n<span id=\"line31203\">31203. \t\t\tshieldeff(u.ux, u.uy);</span>\n<span id=\"line31204\">31204. \t\t\tpline_The(\"missiles bounce!\");</span>\n<span id=\"line31205\">31205.+\t\t\tdamage_resistant_obj(ANTIMAGIC, 1);</span>\n<span id=\"line31206\">31206. \t\t    } else {</span>\n<span id=\"line31207\">31207. \t\t\tdamage = d(4,6);</span>\n<span id=\"line31208\">31208. \t\t\tpline(\"Idiot!  You've shot yourself!\");</span>\n<span id=\"line31209\">31209.@@ -1997,11 +2022,12 @@ boolean ordinary;</span>\n<span id=\"line31210\">31210. \t\t        You_feel(\"rather itchy under your %s.\", xname(uarmc));</span>\n<span id=\"line31211\">31211. \t\t        break;</span>\n<span id=\"line31212\">31212. \t\t    }</span>\n<span id=\"line31213\">31213.-\t\t    if (ordinary || !rn2(10)) {\t/* permanent */</span>\n<span id=\"line31214\">31214.-\t\t\tHInvis |= FROMOUTSIDE;</span>\n<span id=\"line31215\">31215.-\t\t    } else {\t\t\t/* temporary */</span>\n<span id=\"line31216\">31216.+/* never get permanent invisibity by wand - youkan */</span>\n<span id=\"line31217\">31217.+//\t\t    if (ordinary || !rn2(10)) {\t/* permanent */</span>\n<span id=\"line31218\">31218.+//\t\t\tHInvis |= FROMOUTSIDE;</span>\n<span id=\"line31219\">31219.+//\t\t    } else {\t\t\t/* temporary */</span>\n<span id=\"line31220\">31220. \t\t    \tincr_itimeout(&amp;HInvis, d(obj-&gt;spe, 250));</span>\n<span id=\"line31221\">31221.-\t\t    }</span>\n<span id=\"line31222\">31222.+//\t\t    }</span>\n<span id=\"line31223\">31223. \t\t    if (msg) {</span>\n<span id=\"line31224\">31224. \t\t\tmakeknown(WAN_MAKE_INVISIBLE);</span>\n<span id=\"line31225\">31225. \t\t\tnewsym(u.ux, u.uy);</span>\n<span id=\"line31226\">31226.@@ -2011,15 +2037,25 @@ boolean ordinary;</span>\n<span id=\"line31227\">31227. \t\t}</span>\n<span id=\"line31228\">31228. </span>\n<span id=\"line31229\">31229. \t\tcase WAN_SPEED_MONSTER:</span>\n<span id=\"line31230\">31230.-\t\t    if (!(HFast &amp; INTRINSIC)) {</span>\n<span id=\"line31231\">31231.-\t\t\tif (!Fast)</span>\n<span id=\"line31232\">31232.-\t\t\t    You(\"speed up.\");</span>\n<span id=\"line31233\">31233.-\t\t\telse</span>\n<span id=\"line31234\">31234.-\t\t\t    Your(\"quickness feels more natural.\");</span>\n<span id=\"line31235\">31235.-\t\t\tmakeknown(WAN_SPEED_MONSTER);</span>\n<span id=\"line31236\">31236.-\t\t\texercise(A_DEX, TRUE);</span>\n<span id=\"line31237\">31237.+\t\t    if (Very_fast) {</span>\n<span id=\"line31238\">31238.+\t\t\tYour(\"%s get new energy.\",</span>\n<span id=\"line31239\">31239.+\t\t\t\tmakeplural(body_part(LEG)));</span>\n<span id=\"line31240\">31240.+\t\t\tbreak;</span>\n<span id=\"line31241\">31241. \t\t    }</span>\n<span id=\"line31242\">31242.-\t\t    HFast |= FROMOUTSIDE;</span>\n<span id=\"line31243\">31243.+\t\t    You(\"are suddenly moving %sfaster.\",</span>\n<span id=\"line31244\">31244.+\t\t\t\t(Fast || BFast)&#160;? \"\"&#160;: \"much \");</span>\n<span id=\"line31245\">31245.+\t\t    u.uspdbon2 = 2;</span>\n<span id=\"line31246\">31246.+\t\t    incr_itimeout(&amp;HFast, rn1(10, 10));</span>\n<span id=\"line31247\">31247.+/* wand of speed monster no longer convey intrinsic speed */</span>\n<span id=\"line31248\">31248.+//\t\t    if (!(HFast &amp; INTRINSIC)) {</span>\n<span id=\"line31249\">31249.+//\t\t\tif (!Fast)</span>\n<span id=\"line31250\">31250.+//\t\t\t    You(\"speed up.\");</span>\n<span id=\"line31251\">31251.+//\t\t\telse</span>\n<span id=\"line31252\">31252.+//\t\t\t    Your(\"quickness feels more natural.\");</span>\n<span id=\"line31253\">31253.+//\t\t\tmakeknown(WAN_SPEED_MONSTER);</span>\n<span id=\"line31254\">31254.+//\t\t\texercise(A_DEX, TRUE);</span>\n<span id=\"line31255\">31255.+//\t\t    }</span>\n<span id=\"line31256\">31256.+//\t\t    HFast |= FROMOUTSIDE;</span>\n<span id=\"line31257\">31257. \t\t    break;</span>\n<span id=\"line31258\">31258. </span>\n<span id=\"line31259\">31259. \t\tcase WAN_SLEEP:</span>\n<span id=\"line31260\">31260.@@ -2049,7 +2085,7 @@ boolean ordinary;</span>\n<span id=\"line31261\">31261. </span>\n<span id=\"line31262\">31262. \t\tcase WAN_DEATH:</span>\n<span id=\"line31263\">31263. \t\tcase SPE_FINGER_OF_DEATH:</span>\n<span id=\"line31264\">31264.-\t\t    if (nonliving(youmonst.data) || is_demon(youmonst.data)) {</span>\n<span id=\"line31265\">31265.+\t\t    if (vs_death_factor(youmonst.data)) {</span>\n<span id=\"line31266\">31266. \t\t\tpline((obj-&gt;otyp == WAN_DEATH)&#160;?</span>\n<span id=\"line31267\">31267. \t\t\t  \"The wand shoots an apparently harmless beam at you.\"</span>\n<span id=\"line31268\">31268. \t\t\t  : \"You seem no deader than before.\");</span>\n<span id=\"line31269\">31269.@@ -2537,13 +2573,11 @@ int skill;</span>\n<span id=\"line31270\">31270.     int hit_bon = 0;</span>\n<span id=\"line31271\">31271.     int dex = ACURR(A_DEX);</span>\n<span id=\"line31272\">31272. </span>\n<span id=\"line31273\">31273.-    switch (P_SKILL(spell_skilltype(skill))) {</span>\n<span id=\"line31274\">31274.-\tcase P_ISRESTRICTED:</span>\n<span id=\"line31275\">31275.-\tcase P_UNSKILLED:   hit_bon = -4; break;</span>\n<span id=\"line31276\">31276.-\tcase P_BASIC:       hit_bon =  0; break;</span>\n<span id=\"line31277\">31277.-\tcase P_SKILLED:     hit_bon =  2; break;</span>\n<span id=\"line31278\">31278.-\tcase P_EXPERT:      hit_bon =  3; break;</span>\n<span id=\"line31279\">31279.-    }</span>\n<span id=\"line31280\">31280.+    schar hbon[11] = {</span>\n<span id=\"line31281\">31281.+\t   /*  0% 10% 20% 30% 40% 50% 60% 70% 80% 90% 100% */</span>\n<span id=\"line31282\">31282.+\t\t-4, -2, -2, -1, -1,  0,  0, +1, +2, +2, +3</span>\n<span id=\"line31283\">31283.+    };</span>\n<span id=\"line31284\">31284.+    hit_bon = hbon[P_SKILL(spell_skilltype(skill))/10];</span>\n<span id=\"line31285\">31285. </span>\n<span id=\"line31286\">31286.     if (dex &lt; 4)</span>\n<span id=\"line31287\">31287. \thit_bon -= 3;</span>\n<span id=\"line31288\">31288.@@ -2622,23 +2656,41 @@ int FDECL((*fhitm), (MONST_P, OBJ_P)),\t/</span>\n<span id=\"line31289\">31289.     FDECL((*fhito), (OBJ_P, OBJ_P));</span>\n<span id=\"line31290\">31290. struct obj *obj;\t\t\t/* object tossed/used */</span>\n<span id=\"line31291\">31291. {</span>\n<span id=\"line31292\">31292.-\tstruct monst *mtmp;</span>\n<span id=\"line31293\">31293.-\tuchar typ;</span>\n<span id=\"line31294\">31294.-\tboolean shopdoor = FALSE, point_blank = TRUE;</span>\n<span id=\"line31295\">31295.+\tregister boolean shopdoor = FALSE;</span>\n<span id=\"line31296\">31296.+\tint sx, sy;</span>\n<span id=\"line31297\">31297. </span>\n<span id=\"line31298\">31298. \tif (weapon == KICKED_WEAPON) {</span>\n<span id=\"line31299\">31299. \t    /* object starts one square in front of player */</span>\n<span id=\"line31300\">31300.-\t    bhitpos.x = u.ux + ddx;</span>\n<span id=\"line31301\">31301.-\t    bhitpos.y = u.uy + ddy;</span>\n<span id=\"line31302\">31302.+\t    sx = u.ux + ddx;</span>\n<span id=\"line31303\">31303.+\t    sy = u.uy + ddy;</span>\n<span id=\"line31304\">31304. \t    range--;</span>\n<span id=\"line31305\">31305. \t} else {</span>\n<span id=\"line31306\">31306.-\t    bhitpos.x = u.ux;</span>\n<span id=\"line31307\">31307.-\t    bhitpos.y = u.uy;</span>\n<span id=\"line31308\">31308.+\t    sx = u.ux;</span>\n<span id=\"line31309\">31309.+\t    sy = u.uy;</span>\n<span id=\"line31310\">31310. \t}</span>\n<span id=\"line31311\">31311.+\treturn bhitcore(sx,sy, ddx, ddy, range, weapon, fhitm, fhito, obj, TRUE);</span>\n<span id=\"line31312\">31312.+}</span>\n<span id=\"line31313\">31313. </span>\n<span id=\"line31314\">31314.-\tif (weapon == FLASHED_LIGHT) {</span>\n<span id=\"line31315\">31315.+struct monst *</span>\n<span id=\"line31316\">31316.+bhitcore(startx,starty, ddx,ddy, range, weapon, fhitm,fhito, obj, youshoot)</span>\n<span id=\"line31317\">31317.+int startx, starty;\t\t\t/* starting position */</span>\n<span id=\"line31318\">31318.+int ddx,ddy,range;\t\t\t/* direction and range */</span>\n<span id=\"line31319\">31319.+int weapon;\t\t\t\t/* see values in hack.h */</span>\n<span id=\"line31320\">31320.+int FDECL((*fhitm), (MONST_P, OBJ_P)),\t/* fns called when mon/obj hit (return value: ) */</span>\n<span id=\"line31321\">31321.+    FDECL((*fhito), (OBJ_P, OBJ_P));\t/* \treturn value -- 0:keep going 1:stop */</span>\n<span id=\"line31322\">31322.+struct obj *obj;\t\t\t/* object tossed/used */</span>\n<span id=\"line31323\">31323.+boolean youshoot;\t\t\t/* TRUE:you shot it */</span>\n<span id=\"line31324\">31324.+{</span>\n<span id=\"line31325\">31325.+\tstruct monst *mtmp;</span>\n<span id=\"line31326\">31326.+\tuchar typ;</span>\n<span id=\"line31327\">31327.+\tboolean shopdoor = FALSE, point_blank = TRUE;</span>\n<span id=\"line31328\">31328.+</span>\n<span id=\"line31329\">31329.+\tbhitpos.x = startx;</span>\n<span id=\"line31330\">31330.+\tbhitpos.y = starty;</span>\n<span id=\"line31331\">31331.+</span>\n<span id=\"line31332\">31332.+\tif ((weapon &amp; BHIT_GLYPHMASK) == BHIT_GLYPH_FLASH) {</span>\n<span id=\"line31333\">31333. \t    tmp_at(DISP_BEAM, cmap_to_glyph(S_flashbeam));</span>\n<span id=\"line31334\">31334.-\t} else if (weapon&#160;!= ZAPPED_WAND &amp;&amp; weapon&#160;!= INVIS_BEAM)</span>\n<span id=\"line31335\">31335.+\t} else if ((weapon &amp; BHIT_GLYPHMASK) == BHIT_GLYPH_OBJ)</span>\n<span id=\"line31336\">31336. \t    tmp_at(DISP_FLASH, obj_to_glyph(obj));</span>\n<span id=\"line31337\">31337. </span>\n<span id=\"line31338\">31338. \twhile(range-- &gt; 0) {</span>\n<span id=\"line31339\">31339.@@ -2654,7 +2706,7 @@ struct obj *obj;\t\t\t/* object tossed/used</span>\n<span id=\"line31340\">31340. \t\tbreak;</span>\n<span id=\"line31341\">31341. \t    }</span>\n<span id=\"line31342\">31342. </span>\n<span id=\"line31343\">31343.-\t    if(is_pick(obj) &amp;&amp; inside_shop(x, y) &amp;&amp;</span>\n<span id=\"line31344\">31344.+\t    if(obj &amp;&amp; is_pick(obj) &amp;&amp; inside_shop(x, y) &amp;&amp;</span>\n<span id=\"line31345\">31345. \t\t\t\t\t   (mtmp = shkcatch(obj, x, y))) {</span>\n<span id=\"line31346\">31346. \t\ttmp_at(DISP_END, 0);</span>\n<span id=\"line31347\">31347. \t\treturn(mtmp);</span>\n<span id=\"line31348\">31348.@@ -2663,8 +2715,8 @@ struct obj *obj;\t\t\t/* object tossed/used</span>\n<span id=\"line31349\">31349. \t    typ = levl[bhitpos.x][bhitpos.y].typ;</span>\n<span id=\"line31350\">31350. </span>\n<span id=\"line31351\">31351. \t    /* iron bars will block anything big enough */</span>\n<span id=\"line31352\">31352.-\t    if ((weapon == THROWN_WEAPON || weapon == KICKED_WEAPON) &amp;&amp;</span>\n<span id=\"line31353\">31353.-\t\t    typ == IRONBARS &amp;&amp;</span>\n<span id=\"line31354\">31354.+\t    if ((weapon &amp; BHIT_OBJTHROWN) /* physical flying or sliding object */</span>\n<span id=\"line31355\">31355.+\t    \t\t &amp;&amp; typ == IRONBARS &amp;&amp;</span>\n<span id=\"line31356\">31356. \t\t    hits_bars(&amp;obj, x - ddx, y - ddy,</span>\n<span id=\"line31357\">31357. \t\t\t      point_blank&#160;? 0&#160;: !rn2(5), 1)) {</span>\n<span id=\"line31358\">31358. \t\t/* caveat: obj might now be null... */</span>\n<span id=\"line31359\">31359.@@ -2673,7 +2725,8 @@ struct obj *obj;\t\t\t/* object tossed/used</span>\n<span id=\"line31360\">31360. \t\tbreak;</span>\n<span id=\"line31361\">31361. \t    }</span>\n<span id=\"line31362\">31362. </span>\n<span id=\"line31363\">31363.-\t    if (weapon == ZAPPED_WAND &amp;&amp; find_drawbridge(&amp;x,&amp;y))</span>\n<span id=\"line31364\">31364.+\t    /* drawbridge handling */</span>\n<span id=\"line31365\">31365.+\t    if ((weapon &amp; BHIT_ZAPPEDWAND) &amp;&amp; find_drawbridge(&amp;x,&amp;y))</span>\n<span id=\"line31366\">31366. \t\tswitch (obj-&gt;otyp) {</span>\n<span id=\"line31367\">31367. \t\t    case WAN_OPENING:</span>\n<span id=\"line31368\">31368. \t\t    case SPE_KNOCK:</span>\n<span id=\"line31369\">31369.@@ -2696,45 +2749,39 @@ struct obj *obj;\t\t\t/* object tossed/used</span>\n<span id=\"line31370\">31370. \t\t\t    destroy_drawbridge(x,y);</span>\n<span id=\"line31371\">31371. \t\t\tmakeknown(obj-&gt;otyp);</span>\n<span id=\"line31372\">31372. \t\t\tbreak;</span>\n<span id=\"line31373\">31373.+\t\t    default:</span>\n<span id=\"line31374\">31374.+\t\t\tbreak;</span>\n<span id=\"line31375\">31375. \t\t}</span>\n<span id=\"line31376\">31376. </span>\n<span id=\"line31377\">31377.-\t    if ((mtmp = m_at(bhitpos.x, bhitpos.y))&#160;!= 0) {</span>\n<span id=\"line31378\">31378.+\t    if (!youshoot &amp;&amp; bhitpos.x==u.ux &amp;&amp; bhitpos.y==u.uy)</span>\n<span id=\"line31379\">31379.+\t\t mtmp = &amp;youmonst;</span>\n<span id=\"line31380\">31380.+\t    else mtmp = m_at(bhitpos.x, bhitpos.y);</span>\n<span id=\"line31381\">31381.+\t    if (mtmp) {</span>\n<span id=\"line31382\">31382.+#ifdef MONSTEED</span>\n<span id=\"line31383\">31383.+\t\tmtmp = mrider_or_msteed(mtmp, !rn2(3));</span>\n<span id=\"line31384\">31384.+#endif</span>\n<span id=\"line31385\">31385.+\t\t/* hit a monster */</span>\n<span id=\"line31386\">31386. \t\tnotonhead = (bhitpos.x&#160;!= mtmp-&gt;mx ||</span>\n<span id=\"line31387\">31387. \t\t\t     bhitpos.y&#160;!= mtmp-&gt;my);</span>\n<span id=\"line31388\">31388.-\t\tif (weapon&#160;!= FLASHED_LIGHT) {</span>\n<span id=\"line31389\">31389.-\t\t\tif(weapon&#160;!= ZAPPED_WAND) {</span>\n<span id=\"line31390\">31390.-\t\t\t    if(weapon&#160;!= INVIS_BEAM) tmp_at(DISP_END, 0);</span>\n<span id=\"line31391\">31391.-\t\t\t    if (cansee(bhitpos.x,bhitpos.y) &amp;&amp; !canspotmon(mtmp)) {</span>\n<span id=\"line31392\">31392.-\t\t\t\tif (weapon&#160;!= INVIS_BEAM) {</span>\n<span id=\"line31393\">31393.-\t\t\t\t    map_invisible(bhitpos.x, bhitpos.y);</span>\n<span id=\"line31394\">31394.-\t\t\t\t    return(mtmp);</span>\n<span id=\"line31395\">31395.-\t\t\t\t}</span>\n<span id=\"line31396\">31396.-\t\t\t    } else</span>\n<span id=\"line31397\">31397.-\t\t\t\treturn(mtmp);</span>\n<span id=\"line31398\">31398.-\t\t\t}</span>\n<span id=\"line31399\">31399.-\t\t\tif (weapon&#160;!= INVIS_BEAM) {</span>\n<span id=\"line31400\">31400.-\t\t\t    (*fhitm)(mtmp, obj);</span>\n<span id=\"line31401\">31401.-\t\t\t    range -= 3;</span>\n<span id=\"line31402\">31402.-\t\t\t}</span>\n<span id=\"line31403\">31403.-\t\t} else {</span>\n<span id=\"line31404\">31404.-\t\t    /* FLASHED_LIGHT hitting invisible monster</span>\n<span id=\"line31405\">31405.-\t\t       should pass through instead of stop so</span>\n<span id=\"line31406\">31406.-\t\t       we call flash_hits_mon() directly rather</span>\n<span id=\"line31407\">31407.-\t\t       than returning mtmp back to caller. That</span>\n<span id=\"line31408\">31408.-\t\t       allows the flash to keep on going. Note</span>\n<span id=\"line31409\">31409.-\t\t       that we use mtmp-&gt;minvis not canspotmon()</span>\n<span id=\"line31410\">31410.-\t\t       because it makes no difference whether</span>\n<span id=\"line31411\">31411.-\t\t       the hero can see the monster or not.*/</span>\n<span id=\"line31412\">31412.-\t\t    if (mtmp-&gt;minvis) {</span>\n<span id=\"line31413\">31413.-\t\t\tobj-&gt;ox = u.ux,  obj-&gt;oy = u.uy;</span>\n<span id=\"line31414\">31414.-\t\t\t(void) flash_hits_mon(mtmp, obj);</span>\n<span id=\"line31415\">31415.+\t\tif (!((weapon &amp; BHIT_PASSINVIS) &amp;&amp; mtmp-&gt;minvis)) {</span>\n<span id=\"line31416\">31416.+\t\t    if (!fhitm) {</span>\n<span id=\"line31417\">31417.+\t\t\t/* no hitmon callback -- return the first monster hit */</span>\n<span id=\"line31418\">31418.+\t\t\tif ((weapon &amp; BHIT_SENSEINVIS) &amp;&amp;</span>\n<span id=\"line31419\">31419.+\t\t\t    cansee(bhitpos.x,bhitpos.y) &amp;&amp; !canspotmons(mtmp))</span>\n<span id=\"line31420\">31420.+\t\t\t\tmap_invisible(bhitpos.x, bhitpos.y);</span>\n<span id=\"line31421\">31421.+\t\t\tif((weapon &amp; BHIT_GLYPHMASK)&#160;!= BHIT_GLYPH_NONE)</span>\n<span id=\"line31422\">31422.+\t\t\t\ttmp_at(DISP_END, 0);</span>\n<span id=\"line31423\">31423.+\t\t\treturn(mtmp);</span>\n<span id=\"line31424\">31424. \t\t    } else {</span>\n<span id=\"line31425\">31425.-\t\t\ttmp_at(DISP_END, 0);</span>\n<span id=\"line31426\">31426.-\t\t    \treturn(mtmp); \t/* caller will call flash_hits_mon */</span>\n<span id=\"line31427\">31427.+\t\t\t/* hitmon callback -- call fhitm for every monster to hit */</span>\n<span id=\"line31428\">31428.+\t\t\tif ((*fhitm)(mtmp, obj)) break; /* stopped: exit the loop */</span>\n<span id=\"line31429\">31429.+\t\t\trange -= 3;\t\t\t/* keep going */</span>\n<span id=\"line31430\">31430. \t\t    }</span>\n<span id=\"line31431\">31431. \t\t}</span>\n<span id=\"line31432\">31432.+</span>\n<span id=\"line31433\">31433. \t    } else {</span>\n<span id=\"line31434\">31434.-\t\tif (weapon == ZAPPED_WAND &amp;&amp; obj-&gt;otyp == WAN_PROBING &amp;&amp;</span>\n<span id=\"line31435\">31435.+\t\t/* did not hit a monster */</span>\n<span id=\"line31436\">31436.+\t\tif ((weapon &amp; BHIT_ZAPPEDWAND) &amp;&amp; obj-&gt;otyp == WAN_PROBING &amp;&amp;</span>\n<span id=\"line31437\">31437. \t\t   glyph_is_invisible(levl[bhitpos.x][bhitpos.y].glyph)) {</span>\n<span id=\"line31438\">31438. \t\t    unmap_object(bhitpos.x, bhitpos.y);</span>\n<span id=\"line31439\">31439. \t\t    newsym(x, y);</span>\n<span id=\"line31440\">31440.@@ -2743,7 +2790,13 @@ struct obj *obj;\t\t\t/* object tossed/used</span>\n<span id=\"line31441\">31441. \t    if(fhito) {</span>\n<span id=\"line31442\">31442. \t\tif(bhitpile(obj,fhito,bhitpos.x,bhitpos.y))</span>\n<span id=\"line31443\">31443. \t\t    range--;</span>\n<span id=\"line31444\">31444.+#ifdef NOPOLYPILE</span>\n<span id=\"line31445\">31445.+\t\tif ((weapon &amp; BHIT_ZAPPEDWAND) &amp;&amp;</span>\n<span id=\"line31446\">31446.+\t\t    (obj-&gt;otyp == WAN_POLYMORPH || obj-&gt;otyp == SPE_POLYMORPH))</span>\n<span id=\"line31447\">31447.+\t\t    range = 0;</span>\n<span id=\"line31448\">31448.+#endif /*NOPOLYPILE*/</span>\n<span id=\"line31449\">31449. \t    } else {</span>\n<span id=\"line31450\">31450.+\t\t/* hero tries to kick dropped gold out of the shop */</span>\n<span id=\"line31451\">31451. \t\tif(weapon == KICKED_WEAPON &amp;&amp;</span>\n<span id=\"line31452\">31452. \t\t      ((obj-&gt;oclass == COIN_CLASS &amp;&amp;</span>\n<span id=\"line31453\">31453. \t\t\t OBJ_AT(bhitpos.x, bhitpos.y)) ||</span>\n<span id=\"line31454\">31454.@@ -2753,7 +2806,9 @@ struct obj *obj;\t\t\t/* object tossed/used</span>\n<span id=\"line31455\">31455. \t\t\treturn (struct monst *)0;</span>\n<span id=\"line31456\">31456. \t\t}</span>\n<span id=\"line31457\">31457. \t    }</span>\n<span id=\"line31458\">31458.-\t    if(weapon == ZAPPED_WAND &amp;&amp; (IS_DOOR(typ) || typ == SDOOR)) {</span>\n<span id=\"line31459\">31459.+</span>\n<span id=\"line31460\">31460.+\t    /* door handling(open/close/crash etc.) */</span>\n<span id=\"line31461\">31461.+\t    if((weapon &amp; BHIT_ZAPPEDWAND) &amp;&amp; (IS_DOOR(typ) || typ == SDOOR)) {</span>\n<span id=\"line31462\">31462. \t\tswitch (obj-&gt;otyp) {</span>\n<span id=\"line31463\">31463. \t\tcase WAN_OPENING:</span>\n<span id=\"line31464\">31464. \t\tcase WAN_LOCKING:</span>\n<span id=\"line31465\">31465.@@ -2768,39 +2823,46 @@ struct obj *obj;\t\t\t/* object tossed/used</span>\n<span id=\"line31466\">31466. \t\t\tif (levl[bhitpos.x][bhitpos.y].doormask == D_BROKEN</span>\n<span id=\"line31467\">31467. \t\t\t    &amp;&amp; *in_rooms(bhitpos.x, bhitpos.y, SHOPBASE)) {</span>\n<span id=\"line31468\">31468. \t\t\t    shopdoor = TRUE;</span>\n<span id=\"line31469\">31469.-\t\t\t    add_damage(bhitpos.x, bhitpos.y, 400L);</span>\n<span id=\"line31470\">31470.+\t\t\t    add_damage(bhitpos.x, bhitpos.y, youshoot&#160;? 400L&#160;: 0L);</span>\n<span id=\"line31471\">31471. \t\t\t}</span>\n<span id=\"line31472\">31472. \t\t    }</span>\n<span id=\"line31473\">31473. \t\t    break;</span>\n<span id=\"line31474\">31474.+\t\tdefault:</span>\n<span id=\"line31475\">31475.+\t\t    break;</span>\n<span id=\"line31476\">31476. \t\t}</span>\n<span id=\"line31477\">31477. \t    }</span>\n<span id=\"line31478\">31478.+</span>\n<span id=\"line31479\">31479.+\t    /* blocked by door */</span>\n<span id=\"line31480\">31480. \t    if(!ZAP_POS(typ) || closed_door(bhitpos.x, bhitpos.y)) {</span>\n<span id=\"line31481\">31481. \t\tbhitpos.x -= ddx;</span>\n<span id=\"line31482\">31482. \t\tbhitpos.y -= ddy;</span>\n<span id=\"line31483\">31483. \t\tbreak;</span>\n<span id=\"line31484\">31484. \t    }</span>\n<span id=\"line31485\">31485.-\t    if(weapon&#160;!= ZAPPED_WAND &amp;&amp; weapon&#160;!= INVIS_BEAM) {</span>\n<span id=\"line31486\">31486.-\t\t/* 'I' present but no monster: erase */</span>\n<span id=\"line31487\">31487.-\t\t/* do this before the tmp_at() */</span>\n<span id=\"line31488\">31488.-\t\tif (glyph_is_invisible(levl[bhitpos.x][bhitpos.y].glyph)</span>\n<span id=\"line31489\">31489.-\t\t\t&amp;&amp; cansee(x, y)) {</span>\n<span id=\"line31490\">31490.-\t\t    unmap_object(bhitpos.x, bhitpos.y);</span>\n<span id=\"line31491\">31491.-\t\t    newsym(x, y);</span>\n<span id=\"line31492\">31492.-\t\t}</span>\n<span id=\"line31493\">31493.+\t    /* 'I' present but no monster: erase */</span>\n<span id=\"line31494\">31494.+\t    /* do this before the tmp_at() */</span>\n<span id=\"line31495\">31495.+\t    if (!(weapon &amp; BHIT_PASSINVIS) &amp;&amp;</span>\n<span id=\"line31496\">31496.+\t\tglyph_is_invisible(levl[bhitpos.x][bhitpos.y].glyph) &amp;&amp;</span>\n<span id=\"line31497\">31497.+\t\tcansee(x, y)) {</span>\n<span id=\"line31498\">31498.+\t\tunmap_object(bhitpos.x, bhitpos.y);</span>\n<span id=\"line31499\">31499.+\t\tnewsym(x, y);</span>\n<span id=\"line31500\">31500.+\t    }</span>\n<span id=\"line31501\">31501.+\t    /* show the symbol flying */</span>\n<span id=\"line31502\">31502.+\t    if((weapon &amp; BHIT_GLYPHMASK)&#160;!= BHIT_GLYPH_NONE) {</span>\n<span id=\"line31503\">31503. \t\ttmp_at(bhitpos.x, bhitpos.y);</span>\n<span id=\"line31504\">31504. \t\tdelay_output();</span>\n<span id=\"line31505\">31505.-\t\t/* kicked objects fall in pools */</span>\n<span id=\"line31506\">31506.-\t\tif((weapon == KICKED_WEAPON) &amp;&amp;</span>\n<span id=\"line31507\">31507.-\t\t   (is_pool(bhitpos.x, bhitpos.y) ||</span>\n<span id=\"line31508\">31508.-\t\t   is_lava(bhitpos.x, bhitpos.y)))</span>\n<span id=\"line31509\">31509.+\t    }</span>\n<span id=\"line31510\">31510.+\t    /* kicked objects fall in pools */</span>\n<span id=\"line31511\">31511.+\t    if((weapon &amp; BHIT_FALLTOPOOL) &amp;&amp;</span>\n<span id=\"line31512\">31512.+\t       (is_pool(bhitpos.x, bhitpos.y) ||</span>\n<span id=\"line31513\">31513.+\t\tis_lava(bhitpos.x, bhitpos.y)))</span>\n<span id=\"line31514\">31514. \t\t    break;</span>\n<span id=\"line31515\">31515. #ifdef SINKS</span>\n<span id=\"line31516\">31516.-\t\tif(IS_SINK(typ) &amp;&amp; weapon&#160;!= FLASHED_LIGHT)</span>\n<span id=\"line31517\">31517.-\t\t    break;\t/* physical objects fall onto sink */</span>\n<span id=\"line31518\">31518.+\t    /* physical objects fall onto sink */</span>\n<span id=\"line31519\">31519.+\t    if(IS_SINK(typ) &amp;&amp; (weapon &amp; BHIT_STOPATSINK))</span>\n<span id=\"line31520\">31520.+\t\tbreak;</span>\n<span id=\"line31521\">31521. #endif</span>\n<span id=\"line31522\">31522.-\t    }</span>\n<span id=\"line31523\">31523. \t    /* limit range of ball so hero won't make an invalid move */</span>\n<span id=\"line31524\">31524.-\t    if (weapon == THROWN_WEAPON &amp;&amp; range &gt; 0 &amp;&amp;</span>\n<span id=\"line31525\">31525.+\t    if ((weapon &amp; BHIT_OBJTHROWN) &amp;&amp; range &gt; 0 &amp;&amp;</span>\n<span id=\"line31526\">31526. \t\tobj-&gt;otyp == HEAVY_IRON_BALL) {</span>\n<span id=\"line31527\">31527. \t\tstruct obj *bobj;</span>\n<span id=\"line31528\">31528. \t\tstruct trap *t;</span>\n<span id=\"line31529\">31529.@@ -2829,9 +2891,9 @@ struct obj *obj;\t\t\t/* object tossed/used</span>\n<span id=\"line31530\">31530. \t    point_blank = FALSE;\t/* affects passing through iron bars */</span>\n<span id=\"line31531\">31531. \t}</span>\n<span id=\"line31532\">31532. </span>\n<span id=\"line31533\">31533.-\tif (weapon&#160;!= ZAPPED_WAND &amp;&amp; weapon&#160;!= INVIS_BEAM) tmp_at(DISP_END, 0);</span>\n<span id=\"line31534\">31534.+\tif ((weapon &amp; BHIT_GLYPHMASK)&#160;!= BHIT_GLYPH_NONE) tmp_at(DISP_END, 0);</span>\n<span id=\"line31535\">31535. </span>\n<span id=\"line31536\">31536.-\tif(shopdoor)</span>\n<span id=\"line31537\">31537.+\tif(shopdoor &amp;&amp; youshoot)</span>\n<span id=\"line31538\">31538. \t    pay_for_damage(\"destroy\", FALSE);</span>\n<span id=\"line31539\">31539. </span>\n<span id=\"line31540\">31540. \treturn (struct monst *)0;</span>\n<span id=\"line31541\">31541.@@ -2962,6 +3024,15 @@ struct obj **ootmp;\t/* to return worn ar</span>\n<span id=\"line31542\">31542. \t\t(void)sleep_monst(mon, d(nd, 25),</span>\n<span id=\"line31543\">31543. \t\t\t\ttype == ZT_WAND(ZT_SLEEP)&#160;? WAND_CLASS&#160;: '\\0');</span>\n<span id=\"line31544\">31544. \t\tbreak;</span>\n<span id=\"line31545\">31545.+\tcase ZT_PARALYSIS:</span>\n<span id=\"line31546\">31546.+\t\ttmp = 0;</span>\n<span id=\"line31547\">31547.+\t\tif (resists_paraly(mon)) {</span>\n<span id=\"line31548\">31548.+\t\t    sho_shieldeff = TRUE;</span>\n<span id=\"line31549\">31549.+\t\t    break;</span>\n<span id=\"line31550\">31550.+\t\t}</span>\n<span id=\"line31551\">31551.+\t\tmon-&gt;mcanmove = 0;</span>\n<span id=\"line31552\">31552.+\t\tmon-&gt;mfrozen = d(nd, 6);</span>\n<span id=\"line31553\">31553.+\t\tbreak;</span>\n<span id=\"line31554\">31554. \tcase ZT_DEATH:\t\t/* death/disintegration */</span>\n<span id=\"line31555\">31555. \t\tif(abs(type)&#160;!= ZT_BREATH(ZT_DEATH)) {\t/* death */</span>\n<span id=\"line31556\">31556. \t\t    if(mon-&gt;data == &amp;mons[PM_DEATH]) {</span>\n<span id=\"line31557\">31557.@@ -2972,8 +3043,8 @@ struct obj **ootmp;\t/* to return worn ar</span>\n<span id=\"line31558\">31558. \t\t\ttmp = 0;</span>\n<span id=\"line31559\">31559. \t\t\tbreak;</span>\n<span id=\"line31560\">31560. \t\t    }</span>\n<span id=\"line31561\">31561.-\t\t    if (nonliving(mon-&gt;data) || is_demon(mon-&gt;data) ||</span>\n<span id=\"line31562\">31562.-\t\t\t    resists_magm(mon)) {\t/* similar to player */</span>\n<span id=\"line31563\">31563.+\t\t    if (vs_death_factor(mon-&gt;data) ||</span>\n<span id=\"line31564\">31564.+\t\t\tresists_magm(mon)) {\t/* similar to player */</span>\n<span id=\"line31565\">31565. \t\t\tsho_shieldeff = TRUE;</span>\n<span id=\"line31566\">31566. \t\t\tbreak;</span>\n<span id=\"line31567\">31567. \t\t    }</span>\n<span id=\"line31568\">31568.@@ -3071,41 +3142,55 @@ const char *fltxt;</span>\n<span id=\"line31569\">31569. xchar sx, sy;</span>\n<span id=\"line31570\">31570. {</span>\n<span id=\"line31571\">31571. \tint dam = 0;</span>\n<span id=\"line31572\">31572.+\tboolean not_effected = FALSE;</span>\n<span id=\"line31573\">31573. </span>\n<span id=\"line31574\">31574. \tswitch (abs(type)&#160;% 10) {</span>\n<span id=\"line31575\">31575. \tcase ZT_MAGIC_MISSILE:</span>\n<span id=\"line31576\">31576. \t    if (Antimagic) {</span>\n<span id=\"line31577\">31577. \t\tshieldeff(sx, sy);</span>\n<span id=\"line31578\">31578. \t\tpline_The(\"missiles bounce off!\");</span>\n<span id=\"line31579\">31579.+\t\tdamage_resistant_obj(ANTIMAGIC, 1);</span>\n<span id=\"line31580\">31580. \t    } else {</span>\n<span id=\"line31581\">31581. \t\tdam = d(nd,6);</span>\n<span id=\"line31582\">31582. \t\texercise(A_STR, FALSE);</span>\n<span id=\"line31583\">31583. \t    }</span>\n<span id=\"line31584\">31584. \t    break;</span>\n<span id=\"line31585\">31585. \tcase ZT_FIRE:</span>\n<span id=\"line31586\">31586.+\t    dam = d(nd, 6);</span>\n<span id=\"line31587\">31587. \t    if (Fire_resistance) {</span>\n<span id=\"line31588\">31588.-\t\tshieldeff(sx, sy);</span>\n<span id=\"line31589\">31589.-\t\tYou(\"don't feel hot!\");</span>\n<span id=\"line31590\">31590.+\t\tif (not_effected = is_full_resist(FIRE_RES)) {</span>\n<span id=\"line31591\">31591.+\t\t    shieldeff(sx, sy);</span>\n<span id=\"line31592\">31592.+\t\t    You(\"don't feel hot!\");</span>\n<span id=\"line31593\">31593.+\t\t    dam = 0;</span>\n<span id=\"line31594\">31594.+\t\t} else {</span>\n<span id=\"line31595\">31595.+\t\t    You(\"endure the heat.\");</span>\n<span id=\"line31596\">31596.+\t\t    dam = (dam+3) / 4;</span>\n<span id=\"line31597\">31597.+\t\t}</span>\n<span id=\"line31598\">31598. \t\tugolemeffects(AD_FIRE, d(nd, 6));</span>\n<span id=\"line31599\">31599.-\t    } else {</span>\n<span id=\"line31600\">31600.-\t\tdam = d(nd, 6);</span>\n<span id=\"line31601\">31601. \t    }</span>\n<span id=\"line31602\">31602. \t    burn_away_slime();</span>\n<span id=\"line31603\">31603.-\t    if (burnarmor(&amp;youmonst)) {\t/* \"body hit\" */</span>\n<span id=\"line31604\">31604.+\t    if (!not_effected &amp;&amp; burnarmor(&amp;youmonst)) {\t/* \"body hit\" */</span>\n<span id=\"line31605\">31605. \t\tif (!rn2(3)) destroy_item(POTION_CLASS, AD_FIRE);</span>\n<span id=\"line31606\">31606. \t\tif (!rn2(3)) destroy_item(SCROLL_CLASS, AD_FIRE);</span>\n<span id=\"line31607\">31607. \t\tif (!rn2(5)) destroy_item(SPBOOK_CLASS, AD_FIRE);</span>\n<span id=\"line31608\">31608.+\t\tif (!rn2(3)) destroy_item(TOOL_CLASS, AD_FIRE);</span>\n<span id=\"line31609\">31609. \t    }</span>\n<span id=\"line31610\">31610. \t    break;</span>\n<span id=\"line31611\">31611. \tcase ZT_COLD:</span>\n<span id=\"line31612\">31612.+\t    dam = d(nd, 6);</span>\n<span id=\"line31613\">31613. \t    if (Cold_resistance) {</span>\n<span id=\"line31614\">31614.-\t\tshieldeff(sx, sy);</span>\n<span id=\"line31615\">31615.-\t\tYou(\"don't feel cold.\");</span>\n<span id=\"line31616\">31616.+\t\tif (not_effected = is_full_resist(COLD_RES)) {</span>\n<span id=\"line31617\">31617.+\t\t    shieldeff(sx, sy);</span>\n<span id=\"line31618\">31618.+\t\t    You(\"don't feel cold.\");</span>\n<span id=\"line31619\">31619.+\t\t    dam = 0;</span>\n<span id=\"line31620\">31620.+\t\t} else {</span>\n<span id=\"line31621\">31621.+\t\t    You(\"feel slightly cold.\");</span>\n<span id=\"line31622\">31622.+\t\t    dam = (dam+3) / 4;</span>\n<span id=\"line31623\">31623.+\t\t}</span>\n<span id=\"line31624\">31624. \t\tugolemeffects(AD_COLD, d(nd, 6));</span>\n<span id=\"line31625\">31625.-\t    } else {</span>\n<span id=\"line31626\">31626.-\t\tdam = d(nd, 6);</span>\n<span id=\"line31627\">31627. \t    }</span>\n<span id=\"line31628\">31628.-\t    if (!rn2(3)) destroy_item(POTION_CLASS, AD_COLD);</span>\n<span id=\"line31629\">31629.+\t    if (!not_effected &amp;&amp; !rn2(3))</span>\n<span id=\"line31630\">31630.+\t\tdestroy_item(POTION_CLASS, AD_COLD);</span>\n<span id=\"line31631\">31631. \t    break;</span>\n<span id=\"line31632\">31632. \tcase ZT_SLEEP:</span>\n<span id=\"line31633\">31633. \t    if (Sleep_resistance) {</span>\n<span id=\"line31634\">31634.@@ -3115,10 +3200,22 @@ xchar sx, sy;</span>\n<span id=\"line31635\">31635. \t\tfall_asleep(-d(nd,25), TRUE); /* sleep ray */</span>\n<span id=\"line31636\">31636. \t    }</span>\n<span id=\"line31637\">31637. \t    break;</span>\n<span id=\"line31638\">31638.+\tcase ZT_PARALYSIS:</span>\n<span id=\"line31639\">31639.+\t    if (Free_action) {</span>\n<span id=\"line31640\">31640.+\t\tshieldeff(u.ux, u.uy);</span>\n<span id=\"line31641\">31641.+\t\tYou(\"stiffen momentarily.\");</span>\n<span id=\"line31642\">31642.+\t    } else {</span>\n<span id=\"line31643\">31643.+\t\tYou(\"are frozen!\");</span>\n<span id=\"line31644\">31644.+\t\tnomul(-d(nd, 4));</span>\n<span id=\"line31645\">31645.+\t\tnomovemsg = You_can_move_again;</span>\n<span id=\"line31646\">31646.+\t\texercise(A_DEX, FALSE);</span>\n<span id=\"line31647\">31647.+\t    }</span>\n<span id=\"line31648\">31648.+\t    break;</span>\n<span id=\"line31649\">31649. \tcase ZT_DEATH:</span>\n<span id=\"line31650\">31650. \t    if (abs(type) == ZT_BREATH(ZT_DEATH)) {</span>\n<span id=\"line31651\">31651.-\t\tif (Disint_resistance) {</span>\n<span id=\"line31652\">31652.-\t\t    You(\"are not disintegrated.\");</span>\n<span id=\"line31653\">31653.+\t\tif (is_full_resist(DISINT_RES)) {</span>\n<span id=\"line31654\">31654.+\t\t    shieldeff(sx, sy);</span>\n<span id=\"line31655\">31655.+\t\t    You(\"aren't affected.\");</span>\n<span id=\"line31656\">31656. \t\t    break;</span>\n<span id=\"line31657\">31657. \t\t} else if (uarms) {</span>\n<span id=\"line31658\">31658. \t\t    /* destroy shield; other possessions are safe */</span>\n<span id=\"line31659\">31659.@@ -3136,13 +3233,18 @@ xchar sx, sy;</span>\n<span id=\"line31660\">31660. #ifdef TOURIST</span>\n<span id=\"line31661\">31661. \t\tif (uarmu) (void) destroy_arm(uarmu);</span>\n<span id=\"line31662\">31662. #endif</span>\n<span id=\"line31663\">31663.-\t    } else if (nonliving(youmonst.data) || is_demon(youmonst.data)) {</span>\n<span id=\"line31664\">31664.+\t\tif (Disint_resistance) {</span>\n<span id=\"line31665\">31665.+\t\t    You(\"are not disintegrated.\");</span>\n<span id=\"line31666\">31666.+\t\t    break;</span>\n<span id=\"line31667\">31667.+\t\t}</span>\n<span id=\"line31668\">31668.+\t    } else if (vs_death_factor(youmonst.data)) {</span>\n<span id=\"line31669\">31669. \t\tshieldeff(sx, sy);</span>\n<span id=\"line31670\">31670. \t\tYou(\"seem unaffected.\");</span>\n<span id=\"line31671\">31671. \t\tbreak;</span>\n<span id=\"line31672\">31672. \t    } else if (Antimagic) {</span>\n<span id=\"line31673\">31673. \t\tshieldeff(sx, sy);</span>\n<span id=\"line31674\">31674. \t\tYou(\"aren't affected.\");</span>\n<span id=\"line31675\">31675.+\t\tdamage_resistant_obj(ANTIMAGIC, rnd(3));</span>\n<span id=\"line31676\">31676. \t\tbreak;</span>\n<span id=\"line31677\">31677. \t    }</span>\n<span id=\"line31678\">31678. \t    killer_format = KILLED_BY_AN;</span>\n<span id=\"line31679\">31679.@@ -3152,19 +3254,30 @@ xchar sx, sy;</span>\n<span id=\"line31680\">31680. \t    done(DIED);</span>\n<span id=\"line31681\">31681. \t    return; /* lifesaved */</span>\n<span id=\"line31682\">31682. \tcase ZT_LIGHTNING:</span>\n<span id=\"line31683\">31683.+\t    dam = d(nd, 6);</span>\n<span id=\"line31684\">31684. \t    if (Shock_resistance) {</span>\n<span id=\"line31685\">31685.-\t\tshieldeff(sx, sy);</span>\n<span id=\"line31686\">31686.-\t\tYou(\"aren't affected.\");</span>\n<span id=\"line31687\">31687.+\t\tif (not_effected = is_full_resist(SHOCK_RES)) {</span>\n<span id=\"line31688\">31688.+\t\t    shieldeff(sx, sy);</span>\n<span id=\"line31689\">31689.+\t\t    You(\"aren't affected.\");</span>\n<span id=\"line31690\">31690.+\t\t    dam = 0;</span>\n<span id=\"line31691\">31691.+\t\t} else {</span>\n<span id=\"line31692\">31692.+\t\t    You(\"nearly resist the shock.\");</span>\n<span id=\"line31693\">31693.+\t\t    dam = (dam+3) / 4;</span>\n<span id=\"line31694\">31694.+\t\t}</span>\n<span id=\"line31695\">31695. \t\tugolemeffects(AD_ELEC, d(nd, 6));</span>\n<span id=\"line31696\">31696. \t    } else {</span>\n<span id=\"line31697\">31697.-\t\tdam = d(nd, 6);</span>\n<span id=\"line31698\">31698. \t\texercise(A_CON, FALSE);</span>\n<span id=\"line31699\">31699. \t    }</span>\n<span id=\"line31700\">31700.-\t    if (!rn2(3)) destroy_item(WAND_CLASS, AD_ELEC);</span>\n<span id=\"line31701\">31701.-\t    if (!rn2(3)) destroy_item(RING_CLASS, AD_ELEC);</span>\n<span id=\"line31702\">31702.+\t    if (!not_effected) {</span>\n<span id=\"line31703\">31703.+\t\tif (!rn2(3)) destroy_item(WAND_CLASS, AD_ELEC);</span>\n<span id=\"line31704\">31704.+\t\tif (!rn2(3)) destroy_item(RING_CLASS, AD_ELEC);</span>\n<span id=\"line31705\">31705.+\t    }</span>\n<span id=\"line31706\">31706. \t    break;</span>\n<span id=\"line31707\">31707. \tcase ZT_POISON_GAS:</span>\n<span id=\"line31708\">31708. \t    poisoned(\"blast\", A_DEX, \"poisoned blast\", 15);</span>\n<span id=\"line31709\">31709.+\t    if (!is_full_resist(POISON_RES)) {</span>\n<span id=\"line31710\">31710.+\t\tif (!rn2(3)) hurtarmor(AD_DCAY);</span>\n<span id=\"line31711\">31711.+\t    }</span>\n<span id=\"line31712\">31712. \t    break;</span>\n<span id=\"line31713\">31713. \tcase ZT_ACID:</span>\n<span id=\"line31714\">31714. \t    if (Acid_resistance) {</span>\n<span id=\"line31715\">31715.@@ -3174,10 +3287,12 @@ xchar sx, sy;</span>\n<span id=\"line31716\">31716. \t\tdam = d(nd,6);</span>\n<span id=\"line31717\">31717. \t\texercise(A_STR, FALSE);</span>\n<span id=\"line31718\">31718. \t    }</span>\n<span id=\"line31719\">31719.-\t    /* using two weapons at once makes both of them more vulnerable */</span>\n<span id=\"line31720\">31720.-\t    if (!rn2(u.twoweap&#160;? 3&#160;: 6)) erode_obj(uwep, TRUE, TRUE);</span>\n<span id=\"line31721\">31721.-\t    if (u.twoweap &amp;&amp; !rn2(3)) erode_obj(uswapwep, TRUE, TRUE);</span>\n<span id=\"line31722\">31722.-\t    if (!rn2(6)) erode_armor(&amp;youmonst, TRUE);</span>\n<span id=\"line31723\">31723.+\t    if (!is_full_resist(ACID_RES)) {</span>\n<span id=\"line31724\">31724.+\t\t/* using two weapons at once makes both of them more vulnerable */</span>\n<span id=\"line31725\">31725.+\t\tif (!rn2(u.twoweap&#160;? 3&#160;: 6)) erode_obj(uwep, TRUE, TRUE);</span>\n<span id=\"line31726\">31726.+\t\tif (u.twoweap &amp;&amp; !rn2(3)) erode_obj(uswapwep, TRUE, TRUE);</span>\n<span id=\"line31727\">31727.+\t\tif (!rn2(6)) erode_armor(&amp;youmonst, TRUE);</span>\n<span id=\"line31728\">31728.+\t    }</span>\n<span id=\"line31729\">31729. \t    break;</span>\n<span id=\"line31730\">31730. \t}</span>\n<span id=\"line31731\">31731. </span>\n<span id=\"line31732\">31732.@@ -3239,6 +3354,19 @@ boolean u_caused;</span>\n<span id=\"line31733\">31733. \t\t\t    pline(\"%s burns.\", An(buf1));</span>\n<span id=\"line31734\">31734. \t\t    }</span>\n<span id=\"line31735\">31735. \t\t}</span>\n<span id=\"line31736\">31736.+\t    } else if (obj-&gt;otyp == STATUE &amp;&amp; get_material(obj) == LIQUID) {</span>\n<span id=\"line31737\">31737.+\t\tstruct trap *trap;</span>\n<span id=\"line31738\">31738.+\t\tif ((trap = t_at(x,y)) &amp;&amp; trap-&gt;ttyp == STATUE_TRAP) {</span>\n<span id=\"line31739\">31739.+\t\t    activate_statue_trap(trap, x, y, TRUE);</span>\n<span id=\"line31740\">31740.+\t\t    continue;</span>\n<span id=\"line31741\">31741.+\t\t}</span>\n<span id=\"line31742\">31742.+\t\tif (give_feedback) {</span>\n<span id=\"line31743\">31743.+\t\t    pline(\"%s thaws.\", An(xname(obj)));</span>\n<span id=\"line31744\">31744.+\t\t}</span>\n<span id=\"line31745\">31745.+\t\t(void) mkcorpstat(CORPSE, (struct monst *) 0,</span>\n<span id=\"line31746\">31746.+\t\t\t\t  &amp;mons[obj-&gt;corpsenm], x, y, TRUE);</span>\n<span id=\"line31747\">31747.+\t\tif (u_caused) useupf(obj, 1);</span>\n<span id=\"line31748\">31748.+\t\telse delobj(obj);</span>\n<span id=\"line31749\">31749. \t    }</span>\n<span id=\"line31750\">31750. \t}</span>\n<span id=\"line31751\">31751. \treturn cnt;</span>\n<span id=\"line31752\">31752.@@ -3317,7 +3445,7 @@ register int dx,dy;</span>\n<span id=\"line31753\">31753. \t    mon = m_at(sx, sy);</span>\n<span id=\"line31754\">31754. \t    if(cansee(sx,sy)) {</span>\n<span id=\"line31755\">31755. \t\t/* reveal/unreveal invisible monsters before tmp_at() */</span>\n<span id=\"line31756\">31756.-\t\tif (mon &amp;&amp; !canspotmon(mon))</span>\n<span id=\"line31757\">31757.+\t\tif (mon &amp;&amp; !canspotmons(mon))</span>\n<span id=\"line31758\">31758. \t\t    map_invisible(sx, sy);</span>\n<span id=\"line31759\">31759. \t\telse if (!mon &amp;&amp; glyph_is_invisible(levl[sx][sy].glyph)) {</span>\n<span id=\"line31760\">31760. \t\t    unmap_object(sx, sy);</span>\n<span id=\"line31761\">31761.@@ -3327,6 +3455,9 @@ register int dx,dy;</span>\n<span id=\"line31762\">31762. \t\t    tmp_at(sx,sy);</span>\n<span id=\"line31763\">31763. \t\tdelay_output(); /* wait a little */</span>\n<span id=\"line31764\">31764. \t    }</span>\n<span id=\"line31765\">31765.+#ifdef MONSTEED</span>\n<span id=\"line31766\">31766.+\t    if (mon) mon = mrider_or_msteed(mon, !rn2(3));</span>\n<span id=\"line31767\">31767.+#endif</span>\n<span id=\"line31768\">31768. \t} else</span>\n<span id=\"line31769\">31769. \t    goto make_bounce;</span>\n<span id=\"line31770\">31770. </span>\n<span id=\"line31771\">31771.@@ -3447,6 +3578,7 @@ register int dx,dy;</span>\n<span id=\"line31772\">31772. \t\trange -= 2;</span>\n<span id=\"line31773\">31773. \t\tpline(\"%s hits you!\", The(fltxt));</span>\n<span id=\"line31774\">31774. \t\tif (Reflecting) {</span>\n<span id=\"line31775\">31775.+\t\t    int objdmg = 0;</span>\n<span id=\"line31776\">31776. \t\t    if (!Blind) {</span>\n<span id=\"line31777\">31777. \t\t    \t(void) ureflects(\"But %s reflects from your %s!\", \"it\");</span>\n<span id=\"line31778\">31778. \t\t    } else</span>\n<span id=\"line31779\">31779.@@ -3454,13 +3586,35 @@ register int dx,dy;</span>\n<span id=\"line31780\">31780. \t\t    dx = -dx;</span>\n<span id=\"line31781\">31781. \t\t    dy = -dy;</span>\n<span id=\"line31782\">31782. \t\t    shieldeff(sx, sy);</span>\n<span id=\"line31783\">31783.+\t\t    switch (abstype) {\t\t/* reflector gets damaged */</span>\n<span id=\"line31784\">31784.+\t\t\tcase ZT_MAGIC_MISSILE:</span>\n<span id=\"line31785\">31785.+\t\t\tcase ZT_SLEEP:</span>\n<span id=\"line31786\">31786.+\t\t\tcase ZT_POISON_GAS:</span>\n<span id=\"line31787\">31787.+\t\t\tcase ZT_PARALYSIS:</span>\n<span id=\"line31788\">31788.+\t\t\t\tobjdmg = d(1,4);</span>\n<span id=\"line31789\">31789.+\t\t\t\tbreak;</span>\n<span id=\"line31790\">31790.+\t\t\tcase ZT_FIRE:</span>\n<span id=\"line31791\">31791.+\t\t\tcase ZT_COLD:</span>\n<span id=\"line31792\">31792.+\t\t\tcase ZT_LIGHTNING:</span>\n<span id=\"line31793\">31793.+\t\t\tcase ZT_ACID:</span>\n<span id=\"line31794\">31794.+\t\t\t\tobjdmg = d(2,4);</span>\n<span id=\"line31795\">31795.+\t\t\tcase ZT_DEATH:</span>\n<span id=\"line31796\">31796.+\t\t\t\tif (abs(type) == ZT_BREATH(ZT_DEATH))</span>\n<span id=\"line31797\">31797.+\t\t\t\t    objdmg = rn1(10, 10);</span>\n<span id=\"line31798\">31798.+\t\t\t\telse</span>\n<span id=\"line31799\">31799.+\t\t\t\t    objdmg = d(3,4);</span>\n<span id=\"line31800\">31800.+\t\t\tdefault:</span>\n<span id=\"line31801\">31801.+\t\t\t\tbreak;</span>\n<span id=\"line31802\">31802.+\t\t    }</span>\n<span id=\"line31803\">31803.+\t\t    damage_resistant_obj(REFLECTING, objdmg);</span>\n<span id=\"line31804\">31804. \t\t} else {</span>\n<span id=\"line31805\">31805. \t\t    zhitu(type, nd, fltxt, sx, sy);</span>\n<span id=\"line31806\">31806. \t\t}</span>\n<span id=\"line31807\">31807. \t    } else {</span>\n<span id=\"line31808\">31808. \t\tpline(\"%s whizzes by you!\", The(fltxt));</span>\n<span id=\"line31809\">31809. \t    }</span>\n<span id=\"line31810\">31810.-\t    if (abstype == ZT_LIGHTNING &amp;&amp; !resists_blnd(&amp;youmonst)) {</span>\n<span id=\"line31811\">31811.+\t    if (abstype == ZT_LIGHTNING &amp;&amp; !resists_blnd(&amp;youmonst) &amp;&amp;</span>\n<span id=\"line31812\">31812.+\t\t!is_full_resist(SHOCK_RES)) {</span>\n<span id=\"line31813\">31813. \t\tYou(are_blinded_by_the_flash);</span>\n<span id=\"line31814\">31814. \t\tmake_blinded((long)d(nd,50),FALSE);</span>\n<span id=\"line31815\">31815. \t\tif (!Blind) Your(vision_clears);</span>\n<span id=\"line31816\">31816.@@ -3584,7 +3738,7 @@ boolean *shopdamage;</span>\n<span id=\"line31817\">31817. \t    }</span>\n<span id=\"line31818\">31818. \t    if(is_ice(x, y)) {</span>\n<span id=\"line31819\">31819. \t\tmelt_ice(x, y);</span>\n<span id=\"line31820\">31820.-\t    } else if(is_pool(x,y)) {</span>\n<span id=\"line31821\">31821.+\t    } else if(is_pool(x,y) || is_swamp(x,y)) {</span>\n<span id=\"line31822\">31822. \t\tconst char *msgtxt = \"You hear hissing gas.\";</span>\n<span id=\"line31823\">31823. \t\tif(lev-&gt;typ&#160;!= POOL) {\t/* MOAT or DRAWBRIDGE_UP */</span>\n<span id=\"line31824\">31824. \t\t    if (cansee(x,y)) msgtxt = \"Some water evaporates.\";</span>\n<span id=\"line31825\">31825.@@ -3767,13 +3921,7 @@ register struct obj *obj;\t\t   /* no text</span>\n<span id=\"line31826\">31826. \tif (obj-&gt;otyp == BOULDER &amp;&amp; In_sokoban(&amp;u.uz) &amp;&amp; !flags.mon_moving)</span>\n<span id=\"line31827\">31827. \t    change_luck(-1);</span>\n<span id=\"line31828\">31828. </span>\n<span id=\"line31829\">31829.-\tobj-&gt;otyp = ROCK;</span>\n<span id=\"line31830\">31830.-\tobj-&gt;quan = (long) rn1(60, 7);</span>\n<span id=\"line31831\">31831.-\tobj-&gt;owt = weight(obj);</span>\n<span id=\"line31832\">31832.-\tobj-&gt;oclass = GEM_CLASS;</span>\n<span id=\"line31833\">31833.-\tobj-&gt;known = FALSE;</span>\n<span id=\"line31834\">31834.-\tobj-&gt;onamelth = 0;\t\t/* no names */</span>\n<span id=\"line31835\">31835.-\tobj-&gt;oxlth = 0;\t\t\t/* no extra data */</span>\n<span id=\"line31836\">31836.+\ttrans_to_rock(obj);</span>\n<span id=\"line31837\">31837. \tobj-&gt;oattached = OATTACHED_NOTHING;</span>\n<span id=\"line31838\">31838. \tif (obj-&gt;where == OBJ_FLOOR) {</span>\n<span id=\"line31839\">31839. \t\tobj_extract_self(obj);\t\t/* move rocks back on top */</span>\n<span id=\"line31840\">31840.@@ -3785,6 +3933,20 @@ register struct obj *obj;\t\t   /* no text</span>\n<span id=\"line31841\">31841. \t}</span>\n<span id=\"line31842\">31842. }</span>\n<span id=\"line31843\">31843. </span>\n<span id=\"line31844\">31844.+void</span>\n<span id=\"line31845\">31845.+trans_to_rock(obj)</span>\n<span id=\"line31846\">31846.+register struct obj *obj;</span>\n<span id=\"line31847\">31847.+{</span>\n<span id=\"line31848\">31848.+\tobj-&gt;otyp = (get_material(obj) == MINERAL)&#160;? ROCK&#160;: LAST_GEM + 1;</span>\n<span id=\"line31849\">31849.+\tobj-&gt;quan = (long) rn1(60, 7);</span>\n<span id=\"line31850\">31850.+\tobj-&gt;owt = weight(obj);</span>\n<span id=\"line31851\">31851.+\tobj-&gt;oclass = GEM_CLASS;</span>\n<span id=\"line31852\">31852.+\tobj-&gt;known = FALSE;</span>\n<span id=\"line31853\">31853.+\tobj-&gt;bknown = FALSE;</span>\n<span id=\"line31854\">31854.+\tobj-&gt;onamelth = 0;\t\t/* no names */</span>\n<span id=\"line31855\">31855.+\tobj-&gt;oxlth = 0;\t\t\t/* no extra data */</span>\n<span id=\"line31856\">31856.+}</span>\n<span id=\"line31857\">31857.+</span>\n<span id=\"line31858\">31858. /* handle statue hit by striking/force bolt/pick-axe */</span>\n<span id=\"line31859\">31859. boolean</span>\n<span id=\"line31860\">31860. break_statue(obj)</span>\n<span id=\"line31861\">31861.@@ -3793,7 +3955,10 @@ register struct obj *obj;</span>\n<span id=\"line31862\">31862. \t/* [obj is assumed to be on floor, so no get_obj_location() needed] */</span>\n<span id=\"line31863\">31863. \tstruct trap *trap = t_at(obj-&gt;ox, obj-&gt;oy);</span>\n<span id=\"line31864\">31864. \tstruct obj *item;</span>\n<span id=\"line31865\">31865.+\tint mat = get_material(obj);</span>\n<span id=\"line31866\">31866. </span>\n<span id=\"line31867\">31867.+\tif (mat&#160;!= MINERAL &amp;&amp; mat&#160;!= GLASS) return FALSE;\t/* do not shatter */</span>\n<span id=\"line31868\">31868.+</span>\n<span id=\"line31869\">31869. \tif (trap &amp;&amp; trap-&gt;ttyp == STATUE_TRAP &amp;&amp;</span>\n<span id=\"line31870\">31870. \t\tactivate_statue_trap(trap, obj-&gt;ox, obj-&gt;oy, TRUE))</span>\n<span id=\"line31871\">31871. \t    return FALSE;</span>\n<span id=\"line31872\">31872.@@ -3830,6 +3995,10 @@ register int osym, dmgtyp;</span>\n<span id=\"line31873\">31873. \tregister int dindx;</span>\n<span id=\"line31874\">31874. \tconst char *mult;</span>\n<span id=\"line31875\">31875. </span>\n<span id=\"line31876\">31876.+\tif (dmgtyp == AD_FIRE &amp;&amp; is_full_resist(FIRE_RES)) return;</span>\n<span id=\"line31877\">31877.+\tif (dmgtyp == AD_COLD &amp;&amp; is_full_resist(COLD_RES)) return;</span>\n<span id=\"line31878\">31878.+\tif (dmgtyp == AD_ELEC &amp;&amp; is_full_resist(SHOCK_RES)) return;</span>\n<span id=\"line31879\">31879.+</span>\n<span id=\"line31880\">31880. \tfor(obj = invent; obj; obj = obj2) {</span>\n<span id=\"line31881\">31881. \t    obj2 = obj-&gt;nobj;</span>\n<span id=\"line31882\">31882. \t    if(obj-&gt;oclass&#160;!= osym) continue; /* test only objs of type osym */</span>\n<span id=\"line31883\">31883.@@ -3873,6 +4042,20 @@ register int osym, dmgtyp;</span>\n<span id=\"line31884\">31884. \t\t\t    dindx = 3;</span>\n<span id=\"line31885\">31885. \t\t\t    dmg = 1;</span>\n<span id=\"line31886\">31886. \t\t\t    break;</span>\n<span id=\"line31887\">31887.+\t\t\tcase TOOL_CLASS:</span>\n<span id=\"line31888\">31888.+\t\t\t    if (get_material(obj) == CLOTH) {</span>\n<span id=\"line31889\">31889.+\t\t\t\tdindx = 3;</span>\n<span id=\"line31890\">31890.+\t\t\t\tdmg = 0;</span>\n<span id=\"line31891\">31891.+\t\t\t\tif (!objects[obj-&gt;otyp].oc_merge &amp;&amp;</span>\n<span id=\"line31892\">31892.+\t\t\t\t    obj-&gt;oeroded &lt; MAX_ERODE) {</span>\n<span id=\"line31893\">31893.+\t\t\t\t    skip++;</span>\n<span id=\"line31894\">31894.+\t\t\t\t    if (!rn2(3+(obj-&gt;blessed*2))) {</span>\n<span id=\"line31895\">31895.+\t\t\t\t\tobj-&gt;oeroded++;</span>\n<span id=\"line31896\">31896.+\t\t\t\t\tpline(\"Your %s catches fire and smoulders!\", xname(obj));</span>\n<span id=\"line31897\">31897.+\t\t\t\t    }</span>\n<span id=\"line31898\">31898.+\t\t\t\t}</span>\n<span id=\"line31899\">31899.+\t\t\t    } else skip++;</span>\n<span id=\"line31900\">31900.+\t\t\t    break;</span>\n<span id=\"line31901\">31901. \t\t\tdefault:</span>\n<span id=\"line31902\">31902. \t\t\t    skip++;</span>\n<span id=\"line31903\">31903. \t\t\t    break;</span>\n<span id=\"line31904\">31904.@@ -3927,6 +4110,25 @@ register int osym, dmgtyp;</span>\n<span id=\"line31905\">31905. \t\t\tsetnotworn(obj);</span>\n<span id=\"line31906\">31906. \t\t}</span>\n<span id=\"line31907\">31907. \t\tif (obj == current_wand) current_wand = 0;\t/* destroyed */</span>\n<span id=\"line31908\">31908.+\t\tif (Is_container(obj) &amp;&amp; Has_contents(obj)) {</span>\n<span id=\"line31909\">31909.+\t\t    struct obj *otmp;</span>\n<span id=\"line31910\">31910.+\t\t    long ccnt;</span>\n<span id=\"line31911\">31911.+\t\t    schar typ = levl[u.ux][u.uy].typ;</span>\n<span id=\"line31912\">31912.+\t\t    for (ccnt = 0, otmp = obj-&gt;cobj; otmp; otmp = otmp-&gt;nobj)</span>\n<span id=\"line31913\">31913.+\t\t\tccnt += otmp-&gt;quan;</span>\n<span id=\"line31914\">31914.+\t\t    if (ccnt) pline_The(\"content%s of %s fall%s %sto the %s!\",</span>\n<span id=\"line31915\">31915.+\t\t\t\t\t(ccnt &gt; 1)&#160;? \"s\"&#160;: \"\", the(xname(obj)),</span>\n<span id=\"line31916\">31916.+\t\t\t\t\t(ccnt == 1)&#160;? \"s\"&#160;: \"\",</span>\n<span id=\"line31917\">31917.+\t\t\t\t\t(IS_SOFT(typ) || IS_FOUNTAIN(typ) ||</span>\n<span id=\"line31918\">31918.+\t\t\t\t\t typ == LAVAPOOL)&#160;? \"in\"&#160;: \"\",</span>\n<span id=\"line31919\">31919.+\t\t\t\t\tsurface(u.ux, u.uy));</span>\n<span id=\"line31920\">31920.+\t\t    while (obj-&gt;cobj) {</span>\n<span id=\"line31921\">31921.+\t\t\totmp = obj-&gt;cobj;</span>\n<span id=\"line31922\">31922.+\t\t\tobj_extract_self(otmp);</span>\n<span id=\"line31923\">31923.+\t\t\tplace_object(otmp, u.ux, u.uy);</span>\n<span id=\"line31924\">31924.+\t\t\tstackobj(otmp);</span>\n<span id=\"line31925\">31925.+\t\t    }</span>\n<span id=\"line31926\">31926.+\t\t}</span>\n<span id=\"line31927\">31927. \t\tfor (i = 0; i &lt; cnt; i++)</span>\n<span id=\"line31928\">31928. \t\t    useup(obj);</span>\n<span id=\"line31929\">31929. \t\tif(dmg) {</span>\n<span id=\"line31930\">31930.@@ -3945,6 +4147,29 @@ register int osym, dmgtyp;</span>\n<span id=\"line31931\">31931. \treturn;</span>\n<span id=\"line31932\">31932. }</span>\n<span id=\"line31933\">31933. </span>\n<span id=\"line31934\">31934.+void</span>\n<span id=\"line31935\">31935.+destroy_items(dmgtyp)</span>\n<span id=\"line31936\">31936.+register int dmgtyp;</span>\n<span id=\"line31937\">31937.+{</span>\n<span id=\"line31938\">31938.+\tswitch (dmgtyp) {</span>\n<span id=\"line31939\">31939.+\t    case AD_FIRE:</span>\n<span id=\"line31940\">31940.+\t\tdestroy_item(SCROLL_CLASS, AD_FIRE);</span>\n<span id=\"line31941\">31941.+\t\tdestroy_item(POTION_CLASS, AD_FIRE);</span>\n<span id=\"line31942\">31942.+\t\tif (rn2(5) &lt; 3) destroy_item(SPBOOK_CLASS, AD_FIRE);</span>\n<span id=\"line31943\">31943.+\t\tdestroy_item(TOOL_CLASS, AD_FIRE);</span>\n<span id=\"line31944\">31944.+\t\tbreak;</span>\n<span id=\"line31945\">31945.+\t    case AD_COLD:</span>\n<span id=\"line31946\">31946.+\t\tdestroy_item(POTION_CLASS, AD_COLD);</span>\n<span id=\"line31947\">31947.+\t\tbreak;</span>\n<span id=\"line31948\">31948.+\t    case AD_ELEC:</span>\n<span id=\"line31949\">31949.+\t\tdestroy_item(WAND_CLASS, AD_ELEC);</span>\n<span id=\"line31950\">31950.+\t\tdestroy_item(RING_CLASS, AD_ELEC);</span>\n<span id=\"line31951\">31951.+\t\tbreak;</span>\n<span id=\"line31952\">31952.+\t    default:</span>\n<span id=\"line31953\">31953.+\t\tbreak;</span>\n<span id=\"line31954\">31954.+\t}</span>\n<span id=\"line31955\">31955.+}</span>\n<span id=\"line31956\">31956.+</span>\n<span id=\"line31957\">31957. int</span>\n<span id=\"line31958\">31958. destroy_mitem(mtmp, osym, dmgtyp)</span>\n<span id=\"line31959\">31959. struct monst *mtmp;</span>\n<span id=\"line31960\">31960.@@ -4142,5 +4367,169 @@ retry:</span>\n<span id=\"line31961\">31961. }</span>\n<span id=\"line31962\">31962. </span>\n<span id=\"line31963\">31963. #endif /*OVL2*/</span>\n<span id=\"line31964\">31964.+</span>\n<span id=\"line31965\">31965.+</span>\n<span id=\"line31966\">31966.+</span>\n<span id=\"line31967\">31967.+</span>\n<span id=\"line31968\">31968.+struct resiobj {</span>\n<span id=\"line31969\">31969.+\tlong\tmask;</span>\n<span id=\"line31970\">31970.+\tstruct obj **objp;</span>\n<span id=\"line31971\">31971.+\tuchar\tobjclass;</span>\n<span id=\"line31972\">31972.+\tuchar\tobjsubc;</span>\n<span id=\"line31973\">31973.+};</span>\n<span id=\"line31974\">31974.+</span>\n<span id=\"line31975\">31975.+const struct resiobj resiobjtbl[] = {</span>\n<span id=\"line31976\">31976.+\t/* reversed order */</span>\n<span id=\"line31977\">31977.+\t{ W_ARMF,    &amp;uarmf,\tARMOR_CLASS,  ARM_BOOTS  },</span>\n<span id=\"line31978\">31978.+\t{ W_ARMG,    &amp;uarmg,\tARMOR_CLASS,  ARM_GLOVES },</span>\n<span id=\"line31979\">31979.+\t{ W_ARMH,    &amp;uarmh,\tARMOR_CLASS,  ARM_HELM   },</span>\n<span id=\"line31980\">31980.+\t{ W_ARM,     &amp;uarm,\tARMOR_CLASS,  ARM_SUIT   },</span>\n<span id=\"line31981\">31981.+//\t{ W_SWAPWEP, &amp;uswapwep,\tWEAPON_CLASS, 2          },</span>\n<span id=\"line31982\">31982.+\t{ W_WEP,     &amp;uwep,\tWEAPON_CLASS, 1          },</span>\n<span id=\"line31983\">31983.+\t{ W_ARMC,    &amp;uarmc,\tARMOR_CLASS,  ARM_CLOAK  },</span>\n<span id=\"line31984\">31984.+\t{ W_ARMS,    &amp;uarms,\tARMOR_CLASS,  ARM_SHIELD },</span>\n<span id=\"line31985\">31985.+\t{ W_RINGR,   &amp;uright,\tRING_CLASS,   2          },</span>\n<span id=\"line31986\">31986.+\t{ W_RINGL,   &amp;uleft,\tRING_CLASS,   1          },</span>\n<span id=\"line31987\">31987.+\t{ W_AMUL,    &amp;uamul,\tAMULET_CLASS, 0          },</span>\n<span id=\"line31988\">31988.+\t{ 0, 0, 0, 0 }</span>\n<span id=\"line31989\">31989.+};</span>\n<span id=\"line31990\">31990.+</span>\n<span id=\"line31991\">31991.+void</span>\n<span id=\"line31992\">31992.+damage_resistant_obj(prop, damval)</span>\n<span id=\"line31993\">31993.+uchar prop;</span>\n<span id=\"line31994\">31994.+int damval;</span>\n<span id=\"line31995\">31995.+{</span>\n<span id=\"line31996\">31996.+\tlong e = u.uprops[prop].extrinsic;</span>\n<span id=\"line31997\">31997.+\tint oc1 = 0, oc2 = 0;</span>\n<span id=\"line31998\">31998.+\tint oldtmp, newtmp = 0;</span>\n<span id=\"line31999\">31999.+\tconst struct resiobj *tbl;</span>\n<span id=\"line32000\">32000.+\tstruct obj *otmp;</span>\n<span id=\"line32001\">32001.+</span>\n<span id=\"line32002\">32002.+\tif (e &amp; (W_ART|W_ARTI)) return;\t/* artifacts */</span>\n<span id=\"line32003\">32003.+</span>\n<span id=\"line32004\">32004.+\tfor ( tbl = resiobjtbl; tbl-&gt;mask; tbl++ ) {</span>\n<span id=\"line32005\">32005.+\t\tif ( e &amp; tbl-&gt;mask ) {</span>\n<span id=\"line32006\">32006.+\t\t\t/* artifacts do not get damaged */</span>\n<span id=\"line32007\">32007.+\t\t\tif ((*(tbl-&gt;objp))-&gt;oartifact) return;</span>\n<span id=\"line32008\">32008.+\t\t\toc1 = tbl-&gt;objclass;</span>\n<span id=\"line32009\">32009.+\t\t\toc2 = tbl-&gt;objsubc;</span>\n<span id=\"line32010\">32010.+\t\t\tbreak;</span>\n<span id=\"line32011\">32011.+\t\t}</span>\n<span id=\"line32012\">32012.+\t}</span>\n<span id=\"line32013\">32013.+\tif ( !oc1 ) return;\t/* there is no object to get damaged */</span>\n<span id=\"line32014\">32014.+\tif ( oc1 == WEAPON_CLASS &amp;&amp; oc2 == 2 &amp;&amp; !u.twoweap ) return;\t/* do not count unwield weapon */</span>\n<span id=\"line32015\">32015.+</span>\n<span id=\"line32016\">32016.+\tswitch (oc1) {</span>\n<span id=\"line32017\">32017.+\t    case AMULET_CLASS:</span>\n<span id=\"line32018\">32018.+\t\tif (prop&#160;!= ANTIMAGIC &amp;&amp; prop&#160;!= REFLECTING ) break;</span>\n<span id=\"line32019\">32019.+\t\tif (uamul) {</span>\n<span id=\"line32020\">32020.+\t\t\tif (uamul-&gt;oartifact) break;</span>\n<span id=\"line32021\">32021.+\t\t\toldtmp = uamul-&gt;odamaged;</span>\n<span id=\"line32022\">32022.+\t\t\tnewtmp = oldtmp + damval;</span>\n<span id=\"line32023\">32023.+\t\t\tif ( newtmp&gt;100 ) {</span>\n<span id=\"line32024\">32024.+\t\t\t\tif (Blind) You_feel(\"your medallion breaks in pieces!\");</span>\n<span id=\"line32025\">32025.+\t\t\t\telse Your(\"medallion glows brightly, and breaks in pieces!\");</span>\n<span id=\"line32026\">32026.+\t\t\t\totmp = uamul;</span>\n<span id=\"line32027\">32027.+\t\t\t\tAmulet_off();</span>\n<span id=\"line32028\">32028.+\t\t\t\tuseup(otmp);</span>\n<span id=\"line32029\">32029.+\t\t\t\tbreak;</span>\n<span id=\"line32030\">32030.+\t\t\t} else if ( /*oldtmp&lt;90 &amp;&amp;*/ newtmp&gt;=90 )</span>\n<span id=\"line32031\">32031.+\t\t\t\tif (!Blind) Your(\"medallion gives a faint glimmer of light!\");</span>\n<span id=\"line32032\">32032.+\t\t\t\telse Your(\"medallion vibrates violently!\");</span>\n<span id=\"line32033\">32033.+\t\t\telse if ( oldtmp&lt;75 &amp;&amp; newtmp&gt;=75 )</span>\n<span id=\"line32034\">32034.+\t\t\t\tYour(\"medallion vibrates unexpectedly.\");</span>\n<span id=\"line32035\">32035.+\t\t\tuamul-&gt;odamaged = newtmp;</span>\n<span id=\"line32036\">32036.+\t\t}</span>\n<span id=\"line32037\">32037.+\t\tbreak;</span>\n<span id=\"line32038\">32038.+\t    case ARMOR_CLASS:</span>\n<span id=\"line32039\">32039.+\t\tswitch (oc2) {</span>\n<span id=\"line32040\">32040.+\t\t    case ARM_CLOAK:</span>\n<span id=\"line32041\">32041.+\t\t\tif (uarmc) {</span>\n<span id=\"line32042\">32042.+\t\t\t\tif (uarmc-&gt;oartifact) break;</span>\n<span id=\"line32043\">32043.+\t\t\t\toldtmp = uarmc-&gt;odamaged;</span>\n<span id=\"line32044\">32044.+\t\t\t\tnewtmp = oldtmp + damval;</span>\n<span id=\"line32045\">32045.+\t\t\t\tif ( newtmp&gt;100 ) {</span>\n<span id=\"line32046\">32046.+\t\t\t\t\tif (Blind)</span>\n<span id=\"line32047\">32047.+\t\t\t\t\t    You_feel(\"your %s is gone away!\", cloak_simple_name(uarmc));</span>\n<span id=\"line32048\">32048.+\t\t\t\t\telse</span>\n<span id=\"line32049\">32049.+\t\t\t\t\t    Your(\"%s crumbles and turns to dust!\", cloak_simple_name(uarmc));</span>\n<span id=\"line32050\">32050.+\t\t\t\t\totmp = uarmc;</span>\n<span id=\"line32051\">32051.+\t       \t\t\t\t(void) Cloak_off();</span>\n<span id=\"line32052\">32052.+\t\t\t\t\tuseup(otmp);</span>\n<span id=\"line32053\">32053.+\t\t\t\t\tbreak;</span>\n<span id=\"line32054\">32054.+\t\t\t\t} else if ( /*oldtmp&lt;90 &amp;&amp;*/ newtmp&gt;=90 )</span>\n<span id=\"line32055\">32055.+\t\t\t\t\tYour(\"%s is about to come apart!\", cloak_simple_name(uarmc));</span>\n<span id=\"line32056\">32056.+\t\t\t\telse if ( oldtmp&lt;75 &amp;&amp; newtmp&gt;=75 )</span>\n<span id=\"line32057\">32057.+\t\t\t\t\tYour(\"%s becomes slightly shabby.\", cloak_simple_name(uarmc));</span>\n<span id=\"line32058\">32058.+\t\t\t\tuarmc-&gt;odamaged = newtmp;</span>\n<span id=\"line32059\">32059.+\t\t\t}</span>\n<span id=\"line32060\">32060.+\t\t\tbreak;</span>\n<span id=\"line32061\">32061.+\t\t    case ARM_SHIELD:</span>\n<span id=\"line32062\">32062.+\t\t\tif (uarms &amp;&amp; uarms-&gt;oartifact) break;</span>\n<span id=\"line32063\">32063.+\t\t\tif (uarms &amp;&amp; prop == REFLECTING) {\t/* shield of reflection */</span>\n<span id=\"line32064\">32064.+\t\t\t\toldtmp = uarms-&gt;odamaged;</span>\n<span id=\"line32065\">32065.+\t\t\t\tnewtmp = oldtmp + damval;</span>\n<span id=\"line32066\">32066.+\t\t\t\tif ( newtmp&gt;100 ) {</span>\n<span id=\"line32067\">32067.+\t\t\t\t\tif (!Blind) Your(\"shield is completely tarnished.\");</span>\n<span id=\"line32068\">32068.+\t\t\t\t\telse You_feel(\"your shield is somewhat helpless.\");</span>\n<span id=\"line32069\">32069.+\t\t\t\t\totmp = uarms;</span>\n<span id=\"line32070\">32070.+\t\t\t\t\tShield_off();</span>\n<span id=\"line32071\">32071.+\t\t\t\t\totmp-&gt;otyp = SHIELD;</span>\n<span id=\"line32072\">32072.+\t\t\t\t\totmp-&gt;odamaged = 0;</span>\n<span id=\"line32073\">32073.+\t\t\t\t\tchange_material(otmp, SILVER);\t/* mere silver shield */</span>\n<span id=\"line32074\">32074.+\t\t\t\t\tsetworn(otmp, W_ARMS);</span>\n<span id=\"line32075\">32075.+\t\t\t\t\tbreak;</span>\n<span id=\"line32076\">32076.+\t\t\t\t} else if ( /*oldtmp&lt;90 &amp;&amp;*/ newtmp&gt;=90 ) {</span>\n<span id=\"line32077\">32077.+\t\t\t\t    if (!Blind) Your(\"shield looks much duller!\");</span>\n<span id=\"line32078\">32078.+\t\t\t\t    else Your(\"shield shivers!\");</span>\n<span id=\"line32079\">32079.+\t\t\t\t} else if ( oldtmp&lt;75 &amp;&amp; newtmp&gt;=75 ) {</span>\n<span id=\"line32080\">32080.+\t\t\t\t    if (!Blind) Your(\"shield looks slightly dull.\");</span>\n<span id=\"line32081\">32081.+\t\t\t\t    else Your(\"shield shivers slightly.\");</span>\n<span id=\"line32082\">32082.+\t\t\t\t}</span>\n<span id=\"line32083\">32083.+\t\t\t\tuarms-&gt;odamaged = newtmp;</span>\n<span id=\"line32084\">32084.+\t\t\t}</span>\n<span id=\"line32085\">32085.+\t\t\tbreak;</span>\n<span id=\"line32086\">32086.+\t\t    case ARM_SUIT:</span>\n<span id=\"line32087\">32087.+\t\t\tif (uarm &amp;&amp; uarm-&gt;oartifact) break;</span>\n<span id=\"line32088\">32088.+\t\t\tif (prop&#160;!= ANTIMAGIC &amp;&amp; prop&#160;!= REFLECTING ) break;</span>\n<span id=\"line32089\">32089.+\t\t\tif (uarm &amp;&amp; Is_dragon_armor(uarm)) {\t/* gray or silver dragon */</span>\n<span id=\"line32090\">32090.+\t\t\t\tchar buf[BUFSZ];</span>\n<span id=\"line32091\">32091.+\t\t\t\tint isdm = Is_dragon_mail(uarm);</span>\n<span id=\"line32092\">32092.+\t\t\t\toldtmp = uarm-&gt;odamaged;</span>\n<span id=\"line32093\">32093.+\t\t\t\tnewtmp = oldtmp + damval;</span>\n<span id=\"line32094\">32094.+\t\t\t\tSprintf(buf, \"dragon scale%s\", isdm&#160;? \" mail\"&#160;: \"s\");</span>\n<span id=\"line32095\">32095.+\t\t\t\tif ( newtmp&gt;100 ) {</span>\n<span id=\"line32096\">32096.+\t\t\t\t    if (isdm) {</span>\n<span id=\"line32097\">32097.+\t\t\t\t\tYour(\"%s seems to lose its power.\", buf);</span>\n<span id=\"line32098\">32098.+\t\t\t\t\totmp = uarm;</span>\n<span id=\"line32099\">32099.+\t\t\t\t\tArmor_off();</span>\n<span id=\"line32100\">32100.+\t\t\t\t\totmp-&gt;otyp = PLAIN_DRAGON_SCALE_MAIL;\t/* mere scale mail */</span>\n<span id=\"line32101\">32101.+\t\t\t\t\totmp-&gt;odamaged = 0;</span>\n<span id=\"line32102\">32102.+\t\t\t\t\tsetworn(otmp, W_ARM);</span>\n<span id=\"line32103\">32103.+\t\t\t\t    } else {</span>\n<span id=\"line32104\">32104.+\t\t\t\t\tYour(\"%s crumble and fall apart!\", buf);</span>\n<span id=\"line32105\">32105.+\t\t\t\t\totmp = uarm;</span>\n<span id=\"line32106\">32106.+\t\t\t\t\tArmor_off();</span>\n<span id=\"line32107\">32107.+\t\t\t\t\tuseup(otmp);</span>\n<span id=\"line32108\">32108.+\t\t\t\t    }</span>\n<span id=\"line32109\">32109.+\t\t\t\t    break;</span>\n<span id=\"line32110\">32110.+\t\t\t\t} else if ( /*oldtmp&lt;90 &amp;&amp;*/ newtmp&gt;=90 )</span>\n<span id=\"line32111\">32111.+\t\t\t\t    Your(\"%s shiver%s!\", buf, isdm&#160;? \"s\"&#160;: \"\");</span>\n<span id=\"line32112\">32112.+\t\t\t\telse if ( oldtmp&lt;75 &amp;&amp; newtmp&gt;=75 )</span>\n<span id=\"line32113\">32113.+\t\t\t\t    Your(\"%s shiver%s slightly.\", buf, isdm&#160;? \"s\"&#160;: \"\");</span>\n<span id=\"line32114\">32114.+\t\t\t\tuarm-&gt;odamaged = newtmp;</span>\n<span id=\"line32115\">32115.+\t\t\t}</span>\n<span id=\"line32116\">32116.+\t\t\tbreak;</span>\n<span id=\"line32117\">32117.+\t\t    default:</span>\n<span id=\"line32118\">32118.+\t\t\tbreak;</span>\n<span id=\"line32119\">32119.+\t\t}</span>\n<span id=\"line32120\">32120.+\t\tbreak;</span>\n<span id=\"line32121\">32121.+\t    default:</span>\n<span id=\"line32122\">32122.+\t\t/*impossible(\"Damage to strange object???\")*/;</span>\n<span id=\"line32123\">32123.+\t}</span>\n<span id=\"line32124\">32124.+\tif (wizard) pline(\"[%d%]\", newtmp);</span>\n<span id=\"line32125\">32125.+\treturn;</span>\n<span id=\"line32126\">32126.+}</span>\n<span id=\"line32127\">32127.+</span>\n<span id=\"line32128\">32128. </span>\n<span id=\"line32129\">32129. /*zap.c*/</span>\n</pre>\n<p>You may want to give your attention to the above code that controls gradual wear to items that provide <a href=\"/wiki/Magic_resistance\" title=\"Magic resistance\">magic resistance</a> or <a href=\"/wiki/Reflection\" title=\"Reflection\">reflection</a>. The <tt>damage_resistant_obj</tt> function applies damage to an <a href=\"/wiki/Object\" class=\"mw-redirect\" title=\"Object\">object</a>. As the object resists magic or reflects ray, its damage points will increase.\n</p><p>Note in line 32006 that <a href=\"/wiki/Artifact\" title=\"Artifact\">artifacts</a> are immune to damage.\n</p>\n<!-- \nNewPP limit report\nCached time: 20240926185408\nCache expiry: 604800\nDynamic content: false\nCPU time usage: 0.120 seconds\nReal time usage: 0.127 seconds\nPreprocessor visited node count: 1985/1000000\nPreprocessor generated node count: 4072/1000000\nPost‐expand include size: 1376/2097152 bytes\nTemplate argument size: 320/2097152 bytes\nHighest expansion depth: 3/40\nExpensive parser function count: 0/100\nUnstrip recursion depth: 0/20\nUnstrip post‐expand size: 0/5000000 bytes\n-->\n<!--\nTransclusion expansion time report (%,ms,calls,template)\n100.00%    4.909      1 -total\n 42.74%    2.098      1 Template:Patch\n 26.61%    1.306      1 Template:NGPL\n 25.09%    1.232      1 Template:Todo\n-->\n\n<!-- Saved in parser cache with key wikihackdb:pcache:idhash:8402-0!canonical and timestamp 20240926185408 and revision id 141795\n -->\n</div></div>\t\t\t\t\t<div class=\"printfooter\">\n\t\t\t\t\t\tRetrieved from \"<a dir=\"ltr\" href=\"https://nethackwiki.com/index.php?title=NetHack_brass_as_a_patch&amp;oldid=141795\">https://nethackwiki.com/index.php?title=NetHack_brass_as_a_patch&amp;oldid=141795</a>\"\t\t\t\t\t</div>\n\t\t\t\t<div id=\"catlinks\" class=\"catlinks\" data-mw=\"interface\"><div id=\"mw-normal-catlinks\" class=\"mw-normal-catlinks\"><a href=\"/wiki/Special:Categories\" title=\"Special:Categories\">Categories</a>: <ul><li><a href=\"/wiki/Category:Todo\" title=\"Category:Todo\">Todo</a></li><li><a href=\"/wiki/Category:NGPL\" title=\"Category:NGPL\">NGPL</a></li><li><a href=\"/wiki/Category:Patches\" title=\"Category:Patches\">Patches</a></li></ul></div></div>\t\t\t\t<div class=\"visualClear\"></div>\n\t\t\t\t\t\t\t</div>\n\t\t</div>\n\t\t<div id=\"mw-navigation\">\n\t\t\t<h2>Navigation menu</h2>\n\t\t\t<div id=\"mw-head\">\n\t\t\t\t\t\t\t\t\t<div id=\"p-personal\" role=\"navigation\" class=\"\" aria-labelledby=\"p-personal-label\">\n\t\t\t\t\t\t<h3 id=\"p-personal-label\">Personal tools</h3>\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<li id=\"pt-createaccount\"><a href=\"/index.php?title=Special:CreateAccount&amp;returnto=NetHack+brass+as+a+patch\" title=\"You are encouraged to create an account and log in; however, it is not mandatory\">Create account</a></li><li id=\"pt-login\"><a href=\"/index.php?title=Special:UserLogin&amp;returnto=NetHack+brass+as+a+patch\" title=\"You are encouraged to log in; however, it is not mandatory [o]\" accesskey=\"o\">Log in</a></li>\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div id=\"left-navigation\">\n\t\t\t\t\t\t\t\t\t\t<div id=\"p-namespaces\" role=\"navigation\" class=\"vectorTabs\" aria-labelledby=\"p-namespaces-label\">\n\t\t\t\t\t\t<h3 id=\"p-namespaces-label\">Namespaces</h3>\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<li id=\"ca-nstab-main\" class=\"selected\"><span><a href=\"/wiki/NetHack_brass_as_a_patch\" title=\"View the content page [c]\" accesskey=\"c\">Page</a></span></li><li id=\"ca-talk\" class=\"new\"><span><a href=\"/index.php?title=Talk:NetHack_brass_as_a_patch&amp;action=edit&amp;redlink=1\" rel=\"discussion\" title=\"Discussion about the content page (page does not exist) [t]\" accesskey=\"t\">Discussion</a></span></li>\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div id=\"p-variants\" role=\"navigation\" class=\"vectorMenu emptyPortlet\" aria-labelledby=\"p-variants-label\">\n\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"checkbox\" class=\"vectorMenuCheckbox\" aria-labelledby=\"p-variants-label\" />\n\t\t\t\t\t\t<h3 id=\"p-variants-label\">\n\t\t\t\t\t\t\t<span>Variants</span>\n\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t<div class=\"menu\">\n\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t<div id=\"right-navigation\">\n\t\t\t\t\t\t\t\t\t\t<div id=\"p-views\" role=\"navigation\" class=\"vectorTabs\" aria-labelledby=\"p-views-label\">\n\t\t\t\t\t\t<h3 id=\"p-views-label\">Views</h3>\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<li id=\"ca-view\" class=\"collapsible selected\"><span><a href=\"/wiki/NetHack_brass_as_a_patch\">Read</a></span></li><li id=\"ca-viewsource\" class=\"collapsible\"><span><a href=\"/index.php?title=NetHack_brass_as_a_patch&amp;action=edit\" title=\"This page is protected.&#10;You can view its source [e]\" accesskey=\"e\">View source</a></span></li><li id=\"ca-history\" class=\"collapsible\"><span><a href=\"/index.php?title=NetHack_brass_as_a_patch&amp;action=history\" title=\"Past revisions of this page [h]\" accesskey=\"h\">View history</a></span></li>\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div id=\"p-cactions\" role=\"navigation\" class=\"vectorMenu emptyPortlet\" aria-labelledby=\"p-cactions-label\">\n\t\t\t\t\t\t<input type=\"checkbox\" class=\"vectorMenuCheckbox\" aria-labelledby=\"p-cactions-label\" />\n\t\t\t\t\t\t<h3 id=\"p-cactions-label\"><span>More</span></h3>\n\t\t\t\t\t\t<div class=\"menu\">\n\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div id=\"p-search\" role=\"search\">\n\t\t\t\t\t\t<h3>\n\t\t\t\t\t\t\t<label for=\"searchInput\">Search</label>\n\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t<form action=\"/index.php\" id=\"searchform\">\n\t\t\t\t\t\t\t<div id=\"simpleSearch\">\n\t\t\t\t\t\t\t\t<input type=\"search\" name=\"search\" placeholder=\"Search NetHackWiki\" title=\"Search NetHackWiki [f]\" accesskey=\"f\" id=\"searchInput\"/><input type=\"hidden\" value=\"Special:Search\" name=\"title\"/><input type=\"submit\" name=\"fulltext\" value=\"Search\" title=\"Search the pages for this text\" id=\"mw-searchButton\" class=\"searchButton mw-fallbackSearchButton\"/><input type=\"submit\" name=\"go\" value=\"Go\" title=\"Go to a page with this exact name if it exists\" id=\"searchButton\" class=\"searchButton\"/>\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div id=\"mw-panel\">\n\t\t\t\t<div id=\"p-logo\" role=\"banner\"><a class=\"mw-wiki-logo\" href=\"/wiki/Main_Page\"  title=\"Visit the main page\"></a></div>\n\t\t\t\t\t\t<div class=\"portal\" role=\"navigation\" id=\"p-navigation\" aria-labelledby=\"p-navigation-label\">\n\t\t\t<h3 id=\"p-navigation-label\">Navigation</h3>\n\t\t\t<div class=\"body\">\n\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t<li id=\"n-NetHack-Wiki\"><a href=\"/wiki/Main_Page\">NetHack Wiki</a></li><li id=\"n-Forum\"><a href=\"/wiki/Forum:Watercooler\">Forum</a></li><li id=\"n-portal\"><a href=\"/wiki/NetHackWiki:Community_Portal\" title=\"About the project, what you can do, where to find things\">Community portal</a></li><li id=\"n-recentchanges\"><a href=\"/wiki/Special:RecentChanges\" title=\"A list of recent changes in the wiki [r]\" accesskey=\"r\">Recent changes</a></li><li id=\"n-randompage\"><a href=\"/wiki/Special:Random\" title=\"Load a random page [x]\" accesskey=\"x\">Random page</a></li>\t\t\t\t</ul>\n\t\t\t\t\t\t\t</div>\n\t\t</div>\n\t\t\t<div class=\"portal\" role=\"navigation\" id=\"p-Popular_pages\" aria-labelledby=\"p-Popular_pages-label\">\n\t\t\t<h3 id=\"p-Popular_pages-label\">Popular pages</h3>\n\t\t\t<div class=\"body\">\n\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t<li id=\"n-Dungeon-features\"><a href=\"/wiki/Dungeon_feature\">Dungeon features</a></li><li id=\"n-Monsters\"><a href=\"/wiki/Monster#Canonical_list_of_monsters\">Monsters</a></li><li id=\"n-In.2FExtrinsics\"><a href=\"/wiki/Property#Intrinsic_properties\">In/Extrinsics</a></li><li id=\"n-Items\"><a href=\"/wiki/Item\">Items</a></li><li id=\"n-Spells\"><a href=\"/wiki/Spellbook#List_of_spellbooks\">Spells</a></li><li id=\"n-Game-options\"><a href=\"/wiki/Options\">Game options</a></li><li id=\"n-Websites\"><a href=\"/wiki/Websites\">Websites</a></li>\t\t\t\t</ul>\n\t\t\t\t\t\t\t</div>\n\t\t</div>\n\t\t\t<div class=\"portal\" role=\"navigation\" id=\"p-contributing\" aria-labelledby=\"p-contributing-label\">\n\t\t\t<h3 id=\"p-contributing-label\">Contributing</h3>\n\t\t\t<div class=\"body\">\n\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t<li id=\"n-Style-guide\"><a href=\"/wiki/NetHackWiki:Style_guide\">Style guide</a></li><li id=\"n-help\"><a href=\"/wiki/NetHackWiki:How_to_help\" title=\"The place to find out\">How to help</a></li><li id=\"n-Current-projects\"><a href=\"/wiki/NetHackWiki:Current_projects\">Current projects</a></li>\t\t\t\t</ul>\n\t\t\t\t\t\t\t</div>\n\t\t</div>\n\t\t\t<div class=\"portal\" role=\"navigation\" id=\"p-tb\" aria-labelledby=\"p-tb-label\">\n\t\t\t<h3 id=\"p-tb-label\">Tools</h3>\n\t\t\t<div class=\"body\">\n\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t<li id=\"t-whatlinkshere\"><a href=\"/wiki/Special:WhatLinksHere/NetHack_brass_as_a_patch\" title=\"A list of all wiki pages that link here [j]\" accesskey=\"j\">What links here</a></li><li id=\"t-recentchangeslinked\"><a href=\"/wiki/Special:RecentChangesLinked/NetHack_brass_as_a_patch\" rel=\"nofollow\" title=\"Recent changes in pages linked from this page [k]\" accesskey=\"k\">Related changes</a></li><li id=\"t-specialpages\"><a href=\"/wiki/Special:SpecialPages\" title=\"A list of all special pages [q]\" accesskey=\"q\">Special pages</a></li><li id=\"t-print\"><a href=\"/index.php?title=NetHack_brass_as_a_patch&amp;printable=yes\" rel=\"alternate\" title=\"Printable version of this page [p]\" accesskey=\"p\">Printable version</a></li><li id=\"t-permalink\"><a href=\"/index.php?title=NetHack_brass_as_a_patch&amp;oldid=141795\" title=\"Permanent link to this revision of the page\">Permanent link</a></li><li id=\"t-info\"><a href=\"/index.php?title=NetHack_brass_as_a_patch&amp;action=info\" title=\"More information about this page\">Page information</a></li>\t\t\t\t</ul>\n\t\t\t\t\t\t\t</div>\n\t\t</div>\n\t\t\t\t</div>\n\t\t</div>\n\t\t\t\t<div id=\"footer\" role=\"contentinfo\">\n\t\t\t\t\t\t<ul id=\"footer-info\">\n\t\t\t\t\t\t\t\t<li id=\"footer-info-lastmod\"> This page was last edited on 24 July 2021, at 01:51.</li>\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t<ul id=\"footer-places\">\n\t\t\t\t\t\t\t\t<li id=\"footer-places-about\"><a href=\"/wiki/NetHackWiki:About\" title=\"NetHackWiki:About\">About NetHackWiki</a></li>\n\t\t\t\t\t\t\t\t<li id=\"footer-places-disclaimer\"><a href=\"/wiki/NetHackWiki:General_disclaimer\" title=\"NetHackWiki:General disclaimer\">Disclaimers</a></li>\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t\t\t<ul id=\"footer-icons\" class=\"noprint\">\n\t\t\t\t\t\t\t\t\t\t<li id=\"footer-poweredbyico\">\n\t\t\t\t\t\t<a href=\"//www.mediawiki.org/\"><img src=\"/resources/assets/poweredby_mediawiki_88x31.png\" alt=\"Powered by MediaWiki\" srcset=\"/resources/assets/poweredby_mediawiki_132x47.png 1.5x, /resources/assets/poweredby_mediawiki_176x62.png 2x\" width=\"88\" height=\"31\"/></a>\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t<div style=\"clear: both;\"></div>\n\t\t</div>\n\t\t\n<script>(window.RLQ=window.RLQ||[]).push(function(){mw.config.set({\"wgPageParseReport\":{\"limitreport\":{\"cputime\":\"0.120\",\"walltime\":\"0.127\",\"ppvisitednodes\":{\"value\":1985,\"limit\":1000000},\"ppgeneratednodes\":{\"value\":4072,\"limit\":1000000},\"postexpandincludesize\":{\"value\":1376,\"limit\":2097152},\"templateargumentsize\":{\"value\":320,\"limit\":2097152},\"expansiondepth\":{\"value\":3,\"limit\":40},\"expensivefunctioncount\":{\"value\":0,\"limit\":100},\"unstrip-depth\":{\"value\":0,\"limit\":20},\"unstrip-size\":{\"value\":0,\"limit\":5000000},\"timingprofile\":[\"100.00%    4.909      1 -total\",\" 42.74%    2.098      1 Template:Patch\",\" 26.61%    1.306      1 Template:NGPL\",\" 25.09%    1.232      1 Template:Todo\"]},\"cachereport\":{\"timestamp\":\"20240926185408\",\"ttl\":604800,\"transientcontent\":false}}});mw.config.set({\"wgBackendResponseTime\":178});});</script>\n\t</body>\n</html>\n","rawPage":"{{patch\n |name=NetHack brass as a patch\n |author=Code by Youkan<br />Patch from [[User:Kernigh|Kernigh]]\n |download=http://kernigh.pbwiki.com/f/brass-040923.diff\n |bilious=279\n}}\n\nThis page presents [[NetHack brass]] as a [[patch]] against vanilla [[NetHack 3.4.3]].\n\n[[User:Kernigh|Kernigh]] used the [[diff]] program to generate this \"unified diff\" between NetHack 3.4.3 and NetHack brass 040923 after pruning some files from the 040923. In particular, Youkan's zip of the 040923 source code was not clean of generated files created during the build process on [[Microsoft Windows]], including some Windows executables. Youkan's zip also contains old versions of some of the [[dungeon]] files, with DOS batch (*.bat) scripts to enable them.\n\nThe patch presented here contains neither the Windows-generated files, nor the old dungeons and DOS batch script. After applying this patch to the vanilla sources, [[you]] do have everything needed to build NetHack brass 040923 from source code. If you are building upon [[Unix]], then you also want the [[brass interface patch]], or at least the Unix fixes from that patch.\n\nDownload the patch from:\n: http://kernigh.pbwiki.com/f/brass-040923.diff\n\n{{todo|Merge this into the main NetHack brass page. Additionally someone who still has the diff file should upload it and replace this now-dead link.}}\n\n== Files patched ==\n* <tt>dat/*.des</tt>\n** Most objects are made from normal material <tt>mat_normal</tt> to handle a change in the [[des-file format]].\n** Changes to the maps of the [[Quest]] levels for the [[Monk]], attributed to Bill Foust.\n** Many, many changes at the [[Castle]] and below, including a serious redesign of [[Gehennom]].\n* <tt>dat/rumor.{fal,tru}</tt>\n** This rumor becomes false: \"They say that you can't break an amulet of reflection.\"\n* Numerous changes to source files.\n\nNote that the source files do contain several instances of <tt>//</tt> style comments. This comment syntax, borrowed from C++, may not work in compilers older than C99. Some C compilers (including GCC) supported <tt>//</tt> comments in C before C99.\n\n== Changes to some source files ==\nHere are some excerpts of changes to ''some'' but not all of the source files. These might be useful for those wanting to study the differences between vanilla and NetHack brass.\n\nThe line numbers are those of the diff file.\n\n{{NGPL}}\n\n=== artifact.h ===\n <span id=\"line2079\">2079. diff -pruN nethack-3.4.3/include/[[artifact.h]] nhbrass-040923/include/artifact.h</span>\n <span id=\"line2080\">2080. --- nethack-3.4.3/include/artifact.h\tSun Dec  7 18:39:13 2003</span>\n <span id=\"line2081\">2081. +++ nhbrass-040923/include/artifact.h\tThu Oct 16 09:05:02 2003</span>\n <span id=\"line2082\">2082. @@ -38,12 +38,13 @@</span>\n <span id=\"line2083\">2083.  </span>\n <span id=\"line2084\">2084.  struct artifact {</span>\n <span id=\"line2085\">2085.  \tshort\t    otyp;</span>\n <span id=\"line2086\">2086. -\tconst char  *name;</span>\n <span id=\"line2087\">2087. +\t/*const*/ char  *name;</span>\n <span id=\"line2088\">2088.  \tunsigned long spfx;\t/* special effect from wielding/wearing */</span>\n <span id=\"line2089\">2089.  \tunsigned long cspfx;\t/* special effect just from carrying obj */</span>\n <span id=\"line2090\">2090.  \tunsigned long mtype;\t/* monster type, symbol, or flag */</span>\n <span id=\"line2091\">2091.  \tstruct attack attk, defn, cary;</span>\n <span id=\"line2092\">2092.  \tuchar\t    inv_prop;\t/* property obtained by invoking artifact */</span>\n <span id=\"line2093\">2093. +\tuchar\t    material;\t/* if artifact is made of special material */</span>\n <span id=\"line2094\">2094.  \taligntyp    alignment;\t/* alignment of bequeathing gods */</span>\n <span id=\"line2095\">2095.  \tshort\t    role;\t/* character role associated with */</span>\n <span id=\"line2096\">2096.  \tshort\t    race;\t/* character race associated with */</span>\n <span id=\"line2097\">2097. @@ -60,5 +61,13 @@ struct artifact {</span>\n <span id=\"line2098\">2098.  #define CREATE_PORTAL\t(LAST_PROP+7)</span>\n <span id=\"line2099\">2099.  #define ENLIGHTENING\t(LAST_PROP+8)</span>\n <span id=\"line2100\">2100.  #define CREATE_AMMO\t(LAST_PROP+9)</span>\n <span id=\"line2101\">2101. +#define EMIT_LIGHT\t(LAST_PROP+10)</span>\n <span id=\"line2102\">2102. +</span>\n <span id=\"line2103\">2103. +/* additional alighment */</span>\n <span id=\"line2104\">2104. +#define\tA_CROSSALIGNED\t(-127)</span>\n <span id=\"line2105\">2105. +</span>\n <span id=\"line2106\">2106. +/* special damage bonus identifiers */</span>\n <span id=\"line2107\">2107. +#define ADMG_DOUBLE\t255</span>\n <span id=\"line2108\">2108. +#define ADMG_MAX\t254</span>\n <span id=\"line2109\">2109.  </span>\n <span id=\"line2110\">2110.  #endif /* ARTIFACT_H */</span>\n\n=== artilist.h ===\n <span id=\"line2111\">2111. diff -pruN nethack-3.4.3/include/artilist.h nhbrass-040923/include/[[artilist.h]]</span>\n <span id=\"line2112\">2112. --- nethack-3.4.3/include/artilist.h\tSun Dec  7 18:39:13 2003</span>\n <span id=\"line2113\">2113. +++ nhbrass-040923/include/artilist.h\tSun Jan  4 01:41:00 2004</span>\n <span id=\"line2114\">2114. @@ -5,14 +5,14 @@</span>\n <span id=\"line2115\">2115.  #ifdef MAKEDEFS_C</span>\n <span id=\"line2116\">2116.  /* in makedefs.c, all we care about is the list of names */</span>\n <span id=\"line2117\">2117.  </span>\n <span id=\"line2118\">2118. -#define A(nam,typ,s1,s2,mt,atk,dfn,cry,inv,al,cl,rac,cost) nam</span>\n <span id=\"line2119\">2119. +#define A(nam,typ,mat,s1,s2,mt,atk,dfn,cry,inv,al,cl,rac,cost) nam</span>\n <span id=\"line2120\">2120.  </span>\n <span id=\"line2121\">2121.  static const char *artifact_names[] = {</span>\n <span id=\"line2122\">2122.  #else</span>\n <span id=\"line2123\">2123.  /* in artifact.c, set up the actual artifact list structure */</span>\n <span id=\"line2124\">2124.  </span>\n <span id=\"line2125\">2125. -#define A(nam,typ,s1,s2,mt,atk,dfn,cry,inv,al,cl,rac,cost) \\</span>\n <span id=\"line2126\">2126. - { typ, nam, s1, s2, mt, atk, dfn, cry, inv, al, cl, rac, cost }</span>\n <span id=\"line2127\">2127. +#define A(nam,typ,mat,s1,s2,mt,atk,dfn,cry,inv,al,cl,rac,cost) \\</span>\n <span id=\"line2128\">2128. + { typ, nam, s1, s2, mt, atk, dfn, cry, inv, mat, al, cl, rac, cost }</span>\n <span id=\"line2129\">2129.  </span>\n <span id=\"line2130\">2130.  #define     NO_ATTK\t{0,0,0,0}\t\t/* no attack */</span>\n <span id=\"line2131\">2131.  #define     NO_DFNS\t{0,0,0,0}\t\t/* no defense */</span>\n <span id=\"line2132\">2132. @@ -35,42 +35,55 @@ STATIC_OVL NEARDATA struct artifact arti</span>\n <span id=\"line2133\">2133.   * 3.  Chaotic artifacts are inflated due to scarcity (and balance).</span>\n <span id=\"line2134\">2134.   */</span>\n <span id=\"line2135\">2135.  </span>\n <span id=\"line2136\">2136. +/* Arc\t---\t\t*/</span>\n <span id=\"line2137\">2137. +/* Bar\tCleaver\t\t*/</span>\n <span id=\"line2138\">2138. +/* Cav\tSkullcrusher\t*/</span>\n <span id=\"line2139\">2139. +/* Hea\t---\t\t*/</span>\n <span id=\"line2140\">2140. +/* Kni\tExcalibur\t*/</span>\n <span id=\"line2141\">2141. +/* Mon\t---\t\t*/</span>\n <span id=\"line2142\">2142. +/* Pri\tDisrupter\t*/</span>\n <span id=\"line2143\">2143. +/* Ran\t---\t\t*/</span>\n <span id=\"line2144\">2144. +/* Rog\t---\t\t*/</span>\n <span id=\"line2145\">2145. +/* Sam\tSnickersnee\t*/</span>\n <span id=\"line2146\">2146. +/* Tou\t---\t\t*/</span>\n <span id=\"line2147\">2147. +/* Val\tMjollnir\t*/</span>\n <span id=\"line2148\">2148. +/* Wiz\tMagicbane\t*/</span>\n <span id=\"line2149\">2149.  </span>\n <span id=\"line2150\">2150.  /*  dummy element #0, so that all interesting indices are non-zero */</span>\n <span id=\"line2151\">2151. -A(\"\",\t\t\t\tSTRANGE_OBJECT,</span>\n <span id=\"line2152\">2152. +A(\"\",\t\t\t\tSTRANGE_OBJECT,\t0,</span>\n <span id=\"line2153\">2153.  \t0, 0, 0, NO_ATTK, NO_DFNS, NO_CARY, 0, A_NONE, NON_PM, NON_PM, 0L ),</span>\n <span id=\"line2154\">2154.  </span>\n <span id=\"line2155\">2155. -A(\"Excalibur\",\t\t\tLONG_SWORD,</span>\n <span id=\"line2156\">2156. +A(\"Excalibur\",\t\t\tLONG_SWORD,\tMETAL,</span>\n <span id=\"line2157\">2157.  \t(SPFX_NOGEN|SPFX_RESTR|SPFX_SEEK|SPFX_DEFN|SPFX_INTEL|SPFX_SEARCH),0,0,</span>\n <span id=\"line2158\">2158.  \tPHYS(5,10),\tDRLI(0,0),\tNO_CARY,\t0, A_LAWFUL, PM_KNIGHT, NON_PM, 4000L ),</span>\n <span id=\"line2159\">2159.  /*</span>\n <span id=\"line2160\">2160.   *\tStormbringer only has a 2 because it can drain a level,</span>\n <span id=\"line2161\">2161.   *\tproviding 8 more.</span>\n <span id=\"line2162\">2162.   */</span>\n <span id=\"line2163\">2163. -A(\"Stormbringer\",\t\tRUNESWORD,</span>\n <span id=\"line2164\">2164. +A(\"Stormbringer\",\t\tRUNESWORD,\t0,</span>\n <span id=\"line2165\">2165.  \t(SPFX_RESTR|SPFX_ATTK|SPFX_DEFN|SPFX_INTEL|SPFX_DRLI), 0, 0,</span>\n <span id=\"line2166\">2166.  \tDRLI(5,2),\tDRLI(0,0),\tNO_CARY,\t0, A_CHAOTIC, NON_PM, NON_PM, 8000L ),</span>\n <span id=\"line2167\">2167.  /*</span>\n <span id=\"line2168\">2168.   *\tMjollnir will return to the hand of the wielder when thrown</span>\n <span id=\"line2169\">2169.   *\tif the wielder is a Valkyrie wearing Gauntlets of Power.</span>\n <span id=\"line2170\">2170.   */</span>\n <span id=\"line2171\">2171. -A(\"Mjollnir\",\t\t\tWAR_HAMMER,\t\t/* Mjo:llnir */</span>\n <span id=\"line2172\">2172. +A(\"Mjollnir\",\t\t\tHEAVY_HAMMER,\t0,\t/* Mjo:llnir */</span>\n <span id=\"line2173\">2173.  \t(SPFX_RESTR|SPFX_ATTK),  0, 0,</span>\n <span id=\"line2174\">2174. -\tELEC(5,24),\tNO_DFNS,\tNO_CARY,\t0, A_NEUTRAL, PM_VALKYRIE, NON_PM, 4000L ),</span>\n <span id=\"line2175\">2175. +\tELEC(0,20),\tNO_DFNS,\tNO_CARY,\t0, A_NEUTRAL, PM_VALKYRIE, NON_PM, 4000L ),</span>\n <span id=\"line2176\">2176.  </span>\n <span id=\"line2177\">2177. -A(\"Cleaver\",\t\t\tBATTLE_AXE,</span>\n <span id=\"line2178\">2178. +A(\"Cleaver\",\t\t\tBATTLE_AXE,\t0,</span>\n <span id=\"line2179\">2179.  \tSPFX_RESTR, 0, 0,</span>\n <span id=\"line2180\">2180. -\tPHYS(3,6),\tNO_DFNS,\tNO_CARY,\t0, A_NEUTRAL, PM_BARBARIAN, NON_PM, 1500L ),</span>\n <span id=\"line2181\">2181. +\tPHYS(3,10),\tNO_DFNS,\tNO_CARY,\t0, A_NEUTRAL, PM_BARBARIAN, NON_PM, 1500L ),</span>\n <span id=\"line2182\">2182.  </span>\n <span id=\"line2183\">2183. -A(\"Grimtooth\",\t\t\tORCISH_DAGGER,</span>\n <span id=\"line2184\">2184. +A(\"Grimtooth\",\t\t\tORCISH_DAGGER,\t0,</span>\n <span id=\"line2185\">2185.  \tSPFX_RESTR, 0, 0,</span>\n <span id=\"line2186\">2186.  \tPHYS(2,6),\tNO_DFNS,\tNO_CARY,\t0, A_CHAOTIC, NON_PM, PM_ORC, 300L ),</span>\n <span id=\"line2187\">2187.  /*</span>\n <span id=\"line2188\">2188.   *\tOrcrist and Sting have same alignment as elves.</span>\n <span id=\"line2189\">2189.   */</span>\n <span id=\"line2190\">2190. -A(\"Orcrist\",\t\t\tELVEN_BROADSWORD,</span>\n <span id=\"line2191\">2191. -\tSPFX_DFLAG2, 0, M2_ORC,</span>\n <span id=\"line2192\">2192. -\tPHYS(5,0),\tNO_DFNS,\tNO_CARY,\t0, A_CHAOTIC, NON_PM, PM_ELF, 2000L ),</span>\n <span id=\"line2193\">2193. +A(\"Orcrist\",\t\t\tELVEN_BROADSWORD,\t0,</span>\n <span id=\"line2194\">2194. +\t(SPFX_WARN|SPFX_DFLAG2), 0, M2_ORC,</span>\n <span id=\"line2195\">2195. +\tPHYS(15,ADMG_DOUBLE),\tNO_DFNS,\tNO_CARY,\t0, A_CHAOTIC, NON_PM, PM_ELF, 2000L ),</span>\n <span id=\"line2196\">2196.  </span>\n <span id=\"line2197\">2197.  /*</span>\n <span id=\"line2198\">2198.   *\tThe combination of SPFX_WARN and M2_something on an artifact</span>\n <span id=\"line2199\">2199. @@ -78,60 +91,72 @@ A(\"Orcrist\",\t\t\tELVEN_BROADSWORD,</span>\n <span id=\"line2200\">2200.   *\tM2_something flags.  In Sting's case it will trigger EWarn_of_mon</span>\n <span id=\"line2201\">2201.   *\tfor M2_ORC monsters.</span>\n <span id=\"line2202\">2202.   */</span>\n <span id=\"line2203\">2203. -A(\"Sting\",\t\t\tELVEN_DAGGER,</span>\n <span id=\"line2204\">2204. +A(\"Sting\",\t\t\tELVEN_DAGGER,\t0,</span>\n <span id=\"line2205\">2205.  \t(SPFX_WARN|SPFX_DFLAG2), 0, M2_ORC,</span>\n <span id=\"line2206\">2206. -\tPHYS(5,0),\tNO_DFNS,\tNO_CARY,\t0, A_CHAOTIC, NON_PM, PM_ELF, 800L ),</span>\n <span id=\"line2207\">2207. +\tPHYS(15,ADMG_DOUBLE),\tNO_DFNS,\tNO_CARY,\t0, A_CHAOTIC, NON_PM, PM_ELF, 800L ),</span>\n <span id=\"line2208\">2208.  /*</span>\n <span id=\"line2209\">2209.   *\tMagicbane is a bit different!  Its magic fanfare</span>\n <span id=\"line2210\">2210.   *\tunbalances victims in addition to doing some damage.</span>\n <span id=\"line2211\">2211.   */</span>\n <span id=\"line2212\">2212. -A(\"Magicbane\",\t\t\tATHAME,</span>\n <span id=\"line2213\">2213. +A(\"Magicbane\",\t\t\tATHAME,\t0,</span>\n <span id=\"line2214\">2214.  \t(SPFX_RESTR|SPFX_ATTK|SPFX_DEFN), 0, 0,</span>\n <span id=\"line2215\">2215.  \tSTUN(3,4),\tDFNS(AD_MAGM),\tNO_CARY,\t0, A_NEUTRAL, PM_WIZARD, NON_PM, 3500L ),</span>\n <span id=\"line2216\">2216.  </span>\n <span id=\"line2217\">2217. -A(\"Frost Brand\",\t\tLONG_SWORD,</span>\n <span id=\"line2218\">2218. +A(\"Disrupter\",\t\t\tMACE,\tSILVER,</span>\n <span id=\"line2219\">2219. +\t(SPFX_RESTR|SPFX_DFLAG2), 0, M2_UNDEAD,</span>\n <span id=\"line2220\">2220. +\tPHYS(10,30),\tNO_DFNS,\tNO_CARY,\t0, A_NONE, PM_PRIEST, NON_PM, 2000L ),</span>\n <span id=\"line2221\">2221. +</span>\n <span id=\"line2222\">2222. +A(\"Skullcrusher\",\t\t\tCLUB,\tBONE,</span>\n <span id=\"line2223\">2223. +\t(SPFX_RESTR|SPFX_ATTK), 0, 0,</span>\n <span id=\"line2224\">2224. +\tPHYS(3,15),\tNO_DFNS,\tNO_CARY,\t0, A_NONE, PM_CAVEMAN, NON_PM, 1000L ),</span>\n <span id=\"line2225\">2225. +</span>\n <span id=\"line2226\">2226. +A(\"Frost Brand\",\t\tLONG_SWORD,\t0,</span>\n <span id=\"line2227\">2227.  \t(SPFX_RESTR|SPFX_ATTK|SPFX_DEFN), 0, 0,</span>\n <span id=\"line2228\">2228. -\tCOLD(5,0),\tCOLD(0,0),\tNO_CARY,\t0, A_NONE, NON_PM, NON_PM, 3000L ),</span>\n <span id=\"line2229\">2229. +\tCOLD(5,ADMG_DOUBLE),\tCOLD(0,0),\tNO_CARY,\t0, A_NONE, NON_PM, NON_PM, 3000L ),</span>\n <span id=\"line2230\">2230.  </span>\n <span id=\"line2231\">2231. -A(\"Fire Brand\",\t\t\tLONG_SWORD,</span>\n <span id=\"line2232\">2232. +A(\"Fire Brand\",\t\t\tLONG_SWORD,\t0,</span>\n <span id=\"line2233\">2233.  \t(SPFX_RESTR|SPFX_ATTK|SPFX_DEFN), 0, 0,</span>\n <span id=\"line2234\">2234. -\tFIRE(5,0),\tFIRE(0,0),\tNO_CARY,\t0, A_NONE, NON_PM, NON_PM, 3000L ),</span>\n <span id=\"line2235\">2235. +\tFIRE(5,ADMG_DOUBLE),\tFIRE(0,0),\tNO_CARY,\t0, A_NONE, NON_PM, NON_PM, 3000L ),</span>\n <span id=\"line2236\">2236.  </span>\n <span id=\"line2237\">2237. -A(\"Dragonbane\",\t\t\tBROADSWORD,</span>\n <span id=\"line2238\">2238. -\t(SPFX_RESTR|SPFX_DCLAS), 0, S_DRAGON,</span>\n <span id=\"line2239\">2239. -\tPHYS(5,0),\tNO_DFNS,\tNO_CARY,\t0, A_NONE, NON_PM, NON_PM, 500L ),</span>\n <span id=\"line2240\">2240. +A(\"Dragonslayer\",\t\tBROADSWORD,\t0,</span>\n <span id=\"line2241\">2241. +\t(SPFX_RESTR|SPFX_DCLAS|SPFX_REFLECT), 0, S_DRAGON,</span>\n <span id=\"line2242\">2242. +\tPHYS(10,ADMG_DOUBLE),\tNO_DFNS,\tNO_CARY,\t0, A_NONE, NON_PM, NON_PM, 2500L ),</span>\n <span id=\"line2243\">2243.  </span>\n <span id=\"line2244\">2244. -A(\"Demonbane\",\t\t\tLONG_SWORD,</span>\n <span id=\"line2245\">2245. +A(\"Demonbane\",\t\t\tLONG_SWORD,\tSILVER,</span>\n <span id=\"line2246\">2246.  \t(SPFX_RESTR|SPFX_DFLAG2), 0, M2_DEMON,</span>\n <span id=\"line2247\">2247. -\tPHYS(5,0),\tNO_DFNS,\tNO_CARY,\t0, A_LAWFUL, NON_PM, NON_PM, 2500L ),</span>\n <span id=\"line2248\">2248. +\tPHYS(10,ADMG_DOUBLE),\tNO_DFNS,\tNO_CARY,\t0, A_LAWFUL, NON_PM, NON_PM, 2500L ),</span>\n <span id=\"line2249\">2249.  </span>\n <span id=\"line2250\">2250. -A(\"Werebane\",\t\t\tSILVER_SABER,</span>\n <span id=\"line2251\">2251. +A(\"Werebane\",\t\t\tREVOLVER,\t0,</span>\n <span id=\"line2252\">2252.  \t(SPFX_RESTR|SPFX_DFLAG2), 0, M2_WERE,</span>\n <span id=\"line2253\">2253. -\tPHYS(5,0),\tDFNS(AD_WERE),\tNO_CARY,\t0, A_NONE, NON_PM, NON_PM, 1500L ),</span>\n <span id=\"line2254\">2254. -</span>\n <span id=\"line2255\">2255. -A(\"Grayswandir\",\t\tSILVER_SABER,</span>\n <span id=\"line2256\">2256. +\tPHYS(20,ADMG_DOUBLE),\tDFNS(AD_WERE),\tNO_CARY,</span>\n <span id=\"line2257\">2257. +\tCREATE_AMMO, A_NONE, NON_PM, NON_PM, 5000L ),</span>\n <span id=\"line2258\">2258. +A(\"Grayswandir\",\t\tSABER,\t\tSILVER,</span>\n <span id=\"line2259\">2259.  \t(SPFX_RESTR|SPFX_HALRES), 0, 0,</span>\n <span id=\"line2260\">2260. -\tPHYS(5,0),\tNO_DFNS,\tNO_CARY,\t0, A_LAWFUL, NON_PM, NON_PM, 8000L ),</span>\n <span id=\"line2261\">2261. +\tPHYS(3,12),\tNO_DFNS,\tNO_CARY,\t0, A_LAWFUL, NON_PM, NON_PM, 8000L ),</span>\n <span id=\"line2262\">2262.  </span>\n <span id=\"line2263\">2263. -A(\"Giantslayer\",\t\tLONG_SWORD,</span>\n <span id=\"line2264\">2264. +A(\"Quick Blade\",\t\tELVEN_SHORT_SWORD,\t0,</span>\n <span id=\"line2265\">2265. +\tSPFX_RESTR,\t\t  0, 0,</span>\n <span id=\"line2266\">2266. +\tPHYS(10,0),\tNO_DFNS,\tNO_CARY,\t0, A_NONE, NON_PM, NON_PM, 1500L ),</span>\n <span id=\"line2267\">2267. +</span>\n <span id=\"line2268\">2268. +A(\"Giantkiller\",\t\tTWO_HANDED_SWORD,\t0,</span>\n <span id=\"line2269\">2269.  \t(SPFX_RESTR|SPFX_DFLAG2), 0, M2_GIANT,</span>\n <span id=\"line2270\">2270. -\tPHYS(5,0),\tNO_DFNS,\tNO_CARY,\t0, A_NEUTRAL, NON_PM, NON_PM, 200L ),</span>\n <span id=\"line2271\">2271. +\tPHYS(15,ADMG_DOUBLE),\tNO_DFNS,\tNO_CARY,\t0, A_NEUTRAL, NON_PM, NON_PM, 200L ),</span>\n <span id=\"line2272\">2272.  </span>\n <span id=\"line2273\">2273. -A(\"Ogresmasher\",\t\tWAR_HAMMER,</span>\n <span id=\"line2274\">2274. +A(\"Ogresmasher\",\t\tLUCERN_HAMMER,\t0,</span>\n <span id=\"line2275\">2275.  \t(SPFX_RESTR|SPFX_DCLAS), 0, S_OGRE,</span>\n <span id=\"line2276\">2276. -\tPHYS(5,0),\tNO_DFNS,\tNO_CARY,\t0, A_NONE, NON_PM, NON_PM, 200L ),</span>\n <span id=\"line2277\">2277. +\tPHYS(15,ADMG_DOUBLE),\tNO_DFNS,\tNO_CARY,\t0, A_NONE, NON_PM, NON_PM, 200L ),</span>\n <span id=\"line2278\">2278.  </span>\n <span id=\"line2279\">2279. -A(\"Trollsbane\",\t\t\tMORNING_STAR,</span>\n <span id=\"line2280\">2280. +A(\"Trollsbane\",\t\t\tMORNING_STAR,\t0,</span>\n <span id=\"line2281\">2281.  \t(SPFX_RESTR|SPFX_DCLAS), 0, S_TROLL,</span>\n <span id=\"line2282\">2282. -\tPHYS(5,0),\tNO_DFNS,\tNO_CARY,\t0, A_NONE, NON_PM, NON_PM, 200L ),</span>\n <span id=\"line2283\">2283. +\tPHYS(15,ADMG_DOUBLE),\tNO_DFNS,\tNO_CARY,\t0, A_NONE, NON_PM, NON_PM, 800L ),</span>\n <span id=\"line2284\">2284.  /*</span>\n <span id=\"line2285\">2285.   *\tTwo problems:  1) doesn't let trolls regenerate heads,</span>\n <span id=\"line2286\">2286.   *\t2) doesn't give unusual message for 2-headed monsters (but</span>\n <span id=\"line2287\">2287.   *\tallowing those at all causes more problems than worth the effort).</span>\n <span id=\"line2288\">2288.   */</span>\n <span id=\"line2289\">2289. -A(\"Vorpal Blade\",\t\tLONG_SWORD,</span>\n <span id=\"line2290\">2290. +A(\"Vorpal Blade\",\t\tLONG_SWORD,\t0,</span>\n <span id=\"line2291\">2291.  \t(SPFX_RESTR|SPFX_BEHEAD), 0, 0,</span>\n <span id=\"line2292\">2292. -\tPHYS(5,1),\tNO_DFNS,\tNO_CARY,\t0, A_NEUTRAL, NON_PM, NON_PM, 4000L ),</span>\n <span id=\"line2293\">2293. +\tPHYS(15,0),\tNO_DFNS,\tNO_CARY,\t0, A_NEUTRAL, NON_PM, NON_PM, 4000L ),</span>\n <span id=\"line2294\">2294.  /*</span>\n <span id=\"line2295\">2295.   *\tAh, never shall I forget the cry,</span>\n <span id=\"line2296\">2296.   *\t\tor the shriek that shrieked he,</span>\n <span id=\"line2297\">2297. @@ -140,101 +165,122 @@ A(\"Vorpal Blade\",\t\tLONG_SWORD,</span>\n <span id=\"line2298\">2298.   *\t\t\t--Koko, Lord high executioner of Titipu</span>\n <span id=\"line2299\">2299.   *\t\t\t  (From Sir W.S. Gilbert's \"The Mikado\")</span>\n <span id=\"line2300\">2300.   */</span>\n <span id=\"line2301\">2301. -A(\"Snickersnee\",\t\tKATANA,</span>\n <span id=\"line2302\">2302. +A(\"Snickersnee\",\t\tKATANA,\t0,</span>\n <span id=\"line2303\">2303.  \tSPFX_RESTR, 0, 0,</span>\n <span id=\"line2304\">2304. -\tPHYS(0,8),\tNO_DFNS,\tNO_CARY,\t0, A_LAWFUL, PM_SAMURAI, NON_PM, 1200L ),</span>\n <span id=\"line2305\">2305. +\tPHYS(10,8),\tNO_DFNS,\tNO_CARY,\t0, A_LAWFUL, PM_SAMURAI, NON_PM, 1200L ),</span>\n <span id=\"line2306\">2306.  </span>\n <span id=\"line2307\">2307. -A(\"Sunsword\",\t\t\tLONG_SWORD,</span>\n <span id=\"line2308\">2308. +A(\"Sunsword\",\t\t\tLONG_SWORD,\t0,</span>\n <span id=\"line2309\">2309.  \t(SPFX_RESTR|SPFX_DFLAG2), 0, M2_UNDEAD,</span>\n <span id=\"line2310\">2310. -\tPHYS(5,0),\tDFNS(AD_BLND),\tNO_CARY,\t0, A_LAWFUL, NON_PM, NON_PM, 1500L ),</span>\n <span id=\"line2311\">2311. +\tPHYS(10,ADMG_DOUBLE),\tDFNS(AD_BLND),\tNO_CARY,</span>\n <span id=\"line2312\">2312. +\tEMIT_LIGHT, A_LAWFUL, NON_PM, NON_PM, 1500L ),</span>\n <span id=\"line2313\">2313. +/*</span>\n <span id=\"line2314\">2314. + *\tArtifact gloves for Monks</span>\n <span id=\"line2315\">2315. + */</span>\n <span id=\"line2316\">2316. +A(\"Gauntlets of Defence\",\tGAUNTLETS_OF_DEXTERITY,\t0,</span>\n <span id=\"line2317\">2317. +\t(SPFX_RESTR|SPFX_HPHDAM|SPFX_INTEL), 0, 0,</span>\n <span id=\"line2318\">2318. +\tNO_ATTK,\tNO_DFNS,\tNO_CARY,</span>\n <span id=\"line2319\">2319. +\t0,\t\tA_CROSSALIGNED, PM_MONK, NON_PM, 2000L ),</span>\n <span id=\"line2320\">2320.  </span>\n <span id=\"line2321\">2321. +A(\"Fist of Fury\",\t\tGAUNTLETS,\tSILVER,</span>\n <span id=\"line2322\">2322. +\t(SPFX_RESTR|SPFX_INTEL), 0,\t0,</span>\n <span id=\"line2323\">2323. +\tPHYS(5,10),\tNO_DFNS,\tNO_CARY,</span>\n <span id=\"line2324\">2324. +\t0,\t\tA_CROSSALIGNED, PM_MONK, NON_PM, 2000L ),</span>\n <span id=\"line2325\">2325. +</span>\n <span id=\"line2326\">2326.  /*</span>\n <span id=\"line2327\">2327.   *\tThe artifacts for the quest dungeon, all self-willed.</span>\n <span id=\"line2328\">2328.   */</span>\n <span id=\"line2329\">2329.  </span>\n <span id=\"line2330\">2330. -A(\"The Orb of Detection\",\tCRYSTAL_BALL,</span>\n <span id=\"line2331\">2331. +A(\"The Orb of Detection\",\tCRYSTAL_BALL,\t0,</span>\n <span id=\"line2332\">2332.  \t(SPFX_NOGEN|SPFX_RESTR|SPFX_INTEL), (SPFX_ESP|SPFX_HSPDAM), 0,</span>\n <span id=\"line2333\">2333.  \tNO_ATTK,\tNO_DFNS,\tCARY(AD_MAGM),</span>\n <span id=\"line2334\">2334.  \tINVIS,\t\tA_LAWFUL, PM_ARCHEOLOGIST, NON_PM, 2500L ),</span>\n <span id=\"line2335\">2335.  </span>\n <span id=\"line2336\">2336. -A(\"The Heart of Ahriman\",\tLUCKSTONE,</span>\n <span id=\"line2337\">2337. +A(\"The Heart of Ahriman\",\tLUCKSTONE,\t0,</span>\n <span id=\"line2338\">2338.  \t(SPFX_NOGEN|SPFX_RESTR|SPFX_INTEL), SPFX_STLTH, 0,</span>\n <span id=\"line2339\">2339.  \t/* this stone does double damage if used as a projectile weapon */</span>\n <span id=\"line2340\">2340.  \tPHYS(5,0),\tNO_DFNS,\tNO_CARY,</span>\n <span id=\"line2341\">2341.  \tLEVITATION,\tA_NEUTRAL, PM_BARBARIAN, NON_PM, 2500L ),</span>\n <span id=\"line2342\">2342.  </span>\n <span id=\"line2343\">2343. -A(\"The Sceptre of Might\",\tMACE,</span>\n <span id=\"line2344\">2344. +A(\"The Sceptre of Might\",\tMACE,\t0,</span>\n <span id=\"line2345\">2345.  \t(SPFX_NOGEN|SPFX_RESTR|SPFX_INTEL|SPFX_DALIGN), 0, 0,</span>\n <span id=\"line2346\">2346. -\tPHYS(5,0),\tNO_DFNS,\tCARY(AD_MAGM),</span>\n <span id=\"line2347\">2347. +\tPHYS(5,ADMG_DOUBLE),\tNO_DFNS,\tCARY(AD_MAGM),</span>\n <span id=\"line2348\">2348.  \tCONFLICT,\tA_LAWFUL, PM_CAVEMAN, NON_PM, 2500L ),</span>\n <span id=\"line2349\">2349.  </span>\n <span id=\"line2350\">2350.  #if 0\t/* OBSOLETE */</span>\n <span id=\"line2351\">2351. -A(\"The Palantir of Westernesse\",\tCRYSTAL_BALL,</span>\n <span id=\"line2352\">2352. +A(\"The Palantir of Westernesse\",\tCRYSTAL_BALL,\t0,</span>\n <span id=\"line2353\">2353.  \t(SPFX_NOGEN|SPFX_RESTR|SPFX_INTEL),</span>\n <span id=\"line2354\">2354.  \t\t(SPFX_ESP|SPFX_REGEN|SPFX_HSPDAM), 0,</span>\n <span id=\"line2355\">2355.  \tNO_ATTK,\tNO_DFNS,\tNO_CARY,</span>\n <span id=\"line2356\">2356.  \tTAMING,\t\tA_CHAOTIC, NON_PM , PM_ELF, 8000L ),</span>\n <span id=\"line2357\">2357.  #endif</span>\n <span id=\"line2358\">2358.  </span>\n <span id=\"line2359\">2359. -A(\"The Staff of Aesculapius\",\tQUARTERSTAFF,</span>\n <span id=\"line2360\">2360. +A(\"The Staff of Aesculapius\",\tQUARTERSTAFF,\t0,</span>\n <span id=\"line2361\">2361.  \t(SPFX_NOGEN|SPFX_RESTR|SPFX_ATTK|SPFX_INTEL|SPFX_DRLI|SPFX_REGEN), 0,0,</span>\n <span id=\"line2362\">2362. -\tDRLI(0,0),\tDRLI(0,0),\tNO_CARY,</span>\n <span id=\"line2363\">2363. +\tDRLI(0,ADMG_DOUBLE),\tDRLI(0,0),\tNO_CARY,</span>\n <span id=\"line2364\">2364.  \tHEALING,\tA_NEUTRAL, PM_HEALER, NON_PM, 5000L ),</span>\n <span id=\"line2365\">2365.  </span>\n <span id=\"line2366\">2366. -A(\"The Magic Mirror of Merlin\", MIRROR,</span>\n <span id=\"line2367\">2367. +A(\"The Magic Mirror of Merlin\", MIRROR,\t0,</span>\n <span id=\"line2368\">2368.  \t(SPFX_NOGEN|SPFX_RESTR|SPFX_INTEL|SPFX_SPEAK), SPFX_ESP, 0,</span>\n <span id=\"line2369\">2369.  \tNO_ATTK,\tNO_DFNS,\tCARY(AD_MAGM),</span>\n <span id=\"line2370\">2370.  \t0,\t\tA_LAWFUL, PM_KNIGHT, NON_PM, 1500L ),</span>\n <span id=\"line2371\">2371.  </span>\n <span id=\"line2372\">2372. -A(\"The Eyes of the Overworld\",\tLENSES,</span>\n <span id=\"line2373\">2373. +A(\"The Eyes of the Overworld\",\tLENSES, 0,</span>\n <span id=\"line2374\">2374.  \t(SPFX_NOGEN|SPFX_RESTR|SPFX_INTEL|SPFX_XRAY), 0, 0,</span>\n <span id=\"line2375\">2375.  \tNO_ATTK,\tNO_DFNS,\tCARY(AD_MAGM),</span>\n <span id=\"line2376\">2376.  \tENLIGHTENING,\tA_NEUTRAL,\t PM_MONK, NON_PM, 2500L ),</span>\n <span id=\"line2377\">2377.  </span>\n <span id=\"line2378\">2378. -A(\"The Mitre of Holiness\",\tHELM_OF_BRILLIANCE,</span>\n <span id=\"line2379\">2379. +A(\"The Mitre of Holiness\",\tHELM_OF_BRILLIANCE,\t0,</span>\n <span id=\"line2380\">2380.  \t(SPFX_NOGEN|SPFX_RESTR|SPFX_DFLAG2|SPFX_INTEL), 0, M2_UNDEAD,</span>\n <span id=\"line2381\">2381.  \tNO_ATTK,\tNO_DFNS,\tCARY(AD_FIRE),</span>\n <span id=\"line2382\">2382.  \tENERGY_BOOST,\tA_LAWFUL, PM_PRIEST, NON_PM, 2000L ),</span>\n <span id=\"line2383\">2383.  </span>\n <span id=\"line2384\">2384. -A(\"The Longbow of Diana\", BOW,</span>\n <span id=\"line2385\">2385. -\t(SPFX_NOGEN|SPFX_RESTR|SPFX_INTEL|SPFX_REFLECT), SPFX_ESP, 0,</span>\n <span id=\"line2386\">2386. -\tPHYS(5,0),\tNO_DFNS,\tNO_CARY,</span>\n <span id=\"line2387\">2387. +A(\"The Longbow of Diana\", BOW, 0,</span>\n <span id=\"line2388\">2388. +\t(SPFX_NOGEN|SPFX_RESTR|SPFX_INTEL/*|SPFX_REFLECT*/), SPFX_ESP, 0,</span>\n <span id=\"line2389\">2389. +\tPHYS(5,3),\tNO_DFNS,\tNO_CARY,</span>\n <span id=\"line2390\">2390.  \tCREATE_AMMO, A_CHAOTIC, PM_RANGER, NON_PM, 4000L ),</span>\n <span id=\"line2391\">2391.  </span>\n <span id=\"line2392\">2392. -A(\"The Master Key of Thievery\", SKELETON_KEY,</span>\n <span id=\"line2393\">2393. +A(\"The Master Key of Thievery\", SKELETON_KEY, 0,</span>\n <span id=\"line2394\">2394.  \t(SPFX_NOGEN|SPFX_RESTR|SPFX_INTEL|SPFX_SPEAK),</span>\n <span id=\"line2395\">2395.  \t\t(SPFX_WARN|SPFX_TCTRL|SPFX_HPHDAM), 0,</span>\n <span id=\"line2396\">2396.  \tNO_ATTK,\tNO_DFNS,\tNO_CARY,</span>\n <span id=\"line2397\">2397.  \tUNTRAP,\t\tA_CHAOTIC, PM_ROGUE, NON_PM, 3500L ),</span>\n <span id=\"line2398\">2398.  </span>\n <span id=\"line2399\">2399. -A(\"The Tsurugi of Muramasa\",\tTSURUGI,</span>\n <span id=\"line2400\">2400. +A(\"The Tsurugi of Muramasa\",\tTSURUGI, 0,</span>\n <span id=\"line2401\">2401.  \t(SPFX_NOGEN|SPFX_RESTR|SPFX_INTEL|SPFX_BEHEAD|SPFX_LUCK), 0, 0,</span>\n <span id=\"line2402\">2402.  \tPHYS(0,8),\tNO_DFNS,\tNO_CARY,</span>\n <span id=\"line2403\">2403.  \t0,\t\tA_LAWFUL, PM_SAMURAI, NON_PM, 4500L ),</span>\n <span id=\"line2404\">2404.  </span>\n <span id=\"line2405\">2405.  #ifdef TOURIST</span>\n <span id=\"line2406\">2406. -A(\"The Platinum Yendorian Express Card\", CREDIT_CARD,</span>\n <span id=\"line2407\">2407. +A(\"The Platinum Yendorian Express Card\", CREDIT_CARD, 0,</span>\n <span id=\"line2408\">2408.  \t(SPFX_NOGEN|SPFX_RESTR|SPFX_INTEL|SPFX_DEFN),</span>\n <span id=\"line2409\">2409.  \t\t(SPFX_ESP|SPFX_HSPDAM), 0,</span>\n <span id=\"line2410\">2410.  \tNO_ATTK,\tNO_DFNS,\tCARY(AD_MAGM),</span>\n <span id=\"line2411\">2411.  \tCHARGE_OBJ,\tA_NEUTRAL, PM_TOURIST, NON_PM, 7000L ),</span>\n <span id=\"line2412\">2412.  #endif</span>\n <span id=\"line2413\">2413.  </span>\n <span id=\"line2414\">2414. -A(\"The Orb of Fate\",\t\tCRYSTAL_BALL,</span>\n <span id=\"line2415\">2415. +A(\"The Orb of Fate\",\t\tCRYSTAL_BALL, 0,</span>\n <span id=\"line2416\">2416.  \t(SPFX_NOGEN|SPFX_RESTR|SPFX_INTEL|SPFX_LUCK),</span>\n <span id=\"line2417\">2417.  \t\t(SPFX_WARN|SPFX_HSPDAM|SPFX_HPHDAM), 0,</span>\n <span id=\"line2418\">2418.  \tNO_ATTK,\tNO_DFNS,\tNO_CARY,</span>\n <span id=\"line2419\">2419.  \tLEV_TELE,\tA_NEUTRAL, PM_VALKYRIE, NON_PM, 3500L ),</span>\n <span id=\"line2420\">2420.  </span>\n <span id=\"line2421\">2421. -A(\"The Eye of the Aethiopica\",\tAMULET_OF_ESP,</span>\n <span id=\"line2422\">2422. +A(\"The Eye of the Aethiopica\",\tAMULET_OF_ESP, 0,</span>\n <span id=\"line2423\">2423.  \t(SPFX_NOGEN|SPFX_RESTR|SPFX_INTEL), (SPFX_EREGEN|SPFX_HSPDAM), 0,</span>\n <span id=\"line2424\">2424.  \tNO_ATTK,\tNO_DFNS,\tCARY(AD_MAGM),</span>\n <span id=\"line2425\">2425.  \tCREATE_PORTAL,\tA_NEUTRAL, PM_WIZARD, NON_PM, 4000L ),</span>\n <span id=\"line2426\">2426.  </span>\n <span id=\"line2427\">2427.  /*</span>\n <span id=\"line2428\">2428. + *\tdummy entry for user-made weapon</span>\n <span id=\"line2429\">2429. + */</span>\n <span id=\"line2430\">2430. +A(\"Custom Made Weapon\",\tTIN_OPENER, 0,  /* dummy otyp */</span>\n <span id=\"line2431\">2431. +\t(SPFX_NOGEN|SPFX_RESTR), 0, 0,</span>\n <span id=\"line2432\">2432. +\tNO_ATTK,\tNO_DFNS,\tNO_CARY,</span>\n <span id=\"line2433\">2433. +\t0,\tA_NONE, NON_PM, NON_PM, 0L ),</span>\n <span id=\"line2434\">2434. +</span>\n <span id=\"line2435\">2435. +/*</span>\n <span id=\"line2436\">2436.   *  terminator; otyp must be zero</span>\n <span id=\"line2437\">2437.   */</span>\n <span id=\"line2438\">2438. -A(0, 0, 0, 0, 0, NO_ATTK, NO_DFNS, NO_CARY, 0, A_NONE, NON_PM, NON_PM, 0L )</span>\n <span id=\"line2439\">2439. +A(0, 0, 0, 0, 0, 0, NO_ATTK, NO_DFNS, NO_CARY, 0, A_NONE, NON_PM, NON_PM, 0L )</span>\n <span id=\"line2440\">2440.  </span>\n <span id=\"line2441\">2441.  };\t/* artilist[] (or artifact_names[]) */</span>\n <span id=\"line2442\">2442.  </span>\n\n=== attrib.h ===\n <span id=\"line2443\">2443. diff -pruN nethack-3.4.3/include/[[attrib.h]] nhbrass-040923/include/attrib.h</span>\n <span id=\"line2444\">2444. --- nethack-3.4.3/include/attrib.h\tSun Dec  7 18:39:13 2003</span>\n <span id=\"line2445\">2445. +++ nhbrass-040923/include/attrib.h\tWed Apr 10 11:29:56 2002</span>\n <span id=\"line2446\">2446. @@ -38,7 +38,8 @@ struct\tattribs {</span>\n <span id=\"line2447\">2447.  \tschar\ta[A_MAX];</span>\n <span id=\"line2448\">2448.  };</span>\n <span id=\"line2449\">2449.  </span>\n <span id=\"line2450\">2450. -#define ATTRMAX(x) ((x == A_STR && Upolyd && strongmonst(youmonst.data)) ? STR18(100) : urace.attrmax[x])</span>\n <span id=\"line2451\">2451. +/* #define ATTRMAX(x) ((x == A_STR && Upolyd && strongmonst(youmonst.data)) ? STR18(100) : urace.attrmax[x])*/</span>\n <span id=\"line2452\">2452. +#define ATTRMAX(x) ((x == A_STR && Upolyd && strongmonst(youmonst.data)) ? STR18(100) : urole.attrmax[x])</span>\n <span id=\"line2453\">2453.  #define ATTRMIN(x) (urace.attrmin[x])</span>\n <span id=\"line2454\">2454.  </span>\n <span id=\"line2455\">2455.  #endif /* ATTRIB_H */</span>\n\n=== config.h ===\n <span id=\"line2456\">2456. diff -pruN nethack-3.4.3/include/[[config.h]] nhbrass-040923/include/config.h</span>\n <span id=\"line2457\">2457. --- nethack-3.4.3/include/config.h\tSun Dec  7 18:39:13 2003</span>\n <span id=\"line2458\">2458. +++ nhbrass-040923/include/config.h\tSat Dec 27 17:30:16 2003</span>\n <span id=\"line2459\">2459. @@ -338,6 +338,15 @@ typedef unsigned char\tuchar;</span>\n <span id=\"line2460\">2460.  #endif</span>\n <span id=\"line2461\">2461.  </span>\n <span id=\"line2462\">2462.  #define EXP_ON_BOTL\t/* Show experience on bottom line */</span>\n <span id=\"line2463\">2463. +//#define AUTOTHRUST\t/* Automatically target a monster in range with polearms */</span>\n <span id=\"line2464\">2464. +#define FIRSTAID\t/* scissors/bandage */</span>\n <span id=\"line2465\">2465. +#define NOPOLYPILE\t/* polymorph affects only one item on the first pile */</span>\n <span id=\"line2466\">2466. +#define SHOWDMG\t\t/* show damage value */</span>\n <span id=\"line2467\">2467. +#define RAND_MT\t\t/* use mersenne twister for random number */</span>\n <span id=\"line2468\">2468. +#define NEWGEHENNOM\t/* under construction */</span>\n <span id=\"line2469\">2469. +#ifdef STEED</span>\n <span id=\"line2470\">2470. +# define MONSTEED\t/* monster is riding steeds */</span>\n <span id=\"line2471\">2471. +#endif /*STEED*/</span>\n <span id=\"line2472\">2472.  /* #define SCORE_ON_BOTL */\t/* added by Gary Erickson (erickson@ucivax) */</span>\n <span id=\"line2473\">2473.  </span>\n <span id=\"line2474\">2474.  /*</span>\n\nThe AUTOTHRUST line is commented out because the AUTOTHRUST macro no longer does anything. The [[autothrust]] feature (pressing [v] to hit the nearest [[monster]] with your wielded [[polearm]]) is always on, and it is not possible to disable it by defining or undefining a macro.\n\n=== display.h ===\n <span id=\"line2551\">2551. diff -pruN nethack-3.4.3/include/[[display.h]] nhbrass-040923/include/display.h</span>\n <span id=\"line2552\">2552. --- nethack-3.4.3/include/display.h\tSun Dec  7 18:39:13 2003</span>\n <span id=\"line2553\">2553. +++ nhbrass-040923/include/display.h\tSat Dec 27 14:11:50 2003</span>\n <span id=\"line2554\">2554. @@ -40,9 +40,11 @@</span>\n <span id=\"line2555\">2555.   * vicinity, and a glyph representing the warning level is displayed.</span>\n <span id=\"line2556\">2556.   */</span>\n <span id=\"line2557\">2557.  </span>\n <span id=\"line2558\">2558. +//#define mon_warning(mon) (Warning && !(mon)->mpeaceful &&</span>\n <span id=\"line2559\">2559. +//\t\t\t (distu((mon)->mx, (mon)->my) < 100) &&</span>\n <span id=\"line2560\">2560. +//\t\t\t (((int) ((mon)->m_lev / 4)) >= flags.warnlevel))</span>\n <span id=\"line2561\">2561.  #define mon_warning(mon) (Warning && !(mon)->mpeaceful && \t\t\t\t\\</span>\n <span id=\"line2562\">2562. -\t\t\t (distu((mon)->mx, (mon)->my) < 100) &&\t\t\t\t\\</span>\n <span id=\"line2563\">2563. -\t\t\t (((int) ((mon)->m_lev / 4)) >= flags.warnlevel))</span>\n <span id=\"line2564\">2564. +\t\t\t (distu((mon)->mx, (mon)->my) < 100))</span>\n <span id=\"line2565\">2565.  </span>\n <span id=\"line2566\">2566.  /*</span>\n <span id=\"line2567\">2567.   * mon_visible()</span>\n <span id=\"line2568\">2568. @@ -92,6 +94,23 @@</span>\n <span id=\"line2569\">2569.  #define canspotmon(mon) \\</span>\n <span id=\"line2570\">2570.  \t(canseemon(mon) || sensemon(mon))</span>\n <span id=\"line2571\">2571.  </span>\n <span id=\"line2572\">2572. +</span>\n <span id=\"line2573\">2573. +/*</span>\n <span id=\"line2574\">2574. + * canspotmons(mon)</span>\n <span id=\"line2575\">2575. + *</span>\n <span id=\"line2576\">2576. + * This function is variation of canspotmon() which returns TRUE if</span>\n <span id=\"line2577\">2577. + * you can spot any monsters in the same place as mon's.</span>\n <span id=\"line2578\">2578. + */</span>\n <span id=\"line2579\">2579. +#ifndef MONSTEED</span>\n <span id=\"line2580\">2580. +#define canspotmons canspotmon</span>\n <span id=\"line2581\">2581. +#else</span>\n <span id=\"line2582\">2582. +#define canspotmons(mon) \\</span>\n <span id=\"line2583\">2583. +\t(canspotmon(mon) || \\</span>\n <span id=\"line2584\">2584. +\t ((mon)->mriding && canspotmon((mon)->mchild)) || \\</span>\n <span id=\"line2585\">2585. +\t ((mon)->msteed && canspotmon((mon)->mparent)))</span>\n <span id=\"line2586\">2586. +#endif /*MONSTEED*/</span>\n <span id=\"line2587\">2587. +</span>\n <span id=\"line2588\">2588. +</span>\n <span id=\"line2589\">2589.  /* knowninvisible(mon)</span>\n <span id=\"line2590\">2590.   * This one checks to see if you know a monster is both there and invisible.</span>\n <span id=\"line2591\">2591.   * 1) If you can see the monster and have see invisible, it is assumed the</span>\n <span id=\"line2592\">2592. @@ -234,7 +253,8 @@</span>\n <span id=\"line2593\">2593.   *</span>\n <span id=\"line2594\">2594.   * ridden\tRepresents all monsters being ridden.  Count: NUMMONS </span>\n <span id=\"line2595\">2595.   *</span>\n <span id=\"line2596\">2596. - * object\tOne for each object.  Count: NUM_OBJECTS</span>\n <span id=\"line2597\">2597. + * object\t32(number of materials) for each object.</span>\n <span id=\"line2598\">2598. + *\t\tLower 5 bits indicate materials.  Count: NUM_OBJECTS << 5</span>\n <span id=\"line2599\">2599.   *</span>\n <span id=\"line2600\">2600.   * cmap\t\tOne for each entry in the character map.  The character map</span>\n <span id=\"line2601\">2601.   *\t\tis the dungeon features and other miscellaneous things.</span>\n <span id=\"line2602\">2602. @@ -258,16 +278,18 @@</span>\n <span id=\"line2603\">2603.   *</span>\n <span id=\"line2604\">2604.   * The following are offsets used to convert to and from a glyph.</span>\n <span id=\"line2605\">2605.   */</span>\n <span id=\"line2606\">2606. -#define NUM_ZAP 8\t/* number of zap beam types */</span>\n <span id=\"line2607\">2607. +#define NUM_ZAP 9\t/* number of zap beam types */</span>\n <span id=\"line2608\">2608.  </span>\n <span id=\"line2609\">2609.  #define GLYPH_MON_OFF\t\t0</span>\n <span id=\"line2610\">2610.  #define GLYPH_PET_OFF\t\t(NUMMONS\t+ GLYPH_MON_OFF)</span>\n <span id=\"line2611\">2611.  #define GLYPH_INVIS_OFF\t\t(NUMMONS\t+ GLYPH_PET_OFF)</span>\n <span id=\"line2612\">2612.  #define GLYPH_DETECT_OFF\t(1\t\t+ GLYPH_INVIS_OFF)</span>\n <span id=\"line2613\">2613.  #define GLYPH_BODY_OFF\t\t(NUMMONS\t+ GLYPH_DETECT_OFF)</span>\n <span id=\"line2614\">2614. -#define GLYPH_RIDDEN_OFF\t(NUMMONS\t+ GLYPH_BODY_OFF)</span>\n <span id=\"line2615\">2615. +#define GLYPH_RIDING_OFF\t(NUMMONS\t+ GLYPH_BODY_OFF)</span>\n <span id=\"line2616\">2616. +#define GLYPH_RIDDEN_OFF\t(NUMMONS\t+ GLYPH_RIDING_OFF)</span>\n <span id=\"line2617\">2617.  #define GLYPH_OBJ_OFF\t\t(NUMMONS\t+ GLYPH_RIDDEN_OFF)</span>\n <span id=\"line2618\">2618. -#define GLYPH_CMAP_OFF\t\t(NUM_OBJECTS\t+ GLYPH_OBJ_OFF)</span>\n <span id=\"line2619\">2619. +#define GLYPH_CMAP_OFF\t\t((NUM_OBJECTS << 5) + GLYPH_OBJ_OFF) /* material patch */</span>\n <span id=\"line2620\">2620. +/*#define GLYPH_CMAP_OFF\t\t(NUM_OBJECTS\t+ GLYPH_OBJ_OFF)*/</span>\n <span id=\"line2621\">2621.  #define GLYPH_EXPLODE_OFF\t((MAXPCHARS - MAXEXPCHARS) + GLYPH_CMAP_OFF)</span>\n <span id=\"line2622\">2622.  #define GLYPH_ZAP_OFF\t\t((MAXEXPCHARS * EXPL_MAX) + GLYPH_EXPLODE_OFF)</span>\n <span id=\"line2623\">2623.  #define GLYPH_SWALLOW_OFF\t((NUM_ZAP << 2) + GLYPH_ZAP_OFF)</span>\n <span id=\"line2624\">2624. @@ -281,6 +303,7 @@</span>\n <span id=\"line2625\">2625.  #define warning_to_glyph(mwarnlev) ((mwarnlev)+GLYPH_WARNING_OFF)</span>\n <span id=\"line2626\">2626.  #define mon_to_glyph(mon) ((int) what_mon(monsndx((mon)->data))+GLYPH_MON_OFF)</span>\n <span id=\"line2627\">2627.  #define detected_mon_to_glyph(mon) ((int) what_mon(monsndx((mon)->data))+GLYPH_DETECT_OFF)</span>\n <span id=\"line2628\">2628. +#define riding_mon_to_glyph(mon) ((int) what_mon(monsndx((mon)->data))+GLYPH_RIDING_OFF)</span>\n <span id=\"line2629\">2629.  #define ridden_mon_to_glyph(mon) ((int) what_mon(monsndx((mon)->data))+GLYPH_RIDDEN_OFF)</span>\n <span id=\"line2630\">2630.  #define pet_to_glyph(mon) ((int) what_mon(monsndx((mon)->data))+GLYPH_PET_OFF)</span>\n <span id=\"line2631\">2631.  </span>\n <span id=\"line2632\">2632. @@ -290,10 +313,11 @@</span>\n <span id=\"line2633\">2633.      (Hallucination ?\t\t\t\t\t\t\t      \\</span>\n <span id=\"line2634\">2634.  \t((otg_temp = random_object()) == CORPSE ?\t\t\t      \\</span>\n <span id=\"line2635\">2635.  \t    random_monster() + GLYPH_BODY_OFF :\t\t\t\t      \\</span>\n <span id=\"line2636\">2636. -\t    otg_temp + GLYPH_OBJ_OFF)\t:\t\t\t\t      \\</span>\n <span id=\"line2637\">2637. +\t    (otg_temp<<5) + rnd(MAX_MATERIAL) + GLYPH_OBJ_OFF)\t:\t      \\</span>\n <span id=\"line2638\">2638.  \t((obj)->otyp == CORPSE ?\t\t\t\t\t      \\</span>\n <span id=\"line2639\">2639.  \t    (int) (obj)->corpsenm + GLYPH_BODY_OFF :\t\t\t      \\</span>\n <span id=\"line2640\">2640. -\t    (int) (obj)->otyp + GLYPH_OBJ_OFF))</span>\n <span id=\"line2641\">2641. +\t    ((int) (obj)->otyp << 5) +\t\t\t\t\t      \\</span>\n <span id=\"line2642\">2642. +\t\t(is_material_variable(obj) ? get_material(obj) : 0) + GLYPH_OBJ_OFF))</span>\n <span id=\"line2643\">2643.  </span>\n <span id=\"line2644\">2644.  #define cmap_to_glyph(cmap_idx) ((int) (cmap_idx)   + GLYPH_CMAP_OFF)</span>\n <span id=\"line2645\">2645.  #define explosion_to_glyph(expltype,idx)\t\\</span>\n <span id=\"line2646\">2646. @@ -303,7 +327,7 @@</span>\n <span id=\"line2647\">2647.  \t\t\tcmap_to_glyph(trap_to_defsym(what_trap((trap)->ttyp)))</span>\n <span id=\"line2648\">2648.  </span>\n <span id=\"line2649\">2649.  /* Not affected by hallucination.  Gives a generic body for CORPSE */</span>\n <span id=\"line2650\">2650. -#define objnum_to_glyph(onum)\t((int) (onum) + GLYPH_OBJ_OFF)</span>\n <span id=\"line2651\">2651. +#define objnum_to_glyph(onum)\t(((int) (onum) << 5) + GLYPH_OBJ_OFF)</span>\n <span id=\"line2652\">2652.  #define monnum_to_glyph(mnum)\t((int) (mnum) + GLYPH_MON_OFF)</span>\n <span id=\"line2653\">2653.  #define detected_monnum_to_glyph(mnum)\t((int) (mnum) + GLYPH_DETECT_OFF)</span>\n <span id=\"line2654\">2654.  #define ridden_monnum_to_glyph(mnum)\t((int) (mnum) + GLYPH_RIDDEN_OFF)</span>\n <span id=\"line2655\">2655. @@ -316,7 +340,6 @@</span>\n <span id=\"line2656\">2656.  \t                (flags.female && urace.femalenum != NON_PM) ? urace.femalenum : \\</span>\n <span id=\"line2657\">2657.  \t                urace.malenum)</span>\n <span id=\"line2658\">2658.  </span>\n <span id=\"line2659\">2659. -</span>\n <span id=\"line2660\">2660.  /*</span>\n <span id=\"line2661\">2661.   * Change the given glyph into it's given type.  Note:</span>\n <span id=\"line2662\">2662.   *\t1) Pets, detected, and ridden monsters are animals and are converted</span>\n <span id=\"line2663\">2663. @@ -333,11 +356,12 @@</span>\n <span id=\"line2664\">2664.  \t(glyph_is_normal_monster(glyph) ? ((glyph)-GLYPH_MON_OFF) :\t\\</span>\n <span id=\"line2665\">2665.  \tglyph_is_pet(glyph) ? ((glyph)-GLYPH_PET_OFF) :\t\t\t\\</span>\n <span id=\"line2666\">2666.  \tglyph_is_detected_monster(glyph) ? ((glyph)-GLYPH_DETECT_OFF) :\t\\</span>\n <span id=\"line2667\">2667. +\tglyph_is_riding_monster(glyph) ? ((glyph)-GLYPH_RIDING_OFF) :\t\\</span>\n <span id=\"line2668\">2668.  \tglyph_is_ridden_monster(glyph) ? ((glyph)-GLYPH_RIDDEN_OFF) :\t\\</span>\n <span id=\"line2669\">2669.  \tNO_GLYPH)</span>\n <span id=\"line2670\">2670.  #define glyph_to_obj(glyph)\t\t\t\t\t\t\\</span>\n <span id=\"line2671\">2671.  \t(glyph_is_body(glyph) ? CORPSE :\t\t\t\t\\</span>\n <span id=\"line2672\">2672. -\tglyph_is_normal_object(glyph) ? ((glyph)-GLYPH_OBJ_OFF) :\t\\</span>\n <span id=\"line2673\">2673. +\tglyph_is_normal_object(glyph) ? (((glyph)-GLYPH_OBJ_OFF) >> 5) :\t\\</span>\n <span id=\"line2674\">2674.  \tNO_GLYPH)</span>\n <span id=\"line2675\">2675.  #define glyph_to_trap(glyph)\t\t\t\t\t\t\\</span>\n <span id=\"line2676\">2676.  \t(glyph_is_trap(glyph) ?\t\t\t\t\t\t\\</span>\n <span id=\"line2677\">2677. @@ -360,6 +384,7 @@</span>\n <span id=\"line2678\">2678.  #define glyph_is_monster(glyph)\t\t\t\t\t\t\\</span>\n <span id=\"line2679\">2679.  \t\t(glyph_is_normal_monster(glyph)\t\t\t\t\\</span>\n <span id=\"line2680\">2680.  \t\t|| glyph_is_pet(glyph)\t\t\t\t\t\\</span>\n <span id=\"line2681\">2681. +\t\t|| glyph_is_riding_monster(glyph)\t\t\t\\</span>\n <span id=\"line2682\">2682.  \t\t|| glyph_is_ridden_monster(glyph)\t\t\t\\</span>\n <span id=\"line2683\">2683.  \t\t|| glyph_is_detected_monster(glyph))</span>\n <span id=\"line2684\">2684.  #define glyph_is_normal_monster(glyph)\t\t\t\t\t\\</span>\n <span id=\"line2685\">2685. @@ -368,13 +393,15 @@</span>\n <span id=\"line2686\">2686.      ((glyph) >= GLYPH_PET_OFF && (glyph) < (GLYPH_PET_OFF+NUMMONS))</span>\n <span id=\"line2687\">2687.  #define glyph_is_body(glyph)\t\t\t\t\t\t\\</span>\n <span id=\"line2688\">2688.      ((glyph) >= GLYPH_BODY_OFF && (glyph) < (GLYPH_BODY_OFF+NUMMONS))</span>\n <span id=\"line2689\">2689. +#define glyph_is_riding_monster(glyph)\t\t\t\t\t\\</span>\n <span id=\"line2690\">2690. +    ((glyph) >= GLYPH_RIDING_OFF && (glyph) < (GLYPH_RIDING_OFF+NUMMONS))</span>\n <span id=\"line2691\">2691.  #define glyph_is_ridden_monster(glyph)\t\t\t\t\t\\</span>\n <span id=\"line2692\">2692.      ((glyph) >= GLYPH_RIDDEN_OFF && (glyph) < (GLYPH_RIDDEN_OFF+NUMMONS))</span>\n <span id=\"line2693\">2693.  #define glyph_is_detected_monster(glyph)\t\t\t\t\\</span>\n <span id=\"line2694\">2694.      ((glyph) >= GLYPH_DETECT_OFF && (glyph) < (GLYPH_DETECT_OFF+NUMMONS))</span>\n <span id=\"line2695\">2695.  #define glyph_is_invisible(glyph) ((glyph) == GLYPH_INVISIBLE)</span>\n <span id=\"line2696\">2696.  #define glyph_is_normal_object(glyph)\t\t\t\t\t\\</span>\n <span id=\"line2697\">2697. -    ((glyph) >= GLYPH_OBJ_OFF && (glyph) < (GLYPH_OBJ_OFF+NUM_OBJECTS))</span>\n <span id=\"line2698\">2698. +    ((glyph) >= GLYPH_OBJ_OFF && (glyph) < (GLYPH_OBJ_OFF+(NUM_OBJECTS<<5)))</span>\n <span id=\"line2699\">2699.  #define glyph_is_object(glyph)\t\t\t\t\t\t\\</span>\n <span id=\"line2700\">2700.  \t\t(glyph_is_normal_object(glyph)\t\t\t\t\\</span>\n <span id=\"line2701\">2701.  \t\t|| glyph_is_body(glyph))</span>\n\nBecause [[monsters riding steeds]] is a new feature in NetHack brass, the display code needs to know how to draw them on screen.\n\n=== obj.h ===\n <span id=\"line3623\">3623. diff -pruN nethack-3.4.3/include/[[obj.h]] nhbrass-040923/include/obj.h</span>\n <span id=\"line3624\">3624. --- nethack-3.4.3/include/obj.h\tSun Dec  7 18:39:13 2003</span>\n <span id=\"line3625\">3625. +++ nhbrass-040923/include/obj.h\tWed Dec 10 07:49:36 2003</span>\n <span id=\"line3626\">3626. @@ -72,12 +72,15 @@ struct obj {</span>\n <span id=\"line3627\">3627.  #define norevive oeroded2</span>\n <span id=\"line3628\">3628.  \tBitfield(oerodeproof,1); /* erodeproof weapon/armor */</span>\n <span id=\"line3629\">3629.  \tBitfield(olocked,1);\t/* object is locked */</span>\n <span id=\"line3630\">3630. +#define sokoprize olocked\t/* special flag for sokoban prize */</span>\n <span id=\"line3631\">3631.  \tBitfield(obroken,1);\t/* lock has been broken */</span>\n <span id=\"line3632\">3632. +#define oshot obroken\t\t/* a bullet is shot from a gun, not thrown */</span>\n <span id=\"line3633\">3633.  \tBitfield(otrapped,1);\t/* container is trapped */</span>\n <span id=\"line3634\">3634.  \t\t\t\t/* or accidental tripped rolling boulder trap */</span>\n <span id=\"line3635\">3635.  #define opoisoned otrapped\t/* object (weapon) is coated with poison */</span>\n <span id=\"line3636\">3636.  </span>\n <span id=\"line3637\">3637.  \tBitfield(recharged,3);\t/* number of times it's been recharged */</span>\n <span id=\"line3638\">3638. +#define oacadjust recharged\t/* armor-class adjustment (-4 to +3) */</span>\n <span id=\"line3639\">3639.  \tBitfield(lamplit,1);\t/* a light-source -- can be lit */</span>\n <span id=\"line3640\">3640.  #ifdef INVISIBLE_OBJECTS</span>\n <span id=\"line3641\">3641.  \tBitfield(oinvis,1);\t/* invisible */</span>\n <span id=\"line3642\">3642. @@ -91,13 +94,15 @@ struct obj {</span>\n <span id=\"line3643\">3643.  </span>\n <span id=\"line3644\">3644.  \tBitfield(in_use,1);\t/* for magic items before useup items */</span>\n <span id=\"line3645\">3645.  \tBitfield(bypass,1);\t/* mark this as an object to be skipped by bhito() */</span>\n <span id=\"line3646\">3646. -\t/* 6 free bits */</span>\n <span id=\"line3647\">3647. +\tBitfield(etherial,1);\t/* magically created object */</span>\n <span id=\"line3648\">3648. +\tBitfield(madeof,5);\t/* material num if obj is made of unusual material */</span>\n <span id=\"line3649\">3649.  </span>\n <span id=\"line3650\">3650.  \tint\tcorpsenm;\t/* type of corpse is mons[corpsenm] */</span>\n <span id=\"line3651\">3651.  #define leashmon  corpsenm\t/* gets m_id of attached pet */</span>\n <span id=\"line3652\">3652.  #define spestudied corpsenm\t/* # of times a spellbook has been studied */</span>\n <span id=\"line3653\">3653.  #define fromsink  corpsenm\t/* a potion from a sink */</span>\n <span id=\"line3654\">3654.  \tunsigned oeaten;\t/* nutrition left in food, if partly eaten */</span>\n <span id=\"line3655\">3655. +#define odamaged oeaten\t\t/* how much object's special power worn out */</span>\n <span id=\"line3656\">3656.  \tlong age;\t\t/* creation date */</span>\n <span id=\"line3657\">3657.  </span>\n <span id=\"line3658\">3658.  \tuchar onamelth;\t\t/* length of name (following oxlth) */</span>\n <span id=\"line3659\">3659. @@ -125,50 +130,69 @@ struct obj {</span>\n <span id=\"line3660\">3660.   *\t#define is_poisonable(otyp) (otyp <= BEC_DE_CORBIN)</span>\n <span id=\"line3661\">3661.   */</span>\n <span id=\"line3662\">3662.  #define is_blade(otmp)\t(otmp->oclass == WEAPON_CLASS && \\</span>\n <span id=\"line3663\">3663. -\t\t\t objects[otmp->otyp].oc_skill >= P_DAGGER && \\</span>\n <span id=\"line3664\">3664. -\t\t\t objects[otmp->otyp].oc_skill <= P_SABER)</span>\n <span id=\"line3665\">3665. +\t\t\t objects[otmp->otyp].oc_skill >= P_DAGGER_GROUP && \\</span>\n <span id=\"line3666\">3666. +\t\t\t objects[otmp->otyp].oc_skill <= P_SABER_GROUP)</span>\n <span id=\"line3667\">3667.  #define is_axe(otmp)\t((otmp->oclass == WEAPON_CLASS || \\</span>\n <span id=\"line3668\">3668.  \t\t\t otmp->oclass == TOOL_CLASS) && \\</span>\n <span id=\"line3669\">3669. -\t\t\t objects[otmp->otyp].oc_skill == P_AXE)</span>\n <span id=\"line3670\">3670. +\t\t\t objects[otmp->otyp].oc_skill == P_AXE_GROUP)</span>\n <span id=\"line3671\">3671.  #define is_pick(otmp)\t((otmp->oclass == WEAPON_CLASS || \\</span>\n <span id=\"line3672\">3672.  \t\t\t otmp->oclass == TOOL_CLASS) && \\</span>\n <span id=\"line3673\">3673. -\t\t\t objects[otmp->otyp].oc_skill == P_PICK_AXE)</span>\n <span id=\"line3674\">3674. +\t\t\t objects[otmp->otyp].oc_skill == P_PICKAXE_GROUP)</span>\n <span id=\"line3675\">3675.  #define is_sword(otmp)\t(otmp->oclass == WEAPON_CLASS && \\</span>\n <span id=\"line3676\">3676. -\t\t\t objects[otmp->otyp].oc_skill >= P_SHORT_SWORD && \\</span>\n <span id=\"line3677\">3677. -\t\t\t objects[otmp->otyp].oc_skill <= P_SABER)</span>\n <span id=\"line3678\">3678. +\t\t\t objects[otmp->otyp].oc_skill >= P_SHORT_BLADE_GROUP && \\</span>\n <span id=\"line3679\">3679. +\t\t\t objects[otmp->otyp].oc_skill <= P_SABER_GROUP)</span>\n <span id=\"line3680\">3680.  #define is_pole(otmp)\t((otmp->oclass == WEAPON_CLASS || \\</span>\n <span id=\"line3681\">3681.  \t\t\totmp->oclass == TOOL_CLASS) && \\</span>\n <span id=\"line3682\">3682. -\t\t\t (objects[otmp->otyp].oc_skill == P_POLEARMS || \\</span>\n <span id=\"line3683\">3683. -\t\t\t objects[otmp->otyp].oc_skill == P_LANCE))</span>\n <span id=\"line3684\">3684. +\t\t\t objects[otmp->otyp].oc_skill == P_POLEARM_GROUP)</span>\n <span id=\"line3685\">3685.  #define is_spear(otmp)\t(otmp->oclass == WEAPON_CLASS && \\</span>\n <span id=\"line3686\">3686. -\t\t\t objects[otmp->otyp].oc_skill >= P_SPEAR && \\</span>\n <span id=\"line3687\">3687. -\t\t\t objects[otmp->otyp].oc_skill <= P_JAVELIN)</span>\n <span id=\"line3688\">3688. +\t\t\t objects[otmp->otyp].oc_skill == P_SPEAR_GROUP)</span>\n <span id=\"line3689\">3689. +#define is_gun(otmp)\t(otmp->oclass == WEAPON_CLASS && \\</span>\n <span id=\"line3690\">3690. +\t\t\t objects[otmp->otyp].oc_skill == P_FIREARM_GROUP)</span>\n <span id=\"line3691\">3691. +#define maxbullets(otmp) (otmp->otyp == REVOLVER ? 6 : \\</span>\n <span id=\"line3692\">3692. +                          otmp->otyp == MUSKET ? 1 : 0)</span>\n <span id=\"line3693\">3693.  #define is_launcher(otmp)\t(otmp->oclass == WEAPON_CLASS && \\</span>\n <span id=\"line3694\">3694. -\t\t\t objects[otmp->otyp].oc_skill >= P_BOW && \\</span>\n <span id=\"line3695\">3695. -\t\t\t objects[otmp->otyp].oc_skill <= P_CROSSBOW)</span>\n <span id=\"line3696\">3696. +\t\t\t (objects[otmp->otyp].oc_wprop & WP_WEAPONTYPE) == WP_LAUNCHER)</span>\n <span id=\"line3697\">3697.  #define is_ammo(otmp)\t((otmp->oclass == WEAPON_CLASS || \\</span>\n <span id=\"line3698\">3698.  \t\t\t otmp->oclass == GEM_CLASS) && \\</span>\n <span id=\"line3699\">3699. -\t\t\t objects[otmp->otyp].oc_skill >= -P_CROSSBOW && \\</span>\n <span id=\"line3700\">3700. -\t\t\t objects[otmp->otyp].oc_skill <= -P_BOW)</span>\n <span id=\"line3701\">3701. +\t\t\t (objects[otmp->otyp].oc_wprop & WP_WEAPONTYPE) == WP_AMMUNITION)</span>\n <span id=\"line3702\">3702. +#define is_bullet(otmp)\t(otmp->oclass == WEAPON_CLASS && \\</span>\n <span id=\"line3703\">3703. +\t\t\t (objects[otmp->otyp].oc_wprop & (WP_WEAPONTYPE|WP_SUBTYPE)) == \\</span>\n <span id=\"line3704\">3704. +\t\t\t (WP_AMMUNITION|WP_BULLET))</span>\n <span id=\"line3705\">3705.  #define ammo_and_launcher(otmp,ltmp) \\</span>\n <span id=\"line3706\">3706. -\t\t\t (is_ammo(otmp) && (ltmp) && \\</span>\n <span id=\"line3707\">3707. -\t\t\t objects[(otmp)->otyp].oc_skill == -objects[(ltmp)->otyp].oc_skill)</span>\n <span id=\"line3708\">3708. -#define is_missile(otmp)\t((otmp->oclass == WEAPON_CLASS || \\</span>\n <span id=\"line3709\">3709. -\t\t\t otmp->oclass == TOOL_CLASS) && \\</span>\n <span id=\"line3710\">3710. -\t\t\t objects[otmp->otyp].oc_skill >= -P_BOOMERANG && \\</span>\n <span id=\"line3711\">3711. -\t\t\t objects[otmp->otyp].oc_skill <= -P_DART)</span>\n <span id=\"line3712\">3712. +\t\t\t (is_ammo(otmp) && (ltmp) && is_launcher(ltmp) && \\</span>\n <span id=\"line3713\">3713. +\t\t\t ((objects[(otmp)->otyp].oc_wprop & WP_SUBTYPE) == \\</span>\n <span id=\"line3714\">3714. +\t\t\t  (objects[(ltmp)->otyp].oc_wprop & WP_SUBTYPE) ))</span>\n <span id=\"line3715\">3715. +#define is_missile(otmp)\t(otmp->oclass == WEAPON_CLASS && \\</span>\n <span id=\"line3716\">3716. +\t\t\t (objects[otmp->otyp].oc_wprop & WP_THROWING) && \\</span>\n <span id=\"line3717\">3717. +\t\t\t (objects[otmp->otyp].oc_wprop & WP_CONSUMABLE) && \\</span>\n <span id=\"line3718\">3718. +\t\t\t (objects[otmp->otyp].oc_wprop & WP_WEAPONTYPE) == WP_NORMAL)</span>\n <span id=\"line3719\">3719.  #define is_weptool(o)\t((o)->oclass == TOOL_CLASS && \\</span>\n <span id=\"line3720\">3720.  \t\t\t objects[(o)->otyp].oc_skill != P_NONE)</span>\n <span id=\"line3721\">3721.  #define bimanual(otmp)\t((otmp->oclass == WEAPON_CLASS || \\</span>\n <span id=\"line3722\">3722.  \t\t\t otmp->oclass == TOOL_CLASS) && \\</span>\n <span id=\"line3723\">3723.  \t\t\t objects[otmp->otyp].oc_bimanual)</span>\n <span id=\"line3724\">3724. -#define is_multigen(otmp)\t(otmp->oclass == WEAPON_CLASS && \\</span>\n <span id=\"line3725\">3725. -\t\t\t objects[otmp->otyp].oc_skill >= -P_SHURIKEN && \\</span>\n <span id=\"line3726\">3726. -\t\t\t objects[otmp->otyp].oc_skill <= -P_BOW)</span>\n <span id=\"line3727\">3727. +#define is_multigen(otmp)\t(is_ammo(otmp) || is_missile(otmp))</span>\n <span id=\"line3728\">3728.  #define is_poisonable(otmp)\t(otmp->oclass == WEAPON_CLASS && \\</span>\n <span id=\"line3729\">3729. -\t\t\t objects[otmp->otyp].oc_skill >= -P_SHURIKEN && \\</span>\n <span id=\"line3730\">3730. -\t\t\t objects[otmp->otyp].oc_skill <= -P_BOW)</span>\n <span id=\"line3731\">3731. -#define uslinging()\t(uwep && objects[uwep->otyp].oc_skill == P_SLING)</span>\n <span id=\"line3732\">3732. +\t\t\t(objects[otmp->otyp].oc_wprop & WP_POISONABLE))</span>\n <span id=\"line3733\">3733. +#define is_consumable(otmp)\t((otmp->oclass == WEAPON_CLASS || otmp->oclass == GEM_CLASS) && \\</span>\n <span id=\"line3734\">3734. +\t\t\t(objects[otmp->otyp].oc_wprop & WP_CONSUMABLE))</span>\n <span id=\"line3735\">3735. +#define is_ranged(otmp)\t((otmp->oclass == WEAPON_CLASS || is_weptool(otmp)) && \\</span>\n <span id=\"line3736\">3736. +\t\t\t (objects[otmp->otyp].oc_wprop & WP_WEAPONTYPE) == WP_RANGED)</span>\n <span id=\"line3737\">3737. +#define uslinging()\t(uwep && uwep->oclass == WEAPON_CLASS && \\</span>\n <span id=\"line3738\">3738. +\t\t\t(objects[uwep->otyp].oc_wprop & (WP_WEAPONTYPE|WP_SUBTYPE)) == (WP_LAUNCHER|WP_STONE))</span>\n <span id=\"line3739\">3739. +#define is_hammer(otmp)\t(otmp->oclass == WEAPON_CLASS && \\</span>\n <span id=\"line3740\">3740. +\t\t\t (objects[otmp->otyp].oc_skill == P_CRUSHING_GROUP || \\</span>\n <span id=\"line3741\">3741. +\t\t\t  objects[otmp->otyp].oc_skill == P_FLAIL_GROUP || \\</span>\n <span id=\"line3742\">3742. +\t\t\t  otmp->otyp == LUCERN_HAMMER || otmp->otyp == BEC_DE_CORBIN))</span>\n <span id=\"line3743\">3743. +/* The amount added to the victim's total hit points to insure that the</span>\n <span id=\"line3744\">3744. +   victim will be killed even after damage bonus/penalty adjustments.</span>\n <span id=\"line3745\">3745. +   Most such penalties are small, and 200 is plenty; the exception is</span>\n <span id=\"line3746\">3746. +   half physical damage.  3.3.1 and previous versions tried to use a very</span>\n <span id=\"line3747\">3747. +   large number to account for this case; now, we just compute the fatal</span>\n <span id=\"line3748\">3748. +   damage by adding it to 2 times the total hit points instead of 1 time.</span>\n <span id=\"line3749\">3749. +   Note: this will still break if they have more than about half the number</span>\n <span id=\"line3750\">3750. +   of hit points that will fit in a 15 bit integer. */</span>\n <span id=\"line3751\">3751. +#define FATAL_DAMAGE_MODIFIER 200</span>\n <span id=\"line3752\">3752.  </span>\n <span id=\"line3753\">3753.  /* Armor */</span>\n <span id=\"line3754\">3754.  #define is_shield(otmp) (otmp->oclass == ARMOR_CLASS && \\</span>\n <span id=\"line3755\">3755. @@ -185,6 +209,10 @@ struct obj {</span>\n <span id=\"line3756\">3756.  \t\t\t objects[otmp->otyp].oc_armcat == ARM_SHIRT)</span>\n <span id=\"line3757\">3757.  #define is_suit(otmp)\t(otmp->oclass == ARMOR_CLASS && \\</span>\n <span id=\"line3758\">3758.  \t\t\t objects[otmp->otyp].oc_armcat == ARM_SUIT)</span>\n <span id=\"line3759\">3759. +#define is_robe(otmp)\t(otmp->oclass == ARMOR_CLASS && \\</span>\n <span id=\"line3760\">3760. +\t\t\t otmp->otyp >= ROBE && otmp->otyp <= ROBE_OF_WEAKNESS)</span>\n <span id=\"line3761\">3761. +#define is_clothes(otmp) (otmp->oclass == ARMOR_CLASS && \\</span>\n <span id=\"line3762\">3762. +\t\t\t  (get_material(otmp) == CLOTH || otmp->otyp == LEATHER_JACKET))</span>\n <span id=\"line3763\">3763.  #define is_elven_armor(otmp)\t((otmp)->otyp == ELVEN_LEATHER_HELM\\</span>\n <span id=\"line3764\">3764.  \t\t\t\t|| (otmp)->otyp == ELVEN_MITHRIL_COAT\\</span>\n <span id=\"line3765\">3765.  \t\t\t\t|| (otmp)->otyp == ELVEN_CLOAK\\</span>\n <span id=\"line3766\">3766. @@ -202,7 +230,9 @@ struct obj {</span>\n <span id=\"line3767\">3767.  \t\t\t\t|| (otmp)->otyp == DWARVISH_ROUNDSHIELD)</span>\n <span id=\"line3768\">3768.  #define is_gnomish_armor(otmp)\t(FALSE)</span>\n <span id=\"line3769\">3769.  </span>\n <span id=\"line3770\">3770. -\t\t\t\t</span>\n <span id=\"line3771\">3771. +#define WEP_ENCHANT_MAX  5</span>\n <span id=\"line3772\">3772. +#define WEP_ENCHANT_WARN 3</span>\n <span id=\"line3773\">3773. +</span>\n <span id=\"line3774\">3774.  /* Eggs and other food */</span>\n <span id=\"line3775\">3775.  #define MAX_EGG_HATCH_TIME 200\t/* longest an egg can remain unhatched */</span>\n <span id=\"line3776\">3776.  #define stale_egg(egg)\t((monstermoves - (egg)->age) > (2*MAX_EGG_HATCH_TIME))</span>\n <span id=\"line3777\">3777. @@ -222,6 +252,8 @@ struct obj {</span>\n <span id=\"line3778\">3778.  #define Is_mbag(otmp)\t(otmp->otyp == BAG_OF_HOLDING || \\</span>\n <span id=\"line3779\">3779.  \t\t\t otmp->otyp == BAG_OF_TRICKS)</span>\n <span id=\"line3780\">3780.  </span>\n <span id=\"line3781\">3781. +#define Is_sokoprize(otmp)\t((otmp)->sokoprize && !Is_box(otmp))</span>\n <span id=\"line3782\">3782. +</span>\n <span id=\"line3783\">3783.  /* dragon gear */</span>\n <span id=\"line3784\">3784.  #define Is_dragon_scales(obj)\t((obj)->otyp >= GRAY_DRAGON_SCALES && \\</span>\n <span id=\"line3785\">3785.  \t\t\t\t (obj)->otyp <= YELLOW_DRAGON_SCALES)</span>\n <span id=\"line3786\">3786. @@ -260,9 +292,14 @@ struct obj {</span>\n <span id=\"line3787\">3787.  /* Gnomish gear */</span>\n <span id=\"line3788\">3788.  #define is_gnomish_obj(otmp)\t(is_gnomish_armor(otmp))</span>\n <span id=\"line3789\">3789.  </span>\n <span id=\"line3790\">3790. +#define is_special_armor(obj)\t(is_elven_armor(obj) || \\</span>\n <span id=\"line3791\">3791. +\t\t\t(Role_if(PM_WIZARD) && (obj)->otyp == CORNUTHAUM))</span>\n <span id=\"line3792\">3792. +</span>\n <span id=\"line3793\">3793. +</span>\n <span id=\"line3794\">3794.  /* Light sources */</span>\n <span id=\"line3795\">3795.  #define Is_candle(otmp) (otmp->otyp == TALLOW_CANDLE || \\</span>\n <span id=\"line3796\">3796. -\t\t\t otmp->otyp == WAX_CANDLE)</span>\n <span id=\"line3797\">3797. +\t\t\t otmp->otyp == WAX_CANDLE || \\</span>\n <span id=\"line3798\">3798. +\t\t\t otmp->otyp == MAGIC_CANDLE)</span>\n <span id=\"line3799\">3799.  #define MAX_OIL_IN_FLASK 400\t/* maximum amount of oil in a potion of oil */</span>\n <span id=\"line3800\">3800.  </span>\n <span id=\"line3801\">3801.  /* MAGIC_LAMP intentionally excluded below */</span>\n <span id=\"line3802\">3802. @@ -289,10 +326,10 @@ struct obj {</span>\n <span id=\"line3803\">3803.  </span>\n <span id=\"line3804\">3804.  /* misc */</span>\n <span id=\"line3805\">3805.  #ifdef KOPS</span>\n <span id=\"line3806\">3806. -#define is_flimsy(otmp)\t\t(objects[(otmp)->otyp].oc_material <= LEATHER || \\</span>\n <span id=\"line3807\">3807. +#define is_flimsy(otmp)\t\t(get_material(otmp) <= LEATHER || \\</span>\n <span id=\"line3808\">3808.  \t\t\t\t (otmp)->otyp == RUBBER_HOSE)</span>\n <span id=\"line3809\">3809.  #else</span>\n <span id=\"line3810\">3810. -#define is_flimsy(otmp)\t\t(objects[(otmp)->otyp].oc_material <= LEATHER)</span>\n <span id=\"line3811\">3811. +#define is_flimsy(otmp)\t\t(get_material(otmp) <= LEATHER) /* material patch */</span>\n <span id=\"line3812\">3812.  #endif</span>\n <span id=\"line3813\">3813.  </span>\n <span id=\"line3814\">3814.  /* helpers, simple enough to be macros */</span>\n\nAmong the changes to objects: support for the [[Sokoban prize]]s, the three items from which you may take only one; support for unusual [[material]]s for some objects. Also, some of the macros here have to be adjusted to work with the new [[skills (NetHack brass)|skills]] system.\n\n=== zap.c ===\n <span id=\"line30960\">30960.diff -pruN nethack-3.4.3/src/zap.c nhbrass-040923/src/zap.c</span>\n <span id=\"line30961\">30961.--- nethack-3.4.3/src/zap.c\tSun Dec  7 18:39:13 2003</span>\n <span id=\"line30962\">30962.+++ nhbrass-040923/src/zap.c\tSun Jun 13 13:37:04 2004</span>\n <span id=\"line30963\">30963.@@ -48,7 +48,8 @@ STATIC_DCL int FDECL(spell_hit_bonus, (i</span>\n <span id=\"line30964\">30964. #define ZT_LIGHTNING\t\t(AD_ELEC-1)</span>\n <span id=\"line30965\">30965. #define ZT_POISON_GAS\t\t(AD_DRST-1)</span>\n <span id=\"line30966\">30966. #define ZT_ACID\t\t\t(AD_ACID-1)</span>\n <span id=\"line30967\">30967.-/* 8 and 9 are currently unassigned */</span>\n <span id=\"line30968\">30968.+#define ZT_PARALYSIS\t\t(AD_PLYS-1)</span>\n <span id=\"line30969\">30969.+/* 9 is currently unassigned */</span>\n <span id=\"line30970\">30970. </span>\n <span id=\"line30971\">30971. #define ZT_WAND(x)\t\t(x)</span>\n <span id=\"line30972\">30972. #define ZT_SPELL(x)\t\t(10+(x))</span>\n <span id=\"line30973\">30973.@@ -93,7 +94,7 @@ const char * const flash_types[] = {\t/* </span>\n <span id=\"line30974\">30974. \t\"blast of lightning\",</span>\n <span id=\"line30975\">30975. \t\"blast of poison gas\",</span>\n <span id=\"line30976\">30976. \t\"blast of acid\",</span>\n <span id=\"line30977\">30977.-\t\"\",</span>\n <span id=\"line30978\">30978.+\t\"blast of paralysis gas\",</span>\n <span id=\"line30979\">30979. \t\"\"</span>\n <span id=\"line30980\">30980. };</span>\n <span id=\"line30981\">30981. </span>\n <span id=\"line30982\">30982.@@ -259,7 +260,10 @@ struct obj *otmp;</span>\n <span id=\"line30983\">30983. \t\treveal_invis = TRUE;</span>\n <span id=\"line30984\">30984. \t    if (mtmp->data != &mons[PM_PESTILENCE]) {</span>\n <span id=\"line30985\">30985. \t\twake = FALSE;\t\t/* wakeup() makes the target angry */</span>\n <span id=\"line30986\">30986.-\t\tmtmp->mhp += d(6, otyp == SPE_EXTRA_HEALING ? 8 : 4);</span>\n <span id=\"line30987\">30987.+\t\tmtmp->mhp += d( 6+(Role_if(PM_HEALER) ? 1 : 0)+</span>\n <span id=\"line30988\">30988.+\t\t\t\t  ((flags.female && uarmh && uarmh->otyp == NURSE_CAP) ? 1 : 0)+</span>\n <span id=\"line30989\">30989.+\t\t\t\t  ((flags.female && uarm  && uarm->otyp  == NURSE_UNIFORM) ? 1 : 0),</span>\n <span id=\"line30990\">30990.+\t\t\t\totyp == SPE_EXTRA_HEALING ? 8 : 4);</span>\n <span id=\"line30991\">30991. \t\tif (mtmp->mhp > mtmp->mhpmax)</span>\n <span id=\"line30992\">30992. \t\t    mtmp->mhp = mtmp->mhpmax;</span>\n <span id=\"line30993\">30993. \t\tif (mtmp->mblinded) {</span>\n <span id=\"line30994\">30994.@@ -354,7 +358,7 @@ struct obj *otmp;</span>\n <span id=\"line30995\">30995. \t */</span>\n <span id=\"line30996\">30996. \tif (reveal_invis) {</span>\n <span id=\"line30997\">30997. \t    if (mtmp->mhp > 0 && cansee(bhitpos.x, bhitpos.y) &&</span>\n <span id=\"line30998\">30998.-\t\t\t\t\t\t\t!canspotmon(mtmp))</span>\n <span id=\"line30999\">30999.+\t\t\t\t\t\t\t!canspotmons(mtmp))</span>\n <span id=\"line31000\">31000. \t\tmap_invisible(bhitpos.x, bhitpos.y);</span>\n <span id=\"line31001\">31001. \t}</span>\n <span id=\"line31002\">31002. \treturn 0;</span>\n <span id=\"line31003\">31003.@@ -674,7 +678,7 @@ register struct obj *obj;</span>\n <span id=\"line31004\">31004. \t\t    }</span>\n <span id=\"line31005\">31005. \t\t}</span>\n <span id=\"line31006\">31006. \t\tif (mtmp) {</span>\n <span id=\"line31007\">31007.-\t\t\tif (obj->oeaten)</span>\n <span id=\"line31008\">31008.+\t\t\tif (obj->oclass == FOOD_CLASS && obj->oeaten)</span>\n <span id=\"line31009\">31009. \t\t\t\tmtmp->mhp = eaten_stat(mtmp->mhp, obj);</span>\n <span id=\"line31010\">31010. \t\t\t/* track that this monster was revived at least once */</span>\n <span id=\"line31011\">31011. \t\t\tmtmp->mrevived = 1;</span>\n <span id=\"line31012\">31012.@@ -822,6 +826,7 @@ register struct obj *obj;</span>\n <span id=\"line31013\">31013. \t\tcase RIN_GAIN_CONSTITUTION:</span>\n <span id=\"line31014\">31014. \t\t\tif ((obj->owornmask & W_RING) && u_ring) {</span>\n <span id=\"line31015\">31015. \t\t\t\tABON(A_CON) -= obj->spe;</span>\n <span id=\"line31016\">31016.+\t\t\t\trecalchpmax();</span>\n <span id=\"line31017\">31017. \t\t\t\tflags.botl = 1;</span>\n <span id=\"line31018\">31018. \t\t\t}</span>\n <span id=\"line31019\">31019. \t\t\tbreak;</span>\n <span id=\"line31020\">31020.@@ -839,12 +844,16 @@ register struct obj *obj;</span>\n <span id=\"line31021\">31021. \t\t\tif ((obj->owornmask & W_RING) && u_ring)</span>\n <span id=\"line31022\">31022. \t\t\t\tu.udaminc -= obj->spe;</span>\n <span id=\"line31023\">31023. \t\t\tbreak;</span>\n <span id=\"line31024\">31024.-\t\tcase GAUNTLETS_OF_DEXTERITY:</span>\n <span id=\"line31025\">31025.-\t\t\tif ((obj->owornmask & W_ARMG) && (obj == uarmg)) {</span>\n <span id=\"line31026\">31026.-\t\t\t\tABON(A_DEX) -= obj->spe;</span>\n <span id=\"line31027\">31027.-\t\t\t\tflags.botl = 1;</span>\n <span id=\"line31028\">31028.-\t\t\t}</span>\n <span id=\"line31029\">31029.+\t\tcase RIN_PROTECTION:</span>\n <span id=\"line31030\">31030.+\t\t\tif ((obj->owornmask & W_RING) && u_ring)</span>\n <span id=\"line31031\">31031.+\t\t\t\tu.uprotection -= obj->spe;</span>\n <span id=\"line31032\">31032. \t\t\tbreak;</span>\n <span id=\"line31033\">31033.+//\t\tcase GAUNTLETS_OF_DEXTERITY:</span>\n <span id=\"line31034\">31034.+//\t\t\tif ((obj->owornmask & W_ARMG) && (obj == uarmg)) {</span>\n <span id=\"line31035\">31035.+//\t\t\t\tABON(A_DEX) -= obj->spe;</span>\n <span id=\"line31036\">31036.+//\t\t\t\tflags.botl = 1;</span>\n <span id=\"line31037\">31037.+//\t\t\t}</span>\n <span id=\"line31038\">31038.+//\t\t\tbreak;</span>\n <span id=\"line31039\">31039. \t\tcase HELM_OF_BRILLIANCE:</span>\n <span id=\"line31040\">31040. \t\t\tif ((obj->owornmask & W_ARMH) && (obj == uarmh)) {</span>\n <span id=\"line31041\">31041. \t\t\t\tABON(A_INT) -= obj->spe;</span>\n <span id=\"line31042\">31042.@@ -938,6 +947,7 @@ register struct obj *obj;</span>\n <span id=\"line31043\">31043. \tcase RIN_GAIN_CONSTITUTION:</span>\n <span id=\"line31044\">31044. \t    if ((obj->owornmask & W_RING) && u_ring) {</span>\n <span id=\"line31045\">31045. \t    \tABON(A_CON)--;</span>\n <span id=\"line31046\">31046.+\t\trecalchpmax();</span>\n <span id=\"line31047\">31047. \t    \tflags.botl = 1;</span>\n <span id=\"line31048\">31048. \t    }</span>\n <span id=\"line31049\">31049. \t    break;</span>\n <span id=\"line31050\">31050.@@ -1040,7 +1050,7 @@ polyuse(objhdr, mat, minwt)</span>\n <span id=\"line31051\">31051. \tif (otmp->otyp == SCR_MAIL) continue;</span>\n <span id=\"line31052\">31052. #endif</span>\n <span id=\"line31053\">31053. </span>\n <span id=\"line31054\">31054.-\tif (((int) objects[otmp->otyp].oc_material == mat) ==</span>\n <span id=\"line31055\">31055.+\tif (((int) get_material(otmp) == mat) ==</span>\n <span id=\"line31056\">31056. \t\t(rn2(minwt + 1) != 0)) {</span>\n <span id=\"line31057\">31057. \t    /* appropriately add damage to bill */</span>\n <span id=\"line31058\">31058. \t    if (costly_spot(otmp->ox, otmp->oy)) {</span>\n <span id=\"line31059\">31059.@@ -1161,7 +1171,7 @@ struct obj *obj;</span>\n <span id=\"line31060\">31060. \t    /* some may metamorphosize */</span>\n <span id=\"line31061\">31061. \t    for (i = obj->quan; i; i--)</span>\n <span id=\"line31062\">31062. \t\tif (! rn2(Luck + 45)) {</span>\n <span id=\"line31063\">31063.-\t\t    poly_zapped = objects[obj->otyp].oc_material;</span>\n <span id=\"line31064\">31064.+\t\t    poly_zapped = get_material(obj);</span>\n <span id=\"line31065\">31065. \t\t    break;</span>\n <span id=\"line31066\">31066. \t\t}</span>\n <span id=\"line31067\">31067. \t}</span>\n <span id=\"line31068\">31068.@@ -1348,12 +1358,20 @@ poly_obj(obj, id)</span>\n <span id=\"line31069\">31069. </span>\n <span id=\"line31070\">31070. \tcase GEM_CLASS:</span>\n <span id=\"line31071\">31071. \t    if (otmp->quan > (long) rnd(4) &&</span>\n <span id=\"line31072\">31072.-\t\t    objects[obj->otyp].oc_material == MINERAL &&</span>\n <span id=\"line31073\">31073.-\t\t    objects[otmp->otyp].oc_material != MINERAL) {</span>\n <span id=\"line31074\">31074.+\t\t    get_material(obj) == MINERAL &&</span>\n <span id=\"line31075\">31075.+\t\t    get_material(otmp) != MINERAL) {</span>\n <span id=\"line31076\">31076. \t\totmp->otyp = ROCK;\t/* transmutation backfired */</span>\n <span id=\"line31077\">31077. \t\totmp->quan /= 2L;\t/* some material has been lost */</span>\n <span id=\"line31078\">31078. \t    }</span>\n <span id=\"line31079\">31079. \t    break;</span>\n <span id=\"line31080\">31080.+</span>\n <span id=\"line31081\">31081.+\tcase FOOD_CLASS:</span>\n <span id=\"line31082\">31082.+\t    if (otmp->otyp == CORPSE) {</span>\n <span id=\"line31083\">31083.+\t\totmp->age = monstermoves; /* if stone-to-freshed, make it fresh */</span>\n <span id=\"line31084\">31084.+\t\tstart_corpse_timeout(otmp);</span>\n <span id=\"line31085\">31085.+\t    }</span>\n <span id=\"line31086\">31086.+\t    break;</span>\n <span id=\"line31087\">31087.+</span>\n <span id=\"line31088\">31088. \t}</span>\n <span id=\"line31089\">31089. </span>\n <span id=\"line31090\">31090. \t/* update the weight */</span>\n <span id=\"line31091\">31091.@@ -1603,8 +1621,8 @@ struct obj *obj, *otmp;</span>\n <span id=\"line31092\">31092. \t\tbreak;</span>\n <span id=\"line31093\">31093. \tcase SPE_STONE_TO_FLESH:</span>\n <span id=\"line31094\">31094. \t\trefresh_x = obj->ox; refresh_y = obj->oy;</span>\n <span id=\"line31095\">31095.-\t\tif (objects[obj->otyp].oc_material != MINERAL &&</span>\n <span id=\"line31096\">31096.-\t\t\tobjects[obj->otyp].oc_material != GEMSTONE) {</span>\n <span id=\"line31097\">31097.+\t\tif (get_material(obj) != MINERAL &&</span>\n <span id=\"line31098\">31098.+\t\t\tget_material(obj) != GEMSTONE) {</span>\n <span id=\"line31099\">31099. \t\t    res = 0;</span>\n <span id=\"line31100\">31100. \t\t    break;</span>\n <span id=\"line31101\">31101. \t\t}</span>\n <span id=\"line31102\">31102.@@ -1734,6 +1752,9 @@ bhitpile(obj,fhito,tx,ty)</span>\n <span id=\"line31103\">31103. \t/* Fix for polymorph bug, Tim Wright */</span>\n <span id=\"line31104\">31104. \tnext_obj = otmp->nexthere;</span>\n <span id=\"line31105\">31105. \thitanything += (*fhito)(otmp, obj);</span>\n <span id=\"line31106\">31106.+#ifdef NOPOLYPILE</span>\n <span id=\"line31107\">31107.+\tif (obj->otyp == WAN_POLYMORPH || obj->otyp == SPE_POLYMORPH) break;</span>\n <span id=\"line31108\">31108.+#endif /*NOPOLYPILE*/</span>\n <span id=\"line31109\">31109.     }</span>\n <span id=\"line31110\">31110.     if(poly_zapped >= 0)</span>\n <span id=\"line31111\">31111. \tcreate_polymon(level.objects[tx][ty], poly_zapped);</span>\n <span id=\"line31112\">31112.@@ -1829,7 +1850,7 @@ dozap()</span>\n <span id=\"line31113\">31113. \tint\tdamage;</span>\n <span id=\"line31114\">31114. </span>\n <span id=\"line31115\">31115. \tif(check_capacity((char *)0)) return(0);</span>\n <span id=\"line31116\">31116.-\tobj = getobj(zap_syms, \"zap\");</span>\n <span id=\"line31117\">31117.+\tobj = getobj(zap_syms, \"zap\", 0);</span>\n <span id=\"line31118\">31118. \tif(!obj) return(0);</span>\n <span id=\"line31119\">31119. </span>\n <span id=\"line31120\">31120. \tcheck_unpaid(obj);</span>\n <span id=\"line31121\">31121.@@ -1883,29 +1904,31 @@ boolean ordinary;</span>\n <span id=\"line31122\">31122. \t\tcase WAN_STRIKING:</span>\n <span id=\"line31123\">31123. \t\t    makeknown(WAN_STRIKING);</span>\n <span id=\"line31124\">31124. \t\tcase SPE_FORCE_BOLT:</span>\n <span id=\"line31125\">31125.-\t\t    if(Antimagic) {</span>\n <span id=\"line31126\">31126.-\t\t\tshieldeff(u.ux, u.uy);</span>\n <span id=\"line31127\">31127.-\t\t\tpline(\"Boing!\");</span>\n <span id=\"line31128\">31128.-\t\t    } else {</span>\n <span id=\"line31129\">31129.+/* Striking/force bolt is now physical attack */</span>\n <span id=\"line31130\">31130.+//\t\t    if(Antimagic) {</span>\n <span id=\"line31131\">31131.+//\t\t\tshieldeff(u.ux, u.uy);</span>\n <span id=\"line31132\">31132.+//\t\t\tpline(\"Boing!\");</span>\n <span id=\"line31133\">31133.+//\t\t    } else {</span>\n <span id=\"line31134\">31134. \t\t\tif (ordinary) {</span>\n <span id=\"line31135\">31135. \t\t\t    You(\"bash yourself!\");</span>\n <span id=\"line31136\">31136. \t\t\t    damage = d(2,12);</span>\n <span id=\"line31137\">31137. \t\t\t} else</span>\n <span id=\"line31138\">31138. \t\t\t    damage = d(1 + obj->spe,6);</span>\n <span id=\"line31139\">31139. \t\t\texercise(A_STR, FALSE);</span>\n <span id=\"line31140\">31140.-\t\t    }</span>\n <span id=\"line31141\">31141.+//\t\t    }</span>\n <span id=\"line31142\">31142. \t\t    break;</span>\n <span id=\"line31143\">31143. </span>\n <span id=\"line31144\">31144. \t\tcase WAN_LIGHTNING:</span>\n <span id=\"line31145\">31145. \t\t    makeknown(WAN_LIGHTNING);</span>\n <span id=\"line31146\">31146.-\t\t    if (!Shock_resistance) {</span>\n <span id=\"line31147\">31147.-\t\t\tYou(\"shock yourself!\");</span>\n <span id=\"line31148\">31148.-\t\t\tdamage = d(12,6);</span>\n <span id=\"line31149\">31149.-\t\t\texercise(A_CON, FALSE);</span>\n <span id=\"line31150\">31150.-\t\t    } else {</span>\n <span id=\"line31151\">31151.+\t\t    if (Shock_resistance && is_full_resist(SHOCK_RES)) {</span>\n <span id=\"line31152\">31152. \t\t\tshieldeff(u.ux, u.uy);</span>\n <span id=\"line31153\">31153. \t\t\tYou(\"zap yourself, but seem unharmed.\");</span>\n <span id=\"line31154\">31154. \t\t\tugolemeffects(AD_ELEC, d(12,6));</span>\n <span id=\"line31155\">31155.+\t\t\tbreak;</span>\n <span id=\"line31156\">31156.+\t\t    } else {</span>\n <span id=\"line31157\">31157.+\t\t\tYou(\"shock yourself!\");</span>\n <span id=\"line31158\">31158.+\t\t\tdamage = d((Shock_resistance) ? 3: 12, 6);</span>\n <span id=\"line31159\">31159.+\t\t\texercise(A_CON, FALSE);</span>\n <span id=\"line31160\">31160. \t\t    }</span>\n <span id=\"line31161\">31161. \t\t    destroy_item(WAND_CLASS, AD_ELEC);</span>\n <span id=\"line31162\">31162. \t\t    destroy_item(RING_CLASS, AD_ELEC);</span>\n <span id=\"line31163\">31163.@@ -1923,32 +1946,33 @@ boolean ordinary;</span>\n <span id=\"line31164\">31164. \t\tcase WAN_FIRE:</span>\n <span id=\"line31165\">31165. \t\t    makeknown(WAN_FIRE);</span>\n <span id=\"line31166\">31166. \t\tcase FIRE_HORN:</span>\n <span id=\"line31167\">31167.-\t\t    if (Fire_resistance) {</span>\n <span id=\"line31168\">31168.+\t\t    if (Fire_resistance && is_full_resist(FIRE_RES)) {</span>\n <span id=\"line31169\">31169. \t\t\tshieldeff(u.ux, u.uy);</span>\n <span id=\"line31170\">31170. \t\t\tYou_feel(\"rather warm.\");</span>\n <span id=\"line31171\">31171. \t\t\tugolemeffects(AD_FIRE, d(12,6));</span>\n <span id=\"line31172\">31172. \t\t    } else {</span>\n <span id=\"line31173\">31173. \t\t\tpline(\"You've set yourself afire!\");</span>\n <span id=\"line31174\">31174.-\t\t\tdamage = d(12,6);</span>\n <span id=\"line31175\">31175.+\t\t\tdamage = d((Fire_resistance) ? 3 : 12, 6);</span>\n <span id=\"line31176\">31176. \t\t    }</span>\n <span id=\"line31177\">31177. \t\t    burn_away_slime();</span>\n <span id=\"line31178\">31178. \t\t    (void) burnarmor(&youmonst);</span>\n <span id=\"line31179\">31179. \t\t    destroy_item(SCROLL_CLASS, AD_FIRE);</span>\n <span id=\"line31180\">31180. \t\t    destroy_item(POTION_CLASS, AD_FIRE);</span>\n <span id=\"line31181\">31181. \t\t    destroy_item(SPBOOK_CLASS, AD_FIRE);</span>\n <span id=\"line31182\">31182.+\t\t    destroy_item(TOOL_CLASS, AD_FIRE);</span>\n <span id=\"line31183\">31183. \t\t    break;</span>\n <span id=\"line31184\">31184. </span>\n <span id=\"line31185\">31185. \t\tcase WAN_COLD:</span>\n <span id=\"line31186\">31186. \t\t    makeknown(WAN_COLD);</span>\n <span id=\"line31187\">31187. \t\tcase SPE_CONE_OF_COLD:</span>\n <span id=\"line31188\">31188. \t\tcase FROST_HORN:</span>\n <span id=\"line31189\">31189.-\t\t    if (Cold_resistance) {</span>\n <span id=\"line31190\">31190.+\t\t    if (Cold_resistance && is_full_resist(COLD_RES)) {</span>\n <span id=\"line31191\">31191. \t\t\tshieldeff(u.ux, u.uy);</span>\n <span id=\"line31192\">31192. \t\t\tYou_feel(\"a little chill.\");</span>\n <span id=\"line31193\">31193. \t\t\tugolemeffects(AD_COLD, d(12,6));</span>\n <span id=\"line31194\">31194. \t\t    } else {</span>\n <span id=\"line31195\">31195. \t\t\tYou(\"imitate a popsicle!\");</span>\n <span id=\"line31196\">31196.-\t\t\tdamage = d(12,6);</span>\n <span id=\"line31197\">31197.+\t\t\tdamage = d((Cold_resistance) ? 3 : 12, 6);</span>\n <span id=\"line31198\">31198. \t\t    }</span>\n <span id=\"line31199\">31199. \t\t    destroy_item(POTION_CLASS, AD_COLD);</span>\n <span id=\"line31200\">31200. \t\t    break;</span>\n <span id=\"line31201\">31201.@@ -1959,6 +1983,7 @@ boolean ordinary;</span>\n <span id=\"line31202\">31202. \t\t    if(Antimagic) {</span>\n <span id=\"line31203\">31203. \t\t\tshieldeff(u.ux, u.uy);</span>\n <span id=\"line31204\">31204. \t\t\tpline_The(\"missiles bounce!\");</span>\n <span id=\"line31205\">31205.+\t\t\tdamage_resistant_obj(ANTIMAGIC, 1);</span>\n <span id=\"line31206\">31206. \t\t    } else {</span>\n <span id=\"line31207\">31207. \t\t\tdamage = d(4,6);</span>\n <span id=\"line31208\">31208. \t\t\tpline(\"Idiot!  You've shot yourself!\");</span>\n <span id=\"line31209\">31209.@@ -1997,11 +2022,12 @@ boolean ordinary;</span>\n <span id=\"line31210\">31210. \t\t        You_feel(\"rather itchy under your %s.\", xname(uarmc));</span>\n <span id=\"line31211\">31211. \t\t        break;</span>\n <span id=\"line31212\">31212. \t\t    }</span>\n <span id=\"line31213\">31213.-\t\t    if (ordinary || !rn2(10)) {\t/* permanent */</span>\n <span id=\"line31214\">31214.-\t\t\tHInvis |= FROMOUTSIDE;</span>\n <span id=\"line31215\">31215.-\t\t    } else {\t\t\t/* temporary */</span>\n <span id=\"line31216\">31216.+/* never get permanent invisibity by wand - youkan */</span>\n <span id=\"line31217\">31217.+//\t\t    if (ordinary || !rn2(10)) {\t/* permanent */</span>\n <span id=\"line31218\">31218.+//\t\t\tHInvis |= FROMOUTSIDE;</span>\n <span id=\"line31219\">31219.+//\t\t    } else {\t\t\t/* temporary */</span>\n <span id=\"line31220\">31220. \t\t    \tincr_itimeout(&HInvis, d(obj->spe, 250));</span>\n <span id=\"line31221\">31221.-\t\t    }</span>\n <span id=\"line31222\">31222.+//\t\t    }</span>\n <span id=\"line31223\">31223. \t\t    if (msg) {</span>\n <span id=\"line31224\">31224. \t\t\tmakeknown(WAN_MAKE_INVISIBLE);</span>\n <span id=\"line31225\">31225. \t\t\tnewsym(u.ux, u.uy);</span>\n <span id=\"line31226\">31226.@@ -2011,15 +2037,25 @@ boolean ordinary;</span>\n <span id=\"line31227\">31227. \t\t}</span>\n <span id=\"line31228\">31228. </span>\n <span id=\"line31229\">31229. \t\tcase WAN_SPEED_MONSTER:</span>\n <span id=\"line31230\">31230.-\t\t    if (!(HFast & INTRINSIC)) {</span>\n <span id=\"line31231\">31231.-\t\t\tif (!Fast)</span>\n <span id=\"line31232\">31232.-\t\t\t    You(\"speed up.\");</span>\n <span id=\"line31233\">31233.-\t\t\telse</span>\n <span id=\"line31234\">31234.-\t\t\t    Your(\"quickness feels more natural.\");</span>\n <span id=\"line31235\">31235.-\t\t\tmakeknown(WAN_SPEED_MONSTER);</span>\n <span id=\"line31236\">31236.-\t\t\texercise(A_DEX, TRUE);</span>\n <span id=\"line31237\">31237.+\t\t    if (Very_fast) {</span>\n <span id=\"line31238\">31238.+\t\t\tYour(\"%s get new energy.\",</span>\n <span id=\"line31239\">31239.+\t\t\t\tmakeplural(body_part(LEG)));</span>\n <span id=\"line31240\">31240.+\t\t\tbreak;</span>\n <span id=\"line31241\">31241. \t\t    }</span>\n <span id=\"line31242\">31242.-\t\t    HFast |= FROMOUTSIDE;</span>\n <span id=\"line31243\">31243.+\t\t    You(\"are suddenly moving %sfaster.\",</span>\n <span id=\"line31244\">31244.+\t\t\t\t(Fast || BFast) ? \"\" : \"much \");</span>\n <span id=\"line31245\">31245.+\t\t    u.uspdbon2 = 2;</span>\n <span id=\"line31246\">31246.+\t\t    incr_itimeout(&HFast, rn1(10, 10));</span>\n <span id=\"line31247\">31247.+/* wand of speed monster no longer convey intrinsic speed */</span>\n <span id=\"line31248\">31248.+//\t\t    if (!(HFast & INTRINSIC)) {</span>\n <span id=\"line31249\">31249.+//\t\t\tif (!Fast)</span>\n <span id=\"line31250\">31250.+//\t\t\t    You(\"speed up.\");</span>\n <span id=\"line31251\">31251.+//\t\t\telse</span>\n <span id=\"line31252\">31252.+//\t\t\t    Your(\"quickness feels more natural.\");</span>\n <span id=\"line31253\">31253.+//\t\t\tmakeknown(WAN_SPEED_MONSTER);</span>\n <span id=\"line31254\">31254.+//\t\t\texercise(A_DEX, TRUE);</span>\n <span id=\"line31255\">31255.+//\t\t    }</span>\n <span id=\"line31256\">31256.+//\t\t    HFast |= FROMOUTSIDE;</span>\n <span id=\"line31257\">31257. \t\t    break;</span>\n <span id=\"line31258\">31258. </span>\n <span id=\"line31259\">31259. \t\tcase WAN_SLEEP:</span>\n <span id=\"line31260\">31260.@@ -2049,7 +2085,7 @@ boolean ordinary;</span>\n <span id=\"line31261\">31261. </span>\n <span id=\"line31262\">31262. \t\tcase WAN_DEATH:</span>\n <span id=\"line31263\">31263. \t\tcase SPE_FINGER_OF_DEATH:</span>\n <span id=\"line31264\">31264.-\t\t    if (nonliving(youmonst.data) || is_demon(youmonst.data)) {</span>\n <span id=\"line31265\">31265.+\t\t    if (vs_death_factor(youmonst.data)) {</span>\n <span id=\"line31266\">31266. \t\t\tpline((obj->otyp == WAN_DEATH) ?</span>\n <span id=\"line31267\">31267. \t\t\t  \"The wand shoots an apparently harmless beam at you.\"</span>\n <span id=\"line31268\">31268. \t\t\t  : \"You seem no deader than before.\");</span>\n <span id=\"line31269\">31269.@@ -2537,13 +2573,11 @@ int skill;</span>\n <span id=\"line31270\">31270.     int hit_bon = 0;</span>\n <span id=\"line31271\">31271.     int dex = ACURR(A_DEX);</span>\n <span id=\"line31272\">31272. </span>\n <span id=\"line31273\">31273.-    switch (P_SKILL(spell_skilltype(skill))) {</span>\n <span id=\"line31274\">31274.-\tcase P_ISRESTRICTED:</span>\n <span id=\"line31275\">31275.-\tcase P_UNSKILLED:   hit_bon = -4; break;</span>\n <span id=\"line31276\">31276.-\tcase P_BASIC:       hit_bon =  0; break;</span>\n <span id=\"line31277\">31277.-\tcase P_SKILLED:     hit_bon =  2; break;</span>\n <span id=\"line31278\">31278.-\tcase P_EXPERT:      hit_bon =  3; break;</span>\n <span id=\"line31279\">31279.-    }</span>\n <span id=\"line31280\">31280.+    schar hbon[11] = {</span>\n <span id=\"line31281\">31281.+\t   /*  0% 10% 20% 30% 40% 50% 60% 70% 80% 90% 100% */</span>\n <span id=\"line31282\">31282.+\t\t-4, -2, -2, -1, -1,  0,  0, +1, +2, +2, +3</span>\n <span id=\"line31283\">31283.+    };</span>\n <span id=\"line31284\">31284.+    hit_bon = hbon[P_SKILL(spell_skilltype(skill))/10];</span>\n <span id=\"line31285\">31285. </span>\n <span id=\"line31286\">31286.     if (dex < 4)</span>\n <span id=\"line31287\">31287. \thit_bon -= 3;</span>\n <span id=\"line31288\">31288.@@ -2622,23 +2656,41 @@ int FDECL((*fhitm), (MONST_P, OBJ_P)),\t/</span>\n <span id=\"line31289\">31289.     FDECL((*fhito), (OBJ_P, OBJ_P));</span>\n <span id=\"line31290\">31290. struct obj *obj;\t\t\t/* object tossed/used */</span>\n <span id=\"line31291\">31291. {</span>\n <span id=\"line31292\">31292.-\tstruct monst *mtmp;</span>\n <span id=\"line31293\">31293.-\tuchar typ;</span>\n <span id=\"line31294\">31294.-\tboolean shopdoor = FALSE, point_blank = TRUE;</span>\n <span id=\"line31295\">31295.+\tregister boolean shopdoor = FALSE;</span>\n <span id=\"line31296\">31296.+\tint sx, sy;</span>\n <span id=\"line31297\">31297. </span>\n <span id=\"line31298\">31298. \tif (weapon == KICKED_WEAPON) {</span>\n <span id=\"line31299\">31299. \t    /* object starts one square in front of player */</span>\n <span id=\"line31300\">31300.-\t    bhitpos.x = u.ux + ddx;</span>\n <span id=\"line31301\">31301.-\t    bhitpos.y = u.uy + ddy;</span>\n <span id=\"line31302\">31302.+\t    sx = u.ux + ddx;</span>\n <span id=\"line31303\">31303.+\t    sy = u.uy + ddy;</span>\n <span id=\"line31304\">31304. \t    range--;</span>\n <span id=\"line31305\">31305. \t} else {</span>\n <span id=\"line31306\">31306.-\t    bhitpos.x = u.ux;</span>\n <span id=\"line31307\">31307.-\t    bhitpos.y = u.uy;</span>\n <span id=\"line31308\">31308.+\t    sx = u.ux;</span>\n <span id=\"line31309\">31309.+\t    sy = u.uy;</span>\n <span id=\"line31310\">31310. \t}</span>\n <span id=\"line31311\">31311.+\treturn bhitcore(sx,sy, ddx, ddy, range, weapon, fhitm, fhito, obj, TRUE);</span>\n <span id=\"line31312\">31312.+}</span>\n <span id=\"line31313\">31313. </span>\n <span id=\"line31314\">31314.-\tif (weapon == FLASHED_LIGHT) {</span>\n <span id=\"line31315\">31315.+struct monst *</span>\n <span id=\"line31316\">31316.+bhitcore(startx,starty, ddx,ddy, range, weapon, fhitm,fhito, obj, youshoot)</span>\n <span id=\"line31317\">31317.+int startx, starty;\t\t\t/* starting position */</span>\n <span id=\"line31318\">31318.+int ddx,ddy,range;\t\t\t/* direction and range */</span>\n <span id=\"line31319\">31319.+int weapon;\t\t\t\t/* see values in hack.h */</span>\n <span id=\"line31320\">31320.+int FDECL((*fhitm), (MONST_P, OBJ_P)),\t/* fns called when mon/obj hit (return value: ) */</span>\n <span id=\"line31321\">31321.+    FDECL((*fhito), (OBJ_P, OBJ_P));\t/* \treturn value -- 0:keep going 1:stop */</span>\n <span id=\"line31322\">31322.+struct obj *obj;\t\t\t/* object tossed/used */</span>\n <span id=\"line31323\">31323.+boolean youshoot;\t\t\t/* TRUE:you shot it */</span>\n <span id=\"line31324\">31324.+{</span>\n <span id=\"line31325\">31325.+\tstruct monst *mtmp;</span>\n <span id=\"line31326\">31326.+\tuchar typ;</span>\n <span id=\"line31327\">31327.+\tboolean shopdoor = FALSE, point_blank = TRUE;</span>\n <span id=\"line31328\">31328.+</span>\n <span id=\"line31329\">31329.+\tbhitpos.x = startx;</span>\n <span id=\"line31330\">31330.+\tbhitpos.y = starty;</span>\n <span id=\"line31331\">31331.+</span>\n <span id=\"line31332\">31332.+\tif ((weapon & BHIT_GLYPHMASK) == BHIT_GLYPH_FLASH) {</span>\n <span id=\"line31333\">31333. \t    tmp_at(DISP_BEAM, cmap_to_glyph(S_flashbeam));</span>\n <span id=\"line31334\">31334.-\t} else if (weapon != ZAPPED_WAND && weapon != INVIS_BEAM)</span>\n <span id=\"line31335\">31335.+\t} else if ((weapon & BHIT_GLYPHMASK) == BHIT_GLYPH_OBJ)</span>\n <span id=\"line31336\">31336. \t    tmp_at(DISP_FLASH, obj_to_glyph(obj));</span>\n <span id=\"line31337\">31337. </span>\n <span id=\"line31338\">31338. \twhile(range-- > 0) {</span>\n <span id=\"line31339\">31339.@@ -2654,7 +2706,7 @@ struct obj *obj;\t\t\t/* object tossed/used</span>\n <span id=\"line31340\">31340. \t\tbreak;</span>\n <span id=\"line31341\">31341. \t    }</span>\n <span id=\"line31342\">31342. </span>\n <span id=\"line31343\">31343.-\t    if(is_pick(obj) && inside_shop(x, y) &&</span>\n <span id=\"line31344\">31344.+\t    if(obj && is_pick(obj) && inside_shop(x, y) &&</span>\n <span id=\"line31345\">31345. \t\t\t\t\t   (mtmp = shkcatch(obj, x, y))) {</span>\n <span id=\"line31346\">31346. \t\ttmp_at(DISP_END, 0);</span>\n <span id=\"line31347\">31347. \t\treturn(mtmp);</span>\n <span id=\"line31348\">31348.@@ -2663,8 +2715,8 @@ struct obj *obj;\t\t\t/* object tossed/used</span>\n <span id=\"line31349\">31349. \t    typ = levl[bhitpos.x][bhitpos.y].typ;</span>\n <span id=\"line31350\">31350. </span>\n <span id=\"line31351\">31351. \t    /* iron bars will block anything big enough */</span>\n <span id=\"line31352\">31352.-\t    if ((weapon == THROWN_WEAPON || weapon == KICKED_WEAPON) &&</span>\n <span id=\"line31353\">31353.-\t\t    typ == IRONBARS &&</span>\n <span id=\"line31354\">31354.+\t    if ((weapon & BHIT_OBJTHROWN) /* physical flying or sliding object */</span>\n <span id=\"line31355\">31355.+\t    \t\t && typ == IRONBARS &&</span>\n <span id=\"line31356\">31356. \t\t    hits_bars(&obj, x - ddx, y - ddy,</span>\n <span id=\"line31357\">31357. \t\t\t      point_blank ? 0 : !rn2(5), 1)) {</span>\n <span id=\"line31358\">31358. \t\t/* caveat: obj might now be null... */</span>\n <span id=\"line31359\">31359.@@ -2673,7 +2725,8 @@ struct obj *obj;\t\t\t/* object tossed/used</span>\n <span id=\"line31360\">31360. \t\tbreak;</span>\n <span id=\"line31361\">31361. \t    }</span>\n <span id=\"line31362\">31362. </span>\n <span id=\"line31363\">31363.-\t    if (weapon == ZAPPED_WAND && find_drawbridge(&x,&y))</span>\n <span id=\"line31364\">31364.+\t    /* drawbridge handling */</span>\n <span id=\"line31365\">31365.+\t    if ((weapon & BHIT_ZAPPEDWAND) && find_drawbridge(&x,&y))</span>\n <span id=\"line31366\">31366. \t\tswitch (obj->otyp) {</span>\n <span id=\"line31367\">31367. \t\t    case WAN_OPENING:</span>\n <span id=\"line31368\">31368. \t\t    case SPE_KNOCK:</span>\n <span id=\"line31369\">31369.@@ -2696,45 +2749,39 @@ struct obj *obj;\t\t\t/* object tossed/used</span>\n <span id=\"line31370\">31370. \t\t\t    destroy_drawbridge(x,y);</span>\n <span id=\"line31371\">31371. \t\t\tmakeknown(obj->otyp);</span>\n <span id=\"line31372\">31372. \t\t\tbreak;</span>\n <span id=\"line31373\">31373.+\t\t    default:</span>\n <span id=\"line31374\">31374.+\t\t\tbreak;</span>\n <span id=\"line31375\">31375. \t\t}</span>\n <span id=\"line31376\">31376. </span>\n <span id=\"line31377\">31377.-\t    if ((mtmp = m_at(bhitpos.x, bhitpos.y)) != 0) {</span>\n <span id=\"line31378\">31378.+\t    if (!youshoot && bhitpos.x==u.ux && bhitpos.y==u.uy)</span>\n <span id=\"line31379\">31379.+\t\t mtmp = &youmonst;</span>\n <span id=\"line31380\">31380.+\t    else mtmp = m_at(bhitpos.x, bhitpos.y);</span>\n <span id=\"line31381\">31381.+\t    if (mtmp) {</span>\n <span id=\"line31382\">31382.+#ifdef MONSTEED</span>\n <span id=\"line31383\">31383.+\t\tmtmp = mrider_or_msteed(mtmp, !rn2(3));</span>\n <span id=\"line31384\">31384.+#endif</span>\n <span id=\"line31385\">31385.+\t\t/* hit a monster */</span>\n <span id=\"line31386\">31386. \t\tnotonhead = (bhitpos.x != mtmp->mx ||</span>\n <span id=\"line31387\">31387. \t\t\t     bhitpos.y != mtmp->my);</span>\n <span id=\"line31388\">31388.-\t\tif (weapon != FLASHED_LIGHT) {</span>\n <span id=\"line31389\">31389.-\t\t\tif(weapon != ZAPPED_WAND) {</span>\n <span id=\"line31390\">31390.-\t\t\t    if(weapon != INVIS_BEAM) tmp_at(DISP_END, 0);</span>\n <span id=\"line31391\">31391.-\t\t\t    if (cansee(bhitpos.x,bhitpos.y) && !canspotmon(mtmp)) {</span>\n <span id=\"line31392\">31392.-\t\t\t\tif (weapon != INVIS_BEAM) {</span>\n <span id=\"line31393\">31393.-\t\t\t\t    map_invisible(bhitpos.x, bhitpos.y);</span>\n <span id=\"line31394\">31394.-\t\t\t\t    return(mtmp);</span>\n <span id=\"line31395\">31395.-\t\t\t\t}</span>\n <span id=\"line31396\">31396.-\t\t\t    } else</span>\n <span id=\"line31397\">31397.-\t\t\t\treturn(mtmp);</span>\n <span id=\"line31398\">31398.-\t\t\t}</span>\n <span id=\"line31399\">31399.-\t\t\tif (weapon != INVIS_BEAM) {</span>\n <span id=\"line31400\">31400.-\t\t\t    (*fhitm)(mtmp, obj);</span>\n <span id=\"line31401\">31401.-\t\t\t    range -= 3;</span>\n <span id=\"line31402\">31402.-\t\t\t}</span>\n <span id=\"line31403\">31403.-\t\t} else {</span>\n <span id=\"line31404\">31404.-\t\t    /* FLASHED_LIGHT hitting invisible monster</span>\n <span id=\"line31405\">31405.-\t\t       should pass through instead of stop so</span>\n <span id=\"line31406\">31406.-\t\t       we call flash_hits_mon() directly rather</span>\n <span id=\"line31407\">31407.-\t\t       than returning mtmp back to caller. That</span>\n <span id=\"line31408\">31408.-\t\t       allows the flash to keep on going. Note</span>\n <span id=\"line31409\">31409.-\t\t       that we use mtmp->minvis not canspotmon()</span>\n <span id=\"line31410\">31410.-\t\t       because it makes no difference whether</span>\n <span id=\"line31411\">31411.-\t\t       the hero can see the monster or not.*/</span>\n <span id=\"line31412\">31412.-\t\t    if (mtmp->minvis) {</span>\n <span id=\"line31413\">31413.-\t\t\tobj->ox = u.ux,  obj->oy = u.uy;</span>\n <span id=\"line31414\">31414.-\t\t\t(void) flash_hits_mon(mtmp, obj);</span>\n <span id=\"line31415\">31415.+\t\tif (!((weapon & BHIT_PASSINVIS) && mtmp->minvis)) {</span>\n <span id=\"line31416\">31416.+\t\t    if (!fhitm) {</span>\n <span id=\"line31417\">31417.+\t\t\t/* no hitmon callback -- return the first monster hit */</span>\n <span id=\"line31418\">31418.+\t\t\tif ((weapon & BHIT_SENSEINVIS) &&</span>\n <span id=\"line31419\">31419.+\t\t\t    cansee(bhitpos.x,bhitpos.y) && !canspotmons(mtmp))</span>\n <span id=\"line31420\">31420.+\t\t\t\tmap_invisible(bhitpos.x, bhitpos.y);</span>\n <span id=\"line31421\">31421.+\t\t\tif((weapon & BHIT_GLYPHMASK) != BHIT_GLYPH_NONE)</span>\n <span id=\"line31422\">31422.+\t\t\t\ttmp_at(DISP_END, 0);</span>\n <span id=\"line31423\">31423.+\t\t\treturn(mtmp);</span>\n <span id=\"line31424\">31424. \t\t    } else {</span>\n <span id=\"line31425\">31425.-\t\t\ttmp_at(DISP_END, 0);</span>\n <span id=\"line31426\">31426.-\t\t    \treturn(mtmp); \t/* caller will call flash_hits_mon */</span>\n <span id=\"line31427\">31427.+\t\t\t/* hitmon callback -- call fhitm for every monster to hit */</span>\n <span id=\"line31428\">31428.+\t\t\tif ((*fhitm)(mtmp, obj)) break; /* stopped: exit the loop */</span>\n <span id=\"line31429\">31429.+\t\t\trange -= 3;\t\t\t/* keep going */</span>\n <span id=\"line31430\">31430. \t\t    }</span>\n <span id=\"line31431\">31431. \t\t}</span>\n <span id=\"line31432\">31432.+</span>\n <span id=\"line31433\">31433. \t    } else {</span>\n <span id=\"line31434\">31434.-\t\tif (weapon == ZAPPED_WAND && obj->otyp == WAN_PROBING &&</span>\n <span id=\"line31435\">31435.+\t\t/* did not hit a monster */</span>\n <span id=\"line31436\">31436.+\t\tif ((weapon & BHIT_ZAPPEDWAND) && obj->otyp == WAN_PROBING &&</span>\n <span id=\"line31437\">31437. \t\t   glyph_is_invisible(levl[bhitpos.x][bhitpos.y].glyph)) {</span>\n <span id=\"line31438\">31438. \t\t    unmap_object(bhitpos.x, bhitpos.y);</span>\n <span id=\"line31439\">31439. \t\t    newsym(x, y);</span>\n <span id=\"line31440\">31440.@@ -2743,7 +2790,13 @@ struct obj *obj;\t\t\t/* object tossed/used</span>\n <span id=\"line31441\">31441. \t    if(fhito) {</span>\n <span id=\"line31442\">31442. \t\tif(bhitpile(obj,fhito,bhitpos.x,bhitpos.y))</span>\n <span id=\"line31443\">31443. \t\t    range--;</span>\n <span id=\"line31444\">31444.+#ifdef NOPOLYPILE</span>\n <span id=\"line31445\">31445.+\t\tif ((weapon & BHIT_ZAPPEDWAND) &&</span>\n <span id=\"line31446\">31446.+\t\t    (obj->otyp == WAN_POLYMORPH || obj->otyp == SPE_POLYMORPH))</span>\n <span id=\"line31447\">31447.+\t\t    range = 0;</span>\n <span id=\"line31448\">31448.+#endif /*NOPOLYPILE*/</span>\n <span id=\"line31449\">31449. \t    } else {</span>\n <span id=\"line31450\">31450.+\t\t/* hero tries to kick dropped gold out of the shop */</span>\n <span id=\"line31451\">31451. \t\tif(weapon == KICKED_WEAPON &&</span>\n <span id=\"line31452\">31452. \t\t      ((obj->oclass == COIN_CLASS &&</span>\n <span id=\"line31453\">31453. \t\t\t OBJ_AT(bhitpos.x, bhitpos.y)) ||</span>\n <span id=\"line31454\">31454.@@ -2753,7 +2806,9 @@ struct obj *obj;\t\t\t/* object tossed/used</span>\n <span id=\"line31455\">31455. \t\t\treturn (struct monst *)0;</span>\n <span id=\"line31456\">31456. \t\t}</span>\n <span id=\"line31457\">31457. \t    }</span>\n <span id=\"line31458\">31458.-\t    if(weapon == ZAPPED_WAND && (IS_DOOR(typ) || typ == SDOOR)) {</span>\n <span id=\"line31459\">31459.+</span>\n <span id=\"line31460\">31460.+\t    /* door handling(open/close/crash etc.) */</span>\n <span id=\"line31461\">31461.+\t    if((weapon & BHIT_ZAPPEDWAND) && (IS_DOOR(typ) || typ == SDOOR)) {</span>\n <span id=\"line31462\">31462. \t\tswitch (obj->otyp) {</span>\n <span id=\"line31463\">31463. \t\tcase WAN_OPENING:</span>\n <span id=\"line31464\">31464. \t\tcase WAN_LOCKING:</span>\n <span id=\"line31465\">31465.@@ -2768,39 +2823,46 @@ struct obj *obj;\t\t\t/* object tossed/used</span>\n <span id=\"line31466\">31466. \t\t\tif (levl[bhitpos.x][bhitpos.y].doormask == D_BROKEN</span>\n <span id=\"line31467\">31467. \t\t\t    && *in_rooms(bhitpos.x, bhitpos.y, SHOPBASE)) {</span>\n <span id=\"line31468\">31468. \t\t\t    shopdoor = TRUE;</span>\n <span id=\"line31469\">31469.-\t\t\t    add_damage(bhitpos.x, bhitpos.y, 400L);</span>\n <span id=\"line31470\">31470.+\t\t\t    add_damage(bhitpos.x, bhitpos.y, youshoot ? 400L : 0L);</span>\n <span id=\"line31471\">31471. \t\t\t}</span>\n <span id=\"line31472\">31472. \t\t    }</span>\n <span id=\"line31473\">31473. \t\t    break;</span>\n <span id=\"line31474\">31474.+\t\tdefault:</span>\n <span id=\"line31475\">31475.+\t\t    break;</span>\n <span id=\"line31476\">31476. \t\t}</span>\n <span id=\"line31477\">31477. \t    }</span>\n <span id=\"line31478\">31478.+</span>\n <span id=\"line31479\">31479.+\t    /* blocked by door */</span>\n <span id=\"line31480\">31480. \t    if(!ZAP_POS(typ) || closed_door(bhitpos.x, bhitpos.y)) {</span>\n <span id=\"line31481\">31481. \t\tbhitpos.x -= ddx;</span>\n <span id=\"line31482\">31482. \t\tbhitpos.y -= ddy;</span>\n <span id=\"line31483\">31483. \t\tbreak;</span>\n <span id=\"line31484\">31484. \t    }</span>\n <span id=\"line31485\">31485.-\t    if(weapon != ZAPPED_WAND && weapon != INVIS_BEAM) {</span>\n <span id=\"line31486\">31486.-\t\t/* 'I' present but no monster: erase */</span>\n <span id=\"line31487\">31487.-\t\t/* do this before the tmp_at() */</span>\n <span id=\"line31488\">31488.-\t\tif (glyph_is_invisible(levl[bhitpos.x][bhitpos.y].glyph)</span>\n <span id=\"line31489\">31489.-\t\t\t&& cansee(x, y)) {</span>\n <span id=\"line31490\">31490.-\t\t    unmap_object(bhitpos.x, bhitpos.y);</span>\n <span id=\"line31491\">31491.-\t\t    newsym(x, y);</span>\n <span id=\"line31492\">31492.-\t\t}</span>\n <span id=\"line31493\">31493.+\t    /* 'I' present but no monster: erase */</span>\n <span id=\"line31494\">31494.+\t    /* do this before the tmp_at() */</span>\n <span id=\"line31495\">31495.+\t    if (!(weapon & BHIT_PASSINVIS) &&</span>\n <span id=\"line31496\">31496.+\t\tglyph_is_invisible(levl[bhitpos.x][bhitpos.y].glyph) &&</span>\n <span id=\"line31497\">31497.+\t\tcansee(x, y)) {</span>\n <span id=\"line31498\">31498.+\t\tunmap_object(bhitpos.x, bhitpos.y);</span>\n <span id=\"line31499\">31499.+\t\tnewsym(x, y);</span>\n <span id=\"line31500\">31500.+\t    }</span>\n <span id=\"line31501\">31501.+\t    /* show the symbol flying */</span>\n <span id=\"line31502\">31502.+\t    if((weapon & BHIT_GLYPHMASK) != BHIT_GLYPH_NONE) {</span>\n <span id=\"line31503\">31503. \t\ttmp_at(bhitpos.x, bhitpos.y);</span>\n <span id=\"line31504\">31504. \t\tdelay_output();</span>\n <span id=\"line31505\">31505.-\t\t/* kicked objects fall in pools */</span>\n <span id=\"line31506\">31506.-\t\tif((weapon == KICKED_WEAPON) &&</span>\n <span id=\"line31507\">31507.-\t\t   (is_pool(bhitpos.x, bhitpos.y) ||</span>\n <span id=\"line31508\">31508.-\t\t   is_lava(bhitpos.x, bhitpos.y)))</span>\n <span id=\"line31509\">31509.+\t    }</span>\n <span id=\"line31510\">31510.+\t    /* kicked objects fall in pools */</span>\n <span id=\"line31511\">31511.+\t    if((weapon & BHIT_FALLTOPOOL) &&</span>\n <span id=\"line31512\">31512.+\t       (is_pool(bhitpos.x, bhitpos.y) ||</span>\n <span id=\"line31513\">31513.+\t\tis_lava(bhitpos.x, bhitpos.y)))</span>\n <span id=\"line31514\">31514. \t\t    break;</span>\n <span id=\"line31515\">31515. #ifdef SINKS</span>\n <span id=\"line31516\">31516.-\t\tif(IS_SINK(typ) && weapon != FLASHED_LIGHT)</span>\n <span id=\"line31517\">31517.-\t\t    break;\t/* physical objects fall onto sink */</span>\n <span id=\"line31518\">31518.+\t    /* physical objects fall onto sink */</span>\n <span id=\"line31519\">31519.+\t    if(IS_SINK(typ) && (weapon & BHIT_STOPATSINK))</span>\n <span id=\"line31520\">31520.+\t\tbreak;</span>\n <span id=\"line31521\">31521. #endif</span>\n <span id=\"line31522\">31522.-\t    }</span>\n <span id=\"line31523\">31523. \t    /* limit range of ball so hero won't make an invalid move */</span>\n <span id=\"line31524\">31524.-\t    if (weapon == THROWN_WEAPON && range > 0 &&</span>\n <span id=\"line31525\">31525.+\t    if ((weapon & BHIT_OBJTHROWN) && range > 0 &&</span>\n <span id=\"line31526\">31526. \t\tobj->otyp == HEAVY_IRON_BALL) {</span>\n <span id=\"line31527\">31527. \t\tstruct obj *bobj;</span>\n <span id=\"line31528\">31528. \t\tstruct trap *t;</span>\n <span id=\"line31529\">31529.@@ -2829,9 +2891,9 @@ struct obj *obj;\t\t\t/* object tossed/used</span>\n <span id=\"line31530\">31530. \t    point_blank = FALSE;\t/* affects passing through iron bars */</span>\n <span id=\"line31531\">31531. \t}</span>\n <span id=\"line31532\">31532. </span>\n <span id=\"line31533\">31533.-\tif (weapon != ZAPPED_WAND && weapon != INVIS_BEAM) tmp_at(DISP_END, 0);</span>\n <span id=\"line31534\">31534.+\tif ((weapon & BHIT_GLYPHMASK) != BHIT_GLYPH_NONE) tmp_at(DISP_END, 0);</span>\n <span id=\"line31535\">31535. </span>\n <span id=\"line31536\">31536.-\tif(shopdoor)</span>\n <span id=\"line31537\">31537.+\tif(shopdoor && youshoot)</span>\n <span id=\"line31538\">31538. \t    pay_for_damage(\"destroy\", FALSE);</span>\n <span id=\"line31539\">31539. </span>\n <span id=\"line31540\">31540. \treturn (struct monst *)0;</span>\n <span id=\"line31541\">31541.@@ -2962,6 +3024,15 @@ struct obj **ootmp;\t/* to return worn ar</span>\n <span id=\"line31542\">31542. \t\t(void)sleep_monst(mon, d(nd, 25),</span>\n <span id=\"line31543\">31543. \t\t\t\ttype == ZT_WAND(ZT_SLEEP) ? WAND_CLASS : '\\0');</span>\n <span id=\"line31544\">31544. \t\tbreak;</span>\n <span id=\"line31545\">31545.+\tcase ZT_PARALYSIS:</span>\n <span id=\"line31546\">31546.+\t\ttmp = 0;</span>\n <span id=\"line31547\">31547.+\t\tif (resists_paraly(mon)) {</span>\n <span id=\"line31548\">31548.+\t\t    sho_shieldeff = TRUE;</span>\n <span id=\"line31549\">31549.+\t\t    break;</span>\n <span id=\"line31550\">31550.+\t\t}</span>\n <span id=\"line31551\">31551.+\t\tmon->mcanmove = 0;</span>\n <span id=\"line31552\">31552.+\t\tmon->mfrozen = d(nd, 6);</span>\n <span id=\"line31553\">31553.+\t\tbreak;</span>\n <span id=\"line31554\">31554. \tcase ZT_DEATH:\t\t/* death/disintegration */</span>\n <span id=\"line31555\">31555. \t\tif(abs(type) != ZT_BREATH(ZT_DEATH)) {\t/* death */</span>\n <span id=\"line31556\">31556. \t\t    if(mon->data == &mons[PM_DEATH]) {</span>\n <span id=\"line31557\">31557.@@ -2972,8 +3043,8 @@ struct obj **ootmp;\t/* to return worn ar</span>\n <span id=\"line31558\">31558. \t\t\ttmp = 0;</span>\n <span id=\"line31559\">31559. \t\t\tbreak;</span>\n <span id=\"line31560\">31560. \t\t    }</span>\n <span id=\"line31561\">31561.-\t\t    if (nonliving(mon->data) || is_demon(mon->data) ||</span>\n <span id=\"line31562\">31562.-\t\t\t    resists_magm(mon)) {\t/* similar to player */</span>\n <span id=\"line31563\">31563.+\t\t    if (vs_death_factor(mon->data) ||</span>\n <span id=\"line31564\">31564.+\t\t\tresists_magm(mon)) {\t/* similar to player */</span>\n <span id=\"line31565\">31565. \t\t\tsho_shieldeff = TRUE;</span>\n <span id=\"line31566\">31566. \t\t\tbreak;</span>\n <span id=\"line31567\">31567. \t\t    }</span>\n <span id=\"line31568\">31568.@@ -3071,41 +3142,55 @@ const char *fltxt;</span>\n <span id=\"line31569\">31569. xchar sx, sy;</span>\n <span id=\"line31570\">31570. {</span>\n <span id=\"line31571\">31571. \tint dam = 0;</span>\n <span id=\"line31572\">31572.+\tboolean not_effected = FALSE;</span>\n <span id=\"line31573\">31573. </span>\n <span id=\"line31574\">31574. \tswitch (abs(type) % 10) {</span>\n <span id=\"line31575\">31575. \tcase ZT_MAGIC_MISSILE:</span>\n <span id=\"line31576\">31576. \t    if (Antimagic) {</span>\n <span id=\"line31577\">31577. \t\tshieldeff(sx, sy);</span>\n <span id=\"line31578\">31578. \t\tpline_The(\"missiles bounce off!\");</span>\n <span id=\"line31579\">31579.+\t\tdamage_resistant_obj(ANTIMAGIC, 1);</span>\n <span id=\"line31580\">31580. \t    } else {</span>\n <span id=\"line31581\">31581. \t\tdam = d(nd,6);</span>\n <span id=\"line31582\">31582. \t\texercise(A_STR, FALSE);</span>\n <span id=\"line31583\">31583. \t    }</span>\n <span id=\"line31584\">31584. \t    break;</span>\n <span id=\"line31585\">31585. \tcase ZT_FIRE:</span>\n <span id=\"line31586\">31586.+\t    dam = d(nd, 6);</span>\n <span id=\"line31587\">31587. \t    if (Fire_resistance) {</span>\n <span id=\"line31588\">31588.-\t\tshieldeff(sx, sy);</span>\n <span id=\"line31589\">31589.-\t\tYou(\"don't feel hot!\");</span>\n <span id=\"line31590\">31590.+\t\tif (not_effected = is_full_resist(FIRE_RES)) {</span>\n <span id=\"line31591\">31591.+\t\t    shieldeff(sx, sy);</span>\n <span id=\"line31592\">31592.+\t\t    You(\"don't feel hot!\");</span>\n <span id=\"line31593\">31593.+\t\t    dam = 0;</span>\n <span id=\"line31594\">31594.+\t\t} else {</span>\n <span id=\"line31595\">31595.+\t\t    You(\"endure the heat.\");</span>\n <span id=\"line31596\">31596.+\t\t    dam = (dam+3) / 4;</span>\n <span id=\"line31597\">31597.+\t\t}</span>\n <span id=\"line31598\">31598. \t\tugolemeffects(AD_FIRE, d(nd, 6));</span>\n <span id=\"line31599\">31599.-\t    } else {</span>\n <span id=\"line31600\">31600.-\t\tdam = d(nd, 6);</span>\n <span id=\"line31601\">31601. \t    }</span>\n <span id=\"line31602\">31602. \t    burn_away_slime();</span>\n <span id=\"line31603\">31603.-\t    if (burnarmor(&youmonst)) {\t/* \"body hit\" */</span>\n <span id=\"line31604\">31604.+\t    if (!not_effected && burnarmor(&youmonst)) {\t/* \"body hit\" */</span>\n <span id=\"line31605\">31605. \t\tif (!rn2(3)) destroy_item(POTION_CLASS, AD_FIRE);</span>\n <span id=\"line31606\">31606. \t\tif (!rn2(3)) destroy_item(SCROLL_CLASS, AD_FIRE);</span>\n <span id=\"line31607\">31607. \t\tif (!rn2(5)) destroy_item(SPBOOK_CLASS, AD_FIRE);</span>\n <span id=\"line31608\">31608.+\t\tif (!rn2(3)) destroy_item(TOOL_CLASS, AD_FIRE);</span>\n <span id=\"line31609\">31609. \t    }</span>\n <span id=\"line31610\">31610. \t    break;</span>\n <span id=\"line31611\">31611. \tcase ZT_COLD:</span>\n <span id=\"line31612\">31612.+\t    dam = d(nd, 6);</span>\n <span id=\"line31613\">31613. \t    if (Cold_resistance) {</span>\n <span id=\"line31614\">31614.-\t\tshieldeff(sx, sy);</span>\n <span id=\"line31615\">31615.-\t\tYou(\"don't feel cold.\");</span>\n <span id=\"line31616\">31616.+\t\tif (not_effected = is_full_resist(COLD_RES)) {</span>\n <span id=\"line31617\">31617.+\t\t    shieldeff(sx, sy);</span>\n <span id=\"line31618\">31618.+\t\t    You(\"don't feel cold.\");</span>\n <span id=\"line31619\">31619.+\t\t    dam = 0;</span>\n <span id=\"line31620\">31620.+\t\t} else {</span>\n <span id=\"line31621\">31621.+\t\t    You(\"feel slightly cold.\");</span>\n <span id=\"line31622\">31622.+\t\t    dam = (dam+3) / 4;</span>\n <span id=\"line31623\">31623.+\t\t}</span>\n <span id=\"line31624\">31624. \t\tugolemeffects(AD_COLD, d(nd, 6));</span>\n <span id=\"line31625\">31625.-\t    } else {</span>\n <span id=\"line31626\">31626.-\t\tdam = d(nd, 6);</span>\n <span id=\"line31627\">31627. \t    }</span>\n <span id=\"line31628\">31628.-\t    if (!rn2(3)) destroy_item(POTION_CLASS, AD_COLD);</span>\n <span id=\"line31629\">31629.+\t    if (!not_effected && !rn2(3))</span>\n <span id=\"line31630\">31630.+\t\tdestroy_item(POTION_CLASS, AD_COLD);</span>\n <span id=\"line31631\">31631. \t    break;</span>\n <span id=\"line31632\">31632. \tcase ZT_SLEEP:</span>\n <span id=\"line31633\">31633. \t    if (Sleep_resistance) {</span>\n <span id=\"line31634\">31634.@@ -3115,10 +3200,22 @@ xchar sx, sy;</span>\n <span id=\"line31635\">31635. \t\tfall_asleep(-d(nd,25), TRUE); /* sleep ray */</span>\n <span id=\"line31636\">31636. \t    }</span>\n <span id=\"line31637\">31637. \t    break;</span>\n <span id=\"line31638\">31638.+\tcase ZT_PARALYSIS:</span>\n <span id=\"line31639\">31639.+\t    if (Free_action) {</span>\n <span id=\"line31640\">31640.+\t\tshieldeff(u.ux, u.uy);</span>\n <span id=\"line31641\">31641.+\t\tYou(\"stiffen momentarily.\");</span>\n <span id=\"line31642\">31642.+\t    } else {</span>\n <span id=\"line31643\">31643.+\t\tYou(\"are frozen!\");</span>\n <span id=\"line31644\">31644.+\t\tnomul(-d(nd, 4));</span>\n <span id=\"line31645\">31645.+\t\tnomovemsg = You_can_move_again;</span>\n <span id=\"line31646\">31646.+\t\texercise(A_DEX, FALSE);</span>\n <span id=\"line31647\">31647.+\t    }</span>\n <span id=\"line31648\">31648.+\t    break;</span>\n <span id=\"line31649\">31649. \tcase ZT_DEATH:</span>\n <span id=\"line31650\">31650. \t    if (abs(type) == ZT_BREATH(ZT_DEATH)) {</span>\n <span id=\"line31651\">31651.-\t\tif (Disint_resistance) {</span>\n <span id=\"line31652\">31652.-\t\t    You(\"are not disintegrated.\");</span>\n <span id=\"line31653\">31653.+\t\tif (is_full_resist(DISINT_RES)) {</span>\n <span id=\"line31654\">31654.+\t\t    shieldeff(sx, sy);</span>\n <span id=\"line31655\">31655.+\t\t    You(\"aren't affected.\");</span>\n <span id=\"line31656\">31656. \t\t    break;</span>\n <span id=\"line31657\">31657. \t\t} else if (uarms) {</span>\n <span id=\"line31658\">31658. \t\t    /* destroy shield; other possessions are safe */</span>\n <span id=\"line31659\">31659.@@ -3136,13 +3233,18 @@ xchar sx, sy;</span>\n <span id=\"line31660\">31660. #ifdef TOURIST</span>\n <span id=\"line31661\">31661. \t\tif (uarmu) (void) destroy_arm(uarmu);</span>\n <span id=\"line31662\">31662. #endif</span>\n <span id=\"line31663\">31663.-\t    } else if (nonliving(youmonst.data) || is_demon(youmonst.data)) {</span>\n <span id=\"line31664\">31664.+\t\tif (Disint_resistance) {</span>\n <span id=\"line31665\">31665.+\t\t    You(\"are not disintegrated.\");</span>\n <span id=\"line31666\">31666.+\t\t    break;</span>\n <span id=\"line31667\">31667.+\t\t}</span>\n <span id=\"line31668\">31668.+\t    } else if (vs_death_factor(youmonst.data)) {</span>\n <span id=\"line31669\">31669. \t\tshieldeff(sx, sy);</span>\n <span id=\"line31670\">31670. \t\tYou(\"seem unaffected.\");</span>\n <span id=\"line31671\">31671. \t\tbreak;</span>\n <span id=\"line31672\">31672. \t    } else if (Antimagic) {</span>\n <span id=\"line31673\">31673. \t\tshieldeff(sx, sy);</span>\n <span id=\"line31674\">31674. \t\tYou(\"aren't affected.\");</span>\n <span id=\"line31675\">31675.+\t\tdamage_resistant_obj(ANTIMAGIC, rnd(3));</span>\n <span id=\"line31676\">31676. \t\tbreak;</span>\n <span id=\"line31677\">31677. \t    }</span>\n <span id=\"line31678\">31678. \t    killer_format = KILLED_BY_AN;</span>\n <span id=\"line31679\">31679.@@ -3152,19 +3254,30 @@ xchar sx, sy;</span>\n <span id=\"line31680\">31680. \t    done(DIED);</span>\n <span id=\"line31681\">31681. \t    return; /* lifesaved */</span>\n <span id=\"line31682\">31682. \tcase ZT_LIGHTNING:</span>\n <span id=\"line31683\">31683.+\t    dam = d(nd, 6);</span>\n <span id=\"line31684\">31684. \t    if (Shock_resistance) {</span>\n <span id=\"line31685\">31685.-\t\tshieldeff(sx, sy);</span>\n <span id=\"line31686\">31686.-\t\tYou(\"aren't affected.\");</span>\n <span id=\"line31687\">31687.+\t\tif (not_effected = is_full_resist(SHOCK_RES)) {</span>\n <span id=\"line31688\">31688.+\t\t    shieldeff(sx, sy);</span>\n <span id=\"line31689\">31689.+\t\t    You(\"aren't affected.\");</span>\n <span id=\"line31690\">31690.+\t\t    dam = 0;</span>\n <span id=\"line31691\">31691.+\t\t} else {</span>\n <span id=\"line31692\">31692.+\t\t    You(\"nearly resist the shock.\");</span>\n <span id=\"line31693\">31693.+\t\t    dam = (dam+3) / 4;</span>\n <span id=\"line31694\">31694.+\t\t}</span>\n <span id=\"line31695\">31695. \t\tugolemeffects(AD_ELEC, d(nd, 6));</span>\n <span id=\"line31696\">31696. \t    } else {</span>\n <span id=\"line31697\">31697.-\t\tdam = d(nd, 6);</span>\n <span id=\"line31698\">31698. \t\texercise(A_CON, FALSE);</span>\n <span id=\"line31699\">31699. \t    }</span>\n <span id=\"line31700\">31700.-\t    if (!rn2(3)) destroy_item(WAND_CLASS, AD_ELEC);</span>\n <span id=\"line31701\">31701.-\t    if (!rn2(3)) destroy_item(RING_CLASS, AD_ELEC);</span>\n <span id=\"line31702\">31702.+\t    if (!not_effected) {</span>\n <span id=\"line31703\">31703.+\t\tif (!rn2(3)) destroy_item(WAND_CLASS, AD_ELEC);</span>\n <span id=\"line31704\">31704.+\t\tif (!rn2(3)) destroy_item(RING_CLASS, AD_ELEC);</span>\n <span id=\"line31705\">31705.+\t    }</span>\n <span id=\"line31706\">31706. \t    break;</span>\n <span id=\"line31707\">31707. \tcase ZT_POISON_GAS:</span>\n <span id=\"line31708\">31708. \t    poisoned(\"blast\", A_DEX, \"poisoned blast\", 15);</span>\n <span id=\"line31709\">31709.+\t    if (!is_full_resist(POISON_RES)) {</span>\n <span id=\"line31710\">31710.+\t\tif (!rn2(3)) hurtarmor(AD_DCAY);</span>\n <span id=\"line31711\">31711.+\t    }</span>\n <span id=\"line31712\">31712. \t    break;</span>\n <span id=\"line31713\">31713. \tcase ZT_ACID:</span>\n <span id=\"line31714\">31714. \t    if (Acid_resistance) {</span>\n <span id=\"line31715\">31715.@@ -3174,10 +3287,12 @@ xchar sx, sy;</span>\n <span id=\"line31716\">31716. \t\tdam = d(nd,6);</span>\n <span id=\"line31717\">31717. \t\texercise(A_STR, FALSE);</span>\n <span id=\"line31718\">31718. \t    }</span>\n <span id=\"line31719\">31719.-\t    /* using two weapons at once makes both of them more vulnerable */</span>\n <span id=\"line31720\">31720.-\t    if (!rn2(u.twoweap ? 3 : 6)) erode_obj(uwep, TRUE, TRUE);</span>\n <span id=\"line31721\">31721.-\t    if (u.twoweap && !rn2(3)) erode_obj(uswapwep, TRUE, TRUE);</span>\n <span id=\"line31722\">31722.-\t    if (!rn2(6)) erode_armor(&youmonst, TRUE);</span>\n <span id=\"line31723\">31723.+\t    if (!is_full_resist(ACID_RES)) {</span>\n <span id=\"line31724\">31724.+\t\t/* using two weapons at once makes both of them more vulnerable */</span>\n <span id=\"line31725\">31725.+\t\tif (!rn2(u.twoweap ? 3 : 6)) erode_obj(uwep, TRUE, TRUE);</span>\n <span id=\"line31726\">31726.+\t\tif (u.twoweap && !rn2(3)) erode_obj(uswapwep, TRUE, TRUE);</span>\n <span id=\"line31727\">31727.+\t\tif (!rn2(6)) erode_armor(&youmonst, TRUE);</span>\n <span id=\"line31728\">31728.+\t    }</span>\n <span id=\"line31729\">31729. \t    break;</span>\n <span id=\"line31730\">31730. \t}</span>\n <span id=\"line31731\">31731. </span>\n <span id=\"line31732\">31732.@@ -3239,6 +3354,19 @@ boolean u_caused;</span>\n <span id=\"line31733\">31733. \t\t\t    pline(\"%s burns.\", An(buf1));</span>\n <span id=\"line31734\">31734. \t\t    }</span>\n <span id=\"line31735\">31735. \t\t}</span>\n <span id=\"line31736\">31736.+\t    } else if (obj->otyp == STATUE && get_material(obj) == LIQUID) {</span>\n <span id=\"line31737\">31737.+\t\tstruct trap *trap;</span>\n <span id=\"line31738\">31738.+\t\tif ((trap = t_at(x,y)) && trap->ttyp == STATUE_TRAP) {</span>\n <span id=\"line31739\">31739.+\t\t    activate_statue_trap(trap, x, y, TRUE);</span>\n <span id=\"line31740\">31740.+\t\t    continue;</span>\n <span id=\"line31741\">31741.+\t\t}</span>\n <span id=\"line31742\">31742.+\t\tif (give_feedback) {</span>\n <span id=\"line31743\">31743.+\t\t    pline(\"%s thaws.\", An(xname(obj)));</span>\n <span id=\"line31744\">31744.+\t\t}</span>\n <span id=\"line31745\">31745.+\t\t(void) mkcorpstat(CORPSE, (struct monst *) 0,</span>\n <span id=\"line31746\">31746.+\t\t\t\t  &mons[obj->corpsenm], x, y, TRUE);</span>\n <span id=\"line31747\">31747.+\t\tif (u_caused) useupf(obj, 1);</span>\n <span id=\"line31748\">31748.+\t\telse delobj(obj);</span>\n <span id=\"line31749\">31749. \t    }</span>\n <span id=\"line31750\">31750. \t}</span>\n <span id=\"line31751\">31751. \treturn cnt;</span>\n <span id=\"line31752\">31752.@@ -3317,7 +3445,7 @@ register int dx,dy;</span>\n <span id=\"line31753\">31753. \t    mon = m_at(sx, sy);</span>\n <span id=\"line31754\">31754. \t    if(cansee(sx,sy)) {</span>\n <span id=\"line31755\">31755. \t\t/* reveal/unreveal invisible monsters before tmp_at() */</span>\n <span id=\"line31756\">31756.-\t\tif (mon && !canspotmon(mon))</span>\n <span id=\"line31757\">31757.+\t\tif (mon && !canspotmons(mon))</span>\n <span id=\"line31758\">31758. \t\t    map_invisible(sx, sy);</span>\n <span id=\"line31759\">31759. \t\telse if (!mon && glyph_is_invisible(levl[sx][sy].glyph)) {</span>\n <span id=\"line31760\">31760. \t\t    unmap_object(sx, sy);</span>\n <span id=\"line31761\">31761.@@ -3327,6 +3455,9 @@ register int dx,dy;</span>\n <span id=\"line31762\">31762. \t\t    tmp_at(sx,sy);</span>\n <span id=\"line31763\">31763. \t\tdelay_output(); /* wait a little */</span>\n <span id=\"line31764\">31764. \t    }</span>\n <span id=\"line31765\">31765.+#ifdef MONSTEED</span>\n <span id=\"line31766\">31766.+\t    if (mon) mon = mrider_or_msteed(mon, !rn2(3));</span>\n <span id=\"line31767\">31767.+#endif</span>\n <span id=\"line31768\">31768. \t} else</span>\n <span id=\"line31769\">31769. \t    goto make_bounce;</span>\n <span id=\"line31770\">31770. </span>\n <span id=\"line31771\">31771.@@ -3447,6 +3578,7 @@ register int dx,dy;</span>\n <span id=\"line31772\">31772. \t\trange -= 2;</span>\n <span id=\"line31773\">31773. \t\tpline(\"%s hits you!\", The(fltxt));</span>\n <span id=\"line31774\">31774. \t\tif (Reflecting) {</span>\n <span id=\"line31775\">31775.+\t\t    int objdmg = 0;</span>\n <span id=\"line31776\">31776. \t\t    if (!Blind) {</span>\n <span id=\"line31777\">31777. \t\t    \t(void) ureflects(\"But %s reflects from your %s!\", \"it\");</span>\n <span id=\"line31778\">31778. \t\t    } else</span>\n <span id=\"line31779\">31779.@@ -3454,13 +3586,35 @@ register int dx,dy;</span>\n <span id=\"line31780\">31780. \t\t    dx = -dx;</span>\n <span id=\"line31781\">31781. \t\t    dy = -dy;</span>\n <span id=\"line31782\">31782. \t\t    shieldeff(sx, sy);</span>\n <span id=\"line31783\">31783.+\t\t    switch (abstype) {\t\t/* reflector gets damaged */</span>\n <span id=\"line31784\">31784.+\t\t\tcase ZT_MAGIC_MISSILE:</span>\n <span id=\"line31785\">31785.+\t\t\tcase ZT_SLEEP:</span>\n <span id=\"line31786\">31786.+\t\t\tcase ZT_POISON_GAS:</span>\n <span id=\"line31787\">31787.+\t\t\tcase ZT_PARALYSIS:</span>\n <span id=\"line31788\">31788.+\t\t\t\tobjdmg = d(1,4);</span>\n <span id=\"line31789\">31789.+\t\t\t\tbreak;</span>\n <span id=\"line31790\">31790.+\t\t\tcase ZT_FIRE:</span>\n <span id=\"line31791\">31791.+\t\t\tcase ZT_COLD:</span>\n <span id=\"line31792\">31792.+\t\t\tcase ZT_LIGHTNING:</span>\n <span id=\"line31793\">31793.+\t\t\tcase ZT_ACID:</span>\n <span id=\"line31794\">31794.+\t\t\t\tobjdmg = d(2,4);</span>\n <span id=\"line31795\">31795.+\t\t\tcase ZT_DEATH:</span>\n <span id=\"line31796\">31796.+\t\t\t\tif (abs(type) == ZT_BREATH(ZT_DEATH))</span>\n <span id=\"line31797\">31797.+\t\t\t\t    objdmg = rn1(10, 10);</span>\n <span id=\"line31798\">31798.+\t\t\t\telse</span>\n <span id=\"line31799\">31799.+\t\t\t\t    objdmg = d(3,4);</span>\n <span id=\"line31800\">31800.+\t\t\tdefault:</span>\n <span id=\"line31801\">31801.+\t\t\t\tbreak;</span>\n <span id=\"line31802\">31802.+\t\t    }</span>\n <span id=\"line31803\">31803.+\t\t    damage_resistant_obj(REFLECTING, objdmg);</span>\n <span id=\"line31804\">31804. \t\t} else {</span>\n <span id=\"line31805\">31805. \t\t    zhitu(type, nd, fltxt, sx, sy);</span>\n <span id=\"line31806\">31806. \t\t}</span>\n <span id=\"line31807\">31807. \t    } else {</span>\n <span id=\"line31808\">31808. \t\tpline(\"%s whizzes by you!\", The(fltxt));</span>\n <span id=\"line31809\">31809. \t    }</span>\n <span id=\"line31810\">31810.-\t    if (abstype == ZT_LIGHTNING && !resists_blnd(&youmonst)) {</span>\n <span id=\"line31811\">31811.+\t    if (abstype == ZT_LIGHTNING && !resists_blnd(&youmonst) &&</span>\n <span id=\"line31812\">31812.+\t\t!is_full_resist(SHOCK_RES)) {</span>\n <span id=\"line31813\">31813. \t\tYou(are_blinded_by_the_flash);</span>\n <span id=\"line31814\">31814. \t\tmake_blinded((long)d(nd,50),FALSE);</span>\n <span id=\"line31815\">31815. \t\tif (!Blind) Your(vision_clears);</span>\n <span id=\"line31816\">31816.@@ -3584,7 +3738,7 @@ boolean *shopdamage;</span>\n <span id=\"line31817\">31817. \t    }</span>\n <span id=\"line31818\">31818. \t    if(is_ice(x, y)) {</span>\n <span id=\"line31819\">31819. \t\tmelt_ice(x, y);</span>\n <span id=\"line31820\">31820.-\t    } else if(is_pool(x,y)) {</span>\n <span id=\"line31821\">31821.+\t    } else if(is_pool(x,y) || is_swamp(x,y)) {</span>\n <span id=\"line31822\">31822. \t\tconst char *msgtxt = \"You hear hissing gas.\";</span>\n <span id=\"line31823\">31823. \t\tif(lev->typ != POOL) {\t/* MOAT or DRAWBRIDGE_UP */</span>\n <span id=\"line31824\">31824. \t\t    if (cansee(x,y)) msgtxt = \"Some water evaporates.\";</span>\n <span id=\"line31825\">31825.@@ -3767,13 +3921,7 @@ register struct obj *obj;\t\t   /* no text</span>\n <span id=\"line31826\">31826. \tif (obj->otyp == BOULDER && In_sokoban(&u.uz) && !flags.mon_moving)</span>\n <span id=\"line31827\">31827. \t    change_luck(-1);</span>\n <span id=\"line31828\">31828. </span>\n <span id=\"line31829\">31829.-\tobj->otyp = ROCK;</span>\n <span id=\"line31830\">31830.-\tobj->quan = (long) rn1(60, 7);</span>\n <span id=\"line31831\">31831.-\tobj->owt = weight(obj);</span>\n <span id=\"line31832\">31832.-\tobj->oclass = GEM_CLASS;</span>\n <span id=\"line31833\">31833.-\tobj->known = FALSE;</span>\n <span id=\"line31834\">31834.-\tobj->onamelth = 0;\t\t/* no names */</span>\n <span id=\"line31835\">31835.-\tobj->oxlth = 0;\t\t\t/* no extra data */</span>\n <span id=\"line31836\">31836.+\ttrans_to_rock(obj);</span>\n <span id=\"line31837\">31837. \tobj->oattached = OATTACHED_NOTHING;</span>\n <span id=\"line31838\">31838. \tif (obj->where == OBJ_FLOOR) {</span>\n <span id=\"line31839\">31839. \t\tobj_extract_self(obj);\t\t/* move rocks back on top */</span>\n <span id=\"line31840\">31840.@@ -3785,6 +3933,20 @@ register struct obj *obj;\t\t   /* no text</span>\n <span id=\"line31841\">31841. \t}</span>\n <span id=\"line31842\">31842. }</span>\n <span id=\"line31843\">31843. </span>\n <span id=\"line31844\">31844.+void</span>\n <span id=\"line31845\">31845.+trans_to_rock(obj)</span>\n <span id=\"line31846\">31846.+register struct obj *obj;</span>\n <span id=\"line31847\">31847.+{</span>\n <span id=\"line31848\">31848.+\tobj->otyp = (get_material(obj) == MINERAL) ? ROCK : LAST_GEM + 1;</span>\n <span id=\"line31849\">31849.+\tobj->quan = (long) rn1(60, 7);</span>\n <span id=\"line31850\">31850.+\tobj->owt = weight(obj);</span>\n <span id=\"line31851\">31851.+\tobj->oclass = GEM_CLASS;</span>\n <span id=\"line31852\">31852.+\tobj->known = FALSE;</span>\n <span id=\"line31853\">31853.+\tobj->bknown = FALSE;</span>\n <span id=\"line31854\">31854.+\tobj->onamelth = 0;\t\t/* no names */</span>\n <span id=\"line31855\">31855.+\tobj->oxlth = 0;\t\t\t/* no extra data */</span>\n <span id=\"line31856\">31856.+}</span>\n <span id=\"line31857\">31857.+</span>\n <span id=\"line31858\">31858. /* handle statue hit by striking/force bolt/pick-axe */</span>\n <span id=\"line31859\">31859. boolean</span>\n <span id=\"line31860\">31860. break_statue(obj)</span>\n <span id=\"line31861\">31861.@@ -3793,7 +3955,10 @@ register struct obj *obj;</span>\n <span id=\"line31862\">31862. \t/* [obj is assumed to be on floor, so no get_obj_location() needed] */</span>\n <span id=\"line31863\">31863. \tstruct trap *trap = t_at(obj->ox, obj->oy);</span>\n <span id=\"line31864\">31864. \tstruct obj *item;</span>\n <span id=\"line31865\">31865.+\tint mat = get_material(obj);</span>\n <span id=\"line31866\">31866. </span>\n <span id=\"line31867\">31867.+\tif (mat != MINERAL && mat != GLASS) return FALSE;\t/* do not shatter */</span>\n <span id=\"line31868\">31868.+</span>\n <span id=\"line31869\">31869. \tif (trap && trap->ttyp == STATUE_TRAP &&</span>\n <span id=\"line31870\">31870. \t\tactivate_statue_trap(trap, obj->ox, obj->oy, TRUE))</span>\n <span id=\"line31871\">31871. \t    return FALSE;</span>\n <span id=\"line31872\">31872.@@ -3830,6 +3995,10 @@ register int osym, dmgtyp;</span>\n <span id=\"line31873\">31873. \tregister int dindx;</span>\n <span id=\"line31874\">31874. \tconst char *mult;</span>\n <span id=\"line31875\">31875. </span>\n <span id=\"line31876\">31876.+\tif (dmgtyp == AD_FIRE && is_full_resist(FIRE_RES)) return;</span>\n <span id=\"line31877\">31877.+\tif (dmgtyp == AD_COLD && is_full_resist(COLD_RES)) return;</span>\n <span id=\"line31878\">31878.+\tif (dmgtyp == AD_ELEC && is_full_resist(SHOCK_RES)) return;</span>\n <span id=\"line31879\">31879.+</span>\n <span id=\"line31880\">31880. \tfor(obj = invent; obj; obj = obj2) {</span>\n <span id=\"line31881\">31881. \t    obj2 = obj->nobj;</span>\n <span id=\"line31882\">31882. \t    if(obj->oclass != osym) continue; /* test only objs of type osym */</span>\n <span id=\"line31883\">31883.@@ -3873,6 +4042,20 @@ register int osym, dmgtyp;</span>\n <span id=\"line31884\">31884. \t\t\t    dindx = 3;</span>\n <span id=\"line31885\">31885. \t\t\t    dmg = 1;</span>\n <span id=\"line31886\">31886. \t\t\t    break;</span>\n <span id=\"line31887\">31887.+\t\t\tcase TOOL_CLASS:</span>\n <span id=\"line31888\">31888.+\t\t\t    if (get_material(obj) == CLOTH) {</span>\n <span id=\"line31889\">31889.+\t\t\t\tdindx = 3;</span>\n <span id=\"line31890\">31890.+\t\t\t\tdmg = 0;</span>\n <span id=\"line31891\">31891.+\t\t\t\tif (!objects[obj->otyp].oc_merge &&</span>\n <span id=\"line31892\">31892.+\t\t\t\t    obj->oeroded < MAX_ERODE) {</span>\n <span id=\"line31893\">31893.+\t\t\t\t    skip++;</span>\n <span id=\"line31894\">31894.+\t\t\t\t    if (!rn2(3+(obj->blessed*2))) {</span>\n <span id=\"line31895\">31895.+\t\t\t\t\tobj->oeroded++;</span>\n <span id=\"line31896\">31896.+\t\t\t\t\tpline(\"Your %s catches fire and smoulders!\", xname(obj));</span>\n <span id=\"line31897\">31897.+\t\t\t\t    }</span>\n <span id=\"line31898\">31898.+\t\t\t\t}</span>\n <span id=\"line31899\">31899.+\t\t\t    } else skip++;</span>\n <span id=\"line31900\">31900.+\t\t\t    break;</span>\n <span id=\"line31901\">31901. \t\t\tdefault:</span>\n <span id=\"line31902\">31902. \t\t\t    skip++;</span>\n <span id=\"line31903\">31903. \t\t\t    break;</span>\n <span id=\"line31904\">31904.@@ -3927,6 +4110,25 @@ register int osym, dmgtyp;</span>\n <span id=\"line31905\">31905. \t\t\tsetnotworn(obj);</span>\n <span id=\"line31906\">31906. \t\t}</span>\n <span id=\"line31907\">31907. \t\tif (obj == current_wand) current_wand = 0;\t/* destroyed */</span>\n <span id=\"line31908\">31908.+\t\tif (Is_container(obj) && Has_contents(obj)) {</span>\n <span id=\"line31909\">31909.+\t\t    struct obj *otmp;</span>\n <span id=\"line31910\">31910.+\t\t    long ccnt;</span>\n <span id=\"line31911\">31911.+\t\t    schar typ = levl[u.ux][u.uy].typ;</span>\n <span id=\"line31912\">31912.+\t\t    for (ccnt = 0, otmp = obj->cobj; otmp; otmp = otmp->nobj)</span>\n <span id=\"line31913\">31913.+\t\t\tccnt += otmp->quan;</span>\n <span id=\"line31914\">31914.+\t\t    if (ccnt) pline_The(\"content%s of %s fall%s %sto the %s!\",</span>\n <span id=\"line31915\">31915.+\t\t\t\t\t(ccnt > 1) ? \"s\" : \"\", the(xname(obj)),</span>\n <span id=\"line31916\">31916.+\t\t\t\t\t(ccnt == 1) ? \"s\" : \"\",</span>\n <span id=\"line31917\">31917.+\t\t\t\t\t(IS_SOFT(typ) || IS_FOUNTAIN(typ) ||</span>\n <span id=\"line31918\">31918.+\t\t\t\t\t typ == LAVAPOOL) ? \"in\" : \"\",</span>\n <span id=\"line31919\">31919.+\t\t\t\t\tsurface(u.ux, u.uy));</span>\n <span id=\"line31920\">31920.+\t\t    while (obj->cobj) {</span>\n <span id=\"line31921\">31921.+\t\t\totmp = obj->cobj;</span>\n <span id=\"line31922\">31922.+\t\t\tobj_extract_self(otmp);</span>\n <span id=\"line31923\">31923.+\t\t\tplace_object(otmp, u.ux, u.uy);</span>\n <span id=\"line31924\">31924.+\t\t\tstackobj(otmp);</span>\n <span id=\"line31925\">31925.+\t\t    }</span>\n <span id=\"line31926\">31926.+\t\t}</span>\n <span id=\"line31927\">31927. \t\tfor (i = 0; i < cnt; i++)</span>\n <span id=\"line31928\">31928. \t\t    useup(obj);</span>\n <span id=\"line31929\">31929. \t\tif(dmg) {</span>\n <span id=\"line31930\">31930.@@ -3945,6 +4147,29 @@ register int osym, dmgtyp;</span>\n <span id=\"line31931\">31931. \treturn;</span>\n <span id=\"line31932\">31932. }</span>\n <span id=\"line31933\">31933. </span>\n <span id=\"line31934\">31934.+void</span>\n <span id=\"line31935\">31935.+destroy_items(dmgtyp)</span>\n <span id=\"line31936\">31936.+register int dmgtyp;</span>\n <span id=\"line31937\">31937.+{</span>\n <span id=\"line31938\">31938.+\tswitch (dmgtyp) {</span>\n <span id=\"line31939\">31939.+\t    case AD_FIRE:</span>\n <span id=\"line31940\">31940.+\t\tdestroy_item(SCROLL_CLASS, AD_FIRE);</span>\n <span id=\"line31941\">31941.+\t\tdestroy_item(POTION_CLASS, AD_FIRE);</span>\n <span id=\"line31942\">31942.+\t\tif (rn2(5) < 3) destroy_item(SPBOOK_CLASS, AD_FIRE);</span>\n <span id=\"line31943\">31943.+\t\tdestroy_item(TOOL_CLASS, AD_FIRE);</span>\n <span id=\"line31944\">31944.+\t\tbreak;</span>\n <span id=\"line31945\">31945.+\t    case AD_COLD:</span>\n <span id=\"line31946\">31946.+\t\tdestroy_item(POTION_CLASS, AD_COLD);</span>\n <span id=\"line31947\">31947.+\t\tbreak;</span>\n <span id=\"line31948\">31948.+\t    case AD_ELEC:</span>\n <span id=\"line31949\">31949.+\t\tdestroy_item(WAND_CLASS, AD_ELEC);</span>\n <span id=\"line31950\">31950.+\t\tdestroy_item(RING_CLASS, AD_ELEC);</span>\n <span id=\"line31951\">31951.+\t\tbreak;</span>\n <span id=\"line31952\">31952.+\t    default:</span>\n <span id=\"line31953\">31953.+\t\tbreak;</span>\n <span id=\"line31954\">31954.+\t}</span>\n <span id=\"line31955\">31955.+}</span>\n <span id=\"line31956\">31956.+</span>\n <span id=\"line31957\">31957. int</span>\n <span id=\"line31958\">31958. destroy_mitem(mtmp, osym, dmgtyp)</span>\n <span id=\"line31959\">31959. struct monst *mtmp;</span>\n <span id=\"line31960\">31960.@@ -4142,5 +4367,169 @@ retry:</span>\n <span id=\"line31961\">31961. }</span>\n <span id=\"line31962\">31962. </span>\n <span id=\"line31963\">31963. #endif /*OVL2*/</span>\n <span id=\"line31964\">31964.+</span>\n <span id=\"line31965\">31965.+</span>\n <span id=\"line31966\">31966.+</span>\n <span id=\"line31967\">31967.+</span>\n <span id=\"line31968\">31968.+struct resiobj {</span>\n <span id=\"line31969\">31969.+\tlong\tmask;</span>\n <span id=\"line31970\">31970.+\tstruct obj **objp;</span>\n <span id=\"line31971\">31971.+\tuchar\tobjclass;</span>\n <span id=\"line31972\">31972.+\tuchar\tobjsubc;</span>\n <span id=\"line31973\">31973.+};</span>\n <span id=\"line31974\">31974.+</span>\n <span id=\"line31975\">31975.+const struct resiobj resiobjtbl[] = {</span>\n <span id=\"line31976\">31976.+\t/* reversed order */</span>\n <span id=\"line31977\">31977.+\t{ W_ARMF,    &uarmf,\tARMOR_CLASS,  ARM_BOOTS  },</span>\n <span id=\"line31978\">31978.+\t{ W_ARMG,    &uarmg,\tARMOR_CLASS,  ARM_GLOVES },</span>\n <span id=\"line31979\">31979.+\t{ W_ARMH,    &uarmh,\tARMOR_CLASS,  ARM_HELM   },</span>\n <span id=\"line31980\">31980.+\t{ W_ARM,     &uarm,\tARMOR_CLASS,  ARM_SUIT   },</span>\n <span id=\"line31981\">31981.+//\t{ W_SWAPWEP, &uswapwep,\tWEAPON_CLASS, 2          },</span>\n <span id=\"line31982\">31982.+\t{ W_WEP,     &uwep,\tWEAPON_CLASS, 1          },</span>\n <span id=\"line31983\">31983.+\t{ W_ARMC,    &uarmc,\tARMOR_CLASS,  ARM_CLOAK  },</span>\n <span id=\"line31984\">31984.+\t{ W_ARMS,    &uarms,\tARMOR_CLASS,  ARM_SHIELD },</span>\n <span id=\"line31985\">31985.+\t{ W_RINGR,   &uright,\tRING_CLASS,   2          },</span>\n <span id=\"line31986\">31986.+\t{ W_RINGL,   &uleft,\tRING_CLASS,   1          },</span>\n <span id=\"line31987\">31987.+\t{ W_AMUL,    &uamul,\tAMULET_CLASS, 0          },</span>\n <span id=\"line31988\">31988.+\t{ 0, 0, 0, 0 }</span>\n <span id=\"line31989\">31989.+};</span>\n <span id=\"line31990\">31990.+</span>\n <span id=\"line31991\">31991.+void</span>\n <span id=\"line31992\">31992.+damage_resistant_obj(prop, damval)</span>\n <span id=\"line31993\">31993.+uchar prop;</span>\n <span id=\"line31994\">31994.+int damval;</span>\n <span id=\"line31995\">31995.+{</span>\n <span id=\"line31996\">31996.+\tlong e = u.uprops[prop].extrinsic;</span>\n <span id=\"line31997\">31997.+\tint oc1 = 0, oc2 = 0;</span>\n <span id=\"line31998\">31998.+\tint oldtmp, newtmp = 0;</span>\n <span id=\"line31999\">31999.+\tconst struct resiobj *tbl;</span>\n <span id=\"line32000\">32000.+\tstruct obj *otmp;</span>\n <span id=\"line32001\">32001.+</span>\n <span id=\"line32002\">32002.+\tif (e & (W_ART|W_ARTI)) return;\t/* artifacts */</span>\n <span id=\"line32003\">32003.+</span>\n <span id=\"line32004\">32004.+\tfor ( tbl = resiobjtbl; tbl->mask; tbl++ ) {</span>\n <span id=\"line32005\">32005.+\t\tif ( e & tbl->mask ) {</span>\n <span id=\"line32006\">32006.+\t\t\t/* artifacts do not get damaged */</span>\n <span id=\"line32007\">32007.+\t\t\tif ((*(tbl->objp))->oartifact) return;</span>\n <span id=\"line32008\">32008.+\t\t\toc1 = tbl->objclass;</span>\n <span id=\"line32009\">32009.+\t\t\toc2 = tbl->objsubc;</span>\n <span id=\"line32010\">32010.+\t\t\tbreak;</span>\n <span id=\"line32011\">32011.+\t\t}</span>\n <span id=\"line32012\">32012.+\t}</span>\n <span id=\"line32013\">32013.+\tif ( !oc1 ) return;\t/* there is no object to get damaged */</span>\n <span id=\"line32014\">32014.+\tif ( oc1 == WEAPON_CLASS && oc2 == 2 && !u.twoweap ) return;\t/* do not count unwield weapon */</span>\n <span id=\"line32015\">32015.+</span>\n <span id=\"line32016\">32016.+\tswitch (oc1) {</span>\n <span id=\"line32017\">32017.+\t    case AMULET_CLASS:</span>\n <span id=\"line32018\">32018.+\t\tif (prop != ANTIMAGIC && prop != REFLECTING ) break;</span>\n <span id=\"line32019\">32019.+\t\tif (uamul) {</span>\n <span id=\"line32020\">32020.+\t\t\tif (uamul->oartifact) break;</span>\n <span id=\"line32021\">32021.+\t\t\toldtmp = uamul->odamaged;</span>\n <span id=\"line32022\">32022.+\t\t\tnewtmp = oldtmp + damval;</span>\n <span id=\"line32023\">32023.+\t\t\tif ( newtmp>100 ) {</span>\n <span id=\"line32024\">32024.+\t\t\t\tif (Blind) You_feel(\"your medallion breaks in pieces!\");</span>\n <span id=\"line32025\">32025.+\t\t\t\telse Your(\"medallion glows brightly, and breaks in pieces!\");</span>\n <span id=\"line32026\">32026.+\t\t\t\totmp = uamul;</span>\n <span id=\"line32027\">32027.+\t\t\t\tAmulet_off();</span>\n <span id=\"line32028\">32028.+\t\t\t\tuseup(otmp);</span>\n <span id=\"line32029\">32029.+\t\t\t\tbreak;</span>\n <span id=\"line32030\">32030.+\t\t\t} else if ( /*oldtmp<90 &&*/ newtmp>=90 )</span>\n <span id=\"line32031\">32031.+\t\t\t\tif (!Blind) Your(\"medallion gives a faint glimmer of light!\");</span>\n <span id=\"line32032\">32032.+\t\t\t\telse Your(\"medallion vibrates violently!\");</span>\n <span id=\"line32033\">32033.+\t\t\telse if ( oldtmp<75 && newtmp>=75 )</span>\n <span id=\"line32034\">32034.+\t\t\t\tYour(\"medallion vibrates unexpectedly.\");</span>\n <span id=\"line32035\">32035.+\t\t\tuamul->odamaged = newtmp;</span>\n <span id=\"line32036\">32036.+\t\t}</span>\n <span id=\"line32037\">32037.+\t\tbreak;</span>\n <span id=\"line32038\">32038.+\t    case ARMOR_CLASS:</span>\n <span id=\"line32039\">32039.+\t\tswitch (oc2) {</span>\n <span id=\"line32040\">32040.+\t\t    case ARM_CLOAK:</span>\n <span id=\"line32041\">32041.+\t\t\tif (uarmc) {</span>\n <span id=\"line32042\">32042.+\t\t\t\tif (uarmc->oartifact) break;</span>\n <span id=\"line32043\">32043.+\t\t\t\toldtmp = uarmc->odamaged;</span>\n <span id=\"line32044\">32044.+\t\t\t\tnewtmp = oldtmp + damval;</span>\n <span id=\"line32045\">32045.+\t\t\t\tif ( newtmp>100 ) {</span>\n <span id=\"line32046\">32046.+\t\t\t\t\tif (Blind)</span>\n <span id=\"line32047\">32047.+\t\t\t\t\t    You_feel(\"your %s is gone away!\", cloak_simple_name(uarmc));</span>\n <span id=\"line32048\">32048.+\t\t\t\t\telse</span>\n <span id=\"line32049\">32049.+\t\t\t\t\t    Your(\"%s crumbles and turns to dust!\", cloak_simple_name(uarmc));</span>\n <span id=\"line32050\">32050.+\t\t\t\t\totmp = uarmc;</span>\n <span id=\"line32051\">32051.+\t       \t\t\t\t(void) Cloak_off();</span>\n <span id=\"line32052\">32052.+\t\t\t\t\tuseup(otmp);</span>\n <span id=\"line32053\">32053.+\t\t\t\t\tbreak;</span>\n <span id=\"line32054\">32054.+\t\t\t\t} else if ( /*oldtmp<90 &&*/ newtmp>=90 )</span>\n <span id=\"line32055\">32055.+\t\t\t\t\tYour(\"%s is about to come apart!\", cloak_simple_name(uarmc));</span>\n <span id=\"line32056\">32056.+\t\t\t\telse if ( oldtmp<75 && newtmp>=75 )</span>\n <span id=\"line32057\">32057.+\t\t\t\t\tYour(\"%s becomes slightly shabby.\", cloak_simple_name(uarmc));</span>\n <span id=\"line32058\">32058.+\t\t\t\tuarmc->odamaged = newtmp;</span>\n <span id=\"line32059\">32059.+\t\t\t}</span>\n <span id=\"line32060\">32060.+\t\t\tbreak;</span>\n <span id=\"line32061\">32061.+\t\t    case ARM_SHIELD:</span>\n <span id=\"line32062\">32062.+\t\t\tif (uarms && uarms->oartifact) break;</span>\n <span id=\"line32063\">32063.+\t\t\tif (uarms && prop == REFLECTING) {\t/* shield of reflection */</span>\n <span id=\"line32064\">32064.+\t\t\t\toldtmp = uarms->odamaged;</span>\n <span id=\"line32065\">32065.+\t\t\t\tnewtmp = oldtmp + damval;</span>\n <span id=\"line32066\">32066.+\t\t\t\tif ( newtmp>100 ) {</span>\n <span id=\"line32067\">32067.+\t\t\t\t\tif (!Blind) Your(\"shield is completely tarnished.\");</span>\n <span id=\"line32068\">32068.+\t\t\t\t\telse You_feel(\"your shield is somewhat helpless.\");</span>\n <span id=\"line32069\">32069.+\t\t\t\t\totmp = uarms;</span>\n <span id=\"line32070\">32070.+\t\t\t\t\tShield_off();</span>\n <span id=\"line32071\">32071.+\t\t\t\t\totmp->otyp = SHIELD;</span>\n <span id=\"line32072\">32072.+\t\t\t\t\totmp->odamaged = 0;</span>\n <span id=\"line32073\">32073.+\t\t\t\t\tchange_material(otmp, SILVER);\t/* mere silver shield */</span>\n <span id=\"line32074\">32074.+\t\t\t\t\tsetworn(otmp, W_ARMS);</span>\n <span id=\"line32075\">32075.+\t\t\t\t\tbreak;</span>\n <span id=\"line32076\">32076.+\t\t\t\t} else if ( /*oldtmp<90 &&*/ newtmp>=90 ) {</span>\n <span id=\"line32077\">32077.+\t\t\t\t    if (!Blind) Your(\"shield looks much duller!\");</span>\n <span id=\"line32078\">32078.+\t\t\t\t    else Your(\"shield shivers!\");</span>\n <span id=\"line32079\">32079.+\t\t\t\t} else if ( oldtmp<75 && newtmp>=75 ) {</span>\n <span id=\"line32080\">32080.+\t\t\t\t    if (!Blind) Your(\"shield looks slightly dull.\");</span>\n <span id=\"line32081\">32081.+\t\t\t\t    else Your(\"shield shivers slightly.\");</span>\n <span id=\"line32082\">32082.+\t\t\t\t}</span>\n <span id=\"line32083\">32083.+\t\t\t\tuarms->odamaged = newtmp;</span>\n <span id=\"line32084\">32084.+\t\t\t}</span>\n <span id=\"line32085\">32085.+\t\t\tbreak;</span>\n <span id=\"line32086\">32086.+\t\t    case ARM_SUIT:</span>\n <span id=\"line32087\">32087.+\t\t\tif (uarm && uarm->oartifact) break;</span>\n <span id=\"line32088\">32088.+\t\t\tif (prop != ANTIMAGIC && prop != REFLECTING ) break;</span>\n <span id=\"line32089\">32089.+\t\t\tif (uarm && Is_dragon_armor(uarm)) {\t/* gray or silver dragon */</span>\n <span id=\"line32090\">32090.+\t\t\t\tchar buf[BUFSZ];</span>\n <span id=\"line32091\">32091.+\t\t\t\tint isdm = Is_dragon_mail(uarm);</span>\n <span id=\"line32092\">32092.+\t\t\t\toldtmp = uarm->odamaged;</span>\n <span id=\"line32093\">32093.+\t\t\t\tnewtmp = oldtmp + damval;</span>\n <span id=\"line32094\">32094.+\t\t\t\tSprintf(buf, \"dragon scale%s\", isdm ? \" mail\" : \"s\");</span>\n <span id=\"line32095\">32095.+\t\t\t\tif ( newtmp>100 ) {</span>\n <span id=\"line32096\">32096.+\t\t\t\t    if (isdm) {</span>\n <span id=\"line32097\">32097.+\t\t\t\t\tYour(\"%s seems to lose its power.\", buf);</span>\n <span id=\"line32098\">32098.+\t\t\t\t\totmp = uarm;</span>\n <span id=\"line32099\">32099.+\t\t\t\t\tArmor_off();</span>\n <span id=\"line32100\">32100.+\t\t\t\t\totmp->otyp = PLAIN_DRAGON_SCALE_MAIL;\t/* mere scale mail */</span>\n <span id=\"line32101\">32101.+\t\t\t\t\totmp->odamaged = 0;</span>\n <span id=\"line32102\">32102.+\t\t\t\t\tsetworn(otmp, W_ARM);</span>\n <span id=\"line32103\">32103.+\t\t\t\t    } else {</span>\n <span id=\"line32104\">32104.+\t\t\t\t\tYour(\"%s crumble and fall apart!\", buf);</span>\n <span id=\"line32105\">32105.+\t\t\t\t\totmp = uarm;</span>\n <span id=\"line32106\">32106.+\t\t\t\t\tArmor_off();</span>\n <span id=\"line32107\">32107.+\t\t\t\t\tuseup(otmp);</span>\n <span id=\"line32108\">32108.+\t\t\t\t    }</span>\n <span id=\"line32109\">32109.+\t\t\t\t    break;</span>\n <span id=\"line32110\">32110.+\t\t\t\t} else if ( /*oldtmp<90 &&*/ newtmp>=90 )</span>\n <span id=\"line32111\">32111.+\t\t\t\t    Your(\"%s shiver%s!\", buf, isdm ? \"s\" : \"\");</span>\n <span id=\"line32112\">32112.+\t\t\t\telse if ( oldtmp<75 && newtmp>=75 )</span>\n <span id=\"line32113\">32113.+\t\t\t\t    Your(\"%s shiver%s slightly.\", buf, isdm ? \"s\" : \"\");</span>\n <span id=\"line32114\">32114.+\t\t\t\tuarm->odamaged = newtmp;</span>\n <span id=\"line32115\">32115.+\t\t\t}</span>\n <span id=\"line32116\">32116.+\t\t\tbreak;</span>\n <span id=\"line32117\">32117.+\t\t    default:</span>\n <span id=\"line32118\">32118.+\t\t\tbreak;</span>\n <span id=\"line32119\">32119.+\t\t}</span>\n <span id=\"line32120\">32120.+\t\tbreak;</span>\n <span id=\"line32121\">32121.+\t    default:</span>\n <span id=\"line32122\">32122.+\t\t/*impossible(\"Damage to strange object???\")*/;</span>\n <span id=\"line32123\">32123.+\t}</span>\n <span id=\"line32124\">32124.+\tif (wizard) pline(\"[%d%]\", newtmp);</span>\n <span id=\"line32125\">32125.+\treturn;</span>\n <span id=\"line32126\">32126.+}</span>\n <span id=\"line32127\">32127.+</span>\n <span id=\"line32128\">32128. </span>\n <span id=\"line32129\">32129. /*zap.c*/</span>\n\nYou may want to give your attention to the above code that controls gradual wear to items that provide [[magic resistance]] or [[reflection]]. The <tt>damage_resistant_obj</tt> function applies damage to an [[object]]. As the object resists magic or reflects ray, its damage points will increase.\n\nNote in line 32006 that [[artifact]]s are immune to damage.\n\n[[Category:Patches]]"}
{"title":"Des-file format (NetHack 3.4.3)","url":"https://nethackwiki.com/wiki/Des-file_format_(NetHack_3.4.3)","type":"markdown","data":"**NOTE: This is a guide to the des-file format for NetHack version 3.4.3. NetHack 3.6 and above use different syntax, and it would be confusing to store the differences on one page. Edit this page only for language or technical details relevant to 3.4.3. Go [here](/wiki/Des-file_format \"Des-file format\") for information about the most recent version of the file format.**\n\nThe **des-file format** is the language which is used to describe the [special levels](/wiki/Special_level \"Special level\") for NetHack. It is compiled into a binary file by [lev\\_comp](/wiki/Lev_comp \"Lev comp\").\n\nIt is not a *real* programming language: there is no flow control, and the order in which different NetHack features are created is fixed.\n\nThere are two types of levels you can create: mazes and rooms. For [MAZE-type levels](#MAZE-type_levels) you \"draw\" one or more maps with ASCII characters and then describe the monsters, objects and so on that are in the map (example: [Source:NetHack 3.4.3/dat/bigroom.des](/wiki/Source:NetHack_3.4.3/dat/bigroom.des \"Source:NetHack 3.4.3/dat/bigroom.des\"). For [ROOM-type levels](#ROOM-type_levels), you describe rooms and their contents (example: [Source:NetHack 3.4.3/dat/oracle.des](/wiki/Source:NetHack_3.4.3/dat/oracle.des \"Source:NetHack 3.4.3/dat/oracle.des\")). The maze-levels are easier to make and understand, and room-type levels do not offer as much control over the level.\n\n[lev\\_comp](/wiki/Lev_comp \"Lev comp\") will create a .lev-file for each MAZE and LEVEL definition in the file. These .lev-files will be loaded into NetHack to make the special levels. The .lev-files NetHack loads are actually defined in [dungeon.def](/wiki/Dungeon.def_format \"Dungeon.def format\").\n\n[UnNetHack](/wiki/UnNetHack \"UnNetHack\") uses a somewhat different [format](/wiki/Des-file_format_\\(UnNetHack\\) \"Des-file format (UnNetHack)\").\n\n[ ]\n\n## Contents\n\n- [1 Language syntax](#Language_syntax)\n\n  - [1.1 MAZE-type levels](#MAZE-type_levels)\n\n    - [1.1.1 MAZE](#MAZE)\n    - [1.1.2 FLAGS](#FLAGS)\n    - [1.1.3 INIT\\_MAP](#INIT_MAP)\n    - [1.1.4 MESSAGE](#MESSAGE)\n    - [1.1.5 NOMAP](#NOMAP)\n    - [1.1.6 GEOMETRY](#GEOMETRY)\n    - [1.1.7 MAP](#MAP)\n    - [1.1.8 NON\\_DIGGABLE](#NON_DIGGABLE)\n    - [1.1.9 NON\\_PASSWALL](#NON_PASSWALL)\n    - [1.1.10 RANDOM\\_PLACES](#RANDOM_PLACES)\n    - [1.1.11 RANDOM\\_MONSTERS](#RANDOM_MONSTERS)\n    - [1.1.12 RANDOM\\_OBJECTS](#RANDOM_OBJECTS)\n    - [1.1.13 DOOR](#DOOR)\n    - [1.1.14 DRAWBRIDGE](#DRAWBRIDGE)\n    - [1.1.15 REGION](#REGION)\n    - [1.1.16 STAIR-region](#STAIR-region)\n    - [1.1.17 PORTAL](#PORTAL)\n    - [1.1.18 TELEPORT\\_REGION](#TELEPORT_REGION)\n    - [1.1.19 BRANCH](#BRANCH)\n    - [1.1.20 MAZEWALK](#MAZEWALK)\n    - [1.1.21 WALLIFY](#WALLIFY)\n    - [1.1.22 LADDER](#LADDER)\n    - [1.1.23 GOLD](#GOLD)\n\n  - [1.2 ROOM-type levels](#ROOM-type_levels)\n\n    - [1.2.1 LEVEL](#LEVEL)\n    - [1.2.2 RANDOM\\_CORRIDORS](#RANDOM_CORRIDORS)\n    - [1.2.3 ROOM](#ROOM)\n    - [1.2.4 SUBROOM](#SUBROOM)\n    - [1.2.5 NAME](#NAME)\n    - [1.2.6 CHANCE](#CHANCE)\n    - [1.2.7 Room DOOR](#Room_DOOR)\n\n  - [1.3 Common syntax](#Common_syntax)\n\n    - [1.3.1 ALTAR](#ALTAR)\n    - [1.3.2 CONTAINER](#CONTAINER)\n    - [1.3.3 ENGRAVING](#ENGRAVING)\n    - [1.3.4 FOUNTAIN](#FOUNTAIN)\n    - [1.3.5 MONSTER](#MONSTER)\n    - [1.3.6 OBJECT](#OBJECT)\n    - [1.3.7 STAIR](#STAIR)\n    - [1.3.8 TRAP](#TRAP)\n    - [1.3.9 Map characters](#Map_characters)\n    - [1.3.10 Trap names](#Trap_names)\n    - [1.3.11 Room types](#Room_types)\n\n- [2 See also](#See_also)\n\n## Language syntax\n\nAll lines beginning with `#` are comments and are ignored by the level compiler, except between [MAP](#MAP) and [ENDMAP](#MAP).\n\nExample:\n\n```\n# This is a comment.\n```\n\n### MAZE-type levels\n\nMaze-type levels begin with [MAZE](#MAZE), followed with optional [FLAGS](#FLAGS), optional [INIT\\_MAP](#INIT_MAP), 0 or more [MESSAGEs](#MESSAGE) and up to 9 maze-parts, each of which consists either of [NOMAP](#NOMAP) or [GEOMETRY](#GEOMETRY) and [MAP](#MAP), followed by zero or more the random register initializers, one of each ([RANDOM\\_MONSTERS](#RANDOM_MONSTERS), [RANDOM\\_OBJECTS](#RANDOM_OBJECTS), [RANDOM\\_PLACES](#RANDOM_PLACES)), followed by zero or more of the map details (everything else, eg. [MONSTER](#MONSTER), [OBJECT](#OBJECT), [TRAP](#TRAP), etc.)\n\nThat is:\n\n- [MAZE](#MAZE)\n\n- [FLAGS](#FLAGS), optional\n\n- [INIT\\_MAP](#INIT_MAP), optional\n\n- [MESSAGE](#MESSAGE), 0 or more\n\n- up to 9 map-parts, which consist of:\n\n  - [NOMAP](#NOMAP) or [GEOMETRY](#GEOMETRY) and [MAP](#MAP)\n  - [RANDOM\\_MONSTERS](#RANDOM_MONSTERS), optional\n  - [RANDOM\\_OBJECTS](#RANDOM_OBJECTS), optional\n  - [RANDOM\\_PLACES](#RANDOM_PLACES), optional\n  - The rest of the definitions of this map-part\n\nExample:\n\n```\nMAZE:\"test\",' '\nFLAGS:noteleport\nMESSAGE:\"Welcome!\"\nGEOMETRY:center,center\nMAP\n.....\n.L.L.\n.....\n.L.L.\n.....\nENDMAP\nMONSTER:random,random,random\nOBJECT:'%',random,random\n```\n\n#### MAZE\n\n```\nMAZE:\"foo\",'X'\n```\n\n- `foo` is the unique file name which will be used for this special level, up to 8 characters. For example: `soko3-2`. This file name which NetHack loads is defined by the way this level is defined in [dungeon.def](/wiki/Dungeon.def_format \"Dungeon.def format\").\n\n- `'X'` is the [fill map character](#Map_characters). The map will be filled with this [dungeon feature](/wiki/Dungeon_feature \"Dungeon feature\") before anything else is done. This can also be `random`, which fills the whole level with a checkerboard grid of walls and stone, so you can use [MAZEWALK](#MAZEWALK) on it.\n\nExample:\n\n```\nMAZE:\"soko3-2\",' '\n```\n\n#### FLAGS\n\n```\nFLAGS:flaglist\n```\n\n`flaglist` is one or more of the following flags, separated by commas\n\n- `noteleport`: Player cannot teleport within the level.\n- `hardfloor`: The floor is too hard to dig.\n- `nommap`: [magic mapping](/wiki/Magic_mapping \"Magic mapping\") does not work.\n- `arboreal`: supposedly an outdoor map. Solid walls and secret corridors will be shown as trees, digging makes floor instead of corridor and randomly created corridors are made out of floor instead of corridor.\n- `shortsighted`: Monsters cannot see you from far away.\n\nExample:\n\n```\nFLAGS:noteleport,hardfloor\n```\n\n#### INIT\\_MAP\n\n```\nINIT_MAP:'X', 'Y', smoothed, joined, lighted, walled\n```\n\nThis causes the level map to be initialized with a random map generator, similar to how the random [Gnomish Mines](/wiki/Gnomish_Mines \"Gnomish Mines\") look like. Each MAZE-level can contain only 0 or 1 of these definitions.\n\n- `'X'` is the \"foreground\" [fill map character](#Map_characters). This should be something the player can walk on, as the walkable part will be made out of this.\n\n- `'Y'` is the \"background\" [fill map character](#Map_characters). This will surround the foreground area, so can be solid or harmful to player.\n\n- `smoothed` is either `true` or `false`, and denotes whether the level will be \"smoothed\". This means that any foreground character surrounded by fewer than 3 foreground characters is changed to background character.\n\n- `joined` is either `true` or `false`, and denotes whether the level will be \"joined\", so that all parts are accessible by walking.\n\n- `lighted` is either `lit`, `unlit`, or `random`\n\n- `walled` is either `true` or `false`. This is equivalent of using a [WALLIFY](#WALLIFY) -command.\n\nExamples:\n\n```\nINIT_MAP: 'L', '.', false, false, unlit, false\nINIT_MAP: '.', ' ', true, true, random, true\n```\n\n#### MESSAGE\n\n```\nMESSAGE:\"string\"\n```\n\nYou can have 0 or more of these per special level. Each message line gets separated with a `--more--` -prompt in the game. `\"string\"` is any message you want player to see when entering the level.\n\nExample:\n\n```\nMESSAGE: \"Well done, mortal!\"\n```\n\n#### NOMAP\n\n```\nNOMAP\n```\n\nInstead of [GEOMETRY](#GEOMETRY) and [MAP](#MAP), you use this if you think that [INIT\\_MAP](#INIT_MAP) creates a good enough random map and you don't want to use any fixed map-parts.\n\nSee also [MAP](#MAP)\n\n#### GEOMETRY\n\n```\nGEOMETRY:xadj,yadj\n```\n\nThis must be followed by a [MAP](#MAP) definition, and tells the approximate position of the following MAP-part on the level.\n\n- `xadj` is one of `left`, `half-left`, `center`, `half-right`, `right` or `random`\n\n- `yadj` is one of `top`, `center`, `bottom` or `random`\n\nExample:\n\n```\nGEOMETRY:left,top\n```\n\n#### MAP\n\n```\nMAP\n...\n...\n...\nENDMAP\n```\n\nThis must be preceded by [GEOMETRY](#GEOMETRY) definition. You define a map-part by \"drawing\" with [map characters](#Map_characters) between the MAP and ENDMAP. The map can be up to 21 lines high and each line can be up to 76 chars long. Each line must also be the same length. You can also use numbers inside the map, but those will be ignored; they're considered as line numbers.\n\nSee also [NOMAP](#NOMAP).\n\n#### NON\\_DIGGABLE\n\n```\nNON_DIGGABLE:region\n```\n\nSets the walls inside the region as non-diggable.\n\nExample:\n\n```\nNON_DIGGABLE:(00,00,13,12)\n```\n\n#### NON\\_PASSWALL\n\n```\nNON_PASSWALL:region\n```\n\nPlayers and monsters cannot phase through the walls inside the region\n\nExample:\n\n```\nNON_PASSWALL:(00,00,13,12)\n```\n\n#### RANDOM\\_PLACES\n\n```\nRANDOM_PLACES:place,...\n```\n\nWith this command you can set up to 10 coordinate-pair registers, which you can access by using `place[N]` instead of a pair of coordinates in any other command. The registers are shuffled at level creation time.\n\nExample:\n\n```\nRANDOM_PLACES:(23,9),(37,14),(51,9)\nOBJECT:'?',\"genocide\",place[0]\n```\n\n#### RANDOM\\_MONSTERS\n\n```\nRANDOM_MONSTERS:'X',...\n```\n\nWith this command you can set up 10 monster symbol registers, which you can access by using `monster[N]` instead of a monster symbol in any other command. The registers are shuffled at level creation time.\n\nExample:\n\n```\nRANDOM_MONSTERS: 'E', 'X'\nMONSTER:monster[0],random,(27,05)\n```\n\n#### RANDOM\\_OBJECTS\n\n```\nRANDOM_OBJECTS:'X',...\n```\n\nWith this command you can set up 10 object class symbol registers, which you can access by using `object[N]` instead of a object class symbol in any other command. The registers are shuffled at level creation time.\n\nExample:\n\n```\nRANDOM_OBJECTS:'[',')','*','%'\nOBJECT:object[0],random,(39,05)\n```\n\n#### DOOR\n\n```\nDOOR:state,place\n```\n\nPuts a door on the map.\n\n- `state` is one of the following: `nodoor`, `locked`, `closed`, `open` or `random`\n\n- `place` is either a pair of coordinates, a [RANDOM\\_PLACES](#RANDOM_PLACES) place, or `random`\n\nExample:\n\n```\nDOOR:locked,(10,5)\n```\n\n#### DRAWBRIDGE\n\n```\nDRAWBRIDGE:place,dir,state\n```\n\n- `place` is either a pair of coordinates, a [RANDOM\\_PLACES](#RANDOM_PLACES) place, or `random`\n\n- `dir` is one of the following: `north`, `east`, `south` or `west`\n\n- `state` is one of the following: `nodoor`, `locked`, `closed`, `open` or `random`\n\nNote that the drawbridge placement is different from door placement; the coordinates must be a place where the drawbridge would be when it's open, and from that place towards the direction there should be a wall, where the portcullis will be.\n\nExample:\n\n```\nDRAWBRIDGE:(25,18), north, closed\n```\n\n#### REGION\n\n```\nREGION:(x1,y1,x2,y2), lighted, \"type\"\n```\n\nDefine a region on the map with certain light-state and type.\n\n- `lighted` is one of `lit`, `unlit` or `random`.\n\n- `\"type\"` is one of the [room types](#Room_types).\n\nYou can add `filled` or `unfilled`, it will denote whether the room will get stocked with the normal monsters or objects it would get. After that you can add `true` or `false` to denote whether the room is irregularly shaped. If the room is irregular, only the first pair of coordinates (x1,y1) must be inside the room, and the room must be closed off from other areas with non-floor [map characters](#Map_characters). Use the boundary symbol `'B'` in the [MAP](#MAP) to enclose an irregular room; it will be converted to floor symbol `'.'` after the level has been created.\n\nExamples:\n\n```\nREGION:(43,12,49,16),unlit,\"ordinary\"\nREGION:(12,01,20,09),unlit,\"morgue\",unfilled\nREGION:(11,03,29,10),lit,\"temple\",filled,true\n```\n\n#### STAIR-region\n\n```\nSTAIR:(x1,y1,x2,y2), (x3,y3,x4,y4), updown\n```\n\nPlaces a stair within an area covered by (x1,y1,x2,y2) and not covered by (x3,y3,x4,y4).\n\n- `updown` is either `up` or `down`, denoting the direction of the stairs.\n\nIf the area is prefixed with `levregion` then the coordinates are relative to the whole level, otherwise the coordinates are relative to the last-defined [MAP](#MAP).\n\nExample:\n\n```\nSTAIR:(0,0,79,20), (20,5,50,15), up\nSTAIR:levregion(01,0,79,20), (0,0,28,12), up\nSTAIR:(0,0,50,10), levregion(10,0,20,15), down\n```\n\n#### PORTAL\n\n```\nPORTAL:(x1,y1,x2,y2), (x3,y3,x4,y4),\"levelname\"\n```\n\nPlaces a magical portal within an area covered by (x1,y1,x2,y2) and not covered by (x3,y3,x4,y4). The portal will level teleport player to the level with the name \"levelname\". If the area is prefixed with `levregion` then the coordinates are relative to the whole level, otherwise the coordinates are relative to the last-defined [MAP](#MAP).\n\nExample:\n\n```\nPORTAL:levregion(57,01,78,19),(0,0,0,0),\"fire\"\nPORTAL:(0,0,75,19),(65,13,75,19),\"air\"\n```\n\n#### TELEPORT\\_REGION\n\n```\nTELEPORT_REGION:(x1,y1,x2,y2),(x3,y3,x4,y4)\n```\n\nRestricts the area where player can end up on the level when he [level teleports](/wiki/Level_teleport \"Level teleport\") or falls in there. Player will end up within an area covered by (x1,y1,x2,y2) and not covered by (x3,y3,x4,y4). If the area is prefixed with `levregion` then the coordinates are relative to the whole level, otherwise the coordinates are relative to the last-defined [MAP](#MAP). You can also add an optional direction parameter, either `up` or `down`, which will tell when this rule is applied; when player is coming from below or above.\n\nExample:\n\n```\nTELEPORT_REGION:(69,16,69,16),(0,0,0,0)\nTELEPORT_REGION:levregion(56,00,79,20),levregion(01,00,55,20),down\n```\n\n#### BRANCH\n\n```\nBRANCH:(x1,y1,x2,y2),(x3,y3,x4,y4)\n```\n\nPlaces stairs or a magical portal to a dungeon branch within an area covered by (x1,y1,x2,y2) and not covered by (x3,y3,x4,y4). If the area is prefixed with `levregion` then the coordinates are relative to the whole level, otherwise the coordinates are relative to the last-defined [MAP](#MAP).\n\nExample:\n\n```\nBRANCH:levregion(51,2,77,18),(0,0,40,20)\n```\n\n#### MAZEWALK\n\n```\nMAZEWALK:place,dir\n```\n\nCreates a random maze, starting from place.\n\n- `place` is either a pair of coordinates, a [RANDOM\\_PLACES](#RANDOM_PLACES) place, or `random`\n\n- `dir` is one of the following: `north`, `east`, `south` or `west`\n\nMazewalk turns map grids with solid stone (`' '`) into floor (`'.'`). From the starting position, it checks the mapgrid in the direction given, and if it's solid stone, it will move there, and turn that place into floor. Then it will choose a random direction, jump over the nearest mapgrid in that direction, and check the next mapgrid for solid stone. If there is solid stone, mazewalk will move that direction, changing that place and the intervening mapgrid to floor. Normally the generated maze will not have any loops. For example\n\n```\nMAP\nTTTTTTT\nT T T T\nTTTTTTT\nT T T T\nTTTTTTT\nENDMAP\n```\n\nPointing mazewalk at that will create a small maze of trees, but unless the map (at the place where it's put into the level) is surrounded by something else than solid stone, mazewalk will get out of that MAP. Substituting floor characters for some of the trees \"in the maze\" will make loops in the maze, which are not otherwise possible. Substituting floor characters for some of the trees at the edges of the map will make maze entrances and exits at those places.\n\nIf the total area NOT covered by all maze-parts in the level is greater than 1/10 of the total area of the level, then the mazes in the level will get stocked with maze-specific stuff, such as [minotaurs](/wiki/Minotaur \"Minotaur\"), traps and items, proportionally to the amount of space not covered by MAPs.\n\nMazewalk will only work if the solid stone mapgrids in the level (where the MAP was put down) are on odd-numbered squares, both horizontally and vertically. You don't have to worry about this unless your MAP is 21 rows high or 76 columns wide, in which case you'll have to either make the MAP smaller, or move the places where the solid stone squares are.\n\nAlso, MAZEWALK will fail in certain types of MAP-parts if you also use [WALLIFY](#WALLIFY), as that command is applied before MAZEWALKs.\n\nExample:\n\n```\nMAZEWALK:(00,06),west\n```\n\n#### WALLIFY\n\n```\nWALLIFY\n```\n\nTurns walls completely surrounded by other walls into solid stone `' '`.\n\n#### LADDER\n\n```\nLADDER:place, updown\n```\n\nPlaces a ladder up or down at place. See also [STAIRS](#STAIRS).\n\n- `place` is either a pair of coordinates, a [RANDOM\\_PLACES](#RANDOM_PLACES) place, or `random`\n\n- `updown` is either `up` or `down`, denoting the direction of the stairs.\n\nExample:\n\n```\nLADDER:(11,05),down\n```\n\n#### GOLD\n\n```\nGOLD:place, amount\n```\n\nPlaces amount of gold in place.\n\n- `place` is either a pair of coordinates, a [RANDOM\\_PLACES](#RANDOM_PLACES) place, or `random`\n\n- `amount` is any positive integer number.\n\nExample:\n\n```\nGOLD:(5,5),12345\n```\n\n### ROOM-type levels\n\nRoom-type levels begin with [LEVEL](#LEVEL), followed by optional [FLAGS](#FLAGS), optional [INIT\\_MAP](#INIT_MAP), 0 or more [MESSAGEs](#MESSAGE), followed by optional random register initializers ([RANDOM\\_MONSTERS](#RANDOM_MONSTERS) and [RANDOM\\_OBJECT](#RANDOM_OBJECT)), followed by 0 or more [ROOM](#ROOM) and [SUBROOM](#SUBROOM) definitions (and the contents for those rooms), followed by [RANDOM\\_CORRIDORS](#RANDOM_CORRIDORS).\n\nThat is:\n\n- [LEVEL](#LEVEL)\n\n- [FLAGS](#FLAGS), optional\n\n- [INIT\\_MAP](#INIT_MAP), optional\n\n- [MESSAGE](#MESSAGE), 0 or more\n\n- [RANDOM\\_MONSTERS](#RANDOM_MONSTERS), optional\n\n- [RANDOM\\_OBJECTS](#RANDOM_OBJECTS), optional\n\n  - [ROOM](#ROOM), 0 or more\n  - contents for the room (monsters, objects, traps, etc.)\n  - [SUBROOM](#SUBROOM), 0 or more\n    - contents for the subroom (monsters, objects, traps, etc.)\n\n- [RANDOM\\_CORRIDORS](#RANDOM_CORRIDORS)\n\nIt's not possible to define arbitrarily shaped rooms with this type of level.\n\n#### LEVEL\n\n```\nLEVEL: \"name\"\n```\n\n`\"name\"` is the unique file name for this level. Can be up to 8 chars long. This file name is defined by the way this level is defined in [dungeon.def](/wiki/Dungeon.def_format \"Dungeon.def format\").\n\nExample:\n\n```\nLEVEL: \"oracle\"\n```\n\n#### RANDOM\\_CORRIDORS\n\n```\nRANDOM_CORRIDORS\n```\n\nCreates random corridors between the rooms in the level, so that all rooms are accessible.\n\n#### ROOM\n\n```\nROOM: \"type\", lighted, pos, align, size\n```\n\nCreates a room. The room will be placed on a position defined both by pos and align. pos defines the rough position (in a 5-by-5 grid on the screen), and align defines the room position within that. NOTE: Creation of a randomly located room may fail, especially if there's little free space to fit it on the level. Contents of such a room won't be created either.\n\n- `\"type\"` is one of the [room types](#Room_types).\n\n- `lighted` is one of `lit`, `unlit` or `random`.\n\n- `pos` is either `random` or `(xpos, ypos)`, where both `xpos` and `ypos` are between 0 and 5. This is an approximate position on the screen.\n\n- `align` is either `random` or `(xalign, yalign)` and is the room alignment within the `pos`.\n\n  - `xalign` is one of `left`, `half-left`, `center`, `half-right`, `right` or `random`\n\n  - `yalign` is one of `top`, `center`, `bottom` or `random`.\n\n- `size` is either `random` or `(width, height)`.\n\nYou can also give one additional parameter, which can either be `true` or `false`. This tells whether the room will get stocked by objects and monsters it would normally get (such as shopkeepers and items for sale for shops).\n\nExample:\n\n```\nROOM: \"ordinary\", random, random, random, random\nROOM: \"ordinary\", lit, (3,3), (center,center), (11,9)\n```\n\n#### SUBROOM\n\n```\nSUBROOM: \"type\", lighted, pos, size, \"parent\"\n```\n\nCreates a room inside previously defined ROOM.\n\n- `\"type\"` is one of the [room types](#Room_types).\n\n- `lighted` is one of `lit`, `unlit` or `random`.\n\n- `pos` is either `random` or `(xpos, ypos)`, where `xpos` and `ypos` define the absolute position of this subroom inside the parent room. (0,0) is the upper left corner of the parent.\n\n- `size` is either `random` or `(width, height)`.\n\n- `\"parent\"` is the name of the parent room, as defined with [NAME](#NAME).\n\nYou can also give one additional parameter, which can either be `true` or `false`. This tells whether the room will get stocked by objects and monsters it would normally get (such as shopkeepers and items for sale for shops).\n\nExample:\n\n```\nSUBROOM:\"shop\",lit,(10,10),(3,3),\"town\"\nSUBROOM:\"ordinary\",random,(19,2),(2,2),\"town\"\n```\n\n#### NAME\n\n```\nNAME: \"string\"\n```\n\nNames the previously defined ROOM or SUBROOM. Subrooms need to know the name of their parent room, this has no other meaning.\n\nExample:\n\n```\nNAME: \"town\"\n```\n\n#### CHANCE\n\n```\nCHANCE: int\n```\n\nAssigns a creation chance to the previously defined ROOM or SUBROOM. The room walls and doors will get created no matter what, this just tells whether the room contents will be created. `int` should be in the 0-100 range. Only non-ordinary rooms can have this.\n\nExample:\n\n```\nCHANCE: 90\n```\n\n#### Room DOOR\n\n```\nDOOR: secret, state, wall, pos\n```\n\nCreates a door with certain state on the previously defined ROOM or SUBROOM. Note that Room DOOR format is different from MAZE-level [DOOR](#DOOR).\n\n- `secret` can be `true`, `false` or `random`\n\n- `state` is one of the following: `nodoor`, `locked`, `closed`, `open` or `random`\n\n- `wall` is one of the following: `north`, `east`, `south` or `west` and tells on what wall of the room the door will be created.\n\n- `pos` is either `random` or a positive integer, and tells how far from top or left the door will be.\n\nExample:\n\n```\nDOOR: false, closed, south, random\n```\n\n### Common syntax\n\nThe following commands are common to both MAZE and ROOM-type levels. For the MAZE-levels, the coordinates used are the previously defined MAP, for ROOM-levels, it's either the previously defined ROOM or SUBROOM.\n\n#### ALTAR\n\n```\nALTAR:place,align,type\n```\n\nPlaces an altar on the previously defined map or ROOM or SUBROOM.\n\n- `place` is either a pair of coordinates, a [RANDOM\\_PLACES](#RANDOM_PLACES) place, or `random`\n\n- `align` is either `noalign`, `law`, `neutral`, `chaos`, `coaligned`, `noncoaligned`, `random` or an alignment register `align[N]`, where N can be either 0,1 or 2.\n\n- `type` is one of `sanctum`, `shrine`, `altar` or `random`\n\nExample:\n\n```\nALTAR:(50,14),chaos,altar\nALTAR:place[0],noalign,altar\nALTAR:(07,09),align[0],sanctum\n```\n\n#### CONTAINER\n\nThis defines a container that you can put items in. It accepts exactly the same parameters as [OBJECT](#OBJECT). Normal content generation for this object is suppressed.\n\nExample:\n\n```\nCONTAINER:'(',\"chest\",(5,5)\nOBJECT:'/',\"wishing\",contained\n```\n\n#### ENGRAVING\n\n```\nENGRAVING:place, type, \"text\"\n```\n\nCreates an engraving on the floor.\n\n- `place` is either a pair of coordinates, a [RANDOM\\_PLACES](#RANDOM_PLACES) place, or `random`\n\n- `type` is one of `dust`, `engrave`, `burn`, `mark` or `random`.\n\n- `\"text\"` is the text to engrave on the floor.\n\nExample:\n\n```\nENGRAVING:(12,03), engrave, \"You are now entering the Gnome King's wine cellar.\"\n```\n\n#### FOUNTAIN\n\n```\nFOUNTAIN:place\n```\n\nPlaces a fountain on the map.\n\n- `place` is either a pair of coordinates, a [RANDOM\\_PLACES](#RANDOM_PLACES) place, or `random`\n\nExample:\n\n```\nFOUNTAIN:(10,08)\n```\n\n#### MONSTER\n\n```\nMONSTER:'X',\"monst\",place\n```\n\n- `'X'` is the monster class symbol, or `random`, or a [RANDOM\\_MONSTERS](#RANDOM_MONSTERS) index\n\n- `\"monst\"` is the specific monster, or `random`\n\n- `place` is either a pair of coordinates, a [RANDOM\\_PLACES](#RANDOM_PLACES) place, or `random`\n\nOther things you can add to the monster definition:\n\n- `hostile` or `peaceful`\n\n- `asleep` or `awake`\n\n- For mimics and other shapechangers you can also add the following:\n\n  - `m_feature \"dungeon_feature\"` to force the mimic to be a dungeon feature.\n  - `m_object \"object_name\"` to force the mimic to be an object. object\\_name is the name of an object as they are in [objects.c](/wiki/Objects.c \"Objects.c\")\n  - `m_monster \"monster_name\"` to force the shapechanger to be a certain monster.\n\n- `\"Name\"` to name the monster.\n\nOptionally, you can put `[NN%]` right after `MONSTER` to make the monster generation optional. NN is a percentage chance of the monster being generated when the level is created.\n\nExamples:\n\n```\nMONSTER:'v',\"dust vortex\",(42,05)\nMONSTER:'E',\"earth elemental\",(39,06),peaceful\nMONSTER:'&',\"Pestilence\",place[0],hostile\nMONSTER:random,random,random\nMONSTER:random,random,(01,01), asleep\nMONSTER:monster[0],random,(27,05)\nMONSTER:'m',\"giant mimic\",place[1],m_feature \"fountain\"\nMONSTER:'m',random,place[0], m_object \"luckstone\"\nMONSTER:'@',\"rogue\",(35,06),peaceful,\"Pug\"\nMONSTER[50%]:'P', \"green slime\", random\n```\n\n#### OBJECT\n\n```\nOBJECT:'X',\"name\",place\n```\n\nEach map-part can contain any number of object definitions.\n\n- `'X'`: a character denoting one of the object classes.\n\n- `\"name\"`: either an object name as listed in [objects.c](/wiki/Objects.c \"Objects.c\"), or `random`\n\n- `place`: either a pair of coordinates, a [RANDOM\\_PLACES](#RANDOM_PLACES) place, or `random`, or `contained`. If contained, then this object will be placed in the previously defined [CONTAINER](#CONTAINER).\n\nOptional stuff you can add to the object definition:\n\n- `cursestate, \"monster_id\", spe`\n- `cursestate, spe`\n- `\"monster_id\", spe`\n\nWhere\n\n- `cursestate` is one of `blessed`, `uncursed`, `cursed` or `random`.\n\n- `\"monster_id\"` is a monster type, as defined in [Source:NetHack 3.4.3/src/monst.c](/wiki/Source:NetHack_3.4.3/src/monst.c \"Source:NetHack 3.4.3/src/monst.c\")\n\n- `spe` is an integer, and defines different things depending on what kind of object is generated:\n\n  - enchantment for [armor](/wiki/Armor \"Armor\") and [weapons](/wiki/Weapon \"Weapon\")\n  - charges for [wands](/wiki/Wands \"Wands\"), [rings](/wiki/Rings \"Rings\"), [magic markers](/wiki/Magic_marker \"Magic marker\") and everything else that has charges.\n  - historic and gender bit for [statues](/wiki/Statue \"Statue\"). 1 is historic, 2 is male, 4 is female. Adding the values together is possible, so you can create eg. historic, male statue with value 3 and historic, female with 5. Leaving the gender specification out will either result in a random gender, or if the monster is always of certain gender, then the statue will be that gender too. (eg. nymphs)\n  - [tins](/wiki/Tin \"Tin\"): 1 means spinach, -1 is home-made.\n  - [containers](/wiki/Container \"Container\"): 1 means the box contains [Schroedinger's Cat](/wiki/Schroedinger%27s_Cat \"Schroedinger's Cat\").\n  - [oil lamps](/wiki/Oil_lamp \"Oil lamp\") and [candles](/wiki/Candle \"Candle\"): 0 means the lamp is out of oil.\n  - [Candelabrum](/wiki/Candelabrum \"Candelabrum\"): how many candles are attached to it.\n  - [scroll of mail](/wiki/Scroll_of_mail \"Scroll of mail\"): 1 means it was not delivered to current player.\n  - [eggs](/wiki/Egg \"Egg\"): 1 means hero laid it.\n  - [chests](/wiki/Chest \"Chest\"): 2 means it's a royal coffer in a [throne room](/wiki/Throne_room \"Throne room\").\n\nAfter these you can also add a quoted string, which would become the object's name.\n\nOptionally, you can put `[NN%]` right after `OBJECT` to make the object generation optional. NN is a percentage chance of the object being generated when the level is created.\n\nExamples:\n\n```\nOBJECT:'%', \"food ration\", random\nOBJECT:'*', random, (10,10)\nOBJECT:'?', \"genocide\", place[0]\nOBJECT[10%]:'\"', \"amulet of life saving\", random\nOBJECT:'%', \"corpse\", random, \"archeologist\", 0\nOBJECT[50%]:')', \"scimitar\", contained, blessed, +2\nOBJECT:'`', \"statue\", (0,0), \"forest centaur\", 1\nOBJECT:'(', \"crystal ball\", (17,08), blessed, 5, \"The Orb of Fate\"\n```\n\n#### STAIR\n\n```\nSTAIR:place, updown\n```\n\nPlaces a stair up or down at place. See also [STAIR-region](#STAIR-region) and [LADDER](#LADDER).\n\n- `place` is either a pair of coordinates, a [RANDOM\\_PLACES](#RANDOM_PLACES) place, or `random`\n\n- `updown` is either `up` or `down`, denoting the direction of the stairs.\n\nExample:\n\n```\nSTAIR:(70,08), up\nSTAIR:random, down\nSTAIR:place[3], up\n```\n\n#### TRAP\n\n```\nTRAP:\"name\",place\n```\n\n- `\"name\"` is the [trap's name](#Trap_names), or `random`\n\n- `place` is either a pair of coordinates, a [RANDOM\\_PLACES](#RANDOM_PLACES) place, or `random`\n\nOptionally, you can put `[NN%]` right after `TRAP` to make the trap generation optional. NN is a percentage chance of the trap being generated when the level is created.\n\nExamples:\n\n```\nTRAP:\"hole\",(12,10)\nTRAP:\"anti magic\",random\nTRAP:random,random\nTRAP[25%]:\"polymorph\",random\n```\n\n#### Map characters\n\n| character | [dungeon feature](/wiki/Dungeon_feature \"Dungeon feature\")    |\n| --------- | ------------------------------------------------------------- |\n| `' '`     | solid wall                                                    |\n| `'#'`     | corridor                                                      |\n| `'.'`     | room floor (Unlit, unless lit with [REGION](#REGION)-command) |\n| `'-'`     | horizontal wall                                               |\n| `'\\|'`    | vertical wall                                                 |\n| `'+'`     | door (State is defined with [DOOR](#DOOR) -command)           |\n| `'A'`     | air                                                           |\n| `'B'`     | crosswall / boundary symbol hack (See [REGION](#REGION))      |\n| `'C'`     | cloud                                                         |\n| `'S'`     | secret door                                                   |\n| `'H'`     | secret corridor                                               |\n| `'{'`     | fountain                                                      |\n| `'\\'`     | throne                                                        |\n| `'K'`     | sink                                                          |\n| `'}'`     | moat                                                          |\n| `'P'`     | pool of water                                                 |\n| `'L'`     | lava pool                                                     |\n| `'I'`     | ice                                                           |\n| `'W'`     | water                                                         |\n| `'T'`     | tree                                                          |\n| `'F'`     | iron bars                                                     |\n\n#### Trap names\n\n\"anti magic\", \"arrow\", \"bear\", \"board\", \"dart\", \"falling rock\", \"fire\", \"hole\", \"land mine\", \"level teleport\", \"magic portal\", \"magic\", \"pit\", \"polymorph\", \"rolling boulder\", \"rust\", \"sleep gas\", \"spiked pit\", \"statue\", \"teleport\", \"trap door\", \"web\"\n\n#### Room types\n\n\"ordinary\", \"throne\", \"swamp\", \"vault\", \"beehive\", \"morgue\", \"barracks\", \"zoo\", \"delphi\", \"temple\", \"anthole\", \"cocknest\", \"leprehall\", \"shop\", \"armor shop\", \"scroll shop\", \"potion shop\", \"weapon shop\", \"food shop\", \"ring shop\", \"wand shop\", \"tool shop\", \"book shop\", \"candle shop\"\n\n## See also\n\n- [Des-file format (UnNetHack)](/wiki/Des-file_format_\\(UnNetHack\\) \"Des-file format (UnNetHack)\")\n- [Des-file format](/wiki/Des-file_format \"Des-file format\")\n\n[![This article is unlikely to require revision for the next version of NetHack. Click here for more information.](/images/5/58/Noversion.png)](/wiki/NetHackWiki:Next_version \"This article is unlikely to require revision for the next version of NetHack. Click here for more information.\")\n","html":"<!DOCTYPE html>\n<html class=\"client-nojs\" lang=\"en\" dir=\"ltr\">\n<head>\n<meta charset=\"UTF-8\"/>\n<title>Des-file format (NetHack 3.4.3) - NetHack Wiki</title>\n<script>document.documentElement.className = document.documentElement.className.replace( /(^|\\s)client-nojs(\\s|$)/, \"$1client-js$2\" );</script>\n<script>(window.RLQ=window.RLQ||[]).push(function(){mw.config.set({\"wgCanonicalNamespace\":\"\",\"wgCanonicalSpecialPageName\":false,\"wgNamespaceNumber\":0,\"wgPageName\":\"Des-file_format_(NetHack_3.4.3)\",\"wgTitle\":\"Des-file format (NetHack 3.4.3)\",\"wgCurRevisionId\":169387,\"wgRevisionId\":169387,\"wgArticleId\":25768,\"wgIsArticle\":true,\"wgIsRedirect\":false,\"wgAction\":\"view\",\"wgUserName\":null,\"wgUserGroups\":[\"*\"],\"wgCategories\":[\"Annotations\"],\"wgBreakFrames\":false,\"wgPageContentLanguage\":\"en\",\"wgPageContentModel\":\"wikitext\",\"wgSeparatorTransformTable\":[\"\",\"\"],\"wgDigitTransformTable\":[\"\",\"\"],\"wgDefaultDateFormat\":\"dmy\",\"wgMonthNames\":[\"\",\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"],\"wgMonthNamesShort\":[\"\",\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"],\"wgRelevantPageName\":\"Des-file_format_(NetHack_3.4.3)\",\"wgRelevantArticleId\":25768,\"wgRequestId\":\"90c0fc2ef4838bdec0c7068f\",\"wgCSPNonce\":false,\"wgIsProbablyEditable\":false,\"wgRelevantPageIsProbablyEditable\":false,\"wgRestrictionEdit\":[],\"wgRestrictionMove\":[],\"wgWikiEditorEnabledModules\":[],\"wgCategoryTreePageCategoryOptions\":\"{\\\"mode\\\":0,\\\"hideprefix\\\":20,\\\"showcount\\\":true,\\\"namespaces\\\":false}\"});mw.loader.state({\"site.styles\":\"ready\",\"noscript\":\"ready\",\"user.styles\":\"ready\",\"user\":\"ready\",\"user.options\":\"ready\",\"user.tokens\":\"loading\",\"mediawiki.legacy.shared\":\"ready\",\"mediawiki.legacy.commonPrint\":\"ready\",\"mediawiki.toc.styles\":\"ready\",\"mediawiki.skinning.interface\":\"ready\",\"skins.vector.styles\":\"ready\"});mw.loader.implement(\"user.tokens@0tffind\",function($,jQuery,require,module){/*@nomin*/mw.user.tokens.set({\"editToken\":\"+\\\\\",\"patrolToken\":\"+\\\\\",\"watchToken\":\"+\\\\\",\"csrfToken\":\"+\\\\\"});\n});RLPAGEMODULES=[\"site\",\"mediawiki.page.startup\",\"mediawiki.user\",\"mediawiki.page.ready\",\"mediawiki.toc\",\"mediawiki.searchSuggest\",\"skins.vector.js\"];mw.loader.load(RLPAGEMODULES);});</script>\n<link rel=\"stylesheet\" href=\"/load.php?debug=false&amp;lang=en&amp;modules=mediawiki.legacy.commonPrint%2Cshared%7Cmediawiki.skinning.interface%7Cmediawiki.toc.styles%7Cskins.vector.styles&amp;only=styles&amp;skin=vector\"/>\n<script async=\"\" src=\"/load.php?debug=false&amp;lang=en&amp;modules=startup&amp;only=scripts&amp;skin=vector\"></script>\n<meta name=\"ResourceLoaderDynamicStyles\" content=\"\"/>\n<link rel=\"stylesheet\" href=\"/load.php?debug=false&amp;lang=en&amp;modules=site.styles&amp;only=styles&amp;skin=vector\"/>\n<meta name=\"generator\" content=\"MediaWiki 1.32.5\"/>\n<meta name=\"description\" content=\"All lines beginning with # are comments and are ignored by the level compiler, except between MAP and ENDMAP.\"/>\n<link rel=\"image_src\" href=\"/images/6/65/Nethackwiki-logo.png\"/>\n<link rel=\"shortcut icon\" href=\"/images/6/64/Favicon.ico\"/>\n<link rel=\"search\" type=\"application/opensearchdescription+xml\" href=\"/opensearch_desc.php\" title=\"NetHackWiki\"/>\n<link rel=\"EditURI\" type=\"application/rsd+xml\" href=\"https://nethackwiki.com/api.php?action=rsd\"/>\n<link rel=\"canonical\" href=\"/wiki/Des-file_format_(NetHack_3.4.3)\"/>\n<!--[if lt IE 9]><script src=\"/load.php?debug=false&amp;lang=en&amp;modules=html5shiv&amp;only=scripts&amp;skin=vector&amp;sync=1\"></script><![endif]-->\n</head>\n<body class=\"mediawiki ltr sitedir-ltr mw-hide-empty-elt ns-0 ns-subject page-Des-file_format_NetHack_3_4_3 rootpage-Des-file_format_NetHack_3_4_3 skin-vector action-view\">\t\t<div id=\"mw-page-base\" class=\"noprint\"></div>\n\t\t<div id=\"mw-head-base\" class=\"noprint\"></div>\n\t\t<div id=\"content\" class=\"mw-body\" role=\"main\">\n\t\t\t<a id=\"top\"></a>\n\t\t\t<div class=\"mw-indicators mw-body-content\">\n</div>\n<h1 id=\"firstHeading\" class=\"firstHeading\" lang=\"en\">Des-file format (NetHack 3.4.3)</h1>\t\t\t<div id=\"bodyContent\" class=\"mw-body-content\">\n\t\t\t\t<div id=\"siteSub\" class=\"noprint\">From NetHackWiki</div>\t\t\t\t<div id=\"contentSub\"></div>\n\t\t\t\t<div id=\"jump-to-nav\"></div>\t\t\t\t<a class=\"mw-jump-link\" href=\"#mw-head\">Jump to navigation</a>\n\t\t\t\t<a class=\"mw-jump-link\" href=\"#p-search\">Jump to search</a>\n\t\t\t\t<div id=\"mw-content-text\" lang=\"en\" dir=\"ltr\" class=\"mw-content-ltr\"><div class=\"mw-parser-output\"><p><b>NOTE: This is a guide to the des-file format for NetHack version 3.4.3. NetHack 3.6 and above use different syntax, and it would be confusing to store the differences on one page. Edit this page only for language or technical details relevant to 3.4.3. Go <a href=\"/wiki/Des-file_format\" title=\"Des-file format\">here</a> for information about the most recent version of the file format.</b>\n</p><p>The <b>des-file format</b> is the language which is used to describe the <a href=\"/wiki/Special_level\" title=\"Special level\">special levels</a> for NetHack. It is compiled into a binary file by <a href=\"/wiki/Lev_comp\" title=\"Lev comp\">lev_comp</a>.\n</p><p>It is not a <i>real</i> programming language: there is no flow control, and the order in which different NetHack features are created is fixed.\n</p><p>There are two types of levels you can create: mazes and rooms. For <a href=\"#MAZE-type_levels\">MAZE-type levels</a> you \"draw\" one or more maps with ASCII characters and then describe the monsters, objects and so on that are in the map (example: <a href=\"/wiki/Source:NetHack_3.4.3/dat/bigroom.des\" title=\"Source:NetHack 3.4.3/dat/bigroom.des\">Source:NetHack 3.4.3/dat/bigroom.des</a>. For <a href=\"#ROOM-type_levels\">ROOM-type levels</a>, you describe rooms and their contents (example: <a href=\"/wiki/Source:NetHack_3.4.3/dat/oracle.des\" title=\"Source:NetHack 3.4.3/dat/oracle.des\">Source:NetHack 3.4.3/dat/oracle.des</a>). The maze-levels are easier to make and understand, and room-type levels do not offer as much control over the level.\n</p><p><a href=\"/wiki/Lev_comp\" title=\"Lev comp\">lev_comp</a> will create a .lev-file for each MAZE and LEVEL definition in the file. These .lev-files will be loaded into NetHack to make the special levels. The .lev-files NetHack loads are actually defined in <a href=\"/wiki/Dungeon.def_format\" title=\"Dungeon.def format\">dungeon.def</a>.\n</p><p><a href=\"/wiki/UnNetHack\" title=\"UnNetHack\">UnNetHack</a> uses a somewhat different <a href=\"/wiki/Des-file_format_(UnNetHack)\" title=\"Des-file format (UnNetHack)\">format</a>.\n</p>\n<div class=\"floatright\" style=\"float:right; clear:right;\"><div id=\"toc\" class=\"toc\"><input type=\"checkbox\" role=\"button\" id=\"toctogglecheckbox\" class=\"toctogglecheckbox\" style=\"display:none\" /><div class=\"toctitle\" lang=\"en\" dir=\"ltr\"><h2>Contents</h2><span class=\"toctogglespan\"><label class=\"toctogglelabel\" for=\"toctogglecheckbox\"></label></span></div>\n<ul>\n<li class=\"toclevel-1 tocsection-1\"><a href=\"#Language_syntax\"><span class=\"tocnumber\">1</span> <span class=\"toctext\">Language syntax</span></a>\n<ul>\n<li class=\"toclevel-2 tocsection-2\"><a href=\"#MAZE-type_levels\"><span class=\"tocnumber\">1.1</span> <span class=\"toctext\">MAZE-type levels</span></a>\n<ul>\n<li class=\"toclevel-3 tocsection-3\"><a href=\"#MAZE\"><span class=\"tocnumber\">1.1.1</span> <span class=\"toctext\">MAZE</span></a></li>\n<li class=\"toclevel-3 tocsection-4\"><a href=\"#FLAGS\"><span class=\"tocnumber\">1.1.2</span> <span class=\"toctext\">FLAGS</span></a></li>\n<li class=\"toclevel-3 tocsection-5\"><a href=\"#INIT_MAP\"><span class=\"tocnumber\">1.1.3</span> <span class=\"toctext\">INIT_MAP</span></a></li>\n<li class=\"toclevel-3 tocsection-6\"><a href=\"#MESSAGE\"><span class=\"tocnumber\">1.1.4</span> <span class=\"toctext\">MESSAGE</span></a></li>\n<li class=\"toclevel-3 tocsection-7\"><a href=\"#NOMAP\"><span class=\"tocnumber\">1.1.5</span> <span class=\"toctext\">NOMAP</span></a></li>\n<li class=\"toclevel-3 tocsection-8\"><a href=\"#GEOMETRY\"><span class=\"tocnumber\">1.1.6</span> <span class=\"toctext\">GEOMETRY</span></a></li>\n<li class=\"toclevel-3 tocsection-9\"><a href=\"#MAP\"><span class=\"tocnumber\">1.1.7</span> <span class=\"toctext\">MAP</span></a></li>\n<li class=\"toclevel-3 tocsection-10\"><a href=\"#NON_DIGGABLE\"><span class=\"tocnumber\">1.1.8</span> <span class=\"toctext\">NON_DIGGABLE</span></a></li>\n<li class=\"toclevel-3 tocsection-11\"><a href=\"#NON_PASSWALL\"><span class=\"tocnumber\">1.1.9</span> <span class=\"toctext\">NON_PASSWALL</span></a></li>\n<li class=\"toclevel-3 tocsection-12\"><a href=\"#RANDOM_PLACES\"><span class=\"tocnumber\">1.1.10</span> <span class=\"toctext\">RANDOM_PLACES</span></a></li>\n<li class=\"toclevel-3 tocsection-13\"><a href=\"#RANDOM_MONSTERS\"><span class=\"tocnumber\">1.1.11</span> <span class=\"toctext\">RANDOM_MONSTERS</span></a></li>\n<li class=\"toclevel-3 tocsection-14\"><a href=\"#RANDOM_OBJECTS\"><span class=\"tocnumber\">1.1.12</span> <span class=\"toctext\">RANDOM_OBJECTS</span></a></li>\n<li class=\"toclevel-3 tocsection-15\"><a href=\"#DOOR\"><span class=\"tocnumber\">1.1.13</span> <span class=\"toctext\">DOOR</span></a></li>\n<li class=\"toclevel-3 tocsection-16\"><a href=\"#DRAWBRIDGE\"><span class=\"tocnumber\">1.1.14</span> <span class=\"toctext\">DRAWBRIDGE</span></a></li>\n<li class=\"toclevel-3 tocsection-17\"><a href=\"#REGION\"><span class=\"tocnumber\">1.1.15</span> <span class=\"toctext\">REGION</span></a></li>\n<li class=\"toclevel-3 tocsection-18\"><a href=\"#STAIR-region\"><span class=\"tocnumber\">1.1.16</span> <span class=\"toctext\">STAIR-region</span></a></li>\n<li class=\"toclevel-3 tocsection-19\"><a href=\"#PORTAL\"><span class=\"tocnumber\">1.1.17</span> <span class=\"toctext\">PORTAL</span></a></li>\n<li class=\"toclevel-3 tocsection-20\"><a href=\"#TELEPORT_REGION\"><span class=\"tocnumber\">1.1.18</span> <span class=\"toctext\">TELEPORT_REGION</span></a></li>\n<li class=\"toclevel-3 tocsection-21\"><a href=\"#BRANCH\"><span class=\"tocnumber\">1.1.19</span> <span class=\"toctext\">BRANCH</span></a></li>\n<li class=\"toclevel-3 tocsection-22\"><a href=\"#MAZEWALK\"><span class=\"tocnumber\">1.1.20</span> <span class=\"toctext\">MAZEWALK</span></a></li>\n<li class=\"toclevel-3 tocsection-23\"><a href=\"#WALLIFY\"><span class=\"tocnumber\">1.1.21</span> <span class=\"toctext\">WALLIFY</span></a></li>\n<li class=\"toclevel-3 tocsection-24\"><a href=\"#LADDER\"><span class=\"tocnumber\">1.1.22</span> <span class=\"toctext\">LADDER</span></a></li>\n<li class=\"toclevel-3 tocsection-25\"><a href=\"#GOLD\"><span class=\"tocnumber\">1.1.23</span> <span class=\"toctext\">GOLD</span></a></li>\n</ul>\n</li>\n<li class=\"toclevel-2 tocsection-26\"><a href=\"#ROOM-type_levels\"><span class=\"tocnumber\">1.2</span> <span class=\"toctext\">ROOM-type levels</span></a>\n<ul>\n<li class=\"toclevel-3 tocsection-27\"><a href=\"#LEVEL\"><span class=\"tocnumber\">1.2.1</span> <span class=\"toctext\">LEVEL</span></a></li>\n<li class=\"toclevel-3 tocsection-28\"><a href=\"#RANDOM_CORRIDORS\"><span class=\"tocnumber\">1.2.2</span> <span class=\"toctext\">RANDOM_CORRIDORS</span></a></li>\n<li class=\"toclevel-3 tocsection-29\"><a href=\"#ROOM\"><span class=\"tocnumber\">1.2.3</span> <span class=\"toctext\">ROOM</span></a></li>\n<li class=\"toclevel-3 tocsection-30\"><a href=\"#SUBROOM\"><span class=\"tocnumber\">1.2.4</span> <span class=\"toctext\">SUBROOM</span></a></li>\n<li class=\"toclevel-3 tocsection-31\"><a href=\"#NAME\"><span class=\"tocnumber\">1.2.5</span> <span class=\"toctext\">NAME</span></a></li>\n<li class=\"toclevel-3 tocsection-32\"><a href=\"#CHANCE\"><span class=\"tocnumber\">1.2.6</span> <span class=\"toctext\">CHANCE</span></a></li>\n<li class=\"toclevel-3 tocsection-33\"><a href=\"#Room_DOOR\"><span class=\"tocnumber\">1.2.7</span> <span class=\"toctext\">Room DOOR</span></a></li>\n</ul>\n</li>\n<li class=\"toclevel-2 tocsection-34\"><a href=\"#Common_syntax\"><span class=\"tocnumber\">1.3</span> <span class=\"toctext\">Common syntax</span></a>\n<ul>\n<li class=\"toclevel-3 tocsection-35\"><a href=\"#ALTAR\"><span class=\"tocnumber\">1.3.1</span> <span class=\"toctext\">ALTAR</span></a></li>\n<li class=\"toclevel-3 tocsection-36\"><a href=\"#CONTAINER\"><span class=\"tocnumber\">1.3.2</span> <span class=\"toctext\">CONTAINER</span></a></li>\n<li class=\"toclevel-3 tocsection-37\"><a href=\"#ENGRAVING\"><span class=\"tocnumber\">1.3.3</span> <span class=\"toctext\">ENGRAVING</span></a></li>\n<li class=\"toclevel-3 tocsection-38\"><a href=\"#FOUNTAIN\"><span class=\"tocnumber\">1.3.4</span> <span class=\"toctext\">FOUNTAIN</span></a></li>\n<li class=\"toclevel-3 tocsection-39\"><a href=\"#MONSTER\"><span class=\"tocnumber\">1.3.5</span> <span class=\"toctext\">MONSTER</span></a></li>\n<li class=\"toclevel-3 tocsection-40\"><a href=\"#OBJECT\"><span class=\"tocnumber\">1.3.6</span> <span class=\"toctext\">OBJECT</span></a></li>\n<li class=\"toclevel-3 tocsection-41\"><a href=\"#STAIR\"><span class=\"tocnumber\">1.3.7</span> <span class=\"toctext\">STAIR</span></a></li>\n<li class=\"toclevel-3 tocsection-42\"><a href=\"#TRAP\"><span class=\"tocnumber\">1.3.8</span> <span class=\"toctext\">TRAP</span></a></li>\n<li class=\"toclevel-3 tocsection-43\"><a href=\"#Map_characters\"><span class=\"tocnumber\">1.3.9</span> <span class=\"toctext\">Map characters</span></a></li>\n<li class=\"toclevel-3 tocsection-44\"><a href=\"#Trap_names\"><span class=\"tocnumber\">1.3.10</span> <span class=\"toctext\">Trap names</span></a></li>\n<li class=\"toclevel-3 tocsection-45\"><a href=\"#Room_types\"><span class=\"tocnumber\">1.3.11</span> <span class=\"toctext\">Room types</span></a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li class=\"toclevel-1 tocsection-46\"><a href=\"#See_also\"><span class=\"tocnumber\">2</span> <span class=\"toctext\">See also</span></a></li>\n</ul>\n</div>\n</div>\n<h2><span class=\"mw-headline\" id=\"Language_syntax\">Language syntax</span></h2>\n<p>All lines beginning with <tt>#</tt> are comments and are ignored by the level compiler, except between <a href=\"#MAP\">MAP</a> and <a href=\"#MAP\">ENDMAP</a>.\n</p><p>Example:\n</p>\n<pre># This is a comment.\n</pre>\n<h3><span class=\"mw-headline\" id=\"MAZE-type_levels\">MAZE-type levels</span></h3>\n<p>Maze-type levels begin with <a href=\"#MAZE\">MAZE</a>, followed with optional <a href=\"#FLAGS\">FLAGS</a>, optional <a href=\"#INIT_MAP\">INIT_MAP</a>, 0 or more <a href=\"#MESSAGE\">MESSAGEs</a> and up to 9 maze-parts, each of which consists either of <a href=\"#NOMAP\">NOMAP</a> or <a href=\"#GEOMETRY\">GEOMETRY</a> and <a href=\"#MAP\">MAP</a>, followed by zero or more the random register initializers, one of each (<a href=\"#RANDOM_MONSTERS\">RANDOM_MONSTERS</a>, <a href=\"#RANDOM_OBJECTS\">RANDOM_OBJECTS</a>, <a href=\"#RANDOM_PLACES\">RANDOM_PLACES</a>), followed by zero or more of the map details (everything else, eg. <a href=\"#MONSTER\">MONSTER</a>, <a href=\"#OBJECT\">OBJECT</a>, <a href=\"#TRAP\">TRAP</a>, etc.)\n</p><p>That is:\n</p>\n<ul><li><a href=\"#MAZE\">MAZE</a></li>\n<li><a href=\"#FLAGS\">FLAGS</a>, optional</li>\n<li><a href=\"#INIT_MAP\">INIT_MAP</a>, optional</li>\n<li><a href=\"#MESSAGE\">MESSAGE</a>, 0 or more</li>\n<li>up to 9 map-parts, which consist of:\n<ul><li><a href=\"#NOMAP\">NOMAP</a> or <a href=\"#GEOMETRY\">GEOMETRY</a> and <a href=\"#MAP\">MAP</a></li>\n<li><a href=\"#RANDOM_MONSTERS\">RANDOM_MONSTERS</a>, optional</li>\n<li><a href=\"#RANDOM_OBJECTS\">RANDOM_OBJECTS</a>, optional</li>\n<li><a href=\"#RANDOM_PLACES\">RANDOM_PLACES</a>, optional</li>\n<li>The rest of the definitions of this map-part</li></ul></li></ul>\n<p>Example:\n</p>\n<pre>MAZE:\"test\",' '\nFLAGS:noteleport\nMESSAGE:\"Welcome!\"\nGEOMETRY:center,center\nMAP\n.....\n.L.L.\n.....\n.L.L.\n.....\nENDMAP\nMONSTER:random,random,random\nOBJECT:'%',random,random\n</pre>\n<h4><span class=\"mw-headline\" id=\"MAZE\">MAZE</span></h4>\n<pre>MAZE:\"foo\",'X'\n</pre>\n<ul><li><tt>foo</tt> is the unique file name which will be used for this special level, up to 8 characters. For example: <tt>soko3-2</tt>. This file name which NetHack loads is defined by the way this level is defined in <a href=\"/wiki/Dungeon.def_format\" title=\"Dungeon.def format\">dungeon.def</a>.</li>\n<li><tt>'X'</tt> is the <a href=\"#Map_characters\">fill map character</a>. The map will be filled with this <a href=\"/wiki/Dungeon_feature\" title=\"Dungeon feature\">dungeon feature</a> before anything else is done. This can also be <tt>random</tt>, which fills the whole level with a checkerboard grid of walls and stone, so you can use <a href=\"#MAZEWALK\">MAZEWALK</a> on it.</li></ul>\n<p>Example:\n</p>\n<pre>MAZE:\"soko3-2\",' '\n</pre>\n<h4><span class=\"mw-headline\" id=\"FLAGS\">FLAGS</span></h4>\n<pre>FLAGS:flaglist\n</pre>\n<p><tt>flaglist</tt> is one or more of the following flags, separated by commas\n</p>\n<ul><li><tt>noteleport</tt>: Player cannot teleport within the level.</li>\n<li><tt>hardfloor</tt>: The floor is too hard to dig.</li>\n<li><tt>nommap</tt>: <a href=\"/wiki/Magic_mapping\" title=\"Magic mapping\">magic mapping</a> does not work.</li>\n<li><tt>arboreal</tt>: supposedly an outdoor map. Solid walls and secret corridors will be shown as trees, digging makes floor instead of corridor and randomly created corridors are made out of floor instead of corridor.</li>\n<li><tt>shortsighted</tt>: Monsters cannot see you from far away.</li></ul>\n<p>Example:\n</p>\n<pre>FLAGS:noteleport,hardfloor\n</pre>\n<h4><span class=\"mw-headline\" id=\"INIT_MAP\">INIT_MAP</span></h4>\n<pre>INIT_MAP:'X', 'Y', smoothed, joined, lighted, walled\n</pre>\n<p>This causes the level map to be initialized with a random map generator, similar to how the random <a href=\"/wiki/Gnomish_Mines\" title=\"Gnomish Mines\">Gnomish Mines</a> look like.\nEach MAZE-level can contain only 0 or 1 of these definitions.\n</p>\n<ul><li><tt>'X'</tt> is the \"foreground\" <a href=\"#Map_characters\">fill map character</a>. This should be something the player can walk on, as the walkable part will be made out of this.</li>\n<li><tt>'Y'</tt> is the \"background\" <a href=\"#Map_characters\">fill map character</a>. This will surround the foreground area, so can be solid or harmful to player.</li>\n<li><tt>smoothed</tt> is either <tt>true</tt> or <tt>false</tt>, and denotes whether the level will be \"smoothed\". This means that any foreground character surrounded by fewer than 3 foreground characters is changed to background character.</li>\n<li><tt>joined</tt> is either <tt>true</tt> or <tt>false</tt>, and denotes whether the level will be \"joined\", so that all parts are accessible by walking.</li>\n<li><tt>lighted</tt> is either <tt>lit</tt>, <tt>unlit</tt>, or <tt>random</tt></li>\n<li><tt>walled</tt> is either <tt>true</tt> or <tt>false</tt>. This is equivalent of using a <a href=\"#WALLIFY\">WALLIFY</a> -command.</li></ul>\n<p>Examples:\n</p>\n<pre>INIT_MAP: 'L', '.', false, false, unlit, false\nINIT_MAP: '.', ' ', true, true, random, true\n</pre>\n<h4><span class=\"mw-headline\" id=\"MESSAGE\">MESSAGE</span></h4>\n<pre>MESSAGE:\"string\"\n</pre>\n<p>You can have 0 or more of these per special level. Each message line gets separated with a <tt>--more--</tt> -prompt in the game.\n<tt>\"string\"</tt> is any message you want player to see when entering the level.\n</p><p>Example:\n</p>\n<pre>MESSAGE: \"Well done, mortal!\"\n</pre>\n<h4><span class=\"mw-headline\" id=\"NOMAP\">NOMAP</span></h4>\n<pre>NOMAP\n</pre>\n<p>Instead of <a href=\"#GEOMETRY\">GEOMETRY</a> and <a href=\"#MAP\">MAP</a>, you use this if you think that <a href=\"#INIT_MAP\">INIT_MAP</a> creates a good enough random map and you don't want to use any fixed map-parts.\n</p><p>See also <a href=\"#MAP\">MAP</a>\n</p>\n<h4><span class=\"mw-headline\" id=\"GEOMETRY\">GEOMETRY</span></h4>\n<pre>GEOMETRY:xadj,yadj\n</pre>\n<p>This must be followed by a <a href=\"#MAP\">MAP</a> definition, and tells the approximate position of the following MAP-part on the level.\n</p>\n<ul><li><tt>xadj</tt> is one of <tt>left</tt>, <tt>half-left</tt>, <tt>center</tt>, <tt>half-right</tt>, <tt>right</tt> or <tt>random</tt></li>\n<li><tt>yadj</tt> is one of <tt>top</tt>, <tt>center</tt>, <tt>bottom</tt> or <tt>random</tt></li></ul>\n<p>Example:\n</p>\n<pre>GEOMETRY:left,top\n</pre>\n<h4><span class=\"mw-headline\" id=\"MAP\">MAP</span></h4>\n<pre>MAP\n...\n...\n...\nENDMAP\n</pre>\n<p>This must be preceded by <a href=\"#GEOMETRY\">GEOMETRY</a> definition.\nYou define a map-part by \"drawing\" with <a href=\"#Map_characters\">map characters</a> between the MAP and ENDMAP. The map can be up to 21 lines high and each line can be up to 76 chars long. Each line must also be the same length. You can also use numbers inside the map, but those will be ignored; they're considered as line numbers.\n</p><p>See also <a href=\"#NOMAP\">NOMAP</a>.\n</p>\n<h4><span class=\"mw-headline\" id=\"NON_DIGGABLE\">NON_DIGGABLE</span></h4>\n<pre>NON_DIGGABLE:region\n</pre>\n<p>Sets the walls inside the region as non-diggable.\n</p><p>Example:\n</p>\n<pre>NON_DIGGABLE:(00,00,13,12)\n</pre>\n<h4><span class=\"mw-headline\" id=\"NON_PASSWALL\">NON_PASSWALL</span></h4>\n<pre>NON_PASSWALL:region\n</pre>\n<p>Players and monsters cannot phase through the walls inside the region\n</p><p>Example:\n</p>\n<pre>NON_PASSWALL:(00,00,13,12)\n</pre>\n<h4><span class=\"mw-headline\" id=\"RANDOM_PLACES\">RANDOM_PLACES</span></h4>\n<pre>RANDOM_PLACES:place,...\n</pre>\n<p>With this command you can set up to 10 coordinate-pair registers, which you can access by using <tt>place[N]</tt> instead of a pair of coordinates in any other command. The registers are shuffled at level creation time.\n</p><p>Example:\n</p>\n<pre>RANDOM_PLACES:(23,9),(37,14),(51,9)\nOBJECT:'?',\"genocide\",place[0]\n</pre>\n<h4><span class=\"mw-headline\" id=\"RANDOM_MONSTERS\">RANDOM_MONSTERS</span></h4>\n<pre>RANDOM_MONSTERS:'X',...\n</pre>\n<p>With this command you can set up 10 monster symbol registers, which you can access by using <tt>monster[N]</tt> instead of a monster symbol in any other command. The registers are shuffled at level creation time.\n</p><p>Example:\n</p>\n<pre>RANDOM_MONSTERS: 'E', 'X'\nMONSTER:monster[0],random,(27,05)\n</pre>\n<h4><span class=\"mw-headline\" id=\"RANDOM_OBJECTS\">RANDOM_OBJECTS</span></h4>\n<pre>RANDOM_OBJECTS:'X',...\n</pre>\n<p>With this command you can set up 10 object class symbol registers, which you can access by using <tt>object[N]</tt> instead of a object class symbol in any other command. The registers are shuffled at level creation time.\n</p><p>Example:\n</p>\n<pre>RANDOM_OBJECTS:'[',')','*','%'\nOBJECT:object[0],random,(39,05)\n</pre>\n<h4><span class=\"mw-headline\" id=\"DOOR\">DOOR</span></h4>\n<pre>DOOR:state,place\n</pre>\n<p>Puts a door on the map.\n</p>\n<ul><li><tt>state</tt> is one of the following: <tt>nodoor</tt>, <tt>locked</tt>, <tt>closed</tt>, <tt>open</tt> or <tt>random</tt></li>\n<li><tt>place</tt> is either a pair of coordinates, a <a href=\"#RANDOM_PLACES\">RANDOM_PLACES</a> place, or <tt>random</tt></li></ul>\n<p>Example:\n</p>\n<pre>DOOR:locked,(10,5)\n</pre>\n<h4><span class=\"mw-headline\" id=\"DRAWBRIDGE\">DRAWBRIDGE</span></h4>\n<pre>DRAWBRIDGE:place,dir,state\n</pre>\n<ul><li><tt>place</tt> is either a pair of coordinates, a <a href=\"#RANDOM_PLACES\">RANDOM_PLACES</a> place, or <tt>random</tt></li>\n<li><tt>dir</tt> is one of the following: <tt>north</tt>, <tt>east</tt>, <tt>south</tt> or <tt>west</tt></li>\n<li><tt>state</tt> is one of the following: <tt>nodoor</tt>, <tt>locked</tt>, <tt>closed</tt>, <tt>open</tt> or <tt>random</tt></li></ul>\n<p>Note that the drawbridge placement is different from door placement; the coordinates must be a place where the drawbridge would be when it's open, and from that place towards the direction there should be a wall, where the portcullis will be.\n</p><p>Example:\n</p>\n<pre>DRAWBRIDGE:(25,18), north, closed\n</pre>\n<h4><span class=\"mw-headline\" id=\"REGION\">REGION</span></h4>\n<pre>REGION:(x1,y1,x2,y2), lighted, \"type\"\n</pre>\n<p>Define a region on the map with certain light-state and type.\n</p>\n<ul><li><tt>lighted</tt> is one of <tt>lit</tt>, <tt>unlit</tt> or <tt>random</tt>.</li>\n<li><tt>\"type\"</tt> is one of the <a href=\"#Room_types\">room types</a>.</li></ul>\n<p>You can add <tt>filled</tt> or <tt>unfilled</tt>, it will denote whether the room will get stocked with the normal monsters or objects it would get. After that you can add <tt>true</tt> or <tt>false</tt> to denote whether the room is irregularly shaped. If the room is irregular, only the first pair of coordinates (x1,y1) must be inside the room, and the room must be closed off from other areas with non-floor <a href=\"#Map_characters\">map characters</a>. Use the boundary symbol <tt>'B'</tt> in the <a href=\"#MAP\">MAP</a> to enclose an irregular room; it will be converted to floor symbol <tt>'.'</tt> after the level has been created.\n</p><p>Examples:\n</p>\n<pre>REGION:(43,12,49,16),unlit,\"ordinary\"\nREGION:(12,01,20,09),unlit,\"morgue\",unfilled\nREGION:(11,03,29,10),lit,\"temple\",filled,true\n</pre>\n<h4><span class=\"mw-headline\" id=\"STAIR-region\">STAIR-region</span></h4>\n<pre>STAIR:(x1,y1,x2,y2), (x3,y3,x4,y4), updown\n</pre>\n<p>Places a stair within an area covered by (x1,y1,x2,y2) and not covered by (x3,y3,x4,y4).\n</p>\n<ul><li><tt>updown</tt> is either <tt>up</tt> or <tt>down</tt>, denoting the direction of the stairs.</li></ul>\n<p>If the area is prefixed with <tt>levregion</tt> then the coordinates are relative to the whole level, otherwise the coordinates are relative to the last-defined <a href=\"#MAP\">MAP</a>.\n</p><p>Example:\n</p>\n<pre>STAIR:(0,0,79,20), (20,5,50,15), up\nSTAIR:levregion(01,0,79,20), (0,0,28,12), up\nSTAIR:(0,0,50,10), levregion(10,0,20,15), down\n</pre>\n<h4><span class=\"mw-headline\" id=\"PORTAL\">PORTAL</span></h4>\n<pre>PORTAL:(x1,y1,x2,y2), (x3,y3,x4,y4),\"levelname\"\n</pre>\n<p>Places a magical portal within an area covered by (x1,y1,x2,y2) and not covered by (x3,y3,x4,y4). The portal will level teleport player to the level with the name \"levelname\".\nIf the area is prefixed with <tt>levregion</tt> then the coordinates are relative to the whole level, otherwise the coordinates are relative to the last-defined <a href=\"#MAP\">MAP</a>.\n</p><p>Example:\n</p>\n<pre>PORTAL:levregion(57,01,78,19),(0,0,0,0),\"fire\"\nPORTAL:(0,0,75,19),(65,13,75,19),\"air\"\n</pre>\n<h4><span class=\"mw-headline\" id=\"TELEPORT_REGION\">TELEPORT_REGION</span></h4>\n<pre>TELEPORT_REGION:(x1,y1,x2,y2),(x3,y3,x4,y4)\n</pre>\n<p>Restricts the area where player can end up on the level when he <a href=\"/wiki/Level_teleport\" title=\"Level teleport\">level teleports</a> or falls in there. Player will end up within an area covered by (x1,y1,x2,y2) and not covered by (x3,y3,x4,y4).\nIf the area is prefixed with <tt>levregion</tt> then the coordinates are relative to the whole level, otherwise the coordinates are relative to the last-defined <a href=\"#MAP\">MAP</a>.\nYou can also add an optional direction parameter, either <tt>up</tt> or <tt>down</tt>, which will tell when this rule is applied; when player is coming from below or above.\n</p><p>Example:\n</p>\n<pre>TELEPORT_REGION:(69,16,69,16),(0,0,0,0)\nTELEPORT_REGION:levregion(56,00,79,20),levregion(01,00,55,20),down\n</pre>\n<h4><span class=\"mw-headline\" id=\"BRANCH\">BRANCH</span></h4>\n<pre>BRANCH:(x1,y1,x2,y2),(x3,y3,x4,y4)\n</pre>\n<p>Places stairs or a magical portal to a dungeon branch within an area covered by (x1,y1,x2,y2) and not covered by (x3,y3,x4,y4).\nIf the area is prefixed with <tt>levregion</tt> then the coordinates are relative to the whole level, otherwise the coordinates are relative to the last-defined <a href=\"#MAP\">MAP</a>.\n</p><p>Example:\n</p>\n<pre>BRANCH:levregion(51,2,77,18),(0,0,40,20)\n</pre>\n<h4><span class=\"mw-headline\" id=\"MAZEWALK\">MAZEWALK</span></h4>\n<pre>MAZEWALK:place,dir\n</pre>\n<p>Creates a random maze, starting from place.\n</p>\n<ul><li><tt>place</tt> is either a pair of coordinates, a <a href=\"#RANDOM_PLACES\">RANDOM_PLACES</a> place, or <tt>random</tt></li>\n<li><tt>dir</tt> is one of the following: <tt>north</tt>, <tt>east</tt>, <tt>south</tt> or <tt>west</tt></li></ul>\n<p>Mazewalk turns map grids with solid stone (<tt>' '</tt>) into floor (<tt>'.'</tt>). From the starting position, it checks the mapgrid in the direction given, and if it's solid stone, it will move there, and turn that place into floor. Then it will choose a random direction, jump over the nearest mapgrid in that direction, and check the next mapgrid for solid stone. If there is solid stone, mazewalk will move that direction, changing that place and the intervening mapgrid to floor. Normally the generated maze will not have any loops.\nFor example\n</p>\n<pre>MAP\nTTTTTTT\nT T T T\nTTTTTTT\nT T T T\nTTTTTTT\nENDMAP\n</pre>\n<p>Pointing mazewalk at that will create a small maze of trees, but unless the map (at the place where it's put into the level) is surrounded by something else than solid stone, mazewalk will get out of that MAP.  Substituting floor characters for some of the trees \"in the maze\" will make loops in the maze, which are not otherwise possible. Substituting floor characters for some of the trees at the edges of the map will make maze entrances and exits at those places.\n</p><p>If the total area NOT covered by all maze-parts in the level is greater than 1/10 of the total area of the level, then the mazes in the level will get stocked with maze-specific stuff, such as <a href=\"/wiki/Minotaur\" title=\"Minotaur\">minotaurs</a>, traps and items, proportionally to the amount of space not covered by MAPs.\n</p><p>Mazewalk will only work if the solid stone mapgrids in the level (where the MAP was put down) are on odd-numbered squares, both horizontally and vertically. You don't have to worry about this unless your MAP is 21 rows high or 76 columns wide, in which case you'll have to either make the MAP smaller, or move the places where the solid stone squares are.\n</p><p>Also, MAZEWALK will fail in certain types of MAP-parts if you also use <a href=\"#WALLIFY\">WALLIFY</a>, as that command is applied before MAZEWALKs.\n</p><p>Example:\n</p>\n<pre>MAZEWALK:(00,06),west\n</pre>\n<h4><span class=\"mw-headline\" id=\"WALLIFY\">WALLIFY</span></h4>\n<pre>WALLIFY\n</pre>\n<p>Turns walls completely surrounded by other walls into solid stone <tt>' '</tt>.\n</p>\n<h4><span class=\"mw-headline\" id=\"LADDER\">LADDER</span></h4>\n<pre>LADDER:place, updown\n</pre>\n<p>Places a ladder up or down at place. See also <a href=\"#STAIRS\">STAIRS</a>.\n</p>\n<ul><li><tt>place</tt> is either a pair of coordinates, a <a href=\"#RANDOM_PLACES\">RANDOM_PLACES</a> place, or <tt>random</tt></li>\n<li><tt>updown</tt> is either <tt>up</tt> or <tt>down</tt>, denoting the direction of the stairs.</li></ul>\n<p>Example:\n</p>\n<pre>LADDER:(11,05),down\n</pre>\n<h4><span class=\"mw-headline\" id=\"GOLD\">GOLD</span></h4>\n<pre>GOLD:place, amount\n</pre>\n<p>Places amount of gold in place.\n</p>\n<ul><li><tt>place</tt> is either a pair of coordinates, a <a href=\"#RANDOM_PLACES\">RANDOM_PLACES</a> place, or <tt>random</tt></li>\n<li><tt>amount</tt> is any positive integer number.</li></ul>\n<p>Example:\n</p>\n<pre>GOLD:(5,5),12345\n</pre>\n<h3><span class=\"mw-headline\" id=\"ROOM-type_levels\">ROOM-type levels</span></h3>\n<p>Room-type levels begin with <a href=\"#LEVEL\">LEVEL</a>, followed by optional <a href=\"#FLAGS\">FLAGS</a>, optional <a href=\"#INIT_MAP\">INIT_MAP</a>, 0 or more <a href=\"#MESSAGE\">MESSAGEs</a>, followed by optional random register initializers (<a href=\"#RANDOM_MONSTERS\">RANDOM_MONSTERS</a> and <a href=\"#RANDOM_OBJECT\">RANDOM_OBJECT</a>), followed by 0 or more <a href=\"#ROOM\">ROOM</a> and <a href=\"#SUBROOM\">SUBROOM</a> definitions (and the contents for those rooms), followed by <a href=\"#RANDOM_CORRIDORS\">RANDOM_CORRIDORS</a>.\n</p><p>That is:\n</p>\n<ul><li><a href=\"#LEVEL\">LEVEL</a></li>\n<li><a href=\"#FLAGS\">FLAGS</a>, optional</li>\n<li><a href=\"#INIT_MAP\">INIT_MAP</a>, optional</li>\n<li><a href=\"#MESSAGE\">MESSAGE</a>, 0 or more</li>\n<li><a href=\"#RANDOM_MONSTERS\">RANDOM_MONSTERS</a>, optional</li>\n<li><a href=\"#RANDOM_OBJECTS\">RANDOM_OBJECTS</a>, optional\n<ul><li><a href=\"#ROOM\">ROOM</a>, 0 or more</li>\n<li>contents for the room (monsters, objects, traps, etc.)</li>\n<li><a href=\"#SUBROOM\">SUBROOM</a>, 0 or more\n<ul><li>contents for the subroom (monsters, objects, traps, etc.)</li></ul></li></ul></li>\n<li><a href=\"#RANDOM_CORRIDORS\">RANDOM_CORRIDORS</a></li></ul>\n<p>It's not possible to define arbitrarily shaped rooms with this type of level.\n</p>\n<h4><span class=\"mw-headline\" id=\"LEVEL\">LEVEL</span></h4>\n<pre>LEVEL: \"name\"\n</pre>\n<p><tt>\"name\"</tt> is the unique file name for this level. Can be up to 8 chars long. This file name is defined by the way this level is defined in <a href=\"/wiki/Dungeon.def_format\" title=\"Dungeon.def format\">dungeon.def</a>.\n</p><p>Example:\n</p>\n<pre>LEVEL: \"oracle\"\n</pre>\n<h4><span class=\"mw-headline\" id=\"RANDOM_CORRIDORS\">RANDOM_CORRIDORS</span></h4>\n<pre>RANDOM_CORRIDORS\n</pre>\n<p>Creates random corridors between the rooms in the level, so that all rooms are accessible.\n</p>\n<h4><span class=\"mw-headline\" id=\"ROOM\">ROOM</span></h4>\n<pre>ROOM: \"type\", lighted, pos, align, size\n</pre>\n<p>Creates a room. The room will be placed on a position defined both by pos and align. pos defines the rough position (in a 5-by-5 grid on the screen), and align defines the room position within that. NOTE: Creation of a randomly located room may fail, especially if there's little free space to fit it on the level. Contents of such a room won't be created either.\n</p>\n<ul><li><tt>\"type\"</tt> is one of the <a href=\"#Room_types\">room types</a>.</li>\n<li><tt>lighted</tt> is one of <tt>lit</tt>, <tt>unlit</tt> or <tt>random</tt>.</li>\n<li><tt>pos</tt> is either <tt>random</tt> or <tt>(xpos, ypos)</tt>, where both <tt>xpos</tt> and <tt>ypos</tt> are between 0 and 5. This is an approximate position on the screen.</li>\n<li><tt>align</tt> is either <tt>random</tt> or <tt>(xalign, yalign)</tt> and is the room alignment within the <tt>pos</tt>.\n<ul><li><tt>xalign</tt> is one of <tt>left</tt>, <tt>half-left</tt>, <tt>center</tt>, <tt>half-right</tt>, <tt>right</tt> or <tt>random</tt></li>\n<li><tt>yalign</tt> is one of <tt>top</tt>, <tt>center</tt>, <tt>bottom</tt> or <tt>random</tt>.</li></ul></li>\n<li><tt>size</tt> is either <tt>random</tt> or <tt>(width, height)</tt>.</li></ul>\n<p>You can also give one additional parameter, which can either be <tt>true</tt> or <tt>false</tt>. This tells whether the room will get stocked by objects and monsters it would normally get (such as shopkeepers and items for sale for shops).\n</p><p>Example:\n</p>\n<pre>ROOM: \"ordinary\", random, random, random, random\nROOM: \"ordinary\", lit, (3,3), (center,center), (11,9)\n</pre>\n<h4><span class=\"mw-headline\" id=\"SUBROOM\">SUBROOM</span></h4>\n<pre>SUBROOM: \"type\", lighted, pos, size, \"parent\"\n</pre>\n<p>Creates a room inside previously defined ROOM.\n</p>\n<ul><li><tt>\"type\"</tt> is one of the <a href=\"#Room_types\">room types</a>.</li>\n<li><tt>lighted</tt> is one of <tt>lit</tt>, <tt>unlit</tt> or <tt>random</tt>.</li>\n<li><tt>pos</tt> is either <tt>random</tt> or <tt>(xpos, ypos)</tt>, where <tt>xpos</tt> and <tt>ypos</tt> define the absolute position of this subroom inside the parent room. (0,0) is the upper left corner of the parent.</li>\n<li><tt>size</tt> is either <tt>random</tt> or <tt>(width, height)</tt>.</li>\n<li><tt>\"parent\"</tt> is the name of the parent room, as defined with <a href=\"#NAME\">NAME</a>.</li></ul>\n<p>You can also give one additional parameter, which can either be <tt>true</tt> or <tt>false</tt>. This tells whether the room will get stocked by objects and monsters it would normally get (such as shopkeepers and items for sale for shops).\n</p><p>Example:\n</p>\n<pre>SUBROOM:\"shop\",lit,(10,10),(3,3),\"town\"\nSUBROOM:\"ordinary\",random,(19,2),(2,2),\"town\"\n</pre>\n<h4><span class=\"mw-headline\" id=\"NAME\">NAME</span></h4>\n<pre>NAME: \"string\"\n</pre>\n<p>Names the previously defined ROOM or SUBROOM. Subrooms need to know the name of their parent room, this has no other meaning.\n</p><p>Example:\n</p>\n<pre>NAME: \"town\"\n</pre>\n<h4><span class=\"mw-headline\" id=\"CHANCE\">CHANCE</span></h4>\n<pre>CHANCE: int\n</pre>\n<p>Assigns a creation chance to the previously defined ROOM or SUBROOM. The room walls and doors will get created no matter what, this just tells whether the room contents will be created. <tt>int</tt> should be in the 0-100 range. Only non-ordinary rooms can have this.\n</p><p>Example:\n</p>\n<pre>CHANCE: 90\n</pre>\n<h4><span class=\"mw-headline\" id=\"Room_DOOR\">Room DOOR</span></h4>\n<pre>DOOR: secret, state, wall, pos\n</pre>\n<p>Creates a door with certain state on the previously defined ROOM or SUBROOM. Note that Room DOOR format is different from MAZE-level <a href=\"#DOOR\">DOOR</a>.\n</p>\n<ul><li><tt>secret</tt> can be <tt>true</tt>, <tt>false</tt> or <tt>random</tt></li>\n<li><tt>state</tt> is one of the following: <tt>nodoor</tt>, <tt>locked</tt>, <tt>closed</tt>, <tt>open</tt> or <tt>random</tt></li>\n<li><tt>wall</tt> is one of the following: <tt>north</tt>, <tt>east</tt>, <tt>south</tt> or <tt>west</tt> and tells on what wall of the room the door will be created.</li>\n<li><tt>pos</tt> is either <tt>random</tt> or a positive integer, and tells how far from top or left the door will be.</li></ul>\n<p>Example:\n</p>\n<pre>DOOR: false, closed, south, random\n</pre>\n<h3><span class=\"mw-headline\" id=\"Common_syntax\">Common syntax</span></h3>\n<p>The following commands are common to both MAZE and ROOM-type levels. For the MAZE-levels, the coordinates used are the previously defined MAP, for ROOM-levels, it's either the previously defined ROOM or SUBROOM.\n</p>\n<h4><span class=\"mw-headline\" id=\"ALTAR\">ALTAR</span></h4>\n<pre>ALTAR:place,align,type\n</pre>\n<p>Places an altar on the previously defined map or ROOM or SUBROOM.\n</p>\n<ul><li><tt>place</tt> is either a pair of coordinates, a <a href=\"#RANDOM_PLACES\">RANDOM_PLACES</a> place, or <tt>random</tt></li>\n<li><tt>align</tt> is either <tt>noalign</tt>, <tt>law</tt>, <tt>neutral</tt>, <tt>chaos</tt>, <tt>coaligned</tt>, <tt>noncoaligned</tt>, <tt>random</tt> or an alignment register <tt>align[N]</tt>, where N can be either 0,1 or 2.</li>\n<li><tt>type</tt> is one of <tt>sanctum</tt>, <tt>shrine</tt>, <tt>altar</tt> or <tt>random</tt></li></ul>\n<p>Example:\n</p>\n<pre>ALTAR:(50,14),chaos,altar\nALTAR:place[0],noalign,altar\nALTAR:(07,09),align[0],sanctum\n</pre>\n<h4><span class=\"mw-headline\" id=\"CONTAINER\">CONTAINER</span></h4>\n<p>This defines a container that you can put items in. It accepts exactly the same parameters as <a href=\"#OBJECT\">OBJECT</a>. Normal content generation for this object is suppressed.\n</p><p>Example:\n</p>\n<pre>CONTAINER:'(',\"chest\",(5,5)\nOBJECT:'/',\"wishing\",contained\n</pre>\n<h4><span class=\"mw-headline\" id=\"ENGRAVING\">ENGRAVING</span></h4>\n<pre>ENGRAVING:place, type, \"text\"\n</pre>\n<p>Creates an engraving on the floor.\n</p>\n<ul><li><tt>place</tt> is either a pair of coordinates, a <a href=\"#RANDOM_PLACES\">RANDOM_PLACES</a> place, or <tt>random</tt></li>\n<li><tt>type</tt> is one of <tt>dust</tt>, <tt>engrave</tt>, <tt>burn</tt>, <tt>mark</tt> or <tt>random</tt>.</li>\n<li><tt>\"text\"</tt> is the text to engrave on the floor.</li></ul>\n<p>Example:\n</p>\n<pre>ENGRAVING:(12,03), engrave, \"You are now entering the Gnome King's wine cellar.\"\n</pre>\n<h4><span class=\"mw-headline\" id=\"FOUNTAIN\">FOUNTAIN</span></h4>\n<pre>FOUNTAIN:place\n</pre>\n<p>Places a fountain on the map.\n</p>\n<ul><li><tt>place</tt> is either a pair of coordinates, a <a href=\"#RANDOM_PLACES\">RANDOM_PLACES</a> place, or <tt>random</tt></li></ul>\n<p>Example:\n</p>\n<pre>FOUNTAIN:(10,08)\n</pre>\n<h4><span class=\"mw-headline\" id=\"MONSTER\">MONSTER</span></h4>\n<pre>MONSTER:'X',\"monst\",place\n</pre>\n<ul><li><tt>'X'</tt> is the monster class symbol, or <tt>random</tt>, or a <a href=\"#RANDOM_MONSTERS\">RANDOM_MONSTERS</a> index</li>\n<li><tt>\"monst\"</tt> is the specific monster, or <tt>random</tt></li>\n<li><tt>place</tt> is either a pair of coordinates, a <a href=\"#RANDOM_PLACES\">RANDOM_PLACES</a> place, or <tt>random</tt></li></ul>\n<p>Other things you can add to the monster definition:\n</p>\n<ul><li><tt>hostile</tt> or <tt>peaceful</tt></li>\n<li><tt>asleep</tt> or <tt>awake</tt></li>\n<li>For mimics and other shapechangers you can also add the following:\n<ul><li><tt>m_feature \"<a href=\"/wiki/Dungeon_feature\" title=\"Dungeon feature\">dungeon_feature</a>\"</tt> to force the mimic to be a dungeon feature.</li>\n<li><tt>m_object \"object_name\"</tt> to force the mimic to be an object. object_name is the name of an object as they are in <a href=\"/wiki/Objects.c\" class=\"mw-redirect\" title=\"Objects.c\">objects.c</a></li>\n<li><tt>m_monster \"monster_name\"</tt> to force the shapechanger to be a certain monster.</li></ul></li>\n<li><tt>\"Name\"</tt> to name the monster.</li></ul>\n<p>Optionally, you can put <tt>[NN%]</tt> right after <tt>MONSTER</tt> to make the monster generation optional. NN is a percentage chance of the monster being generated when the level is created.\n</p><p>Examples:\n</p>\n<pre>MONSTER:'v',\"dust vortex\",(42,05)\nMONSTER:'E',\"earth elemental\",(39,06),peaceful\nMONSTER:'&amp;',\"Pestilence\",place[0],hostile\nMONSTER:random,random,random\nMONSTER:random,random,(01,01), asleep\nMONSTER:monster[0],random,(27,05)\nMONSTER:'m',\"giant mimic\",place[1],m_feature \"fountain\"\nMONSTER:'m',random,place[0], m_object \"luckstone\"\nMONSTER:'@',\"rogue\",(35,06),peaceful,\"Pug\"\nMONSTER[50%]:'P', \"green slime\", random\n</pre>\n<h4><span class=\"mw-headline\" id=\"OBJECT\">OBJECT</span></h4>\n<pre>OBJECT:'X',\"name\",place\n</pre>\n<p>Each map-part can contain any number of object definitions.\n</p>\n<ul><li><tt>'X'</tt>: a character denoting one of the object classes.</li>\n<li><tt>\"name\"</tt>: either an object name as listed in <a href=\"/wiki/Objects.c\" class=\"mw-redirect\" title=\"Objects.c\">objects.c</a>, or <tt>random</tt></li>\n<li><tt>place</tt>: either a pair of coordinates, a <a href=\"#RANDOM_PLACES\">RANDOM_PLACES</a> place, or <tt>random</tt>, or <tt>contained</tt>. If contained, then this object will be placed in the previously defined <a href=\"#CONTAINER\">CONTAINER</a>.</li></ul>\n<p>Optional stuff you can add to the object definition:\n</p>\n<ul><li><tt>cursestate, \"monster_id\", spe</tt></li>\n<li><tt>cursestate, spe</tt></li>\n<li><tt>\"monster_id\", spe</tt></li></ul>\n<p>Where\n</p>\n<ul><li><tt>cursestate</tt> is one of <tt>blessed</tt>, <tt>uncursed</tt>, <tt>cursed</tt> or <tt>random</tt>.</li>\n<li><tt>\"monster_id\"</tt> is a monster type, as defined in <a href=\"/wiki/Source:NetHack_3.4.3/src/monst.c\" title=\"Source:NetHack 3.4.3/src/monst.c\">Source:NetHack 3.4.3/src/monst.c</a></li>\n<li><tt>spe</tt> is an integer, and defines different things depending on what kind of object is generated:\n<ul><li>enchantment for <a href=\"/wiki/Armor\" title=\"Armor\">armor</a> and <a href=\"/wiki/Weapon\" title=\"Weapon\">weapons</a></li>\n<li>charges for <a href=\"/wiki/Wands\" class=\"mw-redirect\" title=\"Wands\">wands</a>, <a href=\"/wiki/Rings\" class=\"mw-redirect\" title=\"Rings\">rings</a>, <a href=\"/wiki/Magic_marker\" title=\"Magic marker\">magic markers</a> and everything else that has charges.</li>\n<li>historic and gender bit for <a href=\"/wiki/Statue\" title=\"Statue\">statues</a>. 1 is historic, 2 is male, 4 is female. Adding the values together is possible, so you can create eg. historic, male statue with value 3 and historic, female with 5. Leaving the gender specification out will either result in a random gender, or if the monster is always of certain gender, then the statue will be that gender too. (eg. nymphs)</li>\n<li><a href=\"/wiki/Tin\" title=\"Tin\">tins</a>: 1 means spinach, -1 is home-made.</li>\n<li><a href=\"/wiki/Container\" title=\"Container\">containers</a>: 1 means the box contains <a href=\"/wiki/Schroedinger%27s_Cat\" title=\"Schroedinger&#39;s Cat\">Schroedinger's Cat</a>.</li>\n<li><a href=\"/wiki/Oil_lamp\" title=\"Oil lamp\">oil lamps</a> and <a href=\"/wiki/Candle\" class=\"mw-redirect\" title=\"Candle\">candles</a>: 0 means the lamp is out of oil.</li>\n<li><a href=\"/wiki/Candelabrum\" class=\"mw-redirect\" title=\"Candelabrum\">Candelabrum</a>: how many candles are attached to it.</li>\n<li><a href=\"/wiki/Scroll_of_mail\" title=\"Scroll of mail\">scroll of mail</a>: 1 means it was not delivered to current player.</li>\n<li><a href=\"/wiki/Egg\" title=\"Egg\">eggs</a>: 1 means hero laid it.</li>\n<li><a href=\"/wiki/Chest\" title=\"Chest\">chests</a>: 2 means it's a royal coffer in a <a href=\"/wiki/Throne_room\" title=\"Throne room\">throne room</a>.</li></ul></li></ul>\n<p>After these you can also add a quoted string, which would become the object's name.\n</p><p>Optionally, you can put <tt>[NN%]</tt> right after <tt>OBJECT</tt> to make the object generation optional. NN is a percentage chance of the object being generated when the level is created.\n</p><p>Examples:\n</p>\n<pre>OBJECT:'%', \"food ration\", random\nOBJECT:'*', random, (10,10)\nOBJECT:'?', \"genocide\", place[0]\nOBJECT[10%]:'\"', \"amulet of life saving\", random\nOBJECT:'%', \"corpse\", random, \"archeologist\", 0\nOBJECT[50%]:')', \"scimitar\", contained, blessed, +2\nOBJECT:'`', \"statue\", (0,0), \"forest centaur\", 1\nOBJECT:'(', \"crystal ball\", (17,08), blessed, 5, \"The Orb of Fate\"\n</pre>\n<h4><span class=\"mw-headline\" id=\"STAIR\">STAIR</span></h4>\n<pre>STAIR:place, updown\n</pre>\n<p>Places a stair up or down at place. See also <a href=\"#STAIR-region\">STAIR-region</a> and <a href=\"#LADDER\">LADDER</a>.\n</p>\n<ul><li><tt>place</tt> is either a pair of coordinates, a <a href=\"#RANDOM_PLACES\">RANDOM_PLACES</a> place, or <tt>random</tt></li>\n<li><tt>updown</tt> is either <tt>up</tt> or <tt>down</tt>, denoting the direction of the stairs.</li></ul>\n<p>Example:\n</p>\n<pre>STAIR:(70,08), up\nSTAIR:random, down\nSTAIR:place[3], up\n</pre>\n<h4><span class=\"mw-headline\" id=\"TRAP\">TRAP</span></h4>\n<pre>TRAP:\"name\",place\n</pre>\n<ul><li><tt>\"name\"</tt> is the <a href=\"#Trap_names\">trap's name</a>, or <tt>random</tt></li>\n<li><tt>place</tt> is either a pair of coordinates, a <a href=\"#RANDOM_PLACES\">RANDOM_PLACES</a> place, or <tt>random</tt></li></ul>\n<p>Optionally, you can put <tt>[NN%]</tt> right after <tt>TRAP</tt> to make the trap generation optional. NN is a percentage chance of the trap being generated when the level is created.\n</p><p>Examples:\n</p>\n<pre>TRAP:\"hole\",(12,10)\nTRAP:\"anti magic\",random\nTRAP:random,random\nTRAP[25%]:\"polymorph\",random\n</pre>\n<h4><span class=\"mw-headline\" id=\"Map_characters\">Map characters</span></h4>\n<table class=\"prettytable striped\">\n<tbody><tr>\n<th>character\n</th>\n<th><a href=\"/wiki/Dungeon_feature\" title=\"Dungeon feature\">dungeon feature</a>\n</th></tr>\n<tr>\n<td><tt>' '</tt>\n</td>\n<td>solid wall\n</td></tr>\n<tr>\n<td><tt>'#'</tt>\n</td>\n<td>corridor\n</td></tr>\n<tr>\n<td><tt>'.'</tt>\n</td>\n<td>room floor (Unlit, unless lit with <a href=\"#REGION\">REGION</a>-command)\n</td></tr>\n<tr>\n<td><tt>'-'</tt>\n</td>\n<td>horizontal wall\n</td></tr>\n<tr>\n<td><tt>'&#124;'</tt>\n</td>\n<td>vertical wall\n</td></tr>\n<tr>\n<td><tt>'+'</tt>\n</td>\n<td>door (State is defined with <a href=\"#DOOR\">DOOR</a> -command)\n</td></tr>\n<tr>\n<td><tt>'A'</tt>\n</td>\n<td>air\n</td></tr>\n<tr>\n<td><tt>'B'</tt>\n</td>\n<td>crosswall / boundary symbol hack (See <a href=\"#REGION\">REGION</a>)\n</td></tr>\n<tr>\n<td><tt>'C'</tt>\n</td>\n<td>cloud\n</td></tr>\n<tr>\n<td><tt>'S'</tt>\n</td>\n<td>secret door\n</td></tr>\n<tr>\n<td><tt>'H'</tt>\n</td>\n<td>secret corridor\n</td></tr>\n<tr>\n<td><tt>'{'</tt>\n</td>\n<td>fountain\n</td></tr>\n<tr>\n<td><tt>'\\'</tt>\n</td>\n<td>throne\n</td></tr>\n<tr>\n<td><tt>'K'</tt>\n</td>\n<td>sink\n</td></tr>\n<tr>\n<td><tt>'&#125;'</tt>\n</td>\n<td>moat\n</td></tr>\n<tr>\n<td><tt>'P'</tt>\n</td>\n<td>pool of water\n</td></tr>\n<tr>\n<td><tt>'L'</tt>\n</td>\n<td>lava pool\n</td></tr>\n<tr>\n<td><tt>'I'</tt>\n</td>\n<td>ice\n</td></tr>\n<tr>\n<td><tt>'W'</tt>\n</td>\n<td>water\n</td></tr>\n<tr>\n<td><tt>'T'</tt>\n</td>\n<td>tree\n</td></tr>\n<tr>\n<td><tt>'F'</tt>\n</td>\n<td>iron bars\n</td></tr></tbody></table>\n<h4><span class=\"mw-headline\" id=\"Trap_names\">Trap names</span></h4>\n<p>\"anti magic\", \"arrow\", \"bear\", \"board\", \"dart\", \"falling rock\", \"fire\", \"hole\", \"land mine\", \"level teleport\", \"magic portal\", \"magic\", \"pit\", \"polymorph\", \"rolling boulder\", \"rust\", \"sleep gas\", \"spiked pit\", \"statue\", \"teleport\", \"trap door\", \"web\"\n</p>\n<h4><span class=\"mw-headline\" id=\"Room_types\">Room types</span></h4>\n<p>\"ordinary\", \"throne\", \"swamp\", \"vault\", \"beehive\", \"morgue\", \"barracks\", \"zoo\", \"delphi\", \"temple\", \"anthole\", \"cocknest\", \"leprehall\", \"shop\", \"armor shop\", \"scroll shop\", \"potion shop\", \"weapon shop\", \"food shop\", \"ring shop\", \"wand shop\", \"tool shop\", \"book shop\", \"candle shop\"\n</p>\n<h2><span class=\"mw-headline\" id=\"See_also\">See also</span></h2>\n<ul><li><a href=\"/wiki/Des-file_format_(UnNetHack)\" title=\"Des-file format (UnNetHack)\">Des-file format (UnNetHack)</a></li>\n<li><a href=\"/wiki/Des-file_format\" title=\"Des-file format\">Des-file format</a></li></ul>\n<div style=\"display:none; right:10px; padding-bottom: 17px\" class=\"metadata topicon nopopups\"><div style=\"margin-top: -10px\"><a href=\"/wiki/NetHackWiki:Next_version\" title=\"This article is unlikely to require revision for the next version of NetHack. Click here for more information.\"><img alt=\"This article is unlikely to require revision for the next version of NetHack. Click here for more information.\" src=\"/images/5/58/Noversion.png\" width=\"32\" height=\"32\" /></a></div></div>\n\n<!-- \nNewPP limit report\nCached time: 20240926183131\nCache expiry: 604800\nDynamic content: false\nCPU time usage: 0.060 seconds\nReal time usage: 0.164 seconds\nPreprocessor visited node count: 1081/1000000\nPreprocessor generated node count: 2156/1000000\nPost‐expand include size: 3212/2097152 bytes\nTemplate argument size: 1671/2097152 bytes\nHighest expansion depth: 8/40\nExpensive parser function count: 0/100\nUnstrip recursion depth: 0/20\nUnstrip post‐expand size: 0/5000000 bytes\n-->\n<!--\nTransclusion expansion time report (%,ms,calls,template)\n100.00%   63.940      1 -total\n 49.89%   31.902     82 Template:Sa\n 13.66%    8.732      1 Template:Float_right\n  8.21%    5.250      1 Template:Noversion\n  5.90%    3.772      1 Template:Version_icon\n  3.58%    2.290      1 Template:Top_icon\n-->\n\n<!-- Saved in parser cache with key wikihackdb:pcache:idhash:25768-0!canonical and timestamp 20240926183130 and revision id 169387\n -->\n</div></div>\t\t\t\t\t<div class=\"printfooter\">\n\t\t\t\t\t\tRetrieved from \"<a dir=\"ltr\" href=\"https://nethackwiki.com/index.php?title=Des-file_format_(NetHack_3.4.3)&amp;oldid=169387\">https://nethackwiki.com/index.php?title=Des-file_format_(NetHack_3.4.3)&amp;oldid=169387</a>\"\t\t\t\t\t</div>\n\t\t\t\t<div id=\"catlinks\" class=\"catlinks\" data-mw=\"interface\"><div id=\"mw-normal-catlinks\" class=\"mw-normal-catlinks\"><a href=\"/wiki/Special:Categories\" title=\"Special:Categories\">Category</a>: <ul><li><a href=\"/wiki/Category:Annotations\" title=\"Category:Annotations\">Annotations</a></li></ul></div></div>\t\t\t\t<div class=\"visualClear\"></div>\n\t\t\t\t\t\t\t</div>\n\t\t</div>\n\t\t<div id=\"mw-navigation\">\n\t\t\t<h2>Navigation menu</h2>\n\t\t\t<div id=\"mw-head\">\n\t\t\t\t\t\t\t\t\t<div id=\"p-personal\" role=\"navigation\" class=\"\" aria-labelledby=\"p-personal-label\">\n\t\t\t\t\t\t<h3 id=\"p-personal-label\">Personal tools</h3>\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<li id=\"pt-createaccount\"><a href=\"/index.php?title=Special:CreateAccount&amp;returnto=Des-file+format+%28NetHack+3.4.3%29\" title=\"You are encouraged to create an account and log in; however, it is not mandatory\">Create account</a></li><li id=\"pt-login\"><a href=\"/index.php?title=Special:UserLogin&amp;returnto=Des-file+format+%28NetHack+3.4.3%29\" title=\"You are encouraged to log in; however, it is not mandatory [o]\" accesskey=\"o\">Log in</a></li>\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div id=\"left-navigation\">\n\t\t\t\t\t\t\t\t\t\t<div id=\"p-namespaces\" role=\"navigation\" class=\"vectorTabs\" aria-labelledby=\"p-namespaces-label\">\n\t\t\t\t\t\t<h3 id=\"p-namespaces-label\">Namespaces</h3>\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<li id=\"ca-nstab-main\" class=\"selected\"><span><a href=\"/wiki/Des-file_format_(NetHack_3.4.3)\" title=\"View the content page [c]\" accesskey=\"c\">Page</a></span></li><li id=\"ca-talk\" class=\"new\"><span><a href=\"/index.php?title=Talk:Des-file_format_(NetHack_3.4.3)&amp;action=edit&amp;redlink=1\" rel=\"discussion\" title=\"Discussion about the content page (page does not exist) [t]\" accesskey=\"t\">Discussion</a></span></li>\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div id=\"p-variants\" role=\"navigation\" class=\"vectorMenu emptyPortlet\" aria-labelledby=\"p-variants-label\">\n\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"checkbox\" class=\"vectorMenuCheckbox\" aria-labelledby=\"p-variants-label\" />\n\t\t\t\t\t\t<h3 id=\"p-variants-label\">\n\t\t\t\t\t\t\t<span>Variants</span>\n\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t<div class=\"menu\">\n\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t<div id=\"right-navigation\">\n\t\t\t\t\t\t\t\t\t\t<div id=\"p-views\" role=\"navigation\" class=\"vectorTabs\" aria-labelledby=\"p-views-label\">\n\t\t\t\t\t\t<h3 id=\"p-views-label\">Views</h3>\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<li id=\"ca-view\" class=\"collapsible selected\"><span><a href=\"/wiki/Des-file_format_(NetHack_3.4.3)\">Read</a></span></li><li id=\"ca-viewsource\" class=\"collapsible\"><span><a href=\"/index.php?title=Des-file_format_(NetHack_3.4.3)&amp;action=edit\" title=\"This page is protected.&#10;You can view its source [e]\" accesskey=\"e\">View source</a></span></li><li id=\"ca-history\" class=\"collapsible\"><span><a href=\"/index.php?title=Des-file_format_(NetHack_3.4.3)&amp;action=history\" title=\"Past revisions of this page [h]\" accesskey=\"h\">View history</a></span></li>\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div id=\"p-cactions\" role=\"navigation\" class=\"vectorMenu emptyPortlet\" aria-labelledby=\"p-cactions-label\">\n\t\t\t\t\t\t<input type=\"checkbox\" class=\"vectorMenuCheckbox\" aria-labelledby=\"p-cactions-label\" />\n\t\t\t\t\t\t<h3 id=\"p-cactions-label\"><span>More</span></h3>\n\t\t\t\t\t\t<div class=\"menu\">\n\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div id=\"p-search\" role=\"search\">\n\t\t\t\t\t\t<h3>\n\t\t\t\t\t\t\t<label for=\"searchInput\">Search</label>\n\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t<form action=\"/index.php\" id=\"searchform\">\n\t\t\t\t\t\t\t<div id=\"simpleSearch\">\n\t\t\t\t\t\t\t\t<input type=\"search\" name=\"search\" placeholder=\"Search NetHackWiki\" title=\"Search NetHackWiki [f]\" accesskey=\"f\" id=\"searchInput\"/><input type=\"hidden\" value=\"Special:Search\" name=\"title\"/><input type=\"submit\" name=\"fulltext\" value=\"Search\" title=\"Search the pages for this text\" id=\"mw-searchButton\" class=\"searchButton mw-fallbackSearchButton\"/><input type=\"submit\" name=\"go\" value=\"Go\" title=\"Go to a page with this exact name if it exists\" id=\"searchButton\" class=\"searchButton\"/>\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div id=\"mw-panel\">\n\t\t\t\t<div id=\"p-logo\" role=\"banner\"><a class=\"mw-wiki-logo\" href=\"/wiki/Main_Page\"  title=\"Visit the main page\"></a></div>\n\t\t\t\t\t\t<div class=\"portal\" role=\"navigation\" id=\"p-navigation\" aria-labelledby=\"p-navigation-label\">\n\t\t\t<h3 id=\"p-navigation-label\">Navigation</h3>\n\t\t\t<div class=\"body\">\n\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t<li id=\"n-NetHack-Wiki\"><a href=\"/wiki/Main_Page\">NetHack Wiki</a></li><li id=\"n-Forum\"><a href=\"/wiki/Forum:Watercooler\">Forum</a></li><li id=\"n-portal\"><a href=\"/wiki/NetHackWiki:Community_Portal\" title=\"About the project, what you can do, where to find things\">Community portal</a></li><li id=\"n-recentchanges\"><a href=\"/wiki/Special:RecentChanges\" title=\"A list of recent changes in the wiki [r]\" accesskey=\"r\">Recent changes</a></li><li id=\"n-randompage\"><a href=\"/wiki/Special:Random\" title=\"Load a random page [x]\" accesskey=\"x\">Random page</a></li>\t\t\t\t</ul>\n\t\t\t\t\t\t\t</div>\n\t\t</div>\n\t\t\t<div class=\"portal\" role=\"navigation\" id=\"p-Popular_pages\" aria-labelledby=\"p-Popular_pages-label\">\n\t\t\t<h3 id=\"p-Popular_pages-label\">Popular pages</h3>\n\t\t\t<div class=\"body\">\n\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t<li id=\"n-Dungeon-features\"><a href=\"/wiki/Dungeon_feature\">Dungeon features</a></li><li id=\"n-Monsters\"><a href=\"/wiki/Monster#Canonical_list_of_monsters\">Monsters</a></li><li id=\"n-In.2FExtrinsics\"><a href=\"/wiki/Property#Intrinsic_properties\">In/Extrinsics</a></li><li id=\"n-Items\"><a href=\"/wiki/Item\">Items</a></li><li id=\"n-Spells\"><a href=\"/wiki/Spellbook#List_of_spellbooks\">Spells</a></li><li id=\"n-Game-options\"><a href=\"/wiki/Options\">Game options</a></li><li id=\"n-Websites\"><a href=\"/wiki/Websites\">Websites</a></li>\t\t\t\t</ul>\n\t\t\t\t\t\t\t</div>\n\t\t</div>\n\t\t\t<div class=\"portal\" role=\"navigation\" id=\"p-contributing\" aria-labelledby=\"p-contributing-label\">\n\t\t\t<h3 id=\"p-contributing-label\">Contributing</h3>\n\t\t\t<div class=\"body\">\n\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t<li id=\"n-Style-guide\"><a href=\"/wiki/NetHackWiki:Style_guide\">Style guide</a></li><li id=\"n-help\"><a href=\"/wiki/NetHackWiki:How_to_help\" title=\"The place to find out\">How to help</a></li><li id=\"n-Current-projects\"><a href=\"/wiki/NetHackWiki:Current_projects\">Current projects</a></li>\t\t\t\t</ul>\n\t\t\t\t\t\t\t</div>\n\t\t</div>\n\t\t\t<div class=\"portal\" role=\"navigation\" id=\"p-tb\" aria-labelledby=\"p-tb-label\">\n\t\t\t<h3 id=\"p-tb-label\">Tools</h3>\n\t\t\t<div class=\"body\">\n\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t<li id=\"t-whatlinkshere\"><a href=\"/wiki/Special:WhatLinksHere/Des-file_format_(NetHack_3.4.3)\" title=\"A list of all wiki pages that link here [j]\" accesskey=\"j\">What links here</a></li><li id=\"t-recentchangeslinked\"><a href=\"/wiki/Special:RecentChangesLinked/Des-file_format_(NetHack_3.4.3)\" rel=\"nofollow\" title=\"Recent changes in pages linked from this page [k]\" accesskey=\"k\">Related changes</a></li><li id=\"t-specialpages\"><a href=\"/wiki/Special:SpecialPages\" title=\"A list of all special pages [q]\" accesskey=\"q\">Special pages</a></li><li id=\"t-print\"><a href=\"/index.php?title=Des-file_format_(NetHack_3.4.3)&amp;printable=yes\" rel=\"alternate\" title=\"Printable version of this page [p]\" accesskey=\"p\">Printable version</a></li><li id=\"t-permalink\"><a href=\"/index.php?title=Des-file_format_(NetHack_3.4.3)&amp;oldid=169387\" title=\"Permanent link to this revision of the page\">Permanent link</a></li><li id=\"t-info\"><a href=\"/index.php?title=Des-file_format_(NetHack_3.4.3)&amp;action=info\" title=\"More information about this page\">Page information</a></li>\t\t\t\t</ul>\n\t\t\t\t\t\t\t</div>\n\t\t</div>\n\t\t\t\t</div>\n\t\t</div>\n\t\t\t\t<div id=\"footer\" role=\"contentinfo\">\n\t\t\t\t\t\t<ul id=\"footer-info\">\n\t\t\t\t\t\t\t\t<li id=\"footer-info-lastmod\"> This page was last edited on 5 June 2024, at 06:54.</li>\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t<ul id=\"footer-places\">\n\t\t\t\t\t\t\t\t<li id=\"footer-places-about\"><a href=\"/wiki/NetHackWiki:About\" title=\"NetHackWiki:About\">About NetHackWiki</a></li>\n\t\t\t\t\t\t\t\t<li id=\"footer-places-disclaimer\"><a href=\"/wiki/NetHackWiki:General_disclaimer\" title=\"NetHackWiki:General disclaimer\">Disclaimers</a></li>\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t\t\t<ul id=\"footer-icons\" class=\"noprint\">\n\t\t\t\t\t\t\t\t\t\t<li id=\"footer-poweredbyico\">\n\t\t\t\t\t\t<a href=\"//www.mediawiki.org/\"><img src=\"/resources/assets/poweredby_mediawiki_88x31.png\" alt=\"Powered by MediaWiki\" srcset=\"/resources/assets/poweredby_mediawiki_132x47.png 1.5x, /resources/assets/poweredby_mediawiki_176x62.png 2x\" width=\"88\" height=\"31\"/></a>\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t<div style=\"clear: both;\"></div>\n\t\t</div>\n\t\t\n<script>(window.RLQ=window.RLQ||[]).push(function(){mw.config.set({\"wgPageParseReport\":{\"limitreport\":{\"cputime\":\"0.060\",\"walltime\":\"0.164\",\"ppvisitednodes\":{\"value\":1081,\"limit\":1000000},\"ppgeneratednodes\":{\"value\":2156,\"limit\":1000000},\"postexpandincludesize\":{\"value\":3212,\"limit\":2097152},\"templateargumentsize\":{\"value\":1671,\"limit\":2097152},\"expansiondepth\":{\"value\":8,\"limit\":40},\"expensivefunctioncount\":{\"value\":0,\"limit\":100},\"unstrip-depth\":{\"value\":0,\"limit\":20},\"unstrip-size\":{\"value\":0,\"limit\":5000000},\"timingprofile\":[\"100.00%   63.940      1 -total\",\" 49.89%   31.902     82 Template:Sa\",\" 13.66%    8.732      1 Template:Float_right\",\"  8.21%    5.250      1 Template:Noversion\",\"  5.90%    3.772      1 Template:Version_icon\",\"  3.58%    2.290      1 Template:Top_icon\"]},\"cachereport\":{\"timestamp\":\"20240926183131\",\"ttl\":604800,\"transientcontent\":false}}});mw.config.set({\"wgBackendResponseTime\":294});});</script>\n\t</body>\n</html>\n","rawPage":"'''NOTE: This is a guide to the des-file format for NetHack version 3.4.3. NetHack 3.6 and above use different syntax, and it would be confusing to store the differences on one page. Edit this page only for language or technical details relevant to 3.4.3. Go [[des-file format|here]] for information about the most recent version of the file format.'''\n\nThe '''des-file format''' is the language which is used to describe the [[special level]]s for NetHack. It is compiled into a binary file by [[lev_comp]].\n\nIt is not a ''real'' programming language: there is no flow control, and the order in which different NetHack features are created is fixed.\n\nThere are two types of levels you can create: mazes and rooms. For {{sa|MAZE-type levels}} you \"draw\" one or more maps with ASCII characters and then describe the monsters, objects and so on that are in the map (example: [[Source:NetHack 3.4.3/dat/bigroom.des]]. For {{sa|ROOM-type levels}}, you describe rooms and their contents (example: [[Source:NetHack 3.4.3/dat/oracle.des]]). The maze-levels are easier to make and understand, and room-type levels do not offer as much control over the level.\n\n[[lev_comp]] will create a .lev-file for each MAZE and LEVEL definition in the file. These .lev-files will be loaded into NetHack to make the special levels. The .lev-files NetHack loads are actually defined in [[Dungeon.def format|dungeon.def]].\n\n[[UnNetHack]] uses a somewhat different [[des-file format (UnNetHack)|format]].\n\n{{Float right|__TOC__}}\n\n==Language syntax==\nAll lines beginning with <tt>#</tt> are comments and are ignored by the level compiler, except between {{sa|MAP}} and [[#MAP|ENDMAP]].\n\nExample:\n # This is a comment.\n\n===MAZE-type levels===\n\nMaze-type levels begin with {{sa|MAZE}}, followed with optional {{sa|FLAGS}}, optional {{sa|INIT_MAP}}, 0 or more {{sa|MESSAGE}}s and up to 9 maze-parts, each of which consists either of {{sa|NOMAP}} or {{sa|GEOMETRY}} and {{sa|MAP}}, followed by zero or more the random register initializers, one of each ({{sa|RANDOM_MONSTERS}}, {{sa|RANDOM_OBJECTS}}, {{sa|RANDOM_PLACES}}), followed by zero or more of the map details (everything else, eg. {{sa|MONSTER}}, {{sa|OBJECT}}, {{sa|TRAP}}, etc.)\n\nThat is:\n\n*{{sa|MAZE}}\n*{{sa|FLAGS}}, optional\n*{{sa|INIT_MAP}}, optional\n*{{sa|MESSAGE}}, 0 or more\n*up to 9 map-parts, which consist of:\n**{{sa|NOMAP}} or {{sa|GEOMETRY}} and {{sa|MAP}}\n**{{sa|RANDOM_MONSTERS}}, optional\n**{{sa|RANDOM_OBJECTS}}, optional\n**{{sa|RANDOM_PLACES}}, optional\n**The rest of the definitions of this map-part\n\nExample:\n MAZE:\"test\",' '\n FLAGS:noteleport\n MESSAGE:\"Welcome!\"\n GEOMETRY:center,center\n MAP\n .....\n .L.L.\n .....\n .L.L.\n .....\n ENDMAP\n MONSTER:random,random,random\n OBJECT:'%',random,random\n\n====MAZE====\n MAZE:\"foo\",'X'\n\n*<tt>foo</tt> is the unique file name which will be used for this special level, up to 8 characters. For example: <tt>soko3-2</tt>. This file name which NetHack loads is defined by the way this level is defined in [[Dungeon.def format|dungeon.def]].\n*<tt>'X'</tt> is the [[#Map characters|fill map character]]. The map will be filled with this [[dungeon feature]] before anything else is done. This can also be <tt>random</tt>, which fills the whole level with a checkerboard grid of walls and stone, so you can use {{sa|MAZEWALK}} on it.\n\nExample:\n MAZE:\"soko3-2\",' '\n\n====FLAGS====\n FLAGS:flaglist\n\n<tt>flaglist</tt> is one or more of the following flags, separated by commas\n*<tt>noteleport</tt>: Player cannot teleport within the level.\n*<tt>hardfloor</tt>: The floor is too hard to dig.\n*<tt>nommap</tt>: [[magic mapping]] does not work.\n*<tt>arboreal</tt>: supposedly an outdoor map. Solid walls and secret corridors will be shown as trees, digging makes floor instead of corridor and randomly created corridors are made out of floor instead of corridor.\n*<tt>shortsighted</tt>: Monsters cannot see you from far away.\n\nExample:\n FLAGS:noteleport,hardfloor\n\n====INIT_MAP====\n INIT_MAP:'X', 'Y', smoothed, joined, lighted, walled\n\nThis causes the level map to be initialized with a random map generator, similar to how the random [[Gnomish Mines]] look like.\nEach MAZE-level can contain only 0 or 1 of these definitions.\n*<tt>'X'</tt> is the \"foreground\" [[#Map characters|fill map character]]. This should be something the player can walk on, as the walkable part will be made out of this.\n*<tt>'Y'</tt> is the \"background\" [[#Map characters|fill map character]]. This will surround the foreground area, so can be solid or harmful to player.\n*<tt>smoothed</tt> is either <tt>true</tt> or <tt>false</tt>, and denotes whether the level will be \"smoothed\". This means that any foreground character surrounded by fewer than 3 foreground characters is changed to background character.\n*<tt>joined</tt> is either <tt>true</tt> or <tt>false</tt>, and denotes whether the level will be \"joined\", so that all parts are accessible by walking.\n*<tt>lighted</tt> is either <tt>lit</tt>, <tt>unlit</tt>, or <tt>random</tt>\n*<tt>walled</tt> is either <tt>true</tt> or <tt>false</tt>. This is equivalent of using a {{sa|WALLIFY}} -command.\n\nExamples:\n INIT_MAP: 'L', '.', false, false, unlit, false\n INIT_MAP: '.', ' ', true, true, random, true\n\n====MESSAGE====\n MESSAGE:\"string\"\n\nYou can have 0 or more of these per special level. Each message line gets separated with a <tt>--more--</tt> -prompt in the game.\n<tt>\"string\"</tt> is any message you want player to see when entering the level.\n\nExample:\n MESSAGE: \"Well done, mortal!\"\n\n====NOMAP====\n NOMAP\n\nInstead of {{sa|GEOMETRY}} and {{sa|MAP}}, you use this if you think that {{sa|INIT_MAP}} creates a good enough random map and you don't want to use any fixed map-parts.\n\nSee also {{sa|MAP}}\n\n====GEOMETRY====\n GEOMETRY:xadj,yadj\n\nThis must be followed by a {{sa|MAP}} definition, and tells the approximate position of the following MAP-part on the level.\n*<tt>xadj</tt> is one of <tt>left</tt>, <tt>half-left</tt>, <tt>center</tt>, <tt>half-right</tt>, <tt>right</tt> or <tt>random</tt>\n*<tt>yadj</tt> is one of <tt>top</tt>, <tt>center</tt>, <tt>bottom</tt> or <tt>random</tt>\n\nExample:\n GEOMETRY:left,top\n\n====MAP====\n MAP\n ...\n ...\n ...\n ENDMAP\n\nThis must be preceded by {{sa|GEOMETRY}} definition.\nYou define a map-part by \"drawing\" with [[#Map characters|map characters]] between the MAP and ENDMAP. The map can be up to 21 lines high and each line can be up to 76 chars long. Each line must also be the same length. You can also use numbers inside the map, but those will be ignored; they're considered as line numbers.\n\nSee also {{sa|NOMAP}}.\n\n====NON_DIGGABLE====\n NON_DIGGABLE:region\n\nSets the walls inside the region as non-diggable.\n\nExample:\n NON_DIGGABLE:(00,00,13,12)\n\n====NON_PASSWALL====\n NON_PASSWALL:region\n\nPlayers and monsters cannot phase through the walls inside the region\n\nExample:\n NON_PASSWALL:(00,00,13,12)\n\n====RANDOM_PLACES====\n RANDOM_PLACES:place,...\n\nWith this command you can set up to 10 coordinate-pair registers, which you can access by using <tt>place[N]</tt> instead of a pair of coordinates in any other command. The registers are shuffled at level creation time.\n\nExample:\n RANDOM_PLACES:(23,9),(37,14),(51,9)\n OBJECT:'?',\"genocide\",place[0]\n\n====RANDOM_MONSTERS====\n RANDOM_MONSTERS:'X',...\n\nWith this command you can set up 10 monster symbol registers, which you can access by using <tt>monster[N]</tt> instead of a monster symbol in any other command. The registers are shuffled at level creation time.\n\nExample:\n RANDOM_MONSTERS: 'E', 'X'\n MONSTER:monster[0],random,(27,05)\n\n====RANDOM_OBJECTS====\n RANDOM_OBJECTS:'X',...\n\nWith this command you can set up 10 object class symbol registers, which you can access by using <tt>object[N]</tt> instead of a object class symbol in any other command. The registers are shuffled at level creation time.\n\nExample:\n RANDOM_OBJECTS:'[',')','*','%'\n OBJECT:object[0],random,(39,05)\n\n====DOOR====\n DOOR:state,place\n\nPuts a door on the map.\n*<tt>state</tt> is one of the following: <tt>nodoor</tt>, <tt>locked</tt>, <tt>closed</tt>, <tt>open</tt> or <tt>random</tt>\n*<tt>place</tt> is either a pair of coordinates, a {{sa|RANDOM_PLACES}} place, or <tt>random</tt>\n\nExample:\n DOOR:locked,(10,5)\n\n====DRAWBRIDGE====\n DRAWBRIDGE:place,dir,state\n\n*<tt>place</tt> is either a pair of coordinates, a {{sa|RANDOM_PLACES}} place, or <tt>random</tt>\n*<tt>dir</tt> is one of the following: <tt>north</tt>, <tt>east</tt>, <tt>south</tt> or <tt>west</tt>\n*<tt>state</tt> is one of the following: <tt>nodoor</tt>, <tt>locked</tt>, <tt>closed</tt>, <tt>open</tt> or <tt>random</tt>\n\nNote that the drawbridge placement is different from door placement; the coordinates must be a place where the drawbridge would be when it's open, and from that place towards the direction there should be a wall, where the portcullis will be.\n\nExample:\n DRAWBRIDGE:(25,18), north, closed\n\n====REGION====\n REGION:(x1,y1,x2,y2), lighted, \"type\"\n\nDefine a region on the map with certain light-state and type.\n*<tt>lighted</tt> is one of <tt>lit</tt>, <tt>unlit</tt> or <tt>random</tt>.\n*<tt>\"type\"</tt> is one of the [[#Room types|room types]].\n\nYou can add <tt>filled</tt> or <tt>unfilled</tt>, it will denote whether the room will get stocked with the normal monsters or objects it would get. After that you can add <tt>true</tt> or <tt>false</tt> to denote whether the room is irregularly shaped. If the room is irregular, only the first pair of coordinates (x1,y1) must be inside the room, and the room must be closed off from other areas with non-floor [[#Map characters|map characters]]. Use the boundary symbol <tt>'B'</tt> in the {{sa|MAP}} to enclose an irregular room; it will be converted to floor symbol <tt>'.'</tt> after the level has been created.\n\nExamples:\n REGION:(43,12,49,16),unlit,\"ordinary\"\n REGION:(12,01,20,09),unlit,\"morgue\",unfilled\n REGION:(11,03,29,10),lit,\"temple\",filled,true\n\n====STAIR-region====\n STAIR:(x1,y1,x2,y2), (x3,y3,x4,y4), updown\n\nPlaces a stair within an area covered by (x1,y1,x2,y2) and not covered by (x3,y3,x4,y4).\n*<tt>updown</tt> is either <tt>up</tt> or <tt>down</tt>, denoting the direction of the stairs.\nIf the area is prefixed with <tt>levregion</tt> then the coordinates are relative to the whole level, otherwise the coordinates are relative to the last-defined {{sa|MAP}}.\n\nExample:\n STAIR:(0,0,79,20), (20,5,50,15), up\n STAIR:levregion(01,0,79,20), (0,0,28,12), up\n STAIR:(0,0,50,10), levregion(10,0,20,15), down\n\n====PORTAL====\n PORTAL:(x1,y1,x2,y2), (x3,y3,x4,y4),\"levelname\"\n\nPlaces a magical portal within an area covered by (x1,y1,x2,y2) and not covered by (x3,y3,x4,y4). The portal will level teleport player to the level with the name \"levelname\".\nIf the area is prefixed with <tt>levregion</tt> then the coordinates are relative to the whole level, otherwise the coordinates are relative to the last-defined {{sa|MAP}}.\n\nExample:\n PORTAL:levregion(57,01,78,19),(0,0,0,0),\"fire\"\n PORTAL:(0,0,75,19),(65,13,75,19),\"air\"\n\n====TELEPORT_REGION====\n TELEPORT_REGION:(x1,y1,x2,y2),(x3,y3,x4,y4)\n\nRestricts the area where player can end up on the level when he [[level teleport]]s or falls in there. Player will end up within an area covered by (x1,y1,x2,y2) and not covered by (x3,y3,x4,y4).\nIf the area is prefixed with <tt>levregion</tt> then the coordinates are relative to the whole level, otherwise the coordinates are relative to the last-defined {{sa|MAP}}.\nYou can also add an optional direction parameter, either <tt>up</tt> or <tt>down</tt>, which will tell when this rule is applied; when player is coming from below or above.\n\nExample:\n TELEPORT_REGION:(69,16,69,16),(0,0,0,0)\n TELEPORT_REGION:levregion(56,00,79,20),levregion(01,00,55,20),down\n\n====BRANCH====\n BRANCH:(x1,y1,x2,y2),(x3,y3,x4,y4)\n\nPlaces stairs or a magical portal to a dungeon branch within an area covered by (x1,y1,x2,y2) and not covered by (x3,y3,x4,y4).\nIf the area is prefixed with <tt>levregion</tt> then the coordinates are relative to the whole level, otherwise the coordinates are relative to the last-defined {{sa|MAP}}.\n\nExample:\n BRANCH:levregion(51,2,77,18),(0,0,40,20)\n\n====MAZEWALK====\n MAZEWALK:place,dir\n\nCreates a random maze, starting from place.\n\n*<tt>place</tt> is either a pair of coordinates, a {{sa|RANDOM_PLACES}} place, or <tt>random</tt>\n*<tt>dir</tt> is one of the following: <tt>north</tt>, <tt>east</tt>, <tt>south</tt> or <tt>west</tt>\n\nMazewalk turns map grids with solid stone (<tt>' '</tt>) into floor (<tt>'.'</tt>). From the starting position, it checks the mapgrid in the direction given, and if it's solid stone, it will move there, and turn that place into floor. Then it will choose a random direction, jump over the nearest mapgrid in that direction, and check the next mapgrid for solid stone. If there is solid stone, mazewalk will move that direction, changing that place and the intervening mapgrid to floor. Normally the generated maze will not have any loops.\nFor example\n MAP\n TTTTTTT\n T T T T\n TTTTTTT\n T T T T\n TTTTTTT\n ENDMAP\nPointing mazewalk at that will create a small maze of trees, but unless the map (at the place where it's put into the level) is surrounded by something else than solid stone, mazewalk will get out of that MAP.  Substituting floor characters for some of the trees \"in the maze\" will make loops in the maze, which are not otherwise possible. Substituting floor characters for some of the trees at the edges of the map will make maze entrances and exits at those places.\n\nIf the total area NOT covered by all maze-parts in the level is greater than 1/10 of the total area of the level, then the mazes in the level will get stocked with maze-specific stuff, such as [[minotaur]]s, traps and items, proportionally to the amount of space not covered by MAPs.\n\nMazewalk will only work if the solid stone mapgrids in the level (where the MAP was put down) are on odd-numbered squares, both horizontally and vertically. You don't have to worry about this unless your MAP is 21 rows high or 76 columns wide, in which case you'll have to either make the MAP smaller, or move the places where the solid stone squares are.\n\nAlso, MAZEWALK will fail in certain types of MAP-parts if you also use {{sa|WALLIFY}}, as that command is applied before MAZEWALKs.\n\nExample:\n MAZEWALK:(00,06),west\n\n====WALLIFY====\n WALLIFY\n\nTurns walls completely surrounded by other walls into solid stone <tt>' '</tt>.\n\n====LADDER====\n LADDER:place, updown\n\nPlaces a ladder up or down at place. See also {{sa|STAIRS}}.\n\n*<tt>place</tt> is either a pair of coordinates, a {{sa|RANDOM_PLACES}} place, or <tt>random</tt>\n*<tt>updown</tt> is either <tt>up</tt> or <tt>down</tt>, denoting the direction of the stairs.\n\nExample:\n LADDER:(11,05),down\n\n====GOLD====\n GOLD:place, amount\n\nPlaces amount of gold in place.\n*<tt>place</tt> is either a pair of coordinates, a {{sa|RANDOM_PLACES}} place, or <tt>random</tt>\n*<tt>amount</tt> is any positive integer number.\n\nExample:\n GOLD:(5,5),12345\n\n===ROOM-type levels===\n\nRoom-type levels begin with {{sa|LEVEL}}, followed by optional {{sa|FLAGS}}, optional {{sa|INIT_MAP}}, 0 or more {{sa|MESSAGE}}s, followed by optional random register initializers ({{sa|RANDOM_MONSTERS}} and {{sa|RANDOM_OBJECT}}), followed by 0 or more {{sa|ROOM}} and {{sa|SUBROOM}} definitions (and the contents for those rooms), followed by {{sa|RANDOM_CORRIDORS}}.\n\nThat is:\n*{{sa|LEVEL}}\n*{{sa|FLAGS}}, optional\n*{{sa|INIT_MAP}}, optional\n*{{sa|MESSAGE}}, 0 or more\n*{{sa|RANDOM_MONSTERS}}, optional\n*{{sa|RANDOM_OBJECTS}}, optional\n**{{sa|ROOM}}, 0 or more\n**contents for the room (monsters, objects, traps, etc.)\n**{{sa|SUBROOM}}, 0 or more\n***contents for the subroom (monsters, objects, traps, etc.)\n*{{sa|RANDOM_CORRIDORS}}\n\nIt's not possible to define arbitrarily shaped rooms with this type of level.\n\n====LEVEL====\n\n LEVEL: \"name\"\n\n<tt>\"name\"</tt> is the unique file name for this level. Can be up to 8 chars long. This file name is defined by the way this level is defined in [[Dungeon.def format|dungeon.def]].\n\nExample:\n LEVEL: \"oracle\"\n\n====RANDOM_CORRIDORS====\n\n RANDOM_CORRIDORS\n\nCreates random corridors between the rooms in the level, so that all rooms are accessible.\n\n====ROOM====\n\n ROOM: \"type\", lighted, pos, align, size\n\nCreates a room. The room will be placed on a position defined both by pos and align. pos defines the rough position (in a 5-by-5 grid on the screen), and align defines the room position within that. NOTE: Creation of a randomly located room may fail, especially if there's little free space to fit it on the level. Contents of such a room won't be created either.\n\n*<tt>\"type\"</tt> is one of the [[#Room types|room types]].\n*<tt>lighted</tt> is one of <tt>lit</tt>, <tt>unlit</tt> or <tt>random</tt>.\n*<tt>pos</tt> is either <tt>random</tt> or <tt>(xpos, ypos)</tt>, where both <tt>xpos</tt> and <tt>ypos</tt> are between 0 and 5. This is an approximate position on the screen.\n*<tt>align</tt> is either <tt>random</tt> or <tt>(xalign, yalign)</tt> and is the room alignment within the <tt>pos</tt>.\n**<tt>xalign</tt> is one of <tt>left</tt>, <tt>half-left</tt>, <tt>center</tt>, <tt>half-right</tt>, <tt>right</tt> or <tt>random</tt>\n**<tt>yalign</tt> is one of <tt>top</tt>, <tt>center</tt>, <tt>bottom</tt> or <tt>random</tt>.\n*<tt>size</tt> is either <tt>random</tt> or <tt>(width, height)</tt>.\n\nYou can also give one additional parameter, which can either be <tt>true</tt> or <tt>false</tt>. This tells whether the room will get stocked by objects and monsters it would normally get (such as shopkeepers and items for sale for shops).\n\nExample:\n ROOM: \"ordinary\", random, random, random, random\n ROOM: \"ordinary\", lit, (3,3), (center,center), (11,9)\n\n====SUBROOM====\n\n SUBROOM: \"type\", lighted, pos, size, \"parent\"\n\nCreates a room inside previously defined ROOM.\n\n*<tt>\"type\"</tt> is one of the [[#Room types|room types]].\n*<tt>lighted</tt> is one of <tt>lit</tt>, <tt>unlit</tt> or <tt>random</tt>.\n*<tt>pos</tt> is either <tt>random</tt> or <tt>(xpos, ypos)</tt>, where <tt>xpos</tt> and <tt>ypos</tt> define the absolute position of this subroom inside the parent room. (0,0) is the upper left corner of the parent.\n*<tt>size</tt> is either <tt>random</tt> or <tt>(width, height)</tt>.\n*<tt>\"parent\"</tt> is the name of the parent room, as defined with {{sa|NAME}}.\n\nYou can also give one additional parameter, which can either be <tt>true</tt> or <tt>false</tt>. This tells whether the room will get stocked by objects and monsters it would normally get (such as shopkeepers and items for sale for shops).\n\nExample:\n SUBROOM:\"shop\",lit,(10,10),(3,3),\"town\"\n SUBROOM:\"ordinary\",random,(19,2),(2,2),\"town\"\n\n====NAME====\n\n NAME: \"string\"\n\nNames the previously defined ROOM or SUBROOM. Subrooms need to know the name of their parent room, this has no other meaning.\n\nExample:\n NAME: \"town\"\n\n====CHANCE====\n\n CHANCE: int\n\nAssigns a creation chance to the previously defined ROOM or SUBROOM. The room walls and doors will get created no matter what, this just tells whether the room contents will be created. <tt>int</tt> should be in the 0-100 range. Only non-ordinary rooms can have this.\n\nExample:\n CHANCE: 90\n\n====Room DOOR====\n\n DOOR: secret, state, wall, pos\n\nCreates a door with certain state on the previously defined ROOM or SUBROOM. Note that Room DOOR format is different from MAZE-level {{sa|DOOR}}.\n\n*<tt>secret</tt> can be <tt>true</tt>, <tt>false</tt> or <tt>random</tt>\n*<tt>state</tt> is one of the following: <tt>nodoor</tt>, <tt>locked</tt>, <tt>closed</tt>, <tt>open</tt> or <tt>random</tt>\n*<tt>wall</tt> is one of the following: <tt>north</tt>, <tt>east</tt>, <tt>south</tt> or <tt>west</tt> and tells on what wall of the room the door will be created.\n*<tt>pos</tt> is either <tt>random</tt> or a positive integer, and tells how far from top or left the door will be.\n\nExample:\n DOOR: false, closed, south, random\n\n===Common syntax===\n\nThe following commands are common to both MAZE and ROOM-type levels. For the MAZE-levels, the coordinates used are the previously defined MAP, for ROOM-levels, it's either the previously defined ROOM or SUBROOM.\n\n====ALTAR====\n ALTAR:place,align,type\n\nPlaces an altar on the previously defined map or ROOM or SUBROOM.\n\n*<tt>place</tt> is either a pair of coordinates, a {{sa|RANDOM_PLACES}} place, or <tt>random</tt>\n*<tt>align</tt> is either <tt>noalign</tt>, <tt>law</tt>, <tt>neutral</tt>, <tt>chaos</tt>, <tt>coaligned</tt>, <tt>noncoaligned</tt>, <tt>random</tt> or an alignment register <tt>align[N]</tt>, where N can be either 0,1 or 2.\n*<tt>type</tt> is one of <tt>sanctum</tt>, <tt>shrine</tt>, <tt>altar</tt> or <tt>random</tt>\n\nExample:\n ALTAR:(50,14),chaos,altar\n ALTAR:place[0],noalign,altar\n ALTAR:(07,09),align[0],sanctum\n\n====CONTAINER====\n\nThis defines a container that you can put items in. It accepts exactly the same parameters as {{sa|OBJECT}}. Normal content generation for this object is suppressed.\n\nExample:\n CONTAINER:'(',\"chest\",(5,5)\n OBJECT:'/',\"wishing\",contained\n\n====ENGRAVING====\n ENGRAVING:place, type, \"text\"\n\nCreates an engraving on the floor.\n\n*<tt>place</tt> is either a pair of coordinates, a {{sa|RANDOM_PLACES}} place, or <tt>random</tt>\n*<tt>type</tt> is one of <tt>dust</tt>, <tt>engrave</tt>, <tt>burn</tt>, <tt>mark</tt> or <tt>random</tt>.\n*<tt>\"text\"</tt> is the text to engrave on the floor.\n\nExample:\n ENGRAVING:(12,03), engrave, \"You are now entering the Gnome King's wine cellar.\"\n\n====FOUNTAIN====\n FOUNTAIN:place\n\nPlaces a fountain on the map.\n\n*<tt>place</tt> is either a pair of coordinates, a {{sa|RANDOM_PLACES}} place, or <tt>random</tt>\n\nExample:\n FOUNTAIN:(10,08)\n\n====MONSTER====\n MONSTER:'X',\"monst\",place\n\n*<tt>'X'</tt> is the monster class symbol, or <tt>random</tt>, or a {{sa|RANDOM_MONSTERS}} index\n*<tt>\"monst\"</tt> is the specific monster, or <tt>random</tt>\n*<tt>place</tt> is either a pair of coordinates, a {{sa|RANDOM_PLACES}} place, or <tt>random</tt>\n\nOther things you can add to the monster definition:\n*<tt>hostile</tt> or <tt>peaceful</tt>\n*<tt>asleep</tt> or <tt>awake</tt>\n*For mimics and other shapechangers you can also add the following:\n**<tt>m_feature \"[[dungeon_feature]]\"</tt> to force the mimic to be a dungeon feature.\n**<tt>m_object \"object_name\"</tt> to force the mimic to be an object. object_name is the name of an object as they are in [[objects.c]]\n**<tt>m_monster \"monster_name\"</tt> to force the shapechanger to be a certain monster.\n*<tt>\"Name\"</tt> to name the monster.\n\nOptionally, you can put <tt>[NN%]</tt> right after <tt>MONSTER</tt> to make the monster generation optional. NN is a percentage chance of the monster being generated when the level is created.\n\nExamples:\n MONSTER:'v',\"dust vortex\",(42,05)\n MONSTER:'E',\"earth elemental\",(39,06),peaceful\n MONSTER:'&',\"Pestilence\",place[0],hostile\n MONSTER:random,random,random\n MONSTER:random,random,(01,01), asleep\n MONSTER:monster[0],random,(27,05)\n MONSTER:'m',\"giant mimic\",place[1],m_feature \"fountain\"\n MONSTER:'m',random,place[0], m_object \"luckstone\"\n MONSTER:'@',\"rogue\",(35,06),peaceful,\"Pug\"\n MONSTER[50%]:'P', \"green slime\", random\n\n====OBJECT====\n OBJECT:'X',\"name\",place\n\nEach map-part can contain any number of object definitions.\n*<tt>'X'</tt>: a character denoting one of the object classes.\n*<tt>\"name\"</tt>: either an object name as listed in [[objects.c]], or <tt>random</tt>\n*<tt>place</tt>: either a pair of coordinates, a {{sa|RANDOM_PLACES}} place, or <tt>random</tt>, or <tt>contained</tt>. If contained, then this object will be placed in the previously defined {{sa|CONTAINER}}.\n\nOptional stuff you can add to the object definition:\n\n*<tt>cursestate, \"monster_id\", spe</tt>\n*<tt>cursestate, spe</tt>\n*<tt>\"monster_id\", spe</tt>\n\nWhere\n*<tt>cursestate</tt> is one of <tt>blessed</tt>, <tt>uncursed</tt>, <tt>cursed</tt> or <tt>random</tt>.\n*<tt>\"monster_id\"</tt> is a monster type, as defined in [[Source:NetHack 3.4.3/src/monst.c]]\n*<tt>spe</tt> is an integer, and defines different things depending on what kind of object is generated:\n**enchantment for [[armor]] and [[weapon]]s\n**charges for [[wands]], [[rings]], [[magic marker]]s and everything else that has charges.\n**historic and gender bit for [[statue]]s. 1 is historic, 2 is male, 4 is female. Adding the values together is possible, so you can create eg. historic, male statue with value 3 and historic, female with 5. Leaving the gender specification out will either result in a random gender, or if the monster is always of certain gender, then the statue will be that gender too. (eg. nymphs)\n**[[tin]]s: 1 means spinach, -1 is home-made.\n**[[container]]s: 1 means the box contains [[Schroedinger's Cat]].\n**[[oil lamp]]s and [[candle]]s: 0 means the lamp is out of oil.\n**[[Candelabrum]]: how many candles are attached to it.\n**[[scroll of mail]]: 1 means it was not delivered to current player.\n**[[egg]]s: 1 means hero laid it.\n**[[chest]]s: 2 means it's a royal coffer in a [[throne room]].\n\nAfter these you can also add a quoted string, which would become the object's name.\n\nOptionally, you can put <tt>[NN%]</tt> right after <tt>OBJECT</tt> to make the object generation optional. NN is a percentage chance of the object being generated when the level is created.\n\nExamples:\n OBJECT:'%', \"food ration\", random\n OBJECT:'*', random, (10,10)\n OBJECT:'?', \"genocide\", place[0]\n OBJECT[10%]:'\"', \"amulet of life saving\", random\n OBJECT:'%', \"corpse\", random, \"archeologist\", 0\n OBJECT[50%]:')', \"scimitar\", contained, blessed, +2\n OBJECT:'`', \"statue\", (0,0), \"forest centaur\", 1\n OBJECT:'(', \"crystal ball\", (17,08), blessed, 5, \"The Orb of Fate\"\n\n====STAIR====\n STAIR:place, updown\n\nPlaces a stair up or down at place. See also {{sa|STAIR-region}} and {{sa|LADDER}}.\n*<tt>place</tt> is either a pair of coordinates, a {{sa|RANDOM_PLACES}} place, or <tt>random</tt>\n*<tt>updown</tt> is either <tt>up</tt> or <tt>down</tt>, denoting the direction of the stairs.\n\nExample:\n STAIR:(70,08), up\n STAIR:random, down\n STAIR:place[3], up\n\n====TRAP====\n TRAP:\"name\",place\n\n*<tt>\"name\"</tt> is the [[#Trap names|trap's name]], or <tt>random</tt>\n*<tt>place</tt> is either a pair of coordinates, a {{sa|RANDOM_PLACES}} place, or <tt>random</tt>\n\nOptionally, you can put <tt>[NN%]</tt> right after <tt>TRAP</tt> to make the trap generation optional. NN is a percentage chance of the trap being generated when the level is created.\n\nExamples:\n TRAP:\"hole\",(12,10)\n TRAP:\"anti magic\",random\n TRAP:random,random\n TRAP[25%]:\"polymorph\",random\n\n====Map characters====\n{|class=\"prettytable striped\"\n!character\n![[dungeon feature]]\n|-\n|<tt>' '</tt>\n|solid wall\n|-\n|<tt>'#'</tt>\n|corridor\n|-\n|<tt>'.'</tt>\n|room floor (Unlit, unless lit with {{sa|REGION}}-command)\n|-\n|<tt>'-'</tt>\n|horizontal wall\n|-\n|<tt>'&#124;'</tt>\n|vertical wall\n|-\n|<tt>'+'</tt>\n|door (State is defined with {{sa|DOOR}} -command)\n|-\n|<tt>'A'</tt>\n|air\n|-\n|<tt>'B'</tt>\n|crosswall / boundary symbol hack (See {{sa|REGION}})\n|-\n|<tt>'C'</tt>\n|cloud\n|-\n|<tt>'S'</tt>\n|secret door\n|-\n|<tt>'H'</tt>\n|secret corridor\n|-\n|<tt>'{'</tt>\n|fountain\n|-\n|<tt>'\\'</tt>\n|throne\n|-\n|<tt>'K'</tt>\n|sink\n|-\n|<tt>'&#125;'</tt>\n|moat\n|-\n|<tt>'P'</tt>\n|pool of water\n|-\n|<tt>'L'</tt>\n|lava pool\n|-\n|<tt>'I'</tt>\n|ice\n|-\n|<tt>'W'</tt>\n|water\n|-\n|<tt>'T'</tt>\n|tree\n|-\n|<tt>'F'</tt>\n|iron bars\n|}\n\n====Trap names====\n\"anti magic\", \"arrow\", \"bear\", \"board\", \"dart\", \"falling rock\", \"fire\", \"hole\", \"land mine\", \"level teleport\", \"magic portal\", \"magic\", \"pit\", \"polymorph\", \"rolling boulder\", \"rust\", \"sleep gas\", \"spiked pit\", \"statue\", \"teleport\", \"trap door\", \"web\"\n\n====Room types====\n\"ordinary\", \"throne\", \"swamp\", \"vault\", \"beehive\", \"morgue\", \"barracks\", \"zoo\", \"delphi\", \"temple\", \"anthole\", \"cocknest\", \"leprehall\", \"shop\", \"armor shop\", \"scroll shop\", \"potion shop\", \"weapon shop\", \"food shop\", \"ring shop\", \"wand shop\", \"tool shop\", \"book shop\", \"candle shop\"\n\n== See also ==\n* [[Des-file format (UnNetHack)]]\n* [[Des-file format]]\n\n[[Category:Annotations]]\n{{noversion}}"}
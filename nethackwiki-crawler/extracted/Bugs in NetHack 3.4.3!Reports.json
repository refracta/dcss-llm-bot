{"title":"Bugs in NetHack 3.4.3/Reports","url":"https://nethackwiki.com/wiki/Bugs_in_NetHack_3.4.3/Reports","type":"markdown","data":"The official list of [bugs in NetHack 3.4.3](/wiki/Bugs_in_NetHack_3.4.3 \"Bugs in NetHack 3.4.3\") gives very little information about the bugs in question. This page archives the known original bug reports sent to the [DevTeam](/wiki/DevTeam \"DevTeam\"), to give more information and insight into the bugs.\n\n[ ]\n\n## Contents\n\n- [1 C341-5](#C341-5)\n\n- [2 C343-379](#C343-379)\n\n- [3 C343-403](#C343-403)\n\n- [4 C343-409](#C343-409)\n\n- [5 C343-421](#C343-421)\n\n- [6 C343-425](#C343-425)\n\n- [7 C343-426](#C343-426)\n\n- [8 C343-428](#C343-428)\n\n- [9 Unnumbered bugs](#Unnumbered_bugs)\n\n  - [9.1 Wielding potions of blindness confers blindness resistance](#Wielding_potions_of_blindness_confers_blindness_resistance)\n  - [9.2 Turn alternation failure with 24 movement energy](#Turn_alternation_failure_with_24_movement_energy)\n  - [9.3 Grammar and message-related errors](#Grammar_and_message-related_errors)\n  - [9.4 Worn monster equipment can be picked up while engulfed](#Worn_monster_equipment_can_be_picked_up_while_engulfed)\n  - [9.5 Jumping into portals can print messages out of order or incorrectly pick up items](#Jumping_into_portals_can_print_messages_out_of_order_or_incorrectly_pick_up_items)\n  - [9.6 Alternative tilesets can spoil the identity of bags, gems, instruments, fake Amulets](#Alternative_tilesets_can_spoil_the_identity_of_bags.2C_gems.2C_instruments.2C_fake_Amulets)\n  - [9.7 Crash while loading when riding and wielding Sting](#Crash_while_loading_when_riding_and_wielding_Sting)\n  - [9.8 Can't wish for rusty rustproof](#Can.27t_wish_for_rusty_rustproof)\n  - [9.9 Odd message when player swallowing monster dies by wrath of god](#Odd_message_when_player_swallowing_monster_dies_by_wrath_of_god)\n  - [9.10 Crash when picking up an unpaid object between two shops](#Crash_when_picking_up_an_unpaid_object_between_two_shops)\n  - [9.11 Unnecessary head shaking](#Unnecessary_head_shaking)\n  - [9.12 Standout inconsistency](#Standout_inconsistency)\n  - [9.13 No attacks when swallowed by tame monster](#No_attacks_when_swallowed_by_tame_monster)\n  - [9.14 \"You are protected\" from a +0 ring of protection](#.22You_are_protected.22_from_a_.2B0_ring_of_protection)\n  - [9.15 Randomly placed doors not properly placed](#Randomly_placed_doors_not_properly_placed)\n  - [9.16 Robbing rogue not getting +1 alignment](#Robbing_rogue_not_getting_.2B1_alignment)\n  - [9.17 Drawbridge killed gas spore not exploding](#Drawbridge_killed_gas_spore_not_exploding)\n  - [9.18 Removing red dragon scale mail in lava causes no bad effects](#Removing_red_dragon_scale_mail_in_lava_causes_no_bad_effects)\n  - [9.19 Crash when teleporting onto a sink while equipping levitation boots](#Crash_when_teleporting_onto_a_sink_while_equipping_levitation_boots)\n  - [9.20 Erroneously rustproof splint mail for samurai](#Erroneously_rustproof_splint_mail_for_samurai)\n  - [9.21 panic() when trying to drop destroyed object](#panic.28.29_when_trying_to_drop_destroyed_object)\n  - [9.22 Flesh golems are healed for too much from shock attacks](#Flesh_golems_are_healed_for_too_much_from_shock_attacks)\n  - [9.23 Long worms and Elbereth](#Long_worms_and_Elbereth)\n  - [9.24 Monster branch stair usage bug](#Monster_branch_stair_usage_bug)\n  - [9.25 Intrinsic disintegration resistance shields the inventory](#Intrinsic_disintegration_resistance_shields_the_inventory)\n  - [9.26 nasty() is broken](#nasty.28.29_is_broken)\n  - [9.27 cast protection gives too little AC](#cast_protection_gives_too_little_AC)\n  - [9.28 Scrolls of light when blind](#Scrolls_of_light_when_blind)\n\n## C341-5\n\nClarification request send by [User:Bulwersator](/wiki/User:Bulwersator \"User:Bulwersator\") via [contact form](https://nethack.org/common/contact.html), response by Dave Cohrs.\n\nC341-5 - request for clarification\n\nOn known bug list it appears as \"When you see your pet move, the pet may be referred to as \"it\".\" What are the circumstances in which this occurs?\n\nI am working on fixing vanilia bugs in my fork but this one is so unclear that nobody knows how to reproduce it.\n\nIn general - is it possible to publish at least bug reports send to devteam?\n\n- We are very low tech on the backend, so currently, no, we don't have the capability to publish bug reports.\n\n* I think I have found one that I believe relates to this issue, but it may not be the only case:\n\n  1. Start a game in wizard mode\n  2. Wish for a wand of make invisible\n  3. Wish for a tripe ration\n  4. Wish for an amulet of ESP\n  5. Drop the tripe ration\n  6. Put on the amulet of ESP\n  7. Zap your starting pet with the wand of make invisible\n  8. Step way and let your pet eat\n  9. Watch the message \"It eats a tripe ration.\"\n\n- - Although, it could also be this report, which mentions movement:\n  - My character has invisible pet (it was a cat, but after polymorph it \"disappeared\" and now it walks around, answers magic whistle, fights...). My character cannot see it. Only - NetHack gave me message \"It moves only reluctantly\". And I/my character should not be able to see it (I do not even know on which item it was at the time).\n\n* Like I wrote, our backend is low tech.\n\n## C343-379\n\nReported by [Patric Mueller](/wiki/User:Bhaak \"User:Bhaak\")\n\n```\nBelow is what you submitted to The_DevTeam on Tuesday, February 10, 2009 at 07:12:00 (13:15 CET)\n\nThe ID number for this message is '#H1810'\n\nmailversion:\n1.40\n\nnhversion:\n3.4.3\n\nnhfrom:\nOur 3.4.3 source release, unmodified\n\nhardware:\n\ncomments:\nHi DevTeam,\n\nI noticed two spelling errors in quest.txt.\n\nThe first in the Healers part: \"How are you feeling?  Perhaps a good bleeding will improve your sprits.\"\n(sprits instead of spirits)\n\nand the second in the Rangers: \"Is that truely %o that I see you carrying?\"\n(truely instead of truly)\n\nAlthough googling on Google Books for \"truely\" shows that this spelling has\nbeen in use in the past. It might look appropriately dated for use in the\nKnights quest texts where currently \"truly\" is used.\n\nBye\nPatric\n```\n\n## C343-403\n\nReported by ais523, although it was well known in the NetHack community before the report\n\n```\nThe ID number for this message is '#H2161'\n\nmailversion:\n1.41\n\nnhversion:\n3.4.3\n\nnhfrom:\nOur 3.4.3 source release, unmodified\n\nhardware:\nProbably irrelevant, but it's a Toshiba Satellite netbook with 3 GB\nmemory and 4 GB swap, and an Intel U2700 1.3GHz processor. (The bug\nhas been verified on multiple patched/unpatched versions of NetHack,\non multiple sets of hardware, including public servers.)\n\nsoftware:\nUbuntu Lucid, running Linux 2.6.32, using a NetHack binary compiled\nfrom unmodified (apart from config.h/unixconf.h and makefiles)\nofficial NetHack 3.4.3 sources compiled for Unix-like systems using\ngcc 4.4.1. (Also probably irrelevant, given the above.)\n\ncomments:\nThere's a huge inconsistency in the way that writing scrolls via magic\nmarker works; in particular, it depends on interface details that\nshould be irrelevant. These checks were done as an unlucky non-wizard\nto minimize the chance of false positives due to writing the scroll by\nchance rather than due to having a 100% chance:\n\n1. trying to write unIDed scroll by label:\n\"What type of scroll do you want to write? KIRJE\" fails\n2. trying to write unIDed scroll by actual type:\n\"For what do you wish? scroll of fire\"\n\"What type of scroll do you want to write? fire\" fails\n3. trying to write called scroll by label:\n\"Call a scroll labeled KIRJE: X\"\n\"What type of scroll do you want to write? KIRJE\" succeeds\n4. trying to write called scroll via user-given name:\n\"Call a scroll labeled FOOBIE BLETCH: wished-for\"\n\"What type of scroll do you want to write? wished-for\"\n\"There is no such scroll!\"\n5. trying to write called scroll via actual type:\n\"What type of scroll do you want to write? fire\" succeeds\n6. trying to write an IDed scroll via label:\n(identify YUM YUM as magic mapping)\n\"What type of scroll do you want to write? YUM YUM\" succeeds\n7. trying to write an IDed scroll via actual type:\n\"What type of scroll do you want to write? magic mapping\" succeeds\n\nThe major inconsistencies here are between cases 1 and 3, and between\ncases 2 and 4. Case 3 implies that it's possible to copy a scroll\nyou've ever owned, even if you don't know what it does; case 1 implies\nthat it isn't. It's also incredibly unintuitive, if it makes sense at\nall, that giving a nickname to a scroll is necessary to be able to\ncopy it.\n\nThe inconsistency between cases 2 and 4 is much worse, and I've seen\npeople exploit it on public servers. Suppose a player has ten\nunidentified scrolls, and doesn't know what any of them do, but\nsuspects, say, that at least one is enchant armor. All they have to do\nin order to write an enchant armor scroll is to name all ten of those\nscrolls via #name-n, and then write enchant armor; if they had one in\ninventory to name, they write the scroll correctly, even if they\ndidn't know /which/ of those ten scrolls it was. This doesn't make a\nwhole lot of sense, especially as a mechanism for identifying items.\n\nThe culprit is line 200 of write.c, which checks to see if a scroll of\nthe type given by the player has been called (i.e. given an\noc_uname). This check is dangerous without additional safeguards, as\nit can let the scroll be written even if the player has no idea what\nit is.\n```\n\n## C343-409\n\nReported by ais523\n\n```\nThe ID number for this message is '#H2210'\n\nmailversion:\n1.41\n\nnhversion:\n3.4.3\n\nnhfrom:\nOur 3.4.3 source release, unmodified\n\nhardware:\nProbably irrelevant, but it's a Toshiba Satellite netbook with 3 GB\nmemory and 4 GB swap, and an Intel U2700 1.3GHz processor.\n\nsoftware:\nUbuntu Lucid, running Linux 2.6.32, using a NetHack binary compiled\nfrom unmodified (apart from config.h/unixconf.h and makefiles)\nofficial NetHack 3.4.3 sources compiled for Unix-like systems using\ngcc 4.4.3\n\ncomments:\nIf a player applies an unlocking tool (key, lockpick, credit card) at\nan empty doorway containing a mimic pretending to be a door, the game\nsays \"that doorway has no door\", rather than reacting appropriately to\nthe presence of the mimic (say, by waking it and making the player\nstick to it, or adding the lockpick to the mimic's inventory with an\nappropriate message). The easiest way to reproduce this is in wizard\nmode, by standing next to a doorway without a door, and repeatedly\ndoing control-G large mimic.\n\nThe bug's caused by a logic problem in src/lock.c. The check starting\nat line 364 checks for mimics, but only for the purpose of not\nprinting any monster-related messages. Some time before line 385,\nthere needs to be code to allow for the possibility that in addition\nto having a doorway on the square (accomplishable via having a doorway\nwithout a door, which is still IS_DOOR internally), there's also an\napparent door in the doorway which is actually a mimic; the character\nwould believe there was an intact lock on the square even though they\ngame knows there isn't.\n\nI would make and supply a patch for this bug, but as the README says,\n\"we will assume your code is synchronized with ours\"; and I don't have\nanything newer than 3.4.3 handy to patch against (and I suspect\npatches against 3.4.3 wouldn't apply; you've likely changed your code\nas extensively as I've changed my local copy in an attempt to make a\nfork, but I test all bugs I report against the official 3.4.3\nsource). If you think a patch would help, let me know and I'll try to\nprovide one.\n```\n\n## C343-421\n\nReported by ais523\n\n```\nThe ID number for this message is '#H2142'\n\nmailversion:\n1.41\n\nnhversion:\n3.4.3\n\nnhfrom:\nOur 3.4.3 source release, unmodified\n\nhardware:\nProbably irrelevant, but it's a Toshiba Satellite netbook with 3 GB\nmemory and 4 GB swap, and an Intel U2700 1.3GHz processor.\n\nsoftware:\nUbuntu Lucid, running Linux 2.6.32, using a NetHack binary compiled\nfrom unmodified (apart from config.h/unixconf.h and makefiles)\nofficial NetHack 3.4.3 sources compiled for Unix-like systems using\ngcc 4.4.1\n\ncomments:\nEven after 6 years, it seems that new bugs, or at least buglike\nbehaviour, is still being discovered in NetHack. Is it intentional\nthat it's possible to avoid going through all the levels in Gehennom\non the \"ascension run\" (bringing the Amulet to the surface)?\n\nThe issue in this case is that it's possible to use the magic portal\nleading to the Wizard of Yendor's Tower to skip several levels on the\nway up. Although the player is incapable of leaving the tower (via any\nmethod that works whilst holding the Amulet other than going back the\nway they came) and thus this would seem to prevent this being used for\na shortcut, it's possible to drop the Amulet, then teleport it out of\nthe tower (with a wand of teleportation). Because the player's no\nlonger holding the Amulet, they can then #sit back on the portal to\nleave the tower, level teleport back to the level the Amulet is on\n(possible because they aren't holding it), and pick it up, this time\n/outside/ the tower. (As an amusing aside, the fact that it's possible\nto level-teleport past the intervening levels on the way down makes it\npossible to not generate the levels in question at all.)\n```\n\n## C343-425\n\nReported by ais523\n\n```\nmailversion:\n1.42\n\nnhversion:\n3.4.3\n\nnhfrom:\nOur 3.4.3 source release, unmodified\n\nhardware:\nProbably irrelevant, but it's a Toshiba Satellite netbook with 3\nGB memory and 4 GB swap, and an Intel U2700 1.3GHz processor.\n\nsoftware:\nUbuntu Lucid, running Linux 2.6.32, using a NetHack binary compiled\nfrom unmodified (apart from config.h/unixconf.h and makefiles)\nofficial NetHack 3.4.3 sources compiled for Unix-like systems using\ngcc 4.4.3\n\ncomments:\nA bug which was just discovered today in my unfinished NetHack fork\nAceHack: a player was riding through the dungeon and stepped on awel\nlandmine, and his warhorse survived the explosion but died from the\nfall. This lead to his dexterity permanently decreasing by one point.\n\nInvestigation on an unmodified version of NetHack shows that the\nbug was inherited from there. The culprit is src/steed.c, line 527\n(in NetHack 3.4.3; it's line 532 in AceHack, and I have no idea\nwhat line it is in NetHack 3.5, even though obviously that would be\nthe most useful line number to give), which sets the wounded legs\nintrinsic and extrinsic values to 0 without removing the dexterity\nadjustment. Although this could be fixed at that point in the code,\nit's probably easier to do it by calling the appropriate functions\ninstead (adjusting for the change in ride state).\n```\n\n## C343-426\n\nReported by ais523\n\n```\nmailversion:\n1.42\n\nnhversion:\n3.4.3\n\nnhfrom:\nOur 3.4.3 source release, unmodified\n\nhardware:\nProbably irrelevant, but it's a Toshiba Satellite netbook with 3\nGB memory and 4 GB swap, and an Intel U2700 1.3GHz processor.\n\nsoftware:\nUbuntu Lucid, running Linux 2.6.32, using a NetHack binary compiled\nfrom unmodified (apart from config.h/unixconf.h and makefiles)\nofficial NetHack 3.4.3 sources compiled for Unix-like systems using\ngcc 4.4.3\n\ncomments:\nIf a level is almost but not entirely full of monsters, then a player\nhiding on the ceiling (after using #monster in any p or t form),\nthen when a monster moves onto the player's square, the player\nfalls to the nearest unoccupied square that the monster didn't come\nfrom, even if it's over the other end of the level. There are no\nrestrictions on this, so it can be used to, say, cross the Plane of\nAir or Astral in one turn, or escape from the Wizard of Yendor's\ntower (or phase into it, but that's less useful because there are\nvarious standard ways of luring him out, which as far as I know\nare intentional; let me know if they're bugs and I'll report them).\n\nThe culprit is a use of enexto() without any sort of check,\non src/mhitu.c line 362 (in NetHack 3.4.3); the check is made\nbefore moving the monster, even though the monster vacates the\nsquare in question, so it won't hit the square that the monster was\noccupying. (Every other use of enexto() in the 3.4.3 source to find a\nlocation to place the player also has a check on the maximum distance\nthat the player can be moved; I obviously can't check to see if more\nbuggy uses have been introduced in a development version.) The most\nobvious fix is simply to make the player and monster swap places,\nalthough that would have issues where long worms were involved.\n```\n\n## C343-428\n\nReported by ais523\n\n```\nmailversion:\n1.42\n\nnhversion:\n3.4.3\n\nnhfrom:\nOur 3.4.3 source release, unmodified\n\nhardware:\nProbably irrelevant, but it's a Toshiba Satellite netbook with 3 GB\nmemory and 4 GB swap, and an Intel U2700 1.3GHz processor.\n\nsoftware:\nUbuntu Lucid, running Linux 2.6.32, using a NetHack binary compiled\nfrom unmodified (apart from config.h/unixconf.h and makefiles)\nofficial NetHack 3.4.3 sources compiled for Unix-like systems using\ngcc 4.4.3\n\ncomments:\nThis bug was found in a collaboration between me and dwangoAC (we're\ntrying to determine the theoretically fastest turncount you can get\nfor a game of NetHack). When a cockatrice nest (the special room)\ngenerates, all the statues in it are always of giant ants. This is\nbecause the code just doesn't initialise the monster type (corpsenm)\nof the statues anywhere; mkroom.c:346 calls mk_tt_object requesting a\nSTATUE, yet mk_tt_object explicitly asks for no initialisation on the\nstatues it creates (mkobj.c:1043). The comment on the line above is\nincorrect, or at least incomplete; it states that it prevents\ngeneration of statue contents, but the lack of initialization also\nprevents the statue's corpsenm being set by mksobj like it normally\nwould be. (In case it matters, and in _tt_-related functions it might,\nmy test case was with a blank high score table.)\n\nIt's kind-of interesting that this wasn't noticed earlier; perhaps\nplayers tend not to pay attention to the statues around cockatrice\nnests because they're too busy worrying about the cockatrices?\n```\n\n## Unnumbered bugs\n\n### Wielding potions of blindness confers blindness resistance\n\nReported by arxanas, confirmed by ais523 and ishanyx\n\n```\nnhversion:\n3.4.3\n\nnhfrom:\nNot presently known\n\nhardware:\n  Model Name:                 MacBook Pro\n  Model Identifier:           MacBookPro8,2\n  Processor Name:             Intel Core i7\n  Processor Speed:            2.5 GHz\n  Number of Processors:\t      1\n  Total Number of Cores:      4\n  L2 Cache (per Core):        256 KB\n  L3 Cache:                   8 MB\n  Memory:                     8 GB\n  Boot ROM Version:           MBP81.0047.B27\n  SMC Version (system):       1.69f3\n  Serial Number (system):     [redacted]\n  Hardware UUID:              [redacted]\n  Sudden Motion Sensor state: Enabled\n\n\nsoftware:\nUnmodified 3.4.3\n\ncomments:\nMy dearest devteam,\n\nI write to inform you of a most pressing bug in your game. 'Tis present in the source\nrelease (nethack-343-src.tgz, MD5 21479c95990eefe7650df582426457f9), and as such remains\npresent in all compilations of our beloved game. To reproduce the bug, one might partake\nin the following steps:\n\n1. Get a potion of blindness.\n2. Wield it (as your primary or alternate weapon), or ready it in your quiver.\n3. Allow a yellow light to explode at you.\n\nDespite the expected behavior of a yellow light causing you blindness, you remain\nunaffected. This is a most grievous error, as one could simply saunter through the dungeon\nwith nary a thought for the poor yellow lights, who give their lives in vain. Even worse\nis that archons too cannot blind you, for the issue resides in resists_blnd, and archons\ncall this function to gaze.\n\nI know that you are all hard at work making the next version of NetHack for us all, so I\ndeigned to save you some time by providing a possible patch. It took me the better part of\nan hour to devise, as the coding involved is rather in-depth and hard to follow. I hope\nyou incorporate it into the forthcoming new version of NetHack (which I am sure will be\nhere sometime soon), as I would hate to play the game immune to yellow lights.\n\nThanks for all your hard work,\n[redacted]\n\n(attached documents):\npatch.diff:\n\nOnly in nethack-3.4.3-patched/: .DS_Store\ndiff -r nethack-3.4.3/src/mondata.c nethack-3.4.3-patched/src/mondata.c\n126,127c126\n< \t    if ((o->owornmask && objects[o->otyp].oc_oprop == BLINDED) ||\n< \t\t    (o->oartifact && protects(AD_BLND, o)))\n---\n> \t    if (o->oartifact && protects(AD_BLND, o))\n```\n\n### Turn alternation failure with 24 movement energy\n\nReported by ais523\n\n```\nmailversion:\n1.45\n\nnhversion:\n3.4.3\n\nnhfrom:\nOur 3.4.3 source release, but modified\n\nhardware:\nUsing a qemu virtual machine with QEMU Virtual CPU version 0.12.3,\nwith 614196 kilobyes of disk space, and 56364 kilobyes of\nmemory. (We're using snapshots of the virtual machine for more easily\nreproducible bug testing.)\n\nsoftware:\nUsing a version of 3.4.3 modified to show the remaining movement\npoints of players and monsters, in order to more easily track the bug\ndown. I don't think I modified anything that would affect the bug (and\nbesides, I've already tracked it down from the source). Compiled with\ngcc 4.4.3. The virtual machine is running Linux 2.6.32.\n\ncomments:\nA short and sweet bug report: turn order becomes inconsistent with the\nrest of the game when a player has 24 movement points exactly, and a\nmonster has at least 24. Normally, after the player takes their\naction, monsters will get one action in response, then (if the player\nhas actions left in the turn) the player will get to take another\naction. However, if the player has 24 movement points exactly, their\naction will take them down to 12, at which point the monsters will get\nto take all their remaining actions at once, and the player will get\nthe last action in the turn, rather than alternating turns like usual.\n\nThe dependence on the exact number of movement points is weird and\nseems to be a bug. The offending line is, in 3.4.3, src/allmain.c line\n79 (sorry I can't give you a line number from the bugfixed and\nfeature-added version of NetHack you're presumably working from, but I\nhaven't seen it). \"youmonst.movement > NORMAL_SPEED\" should be\n\"youmonst.movement >= NORMAL_SPEED\".\n\nThanks to dwangoAC, who found this bug, and the testing system he made\nto help me reproduce events in NetHack games under controlled\ncircumstances. Obviously, being able to rewind games and do something\nelse is even worse than savescumming from an ascension perspective,\nbut it helps very much when finding bugs.\n```\n\n### Grammar and message-related errors\n\nReported by [Grunt](/wiki/User:SGrunt \"User:SGrunt\")\n\n```\nmailversion:\n1.45\n\nnhversion:\n3.4.3\n\nnhfrom:\nOur 3.4.3 source release, unmodified\n\nhardware:\nProbably unimportant, but: Intel Core 2 Quad Q8400 @ 2.66 GHz, 4GiB\nmemory, 2TB disk space.\n\nsoftware:\nGentoo Linux; NetHack 3.4.3 built using GCC 4.6.2.\n\ncomments:\nDuring development of a variant, I've come across the following which\nmay constitute bugs in NetHack 3.4.3, as checked against a build\nunmodified except for one configuration option (#define LINUX).\n\n* When reverse-genociding a nearly-extinct monster, sometimes only one\n  monster is generated, but the message is still \"Sent in some <plural\n  of monster>.\", suggesting more than one is generated.  This is best\n  illustrated with Nazgul - generate eight Nazgul and then\n  reverse-genocide them to see \"Sent in some Nazgul[s].\" (depending on\n  if you're looking at this in a build that has fixed C343-8 or not).\n  Under these cases, a more accurate message would be \"Sent in a\n  Nazgul\".\n\n* When attacking a monster carrying a stack of destroyable items with a \n  weapon that destroys them (e.g. scrolls/spellbooks/potions with Fire\n  Brand, potions with Frost Brand), if exactly one item of the stack is\n  destroyed, the object name is plural, but the message indicating that\n  it was destroyed is not (e.g. \"The dwarf king's scrolls labeled ELAM\n  EBOW catches fire and burns!\").  Perhaps the message should use the\n  same logic as when the player is hit by an item-destroying attack,\n  yielding, e.g., \"One of the dwarf king's scrolls labeled ELAM EBOW\n  catches fire and burns!\".\n\n* The death reason given for choking on an artifact is \"choked on {a|an}\n  <object>\", which can be inappropriate when quest artifacts are\n  involved - e.g. \"choked on an Eye of the Aethiopica\", inconsistent\n  with the use of \"[Tt]he\" as a prefix everywhere else they are\n  mentioned.  In the case of quest artifacts, this probably should be\n  \"choked on The Eye of the Aethiopica\", and for other artifacts,\n  perhaps \"choked on Grayswandir\" (skipping the article).  (It could be\n  argued that a further bug is treating the unidentified and identified\n  cases of artifacts differently, e.g. \"choked on a silver saber named\n  Grayswandir\" in some cases as opposed to \"choked on [a] Grayswandir\"\n  in all cases, particularly when working in a build where objects are\n  able to be named after artifacts - \"a silver saber named Grayswandir\"\n  without actually being Grayswandir - as the deaths in those two cases\n  would be indistinguishable.)\n \n* When a player zaps a wand of striking or casts force bolt at a monster\n  that is magic resistant, no \"Boing!\" message is generated; all other\n  cases (player against self, monster against player, and monster\n  against monster) generate this message, which is inconsistent.\n\nI hope that pointing out these bits of behaviour is useful to all of\nyou.\n```\n\n### Worn monster equipment can be picked up while engulfed\n\nReported by [bcode](/wiki/User:Bcode \"User:Bcode\")\n\n```\nThe ID number for this message is '#H2816'\n\nmailversion:\n1.45\n\nnhversion:\n3.4.3\n\nnhfrom:\nOur 3.4.3 source release, unmodified\n\nhardware:\nIt's probably unimportant, but I've tested this on a machine with a\n1.5 GHz Intel Pentium 4 processor and 896420 kB of memory.\n\nsoftware:\nUnmodified (except for config.h/unixconf.h and Makefiles) NetHack 3.4.3,\nbuilt from source with GCC 4.6.3 running on a Linux 2.6 system.\n\ncomments:\nA player can pick up worn equipment from inside a monster while\nengulfed by it. The object still has its owornmask set, so it will be\ndisplayed as \"(being worn)\" and cannot be dropped; however, the player\nis not actually wearing it, so it cannot be removed. Trying to put it\non, on the other hand, gives a message about it being already worn.\n\nTrying to remove the object (by selecting it when asked what to remove)\nwill output an impossible() message:\n\n| select_off: a blessed amulet of life saving (being worn)???\n| Program in disorder - perhaps you'd better #quit.\n\nI think it is easiest to reproduce this in wizard mode; create a\nsoldier and get him to pick up and put on an amulet of life saving,\nthen enable #monpolycontrol and polymorph him into an engulfer, for\nexample a fog cloud. Get engulfed by the fog cloud and pick up the\n(worn) amulet of life saving inside.\n\nAs a workaround, saving and loading the game seems to make the amulet\nremovable again.\n```\n\n### Jumping into portals can print messages out of order or incorrectly pick up items\n\nReported by [ais523](/wiki/User:Ais523 \"User:Ais523\")\n\n```\nmailversion:\n1.45\n\nnhversion:\n(please select version)\n\nnhfrom:\nOur 3.4.3 source release, but modified\n\nhardware:\nUsing a qemu virtual machine with QEMU Virtual CPU version\n0.12.3, with 614196 kilobyes of disk space, and 56364 kilobyes\nof memory. (We're using snapshots of the virtual machine for more\neasily reproducible bug testing.)\n\nsoftware:\nUsing a version of 3.4.3 modified to show the remaining movement\npoints of players and monsters, in order to more easily track\nbugs in general down. I don't think I modified anything that would\naffect the bug (and besides, I've already tracked it down from the\nsource). Compiled with gcc 4.4.3. The virtual machine is running\nLinux 2.6.32.\n\ncomments:\nFirst, the bug (found today): if a player attempts to jump into or\nover a magic portal (I tested with the jumping spell, but suspect\nit would work the same for #jump), and there's an item on the square\nthat the player passes over immediately before reaching the portal,\nthen the game prints the messages for the portal (while showing\nthe player standing on the square before), then the messages for\nthe item, then autopicksup the item (if autopickup is on and set to\npick up that sort of item), and then the player actually moves to the\nportal destination. Expected behaviour is for the game to not mention\nor pick up the item (as would happen if no portal is involved).\n\nI'd again like to encourage the devteam to cooperate more with\nthe NetHack development community as a whole on the whole on\nbugfixes. Many bugs appear to be already known but not on the\ndevteam, and for many other bugs, the descriptions on the website\nare insufficient for us to work out what the bug is about, or find or\nreproduce it ourselves. (Imagine if I'd reported this bug simply as\n\"Messages sometimes appear out of order when jumping\"!) Incidentally,\nthe bug that's been confusing the community the most is SC343-18;\nfrom its description, it seems to be connected to C343-231, but we\nhave no idea what causes SC343-18 or even what the bug description\nmeans. Is there some way we can get more detailed descriptions of\nofficial bugs, like the ones we send to you when we find them?\n\nProbably the gold standard for understanding what's causing a bug\nis an explanation based on the code; the diff that fixes the bug\nis the method of explaining this that causes the least extra work,\nbut I understand that the DevTeam badly wants to avoid releasing\nany code until it's ready (even though this means that nobody else\ncan help them get it ready on time; and it's also meant that line\nnumbers in your development version have likely drifted away from\nline numbers in, say, community efforts to produce fixed versions of\nNetHack, such as NetHack 4, which would not even be as necessary if\nthe bug fixes were public). In the particular case, the code-based\nreason for the bug is that hurtle_step(), which is responsible for\ndetermining whether squares are passable when jumping or hurtling,\ncalls the code for handling a magic portal when the user reaches\nit and then returns FALSE, meaning that walk_path() treats the\nportal like a wall. Because the portal code just prints messages\nand then schedules a goto, you get the messages first, then the\ncharacter stops (and thus picks up items, if necessary), and then\nthe scheduled goto happens. I don't currently have a working fix\nfor the bug, although the most obvious methods of fixing it to\nme would involve making the jump/hurtle code check for traps when\nleaving or landing on squares, as opposed to before entering them.\n\n--\nAlex Smith\nNetHack 4 maintainer\n```\n\n### Alternative tilesets can spoil the identity of bags, gems, instruments, fake Amulets\n\nReported by [ais523](/wiki/User:Ais523 \"User:Ais523\")\n\n```\n mailversion:\n1.45\n\nnhversion:\n3.4.3\n\nnhfrom:\nOur 3.4.3 source release, unmodified\n\nhardware:\nProbably irrelevant, but it's a Toshiba Satellite netbook with 3 GB memory and 4 GB swap, and an Intel U2700 1.3GHz processor.\n\nsoftware:\nUbuntu 13.04 (running Linux 3.8.0-31-generic), using gcc (Ubuntu/Linaro 4.7.3-1ubuntu1) 4.7.3. I tested two X11 tiles ports, and the bug appears on both:\n\n- The official source release, compiled according to the build instructions (i.e. nothing was modified but config/unixconf.h, and Makefiles);\n\n- The Ubuntu-packaged version of X11 NetHack (which is installed using secure permissions, i.e. I can't tamper with its files without root access (or access to the games group), and I didn't use it while testing for this bug).\n\nI suspect the bug also exists on other tiles ports, but I didn't check.\n\ncomments:\nI found a reasonably major (spoiler?) bug in the NetHack 3.4.3 code during the process of making a tiles port for NetHack 4. (The bug had already been fixed in NetHack 4 via NitroHack; I don't have access to the development source of 3.4.4 or 3.5.0 to check if it's fixed there or not, and as such I can't send a patch because I don't have access to the codebase it's meant to patch against, and thus it wouldn't apply.)\n\nThe issue is to do with custom user tilesets. In the X11 port of NetHack, the game loads the tileset from a path specified in NetHack.ad. Although this file is read-only and stored in the nethackdir, it's possible to override the X search path in order to use an alternative NetHack.ad, and thus an alternative tileset. This seems like a useful (possibly intended) feature, and not a bug.\n\nHowever, the code seem to implicitly assume that objects with the same unidentified description also have the same tiles. Simply changing the tileset to give different tiles where previously the tiles were the same effectively gives objects unique unidentified appearances, meaning that, say, bags, loadstones, and fake Amulets can be identified entirely via the tile you give them.\n\nHere's an example of this exploit being used on the X11 tiles version of NetHack (both \"prefix/games/nethack\", produced by compiling the 3.4.3 official source release, and \"xnethack\", the Ubuntu-packaged version):\n\nScript started on Thu 26 Sep 2013 02:37:59 BST\nais523@desert:/tmp$ ls distinct-bags/\ndistinct-bags.x11tiles  NetHack.ad\nais523@desert:/tmp$ diff -u prefix/games/lib/nethackdir/NetHack.ad distinct-bags/NetHack.ad\n--- prefix/games/lib/nethackdir/NetHack.ad 2013-09-26 02:23:47.254875282 +0100\n+++ distinct-bags/NetHack.ad 2013-09-26 02:33:24.130104957 +0100\n@@ -19,7 +19,7 @@\n ! the custom format - to enlarge an XPM file, use processing tools\n ! such as XV or preferably PBMplus.\n !\n-!NetHack.tile_file: x11tiles\n+NetHack.tile_file: /tmp/distinct-bags/distinct-bags.x11tiles\n !NetHack.double_tile_size: True\n !\n ! The annotation of pets.\nais523@desert:/tmp$ XUSERFILESEARCHPATH=/tmp/distinct-bags/NetHack.ad prefix/games/nethack -D\nais523@desert:/tmp$ XUSERFILESEARCHPATH=/tmp/distinct-bags/NetHack.ad xnethack\n\nYou didn't beat your previous score of 4 points.\n\n\n\nais523@desert:/tmp$ exit\n\nScript done on Thu 26 Sep 2013 02:42:37 BST\n\n/tmp/distinct-bags/distinct-bags.x11tiles is a copy of x11tiles (which regular users have read access to), with numbers added on the bag tiles to make them distinct; likewise, /tmp/distinct-bags/NetHack.ad is a copy of NetHack.ad with the tileset changed.\n\nThe game on the official NetHack source (which was in wizard mode for testing), I wished for a sack and a bag of holding, then threw both onto the ground. Here's the screenshot: <http://nethackwiki.com/wiki/File:Tiles-bugreport1-image1.png>. As you can see from the message buffer, the two bags are both indistinguishable to the character (I farlooked both of them), due to being unidentified. However, the difference in the bags is clearly visible to the player; the sack (tile 194) shows a \"1\", and the bag of holding (tile 196) shows a \"3\". This would allow a player to instantly recognise which bags were holding.\n\nIn the securely installed game (which I played to prove that this exploit does not require the ability to modify game files), I started a Rogue, and threw my starting sack: <http://nethackwiki.com/wiki/File:Tiles-bugreport1-image2.png> In this case, the character knew its identity; but the point is to demonstrate that the exploit-containing tileset still works (you can see the \"1\" I drew on the sack).\n\nThis exploit is more major than just bags; in particular, fake and real Amulets of Yendor have distinct tiles, as do loadstones.\n\n\nOther ports and variants of NetHack are likely to have a similar issue, if they use the same or similar tiles code to vanilla. (Interestingly, Slash'EM's default tileset actually has subtly different tiles for the various bags out of the box; I originally noticed this bug because NetHack 4's tileset is based on Slash'EM's, and although it's harder to reproduce in NetHack 3.4.3, it's still possible.) In particular, I strongly suspect that this bug exists on the widely-played Windows tiles version (which also has customizable tilesets).\n```\n\n### Crash while loading when riding and wielding Sting\n\nReported by [Patric Mueller](/wiki/User:Bhaak \"User:Bhaak\")\n\n```\nBelow is what you submitted to The_DevTeam on Wednesday, October 16, 2013 at 03:47:59\n\nThe ID number for this message is '#H3031'\n\nmailversion:\n1.45\n\nnhversion:\n3.4.3\n\nnhfrom:\nOur 3.4.3 source release, unmodified\n\nhardware:\n64 bit intel machine\n\nsoftware:\n- Linux version 3.10.7-gentoo (root@localhost) (gcc version 4.6.3 (Gentoo 4.6.3 p1.13, pie-0.5.2) ) #3 SMP Sat Aug 17 14:48:51 CEST 2013\n- Windows 7 Enterprise N Service Pack 1\n\ncomments:\nHi DevTeam,\n\nA player on UnNetHack's public server un.nethack.nu experienced a crash while\nhis game was loading while riding and wielding a SPFX_WARN conferring artifact.\n\nThis has been traced back to an issue that is also present in vanilla NetHack.\nAlthough there it is less likely to happen as Sting is the only SPFX_WARN\nweapon and most players don't seem to consider Sting to be a useful weapon.\n\nFor reproducing start up a knight, ride your pet, wish and wield Sting, save\nthe game and then try to load again will crash the game. I could reproduce this\non a 64 bit Linux and 64 bit Windows (on Windows, it didn't crash every time\nbut on Linux it did always).\n\nIt's possible that this bug is already fixed with C343-39 \"Restoring a game\nwhere the character is wielding Sting may result in temporary display errors\nduring the restore process.\" but from the description it's not obvious how to\nreproduce C343-39.\n\nThe problematic code tries to activate the artifact properties which will\nresult in a call to display_self() which will try to access u.usteed, even\nthough the program hasn't properly restored that structure at that point yet.\n\nFor fixing it I moved the part where the code calls setworn on all items in\nyour inventory out of restgamestate() to the end of dorecover(). I couldn't\nnotice any problems with that and at this later time, u.usteed is guarantee to\nbe restored.\nhttp://bhaak.net/nethack/nh343-fix-crash-riding-sting.diff\n\nThe stacktrace of the crash is this:\nCore was generated by `/opt/nethack-tmp/games/lib/nethackdir/nethack -D 4'.\nProgram terminated with signal 11, Segmentation fault.\n#0  0x0000000000431658 in newsym (x=66, y=4) at display.c:717\n717                 if (senseself()) display_self();\n(gdb) bt\n#0  0x0000000000431658 in newsym (x=66, y=4) at display.c:717\n#1  0x00000000004328b3 in see_monsters () at display.c:1071\n#2  0x000000000040ff76 in set_artifact_intrinsic (otmp=0x17243a0, on=1 '\\001', wp_mask=256) at artifact.c:451\n#3  0x0000000000571ea3 in setworn (obj=0x17243a0, mask=256) at worn.c:98\n#4  0x000000000051584f in restgamestate (fd=3, stuckid=0x7fff44f490c0, steedid=0x7fff44f490bc) at restore.c:413\n#5  0x0000000000515b65 in dorecover (fd=3) at restore.c:558\n#6  0x00000000005844bc in main (argc=3, argv=0x7fff44f49228) at ../sys/unix/unixmain.c:258\n\nBye\nPatric\n```\n\n### Can't wish for rusty rustproof\n\nReported by [Patric Mueller](/wiki/User:Bhaak \"User:Bhaak\")\n\n```\nBelow is what you submitted to The_DevTeam on Thursday, May 19, 2011 at 08:09:54\n\nThe ID number for this message is '#H2285'\n\nmailversion:\n1.42\n\nnhversion:\n3.4.3\n\nnhfrom:\nOur 3.4.3 source release, unmodified\n\ncomments:\nHi DevTeam,\n\nWishing for a \"rusty rustproof long sword\" will only yield a \"rusty long sword\".\n\nBecause of a restriction in objnam.c line 2641:\n\"if (erodeproof && !eroded && !eroded2)\"\n\nThis seems to have been an intentional change for NetHack 3.3.0 as fixes33.0\nsays \"make sure non-erodable objects aren't eroded or erodeproof (could happen\nby wishing or object polymorph)\".\n\nAlthough it is not clear to me why one shouldn't allow a user to wish for such\na thing or why the erosion gets set instead of foo-proofness.\n\nBye\nPatric\n```\n\n### Odd message when player swallowing monster dies by wrath of god\n\nReported by [Patric Mueller](/wiki/User:Bhaak \"User:Bhaak\")\n\n```\nBelow is what you submitted to The_DevTeam on Thursday, December 9, 2010 at 06:59:37\n\nThe ID number for this message is '#H2200'\n\nSubject: Odd message when player swallowing monster dies by wrath of god\n\nmailversion:\n1.41\n\nnhversion:\n3.4.3\n\nnhfrom:\nOur 3.4.3 source release, unmodified\n\ncomments:\nHi DevTeam!\n\nIf the player manages to be swallowed by an electricity-resisting monster while\ndrawing the wrath of a god, the swallowing monster will be hit by a wide-angle\ndisintegration beam and still fry to a crisp (pray.c:495)\n\nI'm no native speaker but that does sound odd to me as IMO \"fry\" implies heat.\nIt doesn't look like a proper message for a disintegration death.\n\nAlthough I'm not even sure how to properly trigger that message in vanilla. I\nhad to give Juiblex MR_ELEC to test it.\n\nBTW, the message of bug C343-94 has a typo \"re-anmiated\".\n\nBye\nPatric\n```\n\n### Crash when picking up an unpaid object between two shops\n\nReported by [Patric Mueller](/wiki/User:Bhaak \"User:Bhaak\")\n\n```\nBelow is what you submitted to The_DevTeam on Tuesday, June 29, 2010 at 08:37:20\n\nThe ID number for this message is '#H2143'\n\nmailversion:\n1.41\n\nnhversion:\n3.4.3\n\nnhfrom:\nOur 3.4.3 source release, unmodified\n\nhardware:\n\nsoftware:\nGentoo Linux with kernel version 2.6.24.7\ngcc-Version 4.3.4 (Gentoo 4.3.4 p1.0, pie-10.1.5)\nglibc 2.10.1\n\nHi DevTeam!\n\nFollow this procedure to reliably trigger a crash when picking up an unpaid\nobject in a shop adjacent to another shop:\n\nYou need two populated shops with sharing walls (e.g. minetn-7 the hardware\nstore and Izchak's store).\n\nEnter part of the wall that is shared by both shops.\n\nYou are greeted by Izchak but not by the other shopkeeper.\n\nEnter the hardware store and pick up any unpaid object.\n\nA crash results as bp is 0:\n#0  0x081691ae in add_one_tobill (obj=0x823b778, dummy=0 '\\0') at shk.c:2107\n2107            bp->bo_id = obj->o_id;\n\n\nIt's important that this procedure is not interrupted by a save and reload and\nthat the hardware store hasn't been entered before. Otherwise the crash doesn't\nhappen.\n\n\nu_entered_shop() isn't called for the hardware store and that's why the\nhardware store shopkeeper's bill_p (from the struct eshk) is not correctly\ninitialized.\n\nInitializing bill_p in shkinit() from shknam.c fixes that:\ndiff -uwr nethack-3.4.3/src/shknam.c shk-crash/src/shknam.c\n--- nethack-3.4.3/src/shknam.c  2003-12-08 00:39:13.000000000 +0100\n+++ shk-crash/src/shknam.c      2010-06-29 14:30:34.000000000 +0200\n@@ -408,6 +408,7 @@\n        ESHK(shk)->visitct = 0;\n        ESHK(shk)->following = 0;\n        ESHK(shk)->billct = 0;\n+       ESHK(shk)->bill_p = &ESHK(shk)->bill[0];\n #ifndef GOLDOBJ\n        shk->mgold = 1000L + 30L*(long)rnd(100);        /* initial capital */\n #else\n```\n\n### Unnecessary head shaking\n\nReported by [Patric Mueller](/wiki/User:Bhaak \"User:Bhaak\")\n\n```\nBelow is what you submitted to The_DevTeam on Thursday, June 10, 2010 at 09:31:51\n\nThe ID number for this message is '#H2134'\n\nmailversion:\n1.41\n\nnhversion:\n3.4.3\n\nnhfrom:\nOur 3.4.3 source release, unmodified\n\ncomments:\nHi DevTeam!\n\nWhen the player dies and a shop is on the level, sometimes the message\n\"$shopkeeper looks at your corpse, shakes her head, and sighs.\" appears when it\nshouldn't (and probably doesn't appear when it should but I didn't check for\nthat).\n\nYou can easily reproduce this bug if you stand in the top right corner of\nminetn-5 and die there.\n\nLike the player did in this game:\nhttp://un.nethack.nu/users/ctaboir/dumps/ctaboir.last.txt.html\n\nThe shopkeeper of the general store will come and look at your corpse even\nthough he shouldn't.\n\nThis is due to a misplaced ')':\n\ndiff -uwr nethack-linux/src/shk.c nethack-shk/src/shk.c\n--- nethack-linux/src/shk.c     2008-05-26 19:47:02.000000000 +0200\n+++ nethack-shk/src/shk.c       2010-06-10 15:21:57.000000000 +0200\n@@ -1650,7 +1650,7 @@\n        /* the simplifying principle is that first-come */\n        /* already took everything you had.             */\n        if (numsk > 1) {\n-           if (cansee(shkp->mx, shkp->my && croaked))\n+           if (cansee(shkp->mx, shkp->my) && croaked)\n                pline(\"%s %slooks at your corpse%s and %s.\",\n                      Monnam(shkp),\n                      (!shkp->mcanmove || shkp->msleeping) ? \"wakes up, \" : \"\",\n\n\nBye, Happy Hacking!\n```\n\n### Standout inconsistency\n\nReported by [Patric Mueller](/wiki/User:Bhaak \"User:Bhaak\")\n\n```\nBelow is what you submitted to The_DevTeam on Wednesday, March 10, 2010 at 11:56:33\n\nThe ID number for this message is '#H2095'\n\nmailversion:\n1.41\n\nnhversion:\n3.4.3\n\nnhfrom:\nOur 3.4.3 source release, unmodified\n\ncomments:\nHi devteam,\n\nThe option \"standout\" isn't correct documented in the Guidebook.\n\nIt states there:\n  standout\n    Boldface monsters and ``--More--'' (default off).\n\nBut in the current codebase standout is only used for highlighting the end of\npager windows.\n\nLooking at code from 3.0.x it probably was true at that time, but no longer\nnowadays.\n\nAlso, this option doesn't do much and as the standout terminal sequence is\nusually shown as inverse on modern terminals, wouldn't it be best to integrate\nit into use_inverse?\n\nBye\nPatric\n```\n\n### No attacks when swallowed by tame monster\n\nReported by [Patric Mueller](/wiki/User:Bhaak \"User:Bhaak\")\n\n```\nBelow is what you submitted to The_DevTeam on Thursday, February 11, 2010 at 03:42:45\n\nThe ID number for this message is '#H2084'\n\nmailversion:\n1.41\n\nnhversion:\n3.4.3\n\nnhfrom:\nOur 3.4.3 source release, unmodified\n\nsoftware:\n\ncomments:\nHi DevTeam!\n\nkerio92 from #nethack on freenode told me about some interesting interaction\nbetween tame monsters with engulfing attack and ring of conflicts.\n\nWhile wearing a ring of conflict the player can get engulfed by a tame monster.\n\nIf the player takes off the ring of conflict inside the tame monster, the\nplayer can stay indefinitely long inside the monster and is *not subject to any\nattacks* (no digestion from purple worms, no elemental damages from vortices,\netc.).\n\nAs those attacks are more of a passive nature (I don't think a tame purple worm\ncan stop his stomach from digesting) I think they should also work with tame\nmonsters.\n\nThis patch should fix that:\n--- nethack-linux/src/monmove.c 2008-05-26 19:47:02.000000000 +0200\n+++ nethack-tame-engulfing/src/monmove.c        2010-02-11 09:30:16.000000000 +0100\n@@ -548,6 +548,8 @@\n /*     Now, attack the player if possible - one attack set per monst   */\n\n         if (!mtmp->mpeaceful ||\n +           /* Attacks work even when engulfed by tame monsters */\n +           (u.uswallow && mtmp == u.ustuck) ||\n             (Conflict && !resist(mtmp, RING_CLASS, 0, 0))) {\n                 if(inrange && !noattacks(mdat) && u.uhp > 0 && !scared && tmp != 3)\n                 if(mattacku(mtmp)) return(1); /* monster died (e.g. exploded) */\n```\n\n### \"You are protected\" from a +0 ring of protection\n\nReported by [Patric Mueller](/wiki/User:Bhaak \"User:Bhaak\")\n\n```\nBelow is what you submitted to The_DevTeam on Thursday, January 14, 2010 at 09:08:25\n\nThe ID number for this message is '#H2076'\n\nmailversion:\n1.41\n\nnhversion:\n3.4.3\n\nnhfrom:\nOur 3.4.3 source release, unmodified\n\ncomments:\nHi DevTeam!\n\nIf one is wearing a +0 ring of protection one gets the \"You are protected.\"\nmessage during enlightment.\n\nIn general, if intrinsic and extrinsic protection neutralize each other, you\nget this message.\n\nThe code in cmd.c:1016 only makes a distinction between values lesser than 0\nand the rest. No special treatment of a value of 0.\n\nIs this a side effect for getting this message while wearing a cloak of\nprotection?\n\nBye\nPatric\n```\n\n### Randomly placed doors not properly placed\n\nReported by [Patric Mueller](/wiki/User:Bhaak \"User:Bhaak\")\n\n```\nBelow is what you submitted to The_DevTeam on Wednesday, December 23, 2009 at 03:36:29\n\nThe ID number for this message is '#H2063'\n\nmailversion:\n1.41\n\nnhversion:\n3.4.3\n\nnhfrom:\nOur 3.4.3 source release, but modified\n\nhardware:\nvendor_id       : GenuineIntel\ncpu family      : 15\nmodel           : 4\nmodel name      : Intel(R) Pentium(R) 4 CPU 3.20GHz\n\nsoftware:\nGentoo Linux with kernel version 2.6.24.7\ngcc-Version 4.3.2 (Gentoo 4.3.2-r3 p1.6, pie-10.1.5)\nglibc 2.10.1\n\ncomments:\nHi DevTeam!\n\nI've been having a \"rn2(0) attempted\" bug in UnNetHack for some time and now\nfound the reason for it. It's not a off-by-one bug that gets triggered with the\nroom levels of vanilla, but it prevents random placed doors to get placed at\nevery possible place.\n\nIf I just add a level like the following to the vanilla code, it triggers a\n\"Floating exception\" in vanilla by calling rn2(0) (I've replaced bigrm-1 for\neasier debugging):\n\nLEVEL: \"bigrm-1\"\nROOM: \"ordinary\" , lit, random, random, (76,17)\nNAME: \"room\"\n\nSUBROOM: \"ordinary\", lit, (60,12), (6,1), \"room\"\nDOOR: false, closed, west, random\n\n\nThe problem is that the height of the room is only 1 tile and a door should get\nplaced randomly on such a short wall.\n\nIn line 623 of src/sp_lev.c this results in a difference of 0:\ndpos = rn2((dwall == W_WEST || dwall == W_EAST) ?\n  (broom->hy - broom->ly) : (broom->hx - broom->lx));\n\nI'm not sure if this bug is the same as S343-2 (\"1x1 room in special level can\ntrigger panic due to off by one error (does not affect official room set)\").\n\nAlthough in the vanilla code there are no rooms that small, randomly placed\ndoors never gets placed at the last possible place because of this bug.\n\nHappy holidays!\nPatric\n```\n\n### Robbing rogue not getting +1 alignment\n\nReported by [Patric Mueller](/wiki/User:Bhaak \"User:Bhaak\")\n\n```\nBelow is what you submitted to The_DevTeam on Tuesday, August 11, 2009 at 07:39:18\n\nThe ID number for this message is '#H2003'\n\nmailversion:\n1.41\n\nnhversion:\n3.4.3\n\nnhfrom:\nOur 3.4.3 source release, unmodified\n\nsoftware:\n\ncomments:\nHi DevTeam,\n\nWhen robbing a shop as a lawful character one gets a -1 alignment penalty.\n\nA chaotic character gets a +1 alignment bonus but not if it is a Rogue.\n\nDoes that make sense?\n\nThe relevant source code is in shk.c in rob_shop() at line 494 (at line 984 in\nmake_happy_shk() is the reversal of the alignment change):\nif (!Role_if(PM_ROGUE)) /* stealing is unlawful */\n  adjalign(-sgn(u.ualign.type));\n\nBye\nPatric\n```\n\n### Drawbridge killed gas spore not exploding\n\nReported by [Patric Mueller](/wiki/User:Bhaak \"User:Bhaak\")\n\n```\nBelow is what you submitted to The_DevTeam on Tuesday, April 7, 2009 at 06:52:37\n\nThe ID number for this message is '#H1843'\n\nmailversion:\n1.41\n\nnhversion:\n3.4.3\n\nnhfrom:\nOur 3.4.3 source release, unmodified\n\ncomments:\nHi there!\n\nKilling a gas spore with a falling portcullis doesn't cause it to explode.\n\nThe gas spore explosion part is handled in corpse_chance() in mon.c.\n\ne_died() in dbridge.c calls xkilled with the option to not generate corpses and\ntherefore corpse_chance isn't called in this case.\n\nBye\nPatric\n```\n\n### Removing [red dragon scale mail](/wiki/Red_dragon_scale_mail \"Red dragon scale mail\") in lava causes no bad effects\n\n```\nThe ID number for this message is '#H3032'\n\nmailversion:\n1.45\n\nnhversion:\n3.4.3\n\nnhfrom:\nOur 3.4.3 source release, unmodified\n\nhardware:\nProbably irrelevant, but it's a Toshiba Satellite netbook with 3\nGB memory and 4 GB swap, and an Intel U2700 1.3GHz processor.\n\nsoftware:\nUbuntu raring, running Linux 3.8.0, compiled from unmodified\n(apart from config.h/unixconf.h and makefiles) official NetHack\n3.4.3 sources compiled for Unix-like systems using gcc 4.4.3\n\ncomments:\nIf the player's only source of fire resistance is red dragon scale\nmail, the player enters lava while wearing the RDSM, and then removes\nit, the lava has the same effect as it would on a fire-resistant\nplayer, even though the player no longer has any fire resistance\nsources. (The player can even sit on the lava in that state with no\nbad effects other than a few points of damage.) I'm not 100% sure on\nthe cause, but it probably involves a failure to call spoteffects()\nsomewhere where it needs to be called.\n\nI've been trying to determine whether this is on the bug list\nalready, but the only bug that potentially seems to fit is\nSC343-18. Is this that bug, or something else?\n```\n\n### Crash when teleporting onto a sink while equipping levitation boots\n\n```\nThe ID number for this message is '#H3033'\n\nmailversion:\n1.45\n\nnhversion:\n3.4.3\n\nnhfrom:\nOur 3.4.3 source release, unmodified\n\nhardware:\nProbably irrelevant, but it's a Toshiba Satellite netbook with 3\nGB memory and 4 GB swap, and an Intel U2700 1.3GHz processor.\n\nsoftware:\nUbuntu raring, running Linux 3.8.0, compiled from unmodified\n(apart from config.h/unixconf.h and makefiles) official NetHack\n3.4.3 sources compiled for Unix-like systems using gcc 4.4.3\n\ncomments:\nIf a player is putting on levitation boots, then during the\nhelplessness period (negative multi) afterwards, gets teleported\nonto a sink (this is easy to test via means of a quantum mechanic,\nteleport control, and no magic cancellation), the game crashes.\n\nBasically what happens is that Boots_on() (which is called at the\nend of the helplessness period) looks at uarmf in order to determine\nwhich item to wear, with no NULL check. If the boots get unequipped\nwhile wearing them (e.g. via a sink), uarmf is NULL by the time\nBoots_on() runs, meaning that the game segfaults. The easiest fix\nis to add a null check to the *_on() functions, that causes them to\nnot run if the armour is no longer equipped by the time its effects\nwould start applying.\n\n(The \"most correct\" fix would be to use an occupation callback,\ncombined with tracking the item being equipped the same way that,\nsay, the 'book' global variable does for spellbooks. This would be\nsymmetrical with A, rather than symmetrical with T. I'm currently\nin the process of rewriting NetHack 4 to do this, but the patch is\nvery large and would not easily be backported to NetHack 3.4.3.)\n```\n\n### Erroneously rustproof splint mail for samurai\n\n```\nThe ID number for this message is '#H3034'\n\nmailversion:\n1.45\n\nnhversion:\n3.4.3\n\nnhfrom:\nOur 3.4.3 source release, unmodified\n\nsoftware:\nNetHack 3.4.3, found in the source release.\n\ncomments:\nAs a samurai, splint mails generated via mksobj()\non the first turn of the game or in the quest\nbranch will always begin rustproof. This is\nsupposed to \"simulate lacquered armor\" (mkobj.c,\nline 564); however, this applies even to\nsplint mail you e.g. wished for. As this allows\nyou to receive rusty rustproof splint mail from\na wish, I think this is not intended, given that\nthis specific result isn't normally allowed\n(objnam.c, line 2641 only proceeds to set the\nerodeproof flag if you didn't also wish for the\nobject as eroded).\n\nAdditionally, you will know about the rustproof\nstate of the object; this is also inconsistent\nwith the normal outcome of wishing for an\nerodeproof object.\n```\n\n### `panic()` when trying to drop destroyed object\n\n```\nThe ID number for this message is '#H3039'\n\nmailversion:\n1.45\n\nnhversion:\n3.4.3\n\nnhfrom:\nOur 3.4.3 source release, unmodified\n\nsoftware:\nNetHack 3.4.3, present in the source release\n(tested on multiple systems)\n\ncomments:\nWhen using the 'D' command to drop multiple items at once, the game will\npanic if it tries to drop an item that has been destroyed in between\n(\"extract_nobj: object lost\"). Mostly, this shouldn't happen. However,\nif one of the items is a lit potion of oil and you are levitating,\nit will explode when it hits the floor, possibly destroying other items\nyou were going to drop.\n\nThe problem seems to be that the code assumes the items selected to be\ndropped still exist when they are to be actually dropped, i.e., that\ndropping items will not affect other items. As shown above,\nthat isn't the case.\n```\n\n### Flesh golems are healed for too much from shock attacks\n\n```\nFlesh golems are supposed to only be healed for 1/6 the shock damage that\nwould occur if non-resistant, but is healed the full amount instead due to\na typo\n```\n\n### Long worms and Elbereth\n\n```\nIf a long worm is scared by Elbereth but can't get anywhere, it will hit you,\nbypassing Elbereth. This attack pattern will use the otherwise unused\nwormhitu() codepath, leading to each tail segment next to you also hitting\nyou for damage.\n```\n\n### Monster branch stair usage bug\n\n```\nMonsters never use branch stairs to escape, due to a bug in find_defensive\nthat assumes that branch stairs are not considered stairs.\n```\n\n### Intrinsic disintegration resistance shields the inventory\n\n```\nIntrinsic disintegration resistance protects against armor damage -- you may\nor may not consider this a bug, but scshunt [a DevTeam member] changed the\nbehaviour of this in NetHack4 last year\n```\n\n### nasty() is broken\n\n```\nnasty() is broken in several ways: replacement monsters can be asleep/non-hostile,\nthe \"retry if chosen monster isn't aligned with caster\" instead makes the summoning\ncreate several monsters (capped at 20) until one neutral or coaligned summon is\ncreated (where it bails out to the next summon), creating potentially up to 200\nmonsters in theory (this is however incredibly unlikely due to the selection of\nnasties).\n```\n\n### cast protection gives too little AC\n\n```\nA typo for the \"AC without the spell\" value results in the protection spell\ngiving less AC than it's supposed to.\n```\n\n### Scrolls of light when blind\n\n```\nScrolls/spells of light is blocked if you're engulfed, which makes sense.\nThis block is lifted if you're blind, which makes less sense.\n```\n\n[![This article is unlikely to require revision for the next version of NetHack. Click here for more information.](/images/5/58/Noversion.png)](/wiki/NetHackWiki:Next_version \"This article is unlikely to require revision for the next version of NetHack. Click here for more information.\")\n","html":"<!DOCTYPE html>\n<html class=\"client-nojs\" lang=\"en\" dir=\"ltr\">\n<head>\n<meta charset=\"UTF-8\"/>\n<title>Bugs in NetHack 3.4.3/Reports - NetHack Wiki</title>\n<script>document.documentElement.className = document.documentElement.className.replace( /(^|\\s)client-nojs(\\s|$)/, \"$1client-js$2\" );</script>\n<script>(window.RLQ=window.RLQ||[]).push(function(){mw.config.set({\"wgCanonicalNamespace\":\"\",\"wgCanonicalSpecialPageName\":false,\"wgNamespaceNumber\":0,\"wgPageName\":\"Bugs_in_NetHack_3.4.3/Reports\",\"wgTitle\":\"Bugs in NetHack 3.4.3/Reports\",\"wgCurRevisionId\":171302,\"wgRevisionId\":171302,\"wgArticleId\":20325,\"wgIsArticle\":true,\"wgIsRedirect\":false,\"wgAction\":\"view\",\"wgUserName\":null,\"wgUserGroups\":[\"*\"],\"wgCategories\":[\"Bugs\"],\"wgBreakFrames\":false,\"wgPageContentLanguage\":\"en\",\"wgPageContentModel\":\"wikitext\",\"wgSeparatorTransformTable\":[\"\",\"\"],\"wgDigitTransformTable\":[\"\",\"\"],\"wgDefaultDateFormat\":\"dmy\",\"wgMonthNames\":[\"\",\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"],\"wgMonthNamesShort\":[\"\",\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"],\"wgRelevantPageName\":\"Bugs_in_NetHack_3.4.3/Reports\",\"wgRelevantArticleId\":20325,\"wgRequestId\":\"a269c69d5dbe5996433c28ae\",\"wgCSPNonce\":false,\"wgIsProbablyEditable\":false,\"wgRelevantPageIsProbablyEditable\":false,\"wgRestrictionEdit\":[],\"wgRestrictionMove\":[],\"wgWikiEditorEnabledModules\":[],\"wgCategoryTreePageCategoryOptions\":\"{\\\"mode\\\":0,\\\"hideprefix\\\":20,\\\"showcount\\\":true,\\\"namespaces\\\":false}\"});mw.loader.state({\"site.styles\":\"ready\",\"noscript\":\"ready\",\"user.styles\":\"ready\",\"user\":\"ready\",\"user.options\":\"ready\",\"user.tokens\":\"loading\",\"mediawiki.legacy.shared\":\"ready\",\"mediawiki.legacy.commonPrint\":\"ready\",\"mediawiki.toc.styles\":\"ready\",\"mediawiki.skinning.interface\":\"ready\",\"skins.vector.styles\":\"ready\"});mw.loader.implement(\"user.tokens@0tffind\",function($,jQuery,require,module){/*@nomin*/mw.user.tokens.set({\"editToken\":\"+\\\\\",\"patrolToken\":\"+\\\\\",\"watchToken\":\"+\\\\\",\"csrfToken\":\"+\\\\\"});\n});RLPAGEMODULES=[\"site\",\"mediawiki.page.startup\",\"mediawiki.user\",\"mediawiki.page.ready\",\"mediawiki.toc\",\"mediawiki.searchSuggest\",\"skins.vector.js\"];mw.loader.load(RLPAGEMODULES);});</script>\n<link rel=\"stylesheet\" href=\"/load.php?debug=false&amp;lang=en&amp;modules=mediawiki.legacy.commonPrint%2Cshared%7Cmediawiki.skinning.interface%7Cmediawiki.toc.styles%7Cskins.vector.styles&amp;only=styles&amp;skin=vector\"/>\n<script async=\"\" src=\"/load.php?debug=false&amp;lang=en&amp;modules=startup&amp;only=scripts&amp;skin=vector\"></script>\n<meta name=\"ResourceLoaderDynamicStyles\" content=\"\"/>\n<link rel=\"stylesheet\" href=\"/load.php?debug=false&amp;lang=en&amp;modules=site.styles&amp;only=styles&amp;skin=vector\"/>\n<meta name=\"generator\" content=\"MediaWiki 1.32.5\"/>\n<meta name=\"description\" content=\"Clarification request send by User:Bulwersator via contact form, response by Dave Cohrs.\"/>\n<link rel=\"image_src\" href=\"/images/6/65/Nethackwiki-logo.png\"/>\n<link rel=\"shortcut icon\" href=\"/images/6/64/Favicon.ico\"/>\n<link rel=\"search\" type=\"application/opensearchdescription+xml\" href=\"/opensearch_desc.php\" title=\"NetHackWiki\"/>\n<link rel=\"EditURI\" type=\"application/rsd+xml\" href=\"https://nethackwiki.com/api.php?action=rsd\"/>\n<link rel=\"canonical\" href=\"/wiki/Bugs_in_NetHack_3.4.3/Reports\"/>\n<!--[if lt IE 9]><script src=\"/load.php?debug=false&amp;lang=en&amp;modules=html5shiv&amp;only=scripts&amp;skin=vector&amp;sync=1\"></script><![endif]-->\n</head>\n<body class=\"mediawiki ltr sitedir-ltr mw-hide-empty-elt ns-0 ns-subject page-Bugs_in_NetHack_3_4_3_Reports rootpage-Bugs_in_NetHack_3_4_3 skin-vector action-view\">\t\t<div id=\"mw-page-base\" class=\"noprint\"></div>\n\t\t<div id=\"mw-head-base\" class=\"noprint\"></div>\n\t\t<div id=\"content\" class=\"mw-body\" role=\"main\">\n\t\t\t<a id=\"top\"></a>\n\t\t\t<div class=\"mw-indicators mw-body-content\">\n</div>\n<h1 id=\"firstHeading\" class=\"firstHeading\" lang=\"en\">Bugs in NetHack 3.4.3/Reports</h1>\t\t\t<div id=\"bodyContent\" class=\"mw-body-content\">\n\t\t\t\t<div id=\"siteSub\" class=\"noprint\">From NetHackWiki</div>\t\t\t\t<div id=\"contentSub\"><span class=\"subpages\">&lt; <a href=\"/wiki/Bugs_in_NetHack_3.4.3\" title=\"Bugs in NetHack 3.4.3\">Bugs in NetHack 3.4.3</a></span></div>\n\t\t\t\t<div id=\"jump-to-nav\"></div>\t\t\t\t<a class=\"mw-jump-link\" href=\"#mw-head\">Jump to navigation</a>\n\t\t\t\t<a class=\"mw-jump-link\" href=\"#p-search\">Jump to search</a>\n\t\t\t\t<div id=\"mw-content-text\" lang=\"en\" dir=\"ltr\" class=\"mw-content-ltr\"><div class=\"mw-parser-output\"><p>The official list of <a href=\"/wiki/Bugs_in_NetHack_3.4.3\" title=\"Bugs in NetHack 3.4.3\">bugs in NetHack 3.4.3</a> gives very little information about the bugs in question. This page archives the known original bug reports sent to the <a href=\"/wiki/DevTeam\" title=\"DevTeam\">DevTeam</a>, to give more information and insight into the bugs.\n</p>\n<div id=\"toc\" class=\"toc\"><input type=\"checkbox\" role=\"button\" id=\"toctogglecheckbox\" class=\"toctogglecheckbox\" style=\"display:none\" /><div class=\"toctitle\" lang=\"en\" dir=\"ltr\"><h2>Contents</h2><span class=\"toctogglespan\"><label class=\"toctogglelabel\" for=\"toctogglecheckbox\"></label></span></div>\n<ul>\n<li class=\"toclevel-1 tocsection-1\"><a href=\"#C341-5\"><span class=\"tocnumber\">1</span> <span class=\"toctext\">C341-5</span></a></li>\n<li class=\"toclevel-1 tocsection-2\"><a href=\"#C343-379\"><span class=\"tocnumber\">2</span> <span class=\"toctext\">C343-379</span></a></li>\n<li class=\"toclevel-1 tocsection-3\"><a href=\"#C343-403\"><span class=\"tocnumber\">3</span> <span class=\"toctext\">C343-403</span></a></li>\n<li class=\"toclevel-1 tocsection-4\"><a href=\"#C343-409\"><span class=\"tocnumber\">4</span> <span class=\"toctext\">C343-409</span></a></li>\n<li class=\"toclevel-1 tocsection-5\"><a href=\"#C343-421\"><span class=\"tocnumber\">5</span> <span class=\"toctext\">C343-421</span></a></li>\n<li class=\"toclevel-1 tocsection-6\"><a href=\"#C343-425\"><span class=\"tocnumber\">6</span> <span class=\"toctext\">C343-425</span></a></li>\n<li class=\"toclevel-1 tocsection-7\"><a href=\"#C343-426\"><span class=\"tocnumber\">7</span> <span class=\"toctext\">C343-426</span></a></li>\n<li class=\"toclevel-1 tocsection-8\"><a href=\"#C343-428\"><span class=\"tocnumber\">8</span> <span class=\"toctext\">C343-428</span></a></li>\n<li class=\"toclevel-1 tocsection-9\"><a href=\"#Unnumbered_bugs\"><span class=\"tocnumber\">9</span> <span class=\"toctext\">Unnumbered bugs</span></a>\n<ul>\n<li class=\"toclevel-2 tocsection-10\"><a href=\"#Wielding_potions_of_blindness_confers_blindness_resistance\"><span class=\"tocnumber\">9.1</span> <span class=\"toctext\">Wielding potions of blindness confers blindness resistance</span></a></li>\n<li class=\"toclevel-2 tocsection-11\"><a href=\"#Turn_alternation_failure_with_24_movement_energy\"><span class=\"tocnumber\">9.2</span> <span class=\"toctext\">Turn alternation failure with 24 movement energy</span></a></li>\n<li class=\"toclevel-2 tocsection-12\"><a href=\"#Grammar_and_message-related_errors\"><span class=\"tocnumber\">9.3</span> <span class=\"toctext\">Grammar and message-related errors</span></a></li>\n<li class=\"toclevel-2 tocsection-13\"><a href=\"#Worn_monster_equipment_can_be_picked_up_while_engulfed\"><span class=\"tocnumber\">9.4</span> <span class=\"toctext\">Worn monster equipment can be picked up while engulfed</span></a></li>\n<li class=\"toclevel-2 tocsection-14\"><a href=\"#Jumping_into_portals_can_print_messages_out_of_order_or_incorrectly_pick_up_items\"><span class=\"tocnumber\">9.5</span> <span class=\"toctext\">Jumping into portals can print messages out of order or incorrectly pick up items</span></a></li>\n<li class=\"toclevel-2 tocsection-15\"><a href=\"#Alternative_tilesets_can_spoil_the_identity_of_bags.2C_gems.2C_instruments.2C_fake_Amulets\"><span class=\"tocnumber\">9.6</span> <span class=\"toctext\">Alternative tilesets can spoil the identity of bags, gems, instruments, fake Amulets</span></a></li>\n<li class=\"toclevel-2 tocsection-16\"><a href=\"#Crash_while_loading_when_riding_and_wielding_Sting\"><span class=\"tocnumber\">9.7</span> <span class=\"toctext\">Crash while loading when riding and wielding Sting</span></a></li>\n<li class=\"toclevel-2 tocsection-17\"><a href=\"#Can.27t_wish_for_rusty_rustproof\"><span class=\"tocnumber\">9.8</span> <span class=\"toctext\">Can't wish for rusty rustproof</span></a></li>\n<li class=\"toclevel-2 tocsection-18\"><a href=\"#Odd_message_when_player_swallowing_monster_dies_by_wrath_of_god\"><span class=\"tocnumber\">9.9</span> <span class=\"toctext\">Odd message when player swallowing monster dies by wrath of god</span></a></li>\n<li class=\"toclevel-2 tocsection-19\"><a href=\"#Crash_when_picking_up_an_unpaid_object_between_two_shops\"><span class=\"tocnumber\">9.10</span> <span class=\"toctext\">Crash when picking up an unpaid object between two shops</span></a></li>\n<li class=\"toclevel-2 tocsection-20\"><a href=\"#Unnecessary_head_shaking\"><span class=\"tocnumber\">9.11</span> <span class=\"toctext\">Unnecessary head shaking</span></a></li>\n<li class=\"toclevel-2 tocsection-21\"><a href=\"#Standout_inconsistency\"><span class=\"tocnumber\">9.12</span> <span class=\"toctext\">Standout inconsistency</span></a></li>\n<li class=\"toclevel-2 tocsection-22\"><a href=\"#No_attacks_when_swallowed_by_tame_monster\"><span class=\"tocnumber\">9.13</span> <span class=\"toctext\">No attacks when swallowed by tame monster</span></a></li>\n<li class=\"toclevel-2 tocsection-23\"><a href=\"#.22You_are_protected.22_from_a_.2B0_ring_of_protection\"><span class=\"tocnumber\">9.14</span> <span class=\"toctext\">\"You are protected\" from a +0 ring of protection</span></a></li>\n<li class=\"toclevel-2 tocsection-24\"><a href=\"#Randomly_placed_doors_not_properly_placed\"><span class=\"tocnumber\">9.15</span> <span class=\"toctext\">Randomly placed doors not properly placed</span></a></li>\n<li class=\"toclevel-2 tocsection-25\"><a href=\"#Robbing_rogue_not_getting_.2B1_alignment\"><span class=\"tocnumber\">9.16</span> <span class=\"toctext\">Robbing rogue not getting +1 alignment</span></a></li>\n<li class=\"toclevel-2 tocsection-26\"><a href=\"#Drawbridge_killed_gas_spore_not_exploding\"><span class=\"tocnumber\">9.17</span> <span class=\"toctext\">Drawbridge killed gas spore not exploding</span></a></li>\n<li class=\"toclevel-2 tocsection-27\"><a href=\"#Removing_red_dragon_scale_mail_in_lava_causes_no_bad_effects\"><span class=\"tocnumber\">9.18</span> <span class=\"toctext\">Removing red dragon scale mail in lava causes no bad effects</span></a></li>\n<li class=\"toclevel-2 tocsection-28\"><a href=\"#Crash_when_teleporting_onto_a_sink_while_equipping_levitation_boots\"><span class=\"tocnumber\">9.19</span> <span class=\"toctext\">Crash when teleporting onto a sink while equipping levitation boots</span></a></li>\n<li class=\"toclevel-2 tocsection-29\"><a href=\"#Erroneously_rustproof_splint_mail_for_samurai\"><span class=\"tocnumber\">9.20</span> <span class=\"toctext\">Erroneously rustproof splint mail for samurai</span></a></li>\n<li class=\"toclevel-2 tocsection-30\"><a href=\"#panic.28.29_when_trying_to_drop_destroyed_object\"><span class=\"tocnumber\">9.21</span> <span class=\"toctext\">panic() when trying to drop destroyed object</span></a></li>\n<li class=\"toclevel-2 tocsection-31\"><a href=\"#Flesh_golems_are_healed_for_too_much_from_shock_attacks\"><span class=\"tocnumber\">9.22</span> <span class=\"toctext\">Flesh golems are healed for too much from shock attacks</span></a></li>\n<li class=\"toclevel-2 tocsection-32\"><a href=\"#Long_worms_and_Elbereth\"><span class=\"tocnumber\">9.23</span> <span class=\"toctext\">Long worms and Elbereth</span></a></li>\n<li class=\"toclevel-2 tocsection-33\"><a href=\"#Monster_branch_stair_usage_bug\"><span class=\"tocnumber\">9.24</span> <span class=\"toctext\">Monster branch stair usage bug</span></a></li>\n<li class=\"toclevel-2 tocsection-34\"><a href=\"#Intrinsic_disintegration_resistance_shields_the_inventory\"><span class=\"tocnumber\">9.25</span> <span class=\"toctext\">Intrinsic disintegration resistance shields the inventory</span></a></li>\n<li class=\"toclevel-2 tocsection-35\"><a href=\"#nasty.28.29_is_broken\"><span class=\"tocnumber\">9.26</span> <span class=\"toctext\">nasty() is broken</span></a></li>\n<li class=\"toclevel-2 tocsection-36\"><a href=\"#cast_protection_gives_too_little_AC\"><span class=\"tocnumber\">9.27</span> <span class=\"toctext\">cast protection gives too little AC</span></a></li>\n<li class=\"toclevel-2 tocsection-37\"><a href=\"#Scrolls_of_light_when_blind\"><span class=\"tocnumber\">9.28</span> <span class=\"toctext\">Scrolls of light when blind</span></a></li>\n</ul>\n</li>\n</ul>\n</div>\n\n<h2><span class=\"mw-headline\" id=\"C341-5\">C341-5</span></h2>\n<p>Clarification request send by <a href=\"/wiki/User:Bulwersator\" class=\"mw-redirect\" title=\"User:Bulwersator\">User:Bulwersator</a> via <a class=\"external text\" href=\"https://nethack.org/common/contact.html\">contact form</a>, response by Dave Cohrs.\n</p><p>C341-5 - request for clarification\n</p><p>On known bug list it appears as \"When you see your pet move, the pet may be\nreferred to as \"it\".\" What are the circumstances in which this occurs?\n</p><p>I am working on fixing vanilia bugs in my fork but this one is so unclear that\nnobody knows how to reproduce it.\n</p><p>In general - is it possible to publish at least bug reports send to devteam?\n</p>\n<dl><dd>We are very low tech on the backend, so currently, no, we don't have the capability to publish bug reports.</dd></dl>\n<dl><dd>I think I have found one that I believe relates to this issue, but it may not be the only case:\n<ol><li>Start a game in wizard mode</li>\n<li>Wish for a wand of make invisible</li>\n<li>Wish for a tripe ration</li>\n<li>Wish for an amulet of ESP</li>\n<li>Drop the tripe ration</li>\n<li>Put on the amulet of ESP</li>\n<li>Zap your starting pet with the wand of make invisible</li>\n<li>Step way and let your pet eat</li>\n<li>Watch the message \"It eats a tripe ration.\"</li></ol></dd></dl>\n<dl><dd>Although, it could also be this report, which mentions movement:</dd>\n<dd>My character has invisible pet (it was a cat, but after polymorph it \"disappeared\" and now it walks around, answers magic whistle, fights...). My character cannot see it. Only - NetHack gave me message \"It moves only reluctantly\". And I/my character should not be able to see it (I do not even know on which item it was at the time).</dd></dl>\n<dl><dd>Like I wrote, our backend is low tech.</dd></dl>\n<p><br />\n</p>\n<h2><span class=\"mw-headline\" id=\"C343-379\">C343-379</span></h2>\n<p>Reported by <a href=\"/wiki/User:Bhaak\" title=\"User:Bhaak\">Patric Mueller</a>\n</p>\n<pre>Below is what you submitted to The_DevTeam on Tuesday, February 10, 2009 at 07:12:00 (13:15 CET)\n\nThe ID number for this message is '#H1810'\n\nmailversion:\n1.40\n\nnhversion:\n3.4.3\n\nnhfrom:\nOur 3.4.3 source release, unmodified\n\nhardware:\n\ncomments:\nHi DevTeam,\n\nI noticed two spelling errors in quest.txt.\n\nThe first in the Healers part: \"How are you feeling?  Perhaps a good bleeding will improve your sprits.\"\n(sprits instead of spirits)\n\nand the second in the Rangers: \"Is that truely %o that I see you carrying?\"\n(truely instead of truly)\n\nAlthough googling on Google Books for \"truely\" shows that this spelling has\nbeen in use in the past. It might look appropriately dated for use in the\nKnights quest texts where currently \"truly\" is used.\n\nBye\nPatric\n</pre>\n<h2><span class=\"mw-headline\" id=\"C343-403\">C343-403</span></h2>\n<p>Reported by ais523, although it was well known in the NetHack community before the report\n</p>\n<pre>The ID number for this message is '#H2161'\n\nmailversion:\n1.41\n\nnhversion:\n3.4.3\n\nnhfrom:\nOur 3.4.3 source release, unmodified\n\nhardware:\nProbably irrelevant, but it's a Toshiba Satellite netbook with 3 GB\nmemory and 4 GB swap, and an Intel U2700 1.3GHz processor. (The bug\nhas been verified on multiple patched/unpatched versions of NetHack,\non multiple sets of hardware, including public servers.)\n\nsoftware:\nUbuntu Lucid, running Linux 2.6.32, using a NetHack binary compiled\nfrom unmodified (apart from config.h/unixconf.h and makefiles)\nofficial NetHack 3.4.3 sources compiled for Unix-like systems using\ngcc 4.4.1. (Also probably irrelevant, given the above.)\n\ncomments:\nThere's a huge inconsistency in the way that writing scrolls via magic\nmarker works; in particular, it depends on interface details that\nshould be irrelevant. These checks were done as an unlucky non-wizard\nto minimize the chance of false positives due to writing the scroll by\nchance rather than due to having a 100% chance:\n\n1. trying to write unIDed scroll by label:\n\"What type of scroll do you want to write? KIRJE\" fails\n2. trying to write unIDed scroll by actual type:\n\"For what do you wish? scroll of fire\"\n\"What type of scroll do you want to write? fire\" fails\n3. trying to write called scroll by label:\n\"Call a scroll labeled KIRJE: X\"\n\"What type of scroll do you want to write? KIRJE\" succeeds\n4. trying to write called scroll via user-given name:\n\"Call a scroll labeled FOOBIE BLETCH: wished-for\"\n\"What type of scroll do you want to write? wished-for\"\n\"There is no such scroll!\"\n5. trying to write called scroll via actual type:\n\"What type of scroll do you want to write? fire\" succeeds\n6. trying to write an IDed scroll via label:\n(identify YUM YUM as magic mapping)\n\"What type of scroll do you want to write? YUM YUM\" succeeds\n7. trying to write an IDed scroll via actual type:\n\"What type of scroll do you want to write? magic mapping\" succeeds\n\nThe major inconsistencies here are between cases 1 and 3, and between\ncases 2 and 4. Case 3 implies that it's possible to copy a scroll\nyou've ever owned, even if you don't know what it does; case 1 implies\nthat it isn't. It's also incredibly unintuitive, if it makes sense at\nall, that giving a nickname to a scroll is necessary to be able to\ncopy it.\n\nThe inconsistency between cases 2 and 4 is much worse, and I've seen\npeople exploit it on public servers. Suppose a player has ten\nunidentified scrolls, and doesn't know what any of them do, but\nsuspects, say, that at least one is enchant armor. All they have to do\nin order to write an enchant armor scroll is to name all ten of those\nscrolls via #name-n, and then write enchant armor; if they had one in\ninventory to name, they write the scroll correctly, even if they\ndidn't know /which/ of those ten scrolls it was. This doesn't make a\nwhole lot of sense, especially as a mechanism for identifying items.\n\nThe culprit is line 200 of write.c, which checks to see if a scroll of\nthe type given by the player has been called (i.e. given an\noc_uname). This check is dangerous without additional safeguards, as\nit can let the scroll be written even if the player has no idea what\nit is.\n</pre>\n<h2><span class=\"mw-headline\" id=\"C343-409\">C343-409</span></h2>\n<p>Reported by ais523\n</p>\n<pre>The ID number for this message is '#H2210'\n\nmailversion:\n1.41\n\nnhversion:\n3.4.3\n\nnhfrom:\nOur 3.4.3 source release, unmodified\n\nhardware:\nProbably irrelevant, but it's a Toshiba Satellite netbook with 3 GB\nmemory and 4 GB swap, and an Intel U2700 1.3GHz processor.\n\nsoftware:\nUbuntu Lucid, running Linux 2.6.32, using a NetHack binary compiled\nfrom unmodified (apart from config.h/unixconf.h and makefiles)\nofficial NetHack 3.4.3 sources compiled for Unix-like systems using\ngcc 4.4.3\n\ncomments:\nIf a player applies an unlocking tool (key, lockpick, credit card) at\nan empty doorway containing a mimic pretending to be a door, the game\nsays \"that doorway has no door\", rather than reacting appropriately to\nthe presence of the mimic (say, by waking it and making the player\nstick to it, or adding the lockpick to the mimic's inventory with an\nappropriate message). The easiest way to reproduce this is in wizard\nmode, by standing next to a doorway without a door, and repeatedly\ndoing control-G large mimic.\n\nThe bug's caused by a logic problem in src/lock.c. The check starting\nat line 364 checks for mimics, but only for the purpose of not\nprinting any monster-related messages. Some time before line 385,\nthere needs to be code to allow for the possibility that in addition\nto having a doorway on the square (accomplishable via having a doorway\nwithout a door, which is still IS_DOOR internally), there's also an\napparent door in the doorway which is actually a mimic; the character\nwould believe there was an intact lock on the square even though they\ngame knows there isn't.\n\nI would make and supply a patch for this bug, but as the README says,\n\"we will assume your code is synchronized with ours\"; and I don't have\nanything newer than 3.4.3 handy to patch against (and I suspect\npatches against 3.4.3 wouldn't apply; you've likely changed your code\nas extensively as I've changed my local copy in an attempt to make a\nfork, but I test all bugs I report against the official 3.4.3\nsource). If you think a patch would help, let me know and I'll try to\nprovide one.\n</pre>\n<h2><span class=\"mw-headline\" id=\"C343-421\">C343-421</span></h2>\n<p>Reported by ais523\n</p>\n<pre>The ID number for this message is '#H2142'\n\nmailversion:\n1.41\n\nnhversion:\n3.4.3\n\nnhfrom:\nOur 3.4.3 source release, unmodified\n\nhardware:\nProbably irrelevant, but it's a Toshiba Satellite netbook with 3 GB\nmemory and 4 GB swap, and an Intel U2700 1.3GHz processor.\n\nsoftware:\nUbuntu Lucid, running Linux 2.6.32, using a NetHack binary compiled\nfrom unmodified (apart from config.h/unixconf.h and makefiles)\nofficial NetHack 3.4.3 sources compiled for Unix-like systems using\ngcc 4.4.1\n\ncomments:\nEven after 6 years, it seems that new bugs, or at least buglike\nbehaviour, is still being discovered in NetHack. Is it intentional\nthat it's possible to avoid going through all the levels in Gehennom\non the \"ascension run\" (bringing the Amulet to the surface)?\n\nThe issue in this case is that it's possible to use the magic portal\nleading to the Wizard of Yendor's Tower to skip several levels on the\nway up. Although the player is incapable of leaving the tower (via any\nmethod that works whilst holding the Amulet other than going back the\nway they came) and thus this would seem to prevent this being used for\na shortcut, it's possible to drop the Amulet, then teleport it out of\nthe tower (with a wand of teleportation). Because the player's no\nlonger holding the Amulet, they can then #sit back on the portal to\nleave the tower, level teleport back to the level the Amulet is on\n(possible because they aren't holding it), and pick it up, this time\n/outside/ the tower. (As an amusing aside, the fact that it's possible\nto level-teleport past the intervening levels on the way down makes it\npossible to not generate the levels in question at all.)\n</pre>\n<h2><span class=\"mw-headline\" id=\"C343-425\">C343-425</span></h2>\n<p>Reported by ais523\n</p>\n<pre>mailversion:\n1.42\n\nnhversion:\n3.4.3\n\nnhfrom:\nOur 3.4.3 source release, unmodified\n\nhardware:\nProbably irrelevant, but it's a Toshiba Satellite netbook with 3\nGB memory and 4 GB swap, and an Intel U2700 1.3GHz processor.\n\nsoftware:\nUbuntu Lucid, running Linux 2.6.32, using a NetHack binary compiled\nfrom unmodified (apart from config.h/unixconf.h and makefiles)\nofficial NetHack 3.4.3 sources compiled for Unix-like systems using\ngcc 4.4.3\n\ncomments:\nA bug which was just discovered today in my unfinished NetHack fork\nAceHack: a player was riding through the dungeon and stepped on awel\nlandmine, and his warhorse survived the explosion but died from the\nfall. This lead to his dexterity permanently decreasing by one point.\n\nInvestigation on an unmodified version of NetHack shows that the\nbug was inherited from there. The culprit is src/steed.c, line 527\n(in NetHack 3.4.3; it's line 532 in AceHack, and I have no idea\nwhat line it is in NetHack 3.5, even though obviously that would be\nthe most useful line number to give), which sets the wounded legs\nintrinsic and extrinsic values to 0 without removing the dexterity\nadjustment. Although this could be fixed at that point in the code,\nit's probably easier to do it by calling the appropriate functions\ninstead (adjusting for the change in ride state).\n</pre>\n<h2><span class=\"mw-headline\" id=\"C343-426\">C343-426</span></h2>\n<p>Reported by ais523\n</p>\n<pre>mailversion:\n1.42\n\nnhversion:\n3.4.3\n\nnhfrom:\nOur 3.4.3 source release, unmodified\n\nhardware:\nProbably irrelevant, but it's a Toshiba Satellite netbook with 3\nGB memory and 4 GB swap, and an Intel U2700 1.3GHz processor.\n\nsoftware:\nUbuntu Lucid, running Linux 2.6.32, using a NetHack binary compiled\nfrom unmodified (apart from config.h/unixconf.h and makefiles)\nofficial NetHack 3.4.3 sources compiled for Unix-like systems using\ngcc 4.4.3\n\ncomments:\nIf a level is almost but not entirely full of monsters, then a player\nhiding on the ceiling (after using #monster in any p or t form),\nthen when a monster moves onto the player's square, the player\nfalls to the nearest unoccupied square that the monster didn't come\nfrom, even if it's over the other end of the level. There are no\nrestrictions on this, so it can be used to, say, cross the Plane of\nAir or Astral in one turn, or escape from the Wizard of Yendor's\ntower (or phase into it, but that's less useful because there are\nvarious standard ways of luring him out, which as far as I know\nare intentional; let me know if they're bugs and I'll report them).\n\nThe culprit is a use of enexto() without any sort of check,\non src/mhitu.c line 362 (in NetHack 3.4.3); the check is made\nbefore moving the monster, even though the monster vacates the\nsquare in question, so it won't hit the square that the monster was\noccupying. (Every other use of enexto() in the 3.4.3 source to find a\nlocation to place the player also has a check on the maximum distance\nthat the player can be moved; I obviously can't check to see if more\nbuggy uses have been introduced in a development version.) The most\nobvious fix is simply to make the player and monster swap places,\nalthough that would have issues where long worms were involved.\n</pre>\n<h2><span class=\"mw-headline\" id=\"C343-428\">C343-428</span></h2>\n<p>Reported by ais523\n</p>\n<pre>mailversion:\n1.42\n\nnhversion:\n3.4.3\n\nnhfrom:\nOur 3.4.3 source release, unmodified\n\nhardware:\nProbably irrelevant, but it's a Toshiba Satellite netbook with 3 GB\nmemory and 4 GB swap, and an Intel U2700 1.3GHz processor.\n\nsoftware:\nUbuntu Lucid, running Linux 2.6.32, using a NetHack binary compiled\nfrom unmodified (apart from config.h/unixconf.h and makefiles)\nofficial NetHack 3.4.3 sources compiled for Unix-like systems using\ngcc 4.4.3\n\ncomments:\nThis bug was found in a collaboration between me and dwangoAC (we're\ntrying to determine the theoretically fastest turncount you can get\nfor a game of NetHack). When a cockatrice nest (the special room)\ngenerates, all the statues in it are always of giant ants. This is\nbecause the code just doesn't initialise the monster type (corpsenm)\nof the statues anywhere; mkroom.c:346 calls mk_tt_object requesting a\nSTATUE, yet mk_tt_object explicitly asks for no initialisation on the\nstatues it creates (mkobj.c:1043). The comment on the line above is\nincorrect, or at least incomplete; it states that it prevents\ngeneration of statue contents, but the lack of initialization also\nprevents the statue's corpsenm being set by mksobj like it normally\nwould be. (In case it matters, and in _tt_-related functions it might,\nmy test case was with a blank high score table.)\n\nIt's kind-of interesting that this wasn't noticed earlier; perhaps\nplayers tend not to pay attention to the statues around cockatrice\nnests because they're too busy worrying about the cockatrices?\n</pre>\n<h2><span class=\"mw-headline\" id=\"Unnumbered_bugs\">Unnumbered bugs</span></h2>\n<h3><span class=\"mw-headline\" id=\"Wielding_potions_of_blindness_confers_blindness_resistance\">Wielding potions of blindness confers blindness resistance</span></h3>\n<p>Reported by arxanas, confirmed by ais523 and ishanyx\n</p>\n<pre>nhversion:\n3.4.3\n\nnhfrom:\nNot presently known\n\nhardware:\n  Model Name:                 MacBook Pro\n  Model Identifier:           MacBookPro8,2\n  Processor Name:             Intel Core i7\n  Processor Speed:            2.5 GHz\n  Number of Processors:\t      1\n  Total Number of Cores:      4\n  L2 Cache (per Core):        256 KB\n  L3 Cache:                   8 MB\n  Memory:                     8 GB\n  Boot ROM Version:           MBP81.0047.B27\n  SMC Version (system):       1.69f3\n  Serial Number (system):     [redacted]\n  Hardware UUID:              [redacted]\n  Sudden Motion Sensor state: Enabled\n\n\nsoftware:\nUnmodified 3.4.3\n\ncomments:\nMy dearest devteam,\n\nI write to inform you of a most pressing bug in your game. 'Tis present in the source\nrelease (nethack-343-src.tgz, MD5 21479c95990eefe7650df582426457f9), and as such remains\npresent in all compilations of our beloved game. To reproduce the bug, one might partake\nin the following steps:\n\n1. Get a potion of blindness.\n2. Wield it (as your primary or alternate weapon), or ready it in your quiver.\n3. Allow a yellow light to explode at you.\n\nDespite the expected behavior of a yellow light causing you blindness, you remain\nunaffected. This is a most grievous error, as one could simply saunter through the dungeon\nwith nary a thought for the poor yellow lights, who give their lives in vain. Even worse\nis that archons too cannot blind you, for the issue resides in resists_blnd, and archons\ncall this function to gaze.\n\nI know that you are all hard at work making the next version of NetHack for us all, so I\ndeigned to save you some time by providing a possible patch. It took me the better part of\nan hour to devise, as the coding involved is rather in-depth and hard to follow. I hope\nyou incorporate it into the forthcoming new version of NetHack (which I am sure will be\nhere sometime soon), as I would hate to play the game immune to yellow lights.\n\nThanks for all your hard work,\n[redacted]\n\n(attached documents):\npatch.diff:\n\nOnly in nethack-3.4.3-patched/: .DS_Store\ndiff -r nethack-3.4.3/src/mondata.c nethack-3.4.3-patched/src/mondata.c\n126,127c126\n&lt; \t    if ((o-&gt;owornmask &amp;&amp; objects[o-&gt;otyp].oc_oprop == BLINDED) ||\n&lt; \t\t    (o-&gt;oartifact &amp;&amp; protects(AD_BLND, o)))\n---\n&gt; \t    if (o-&gt;oartifact &amp;&amp; protects(AD_BLND, o))\n</pre>\n<h3><span class=\"mw-headline\" id=\"Turn_alternation_failure_with_24_movement_energy\">Turn alternation failure with 24 movement energy</span></h3>\n<p>Reported by ais523\n</p>\n<pre>mailversion:\n1.45\n\nnhversion:\n3.4.3\n\nnhfrom:\nOur 3.4.3 source release, but modified\n\nhardware:\nUsing a qemu virtual machine with QEMU Virtual CPU version 0.12.3,\nwith 614196 kilobyes of disk space, and 56364 kilobyes of\nmemory. (We're using snapshots of the virtual machine for more easily\nreproducible bug testing.)\n\nsoftware:\nUsing a version of 3.4.3 modified to show the remaining movement\npoints of players and monsters, in order to more easily track the bug\ndown. I don't think I modified anything that would affect the bug (and\nbesides, I've already tracked it down from the source). Compiled with\ngcc 4.4.3. The virtual machine is running Linux 2.6.32.\n\ncomments:\nA short and sweet bug report: turn order becomes inconsistent with the\nrest of the game when a player has 24 movement points exactly, and a\nmonster has at least 24. Normally, after the player takes their\naction, monsters will get one action in response, then (if the player\nhas actions left in the turn) the player will get to take another\naction. However, if the player has 24 movement points exactly, their\naction will take them down to 12, at which point the monsters will get\nto take all their remaining actions at once, and the player will get\nthe last action in the turn, rather than alternating turns like usual.\n\nThe dependence on the exact number of movement points is weird and\nseems to be a bug. The offending line is, in 3.4.3, src/allmain.c line\n79 (sorry I can't give you a line number from the bugfixed and\nfeature-added version of NetHack you're presumably working from, but I\nhaven't seen it). \"youmonst.movement &gt; NORMAL_SPEED\" should be\n\"youmonst.movement &gt;= NORMAL_SPEED\".\n\nThanks to dwangoAC, who found this bug, and the testing system he made\nto help me reproduce events in NetHack games under controlled\ncircumstances. Obviously, being able to rewind games and do something\nelse is even worse than savescumming from an ascension perspective,\nbut it helps very much when finding bugs.\n</pre>\n<h3><span class=\"mw-headline\" id=\"Grammar_and_message-related_errors\">Grammar and message-related errors</span></h3>\n<p>Reported by <a href=\"/wiki/User:SGrunt\" title=\"User:SGrunt\">Grunt</a>\n</p>\n<pre>mailversion:\n1.45\n\nnhversion:\n3.4.3\n\nnhfrom:\nOur 3.4.3 source release, unmodified\n\nhardware:\nProbably unimportant, but: Intel Core 2 Quad Q8400 @ 2.66 GHz, 4GiB\nmemory, 2TB disk space.\n\nsoftware:\nGentoo Linux; NetHack 3.4.3 built using GCC 4.6.2.\n\ncomments:\nDuring development of a variant, I've come across the following which\nmay constitute bugs in NetHack 3.4.3, as checked against a build\nunmodified except for one configuration option (#define LINUX).\n\n* When reverse-genociding a nearly-extinct monster, sometimes only one\n  monster is generated, but the message is still \"Sent in some &lt;plural\n  of monster&gt;.\", suggesting more than one is generated.  This is best\n  illustrated with Nazgul - generate eight Nazgul and then\n  reverse-genocide them to see \"Sent in some Nazgul[s].\" (depending on\n  if you're looking at this in a build that has fixed C343-8 or not).\n  Under these cases, a more accurate message would be \"Sent in a\n  Nazgul\".\n\n* When attacking a monster carrying a stack of destroyable items with a \n  weapon that destroys them (e.g. scrolls/spellbooks/potions with Fire\n  Brand, potions with Frost Brand), if exactly one item of the stack is\n  destroyed, the object name is plural, but the message indicating that\n  it was destroyed is not (e.g. \"The dwarf king's scrolls labeled ELAM\n  EBOW catches fire and burns!\").  Perhaps the message should use the\n  same logic as when the player is hit by an item-destroying attack,\n  yielding, e.g., \"One of the dwarf king's scrolls labeled ELAM EBOW\n  catches fire and burns!\".\n\n* The death reason given for choking on an artifact is \"choked on {a|an}\n  &lt;object&gt;\", which can be inappropriate when quest artifacts are\n  involved - e.g. \"choked on an Eye of the Aethiopica\", inconsistent\n  with the use of \"[Tt]he\" as a prefix everywhere else they are\n  mentioned.  In the case of quest artifacts, this probably should be\n  \"choked on The Eye of the Aethiopica\", and for other artifacts,\n  perhaps \"choked on Grayswandir\" (skipping the article).  (It could be\n  argued that a further bug is treating the unidentified and identified\n  cases of artifacts differently, e.g. \"choked on a silver saber named\n  Grayswandir\" in some cases as opposed to \"choked on [a] Grayswandir\"\n  in all cases, particularly when working in a build where objects are\n  able to be named after artifacts - \"a silver saber named Grayswandir\"\n  without actually being Grayswandir - as the deaths in those two cases\n  would be indistinguishable.)\n \n* When a player zaps a wand of striking or casts force bolt at a monster\n  that is magic resistant, no \"Boing!\" message is generated; all other\n  cases (player against self, monster against player, and monster\n  against monster) generate this message, which is inconsistent.\n\nI hope that pointing out these bits of behaviour is useful to all of\nyou.\n</pre>\n<h3><span class=\"mw-headline\" id=\"Worn_monster_equipment_can_be_picked_up_while_engulfed\">Worn monster equipment can be picked up while engulfed</span></h3>\n<p>Reported by <a href=\"/wiki/User:Bcode\" title=\"User:Bcode\">bcode</a>\n</p>\n<pre>The ID number for this message is '#H2816'\n\nmailversion:\n1.45\n\nnhversion:\n3.4.3\n\nnhfrom:\nOur 3.4.3 source release, unmodified\n\nhardware:\nIt's probably unimportant, but I've tested this on a machine with a\n1.5 GHz Intel Pentium 4 processor and 896420 kB of memory.\n\nsoftware:\nUnmodified (except for config.h/unixconf.h and Makefiles) NetHack 3.4.3,\nbuilt from source with GCC 4.6.3 running on a Linux 2.6 system.\n\ncomments:\nA player can pick up worn equipment from inside a monster while\nengulfed by it. The object still has its owornmask set, so it will be\ndisplayed as \"(being worn)\" and cannot be dropped; however, the player\nis not actually wearing it, so it cannot be removed. Trying to put it\non, on the other hand, gives a message about it being already worn.\n\nTrying to remove the object (by selecting it when asked what to remove)\nwill output an impossible() message:\n\n| select_off: a blessed amulet of life saving (being worn)???\n| Program in disorder - perhaps you'd better #quit.\n\nI think it is easiest to reproduce this in wizard mode; create a\nsoldier and get him to pick up and put on an amulet of life saving,\nthen enable #monpolycontrol and polymorph him into an engulfer, for\nexample a fog cloud. Get engulfed by the fog cloud and pick up the\n(worn) amulet of life saving inside.\n\nAs a workaround, saving and loading the game seems to make the amulet\nremovable again.\n</pre>\n<h3><span class=\"mw-headline\" id=\"Jumping_into_portals_can_print_messages_out_of_order_or_incorrectly_pick_up_items\">Jumping into portals can print messages out of order or incorrectly pick up items</span></h3>\n<p>Reported by <a href=\"/wiki/User:Ais523\" title=\"User:Ais523\">ais523</a>\n</p>\n<pre>mailversion:\n1.45\n\nnhversion:\n(please select version)\n\nnhfrom:\nOur 3.4.3 source release, but modified\n\nhardware:\nUsing a qemu virtual machine with QEMU Virtual CPU version\n0.12.3, with 614196 kilobyes of disk space, and 56364 kilobyes\nof memory. (We're using snapshots of the virtual machine for more\neasily reproducible bug testing.)\n\nsoftware:\nUsing a version of 3.4.3 modified to show the remaining movement\npoints of players and monsters, in order to more easily track\nbugs in general down. I don't think I modified anything that would\naffect the bug (and besides, I've already tracked it down from the\nsource). Compiled with gcc 4.4.3. The virtual machine is running\nLinux 2.6.32.\n\ncomments:\nFirst, the bug (found today): if a player attempts to jump into or\nover a magic portal (I tested with the jumping spell, but suspect\nit would work the same for #jump), and there's an item on the square\nthat the player passes over immediately before reaching the portal,\nthen the game prints the messages for the portal (while showing\nthe player standing on the square before), then the messages for\nthe item, then autopicksup the item (if autopickup is on and set to\npick up that sort of item), and then the player actually moves to the\nportal destination. Expected behaviour is for the game to not mention\nor pick up the item (as would happen if no portal is involved).\n\nI'd again like to encourage the devteam to cooperate more with\nthe NetHack development community as a whole on the whole on\nbugfixes. Many bugs appear to be already known but not on the\ndevteam, and for many other bugs, the descriptions on the website\nare insufficient for us to work out what the bug is about, or find or\nreproduce it ourselves. (Imagine if I'd reported this bug simply as\n\"Messages sometimes appear out of order when jumping\"!) Incidentally,\nthe bug that's been confusing the community the most is SC343-18;\nfrom its description, it seems to be connected to C343-231, but we\nhave no idea what causes SC343-18 or even what the bug description\nmeans. Is there some way we can get more detailed descriptions of\nofficial bugs, like the ones we send to you when we find them?\n\nProbably the gold standard for understanding what's causing a bug\nis an explanation based on the code; the diff that fixes the bug\nis the method of explaining this that causes the least extra work,\nbut I understand that the DevTeam badly wants to avoid releasing\nany code until it's ready (even though this means that nobody else\ncan help them get it ready on time; and it's also meant that line\nnumbers in your development version have likely drifted away from\nline numbers in, say, community efforts to produce fixed versions of\nNetHack, such as NetHack 4, which would not even be as necessary if\nthe bug fixes were public). In the particular case, the code-based\nreason for the bug is that hurtle_step(), which is responsible for\ndetermining whether squares are passable when jumping or hurtling,\ncalls the code for handling a magic portal when the user reaches\nit and then returns FALSE, meaning that walk_path() treats the\nportal like a wall. Because the portal code just prints messages\nand then schedules a goto, you get the messages first, then the\ncharacter stops (and thus picks up items, if necessary), and then\nthe scheduled goto happens. I don't currently have a working fix\nfor the bug, although the most obvious methods of fixing it to\nme would involve making the jump/hurtle code check for traps when\nleaving or landing on squares, as opposed to before entering them.\n\n--\nAlex Smith\nNetHack 4 maintainer\n</pre>\n<h3><span id=\"Alternative_tilesets_can_spoil_the_identity_of_bags,_gems,_instruments,_fake_Amulets\"></span><span class=\"mw-headline\" id=\"Alternative_tilesets_can_spoil_the_identity_of_bags.2C_gems.2C_instruments.2C_fake_Amulets\">Alternative tilesets can spoil the identity of bags, gems, instruments, fake Amulets</span></h3>\n<p>Reported by <a href=\"/wiki/User:Ais523\" title=\"User:Ais523\">ais523</a>\n</p>\n<pre> mailversion:\n1.45\n\nnhversion:\n3.4.3\n\nnhfrom:\nOur 3.4.3 source release, unmodified\n\nhardware:\nProbably irrelevant, but it's a Toshiba Satellite netbook with 3 GB memory and 4 GB swap, and an Intel U2700 1.3GHz processor.\n\nsoftware:\nUbuntu 13.04 (running Linux 3.8.0-31-generic), using gcc (Ubuntu/Linaro 4.7.3-1ubuntu1) 4.7.3. I tested two X11 tiles ports, and the bug appears on both:\n\n- The official source release, compiled according to the build instructions (i.e. nothing was modified but config/unixconf.h, and Makefiles);\n\n- The Ubuntu-packaged version of X11 NetHack (which is installed using secure permissions, i.e. I can't tamper with its files without root access (or access to the games group), and I didn't use it while testing for this bug).\n\nI suspect the bug also exists on other tiles ports, but I didn't check.\n\ncomments:\nI found a reasonably major (spoiler?) bug in the NetHack 3.4.3 code during the process of making a tiles port for NetHack 4. (The bug had already been fixed in NetHack 4 via NitroHack; I don't have access to the development source of 3.4.4 or 3.5.0 to check if it's fixed there or not, and as such I can't send a patch because I don't have access to the codebase it's meant to patch against, and thus it wouldn't apply.)\n\nThe issue is to do with custom user tilesets. In the X11 port of NetHack, the game loads the tileset from a path specified in NetHack.ad. Although this file is read-only and stored in the nethackdir, it's possible to override the X search path in order to use an alternative NetHack.ad, and thus an alternative tileset. This seems like a useful (possibly intended) feature, and not a bug.\n\nHowever, the code seem to implicitly assume that objects with the same unidentified description also have the same tiles. Simply changing the tileset to give different tiles where previously the tiles were the same effectively gives objects unique unidentified appearances, meaning that, say, bags, loadstones, and fake Amulets can be identified entirely via the tile you give them.\n\nHere's an example of this exploit being used on the X11 tiles version of NetHack (both \"prefix/games/nethack\", produced by compiling the 3.4.3 official source release, and \"xnethack\", the Ubuntu-packaged version):\n\nScript started on Thu 26 Sep 2013 02:37:59 BST\nais523@desert:/tmp$ ls distinct-bags/\ndistinct-bags.x11tiles  NetHack.ad\nais523@desert:/tmp$ diff -u prefix/games/lib/nethackdir/NetHack.ad distinct-bags/NetHack.ad\n--- prefix/games/lib/nethackdir/NetHack.ad 2013-09-26 02:23:47.254875282 +0100\n+++ distinct-bags/NetHack.ad 2013-09-26 02:33:24.130104957 +0100\n@@ -19,7 +19,7 @@\n ! the custom format - to enlarge an XPM file, use processing tools\n ! such as XV or preferably PBMplus.\n !\n-!NetHack.tile_file: x11tiles\n+NetHack.tile_file: /tmp/distinct-bags/distinct-bags.x11tiles\n !NetHack.double_tile_size: True\n !\n ! The annotation of pets.\nais523@desert:/tmp$ XUSERFILESEARCHPATH=/tmp/distinct-bags/NetHack.ad prefix/games/nethack -D\nais523@desert:/tmp$ XUSERFILESEARCHPATH=/tmp/distinct-bags/NetHack.ad xnethack\n\nYou didn't beat your previous score of 4 points.\n\n\n\nais523@desert:/tmp$ exit\n\nScript done on Thu 26 Sep 2013 02:42:37 BST\n\n/tmp/distinct-bags/distinct-bags.x11tiles is a copy of x11tiles (which regular users have read access to), with numbers added on the bag tiles to make them distinct; likewise, /tmp/distinct-bags/NetHack.ad is a copy of NetHack.ad with the tileset changed.\n\nThe game on the official NetHack source (which was in wizard mode for testing), I wished for a sack and a bag of holding, then threw both onto the ground. Here's the screenshot: &lt;http://nethackwiki.com/wiki/File:Tiles-bugreport1-image1.png&gt;. As you can see from the message buffer, the two bags are both indistinguishable to the character (I farlooked both of them), due to being unidentified. However, the difference in the bags is clearly visible to the player; the sack (tile 194) shows a \"1\", and the bag of holding (tile 196) shows a \"3\". This would allow a player to instantly recognise which bags were holding.\n\nIn the securely installed game (which I played to prove that this exploit does not require the ability to modify game files), I started a Rogue, and threw my starting sack: &lt;http://nethackwiki.com/wiki/File:Tiles-bugreport1-image2.png&gt; In this case, the character knew its identity; but the point is to demonstrate that the exploit-containing tileset still works (you can see the \"1\" I drew on the sack).\n\nThis exploit is more major than just bags; in particular, fake and real Amulets of Yendor have distinct tiles, as do loadstones.\n\n\nOther ports and variants of NetHack are likely to have a similar issue, if they use the same or similar tiles code to vanilla. (Interestingly, Slash'EM's default tileset actually has subtly different tiles for the various bags out of the box; I originally noticed this bug because NetHack 4's tileset is based on Slash'EM's, and although it's harder to reproduce in NetHack 3.4.3, it's still possible.) In particular, I strongly suspect that this bug exists on the widely-played Windows tiles version (which also has customizable tilesets).\n</pre>\n<p><br />\n</p>\n<h3><span class=\"mw-headline\" id=\"Crash_while_loading_when_riding_and_wielding_Sting\">Crash while loading when riding and wielding Sting</span></h3>\n<p>Reported by <a href=\"/wiki/User:Bhaak\" title=\"User:Bhaak\">Patric Mueller</a>\n</p>\n<pre>Below is what you submitted to The_DevTeam on Wednesday, October 16, 2013 at 03:47:59\n\nThe ID number for this message is '#H3031'\n\nmailversion:\n1.45\n\nnhversion:\n3.4.3\n\nnhfrom:\nOur 3.4.3 source release, unmodified\n\nhardware:\n64 bit intel machine\n\nsoftware:\n- Linux version 3.10.7-gentoo (root@localhost) (gcc version 4.6.3 (Gentoo 4.6.3 p1.13, pie-0.5.2) ) #3 SMP Sat Aug 17 14:48:51 CEST 2013\n- Windows 7 Enterprise N Service Pack 1\n\ncomments:\nHi DevTeam,\n\nA player on UnNetHack's public server un.nethack.nu experienced a crash while\nhis game was loading while riding and wielding a SPFX_WARN conferring artifact.\n\nThis has been traced back to an issue that is also present in vanilla NetHack.\nAlthough there it is less likely to happen as Sting is the only SPFX_WARN\nweapon and most players don't seem to consider Sting to be a useful weapon.\n\nFor reproducing start up a knight, ride your pet, wish and wield Sting, save\nthe game and then try to load again will crash the game. I could reproduce this\non a 64 bit Linux and 64 bit Windows (on Windows, it didn't crash every time\nbut on Linux it did always).\n\nIt's possible that this bug is already fixed with C343-39 \"Restoring a game\nwhere the character is wielding Sting may result in temporary display errors\nduring the restore process.\" but from the description it's not obvious how to\nreproduce C343-39.\n\nThe problematic code tries to activate the artifact properties which will\nresult in a call to display_self() which will try to access u.usteed, even\nthough the program hasn't properly restored that structure at that point yet.\n\nFor fixing it I moved the part where the code calls setworn on all items in\nyour inventory out of restgamestate() to the end of dorecover(). I couldn't\nnotice any problems with that and at this later time, u.usteed is guarantee to\nbe restored.\nhttp://bhaak.net/nethack/nh343-fix-crash-riding-sting.diff\n\nThe stacktrace of the crash is this:\nCore was generated by `/opt/nethack-tmp/games/lib/nethackdir/nethack -D 4'.\nProgram terminated with signal 11, Segmentation fault.\n#0  0x0000000000431658 in newsym (x=66, y=4) at display.c:717\n717                 if (senseself()) display_self();\n(gdb) bt\n#0  0x0000000000431658 in newsym (x=66, y=4) at display.c:717\n#1  0x00000000004328b3 in see_monsters () at display.c:1071\n#2  0x000000000040ff76 in set_artifact_intrinsic (otmp=0x17243a0, on=1 '\\001', wp_mask=256) at artifact.c:451\n#3  0x0000000000571ea3 in setworn (obj=0x17243a0, mask=256) at worn.c:98\n#4  0x000000000051584f in restgamestate (fd=3, stuckid=0x7fff44f490c0, steedid=0x7fff44f490bc) at restore.c:413\n#5  0x0000000000515b65 in dorecover (fd=3) at restore.c:558\n#6  0x00000000005844bc in main (argc=3, argv=0x7fff44f49228) at ../sys/unix/unixmain.c:258\n\nBye\nPatric\n\n\n</pre>\n<h3><span id=\"Can't_wish_for_rusty_rustproof\"></span><span class=\"mw-headline\" id=\"Can.27t_wish_for_rusty_rustproof\">Can't wish for rusty rustproof</span></h3>\n<p>Reported by <a href=\"/wiki/User:Bhaak\" title=\"User:Bhaak\">Patric Mueller</a>\n</p>\n<pre>Below is what you submitted to The_DevTeam on Thursday, May 19, 2011 at 08:09:54\n\nThe ID number for this message is '#H2285'\n\nmailversion:\n1.42\n\nnhversion:\n3.4.3\n\nnhfrom:\nOur 3.4.3 source release, unmodified\n\ncomments:\nHi DevTeam,\n\nWishing for a \"rusty rustproof long sword\" will only yield a \"rusty long sword\".\n\nBecause of a restriction in objnam.c line 2641:\n\"if (erodeproof &amp;&amp; !eroded &amp;&amp; !eroded2)\"\n\nThis seems to have been an intentional change for NetHack 3.3.0 as fixes33.0\nsays \"make sure non-erodable objects aren't eroded or erodeproof (could happen\nby wishing or object polymorph)\".\n\nAlthough it is not clear to me why one shouldn't allow a user to wish for such\na thing or why the erosion gets set instead of foo-proofness.\n\nBye\nPatric\n</pre>\n<h3><span class=\"mw-headline\" id=\"Odd_message_when_player_swallowing_monster_dies_by_wrath_of_god\">Odd message when player swallowing monster dies by wrath of god</span></h3>\n<p>Reported by <a href=\"/wiki/User:Bhaak\" title=\"User:Bhaak\">Patric Mueller</a>\n</p>\n<pre>Below is what you submitted to The_DevTeam on Thursday, December 9, 2010 at 06:59:37\n\nThe ID number for this message is '#H2200'\n\nSubject: Odd message when player swallowing monster dies by wrath of god\n\nmailversion:\n1.41\n\nnhversion:\n3.4.3\n\nnhfrom:\nOur 3.4.3 source release, unmodified\n\ncomments:\nHi DevTeam!\n\nIf the player manages to be swallowed by an electricity-resisting monster while\ndrawing the wrath of a god, the swallowing monster will be hit by a wide-angle\ndisintegration beam and still fry to a crisp (pray.c:495)\n\nI'm no native speaker but that does sound odd to me as IMO \"fry\" implies heat.\nIt doesn't look like a proper message for a disintegration death.\n\nAlthough I'm not even sure how to properly trigger that message in vanilla. I\nhad to give Juiblex MR_ELEC to test it.\n\nBTW, the message of bug C343-94 has a typo \"re-anmiated\".\n\nBye\nPatric\n</pre>\n<h3><span class=\"mw-headline\" id=\"Crash_when_picking_up_an_unpaid_object_between_two_shops\">Crash when picking up an unpaid object between two shops</span></h3>\n<p>Reported by <a href=\"/wiki/User:Bhaak\" title=\"User:Bhaak\">Patric Mueller</a>\n</p>\n<pre>Below is what you submitted to The_DevTeam on Tuesday, June 29, 2010 at 08:37:20\n\nThe ID number for this message is '#H2143'\n\nmailversion:\n1.41\n\nnhversion:\n3.4.3\n\nnhfrom:\nOur 3.4.3 source release, unmodified\n\nhardware:\n\nsoftware:\nGentoo Linux with kernel version 2.6.24.7\ngcc-Version 4.3.4 (Gentoo 4.3.4 p1.0, pie-10.1.5)\nglibc 2.10.1\n\nHi DevTeam!\n\nFollow this procedure to reliably trigger a crash when picking up an unpaid\nobject in a shop adjacent to another shop:\n\nYou need two populated shops with sharing walls (e.g. minetn-7 the hardware\nstore and Izchak's store).\n\nEnter part of the wall that is shared by both shops.\n\nYou are greeted by Izchak but not by the other shopkeeper.\n\nEnter the hardware store and pick up any unpaid object.\n\nA crash results as bp is 0:\n#0  0x081691ae in add_one_tobill (obj=0x823b778, dummy=0 '\\0') at shk.c:2107\n2107            bp-&gt;bo_id = obj-&gt;o_id;\n\n\nIt's important that this procedure is not interrupted by a save and reload and\nthat the hardware store hasn't been entered before. Otherwise the crash doesn't\nhappen.\n\n\nu_entered_shop() isn't called for the hardware store and that's why the\nhardware store shopkeeper's bill_p (from the struct eshk) is not correctly\ninitialized.\n\nInitializing bill_p in shkinit() from shknam.c fixes that:\ndiff -uwr nethack-3.4.3/src/shknam.c shk-crash/src/shknam.c\n--- nethack-3.4.3/src/shknam.c  2003-12-08 00:39:13.000000000 +0100\n+++ shk-crash/src/shknam.c      2010-06-29 14:30:34.000000000 +0200\n@@ -408,6 +408,7 @@\n        ESHK(shk)-&gt;visitct = 0;\n        ESHK(shk)-&gt;following = 0;\n        ESHK(shk)-&gt;billct = 0;\n+       ESHK(shk)-&gt;bill_p = &amp;ESHK(shk)-&gt;bill[0];\n #ifndef GOLDOBJ\n        shk-&gt;mgold = 1000L + 30L*(long)rnd(100);        /* initial capital */\n #else\n</pre>\n<h3><span class=\"mw-headline\" id=\"Unnecessary_head_shaking\">Unnecessary head shaking</span></h3>\n<p>Reported by <a href=\"/wiki/User:Bhaak\" title=\"User:Bhaak\">Patric Mueller</a>\n</p>\n<pre>Below is what you submitted to The_DevTeam on Thursday, June 10, 2010 at 09:31:51\n\nThe ID number for this message is '#H2134'\n\nmailversion:\n1.41\n\nnhversion:\n3.4.3\n\nnhfrom:\nOur 3.4.3 source release, unmodified\n\ncomments:\nHi DevTeam!\n\nWhen the player dies and a shop is on the level, sometimes the message\n\"$shopkeeper looks at your corpse, shakes her head, and sighs.\" appears when it\nshouldn't (and probably doesn't appear when it should but I didn't check for\nthat).\n\nYou can easily reproduce this bug if you stand in the top right corner of\nminetn-5 and die there.\n\nLike the player did in this game:\nhttp://un.nethack.nu/users/ctaboir/dumps/ctaboir.last.txt.html\n\nThe shopkeeper of the general store will come and look at your corpse even\nthough he shouldn't.\n\nThis is due to a misplaced ')':\n\ndiff -uwr nethack-linux/src/shk.c nethack-shk/src/shk.c\n--- nethack-linux/src/shk.c     2008-05-26 19:47:02.000000000 +0200\n+++ nethack-shk/src/shk.c       2010-06-10 15:21:57.000000000 +0200\n@@ -1650,7 +1650,7 @@\n        /* the simplifying principle is that first-come */\n        /* already took everything you had.             */\n        if (numsk &gt; 1) {\n-           if (cansee(shkp-&gt;mx, shkp-&gt;my &amp;&amp; croaked))\n+           if (cansee(shkp-&gt;mx, shkp-&gt;my) &amp;&amp; croaked)\n                pline(\"%s %slooks at your corpse%s and %s.\",\n                      Monnam(shkp),\n                      (!shkp-&gt;mcanmove || shkp-&gt;msleeping)&#160;? \"wakes up, \"&#160;: \"\",\n\n\nBye, Happy Hacking!\n</pre>\n<h3><span class=\"mw-headline\" id=\"Standout_inconsistency\">Standout inconsistency</span></h3>\n<p>Reported by <a href=\"/wiki/User:Bhaak\" title=\"User:Bhaak\">Patric Mueller</a>\n</p>\n<pre>Below is what you submitted to The_DevTeam on Wednesday, March 10, 2010 at 11:56:33\n\nThe ID number for this message is '#H2095'\n\nmailversion:\n1.41\n\nnhversion:\n3.4.3\n\nnhfrom:\nOur 3.4.3 source release, unmodified\n\ncomments:\nHi devteam,\n\nThe option \"standout\" isn't correct documented in the Guidebook.\n\nIt states there:\n  standout\n    Boldface monsters and ``--More--'' (default off).\n\nBut in the current codebase standout is only used for highlighting the end of\npager windows.\n\nLooking at code from 3.0.x it probably was true at that time, but no longer\nnowadays.\n\nAlso, this option doesn't do much and as the standout terminal sequence is\nusually shown as inverse on modern terminals, wouldn't it be best to integrate\nit into use_inverse?\n\nBye\nPatric\n</pre>\n<h3><span class=\"mw-headline\" id=\"No_attacks_when_swallowed_by_tame_monster\">No attacks when swallowed by tame monster</span></h3>\n<p>Reported by <a href=\"/wiki/User:Bhaak\" title=\"User:Bhaak\">Patric Mueller</a>\n</p>\n<pre>Below is what you submitted to The_DevTeam on Thursday, February 11, 2010 at 03:42:45\n\nThe ID number for this message is '#H2084'\n\nmailversion:\n1.41\n\nnhversion:\n3.4.3\n\nnhfrom:\nOur 3.4.3 source release, unmodified\n\nsoftware:\n\ncomments:\nHi DevTeam!\n\nkerio92 from #nethack on freenode told me about some interesting interaction\nbetween tame monsters with engulfing attack and ring of conflicts.\n\nWhile wearing a ring of conflict the player can get engulfed by a tame monster.\n\nIf the player takes off the ring of conflict inside the tame monster, the\nplayer can stay indefinitely long inside the monster and is *not subject to any\nattacks* (no digestion from purple worms, no elemental damages from vortices,\netc.).\n\nAs those attacks are more of a passive nature (I don't think a tame purple worm\ncan stop his stomach from digesting) I think they should also work with tame\nmonsters.\n\nThis patch should fix that:\n--- nethack-linux/src/monmove.c 2008-05-26 19:47:02.000000000 +0200\n+++ nethack-tame-engulfing/src/monmove.c        2010-02-11 09:30:16.000000000 +0100\n@@ -548,6 +548,8 @@\n /*     Now, attack the player if possible - one attack set per monst   */\n\n         if (!mtmp-&gt;mpeaceful ||\n +           /* Attacks work even when engulfed by tame monsters */\n +           (u.uswallow &amp;&amp; mtmp == u.ustuck) ||\n             (Conflict &amp;&amp; !resist(mtmp, RING_CLASS, 0, 0))) {\n                 if(inrange &amp;&amp; !noattacks(mdat) &amp;&amp; u.uhp &gt; 0 &amp;&amp; !scared &amp;&amp; tmp&#160;!= 3)\n                 if(mattacku(mtmp)) return(1); /* monster died (e.g. exploded) */\n</pre>\n<h3><span id=\"&quot;You_are_protected&quot;_from_a_+0_ring_of_protection\"></span><span class=\"mw-headline\" id=\".22You_are_protected.22_from_a_.2B0_ring_of_protection\">\"You are protected\" from a +0 ring of protection</span></h3>\n<p>Reported by <a href=\"/wiki/User:Bhaak\" title=\"User:Bhaak\">Patric Mueller</a>\n</p>\n<pre>Below is what you submitted to The_DevTeam on Thursday, January 14, 2010 at 09:08:25\n\nThe ID number for this message is '#H2076'\n\nmailversion:\n1.41\n\nnhversion:\n3.4.3\n\nnhfrom:\nOur 3.4.3 source release, unmodified\n\ncomments:\nHi DevTeam!\n\nIf one is wearing a +0 ring of protection one gets the \"You are protected.\"\nmessage during enlightment.\n\nIn general, if intrinsic and extrinsic protection neutralize each other, you\nget this message.\n\nThe code in cmd.c:1016 only makes a distinction between values lesser than 0\nand the rest. No special treatment of a value of 0.\n\nIs this a side effect for getting this message while wearing a cloak of\nprotection?\n\nBye\nPatric\n</pre>\n<h3><span class=\"mw-headline\" id=\"Randomly_placed_doors_not_properly_placed\">Randomly placed doors not properly placed</span></h3>\n<p>Reported by <a href=\"/wiki/User:Bhaak\" title=\"User:Bhaak\">Patric Mueller</a>\n</p>\n<pre>Below is what you submitted to The_DevTeam on Wednesday, December 23, 2009 at 03:36:29\n\nThe ID number for this message is '#H2063'\n\nmailversion:\n1.41\n\nnhversion:\n3.4.3\n\nnhfrom:\nOur 3.4.3 source release, but modified\n\nhardware:\nvendor_id       : GenuineIntel\ncpu family      : 15\nmodel           : 4\nmodel name      : Intel(R) Pentium(R) 4 CPU 3.20GHz\n\nsoftware:\nGentoo Linux with kernel version 2.6.24.7\ngcc-Version 4.3.2 (Gentoo 4.3.2-r3 p1.6, pie-10.1.5)\nglibc 2.10.1\n\ncomments:\nHi DevTeam!\n\nI've been having a \"rn2(0) attempted\" bug in UnNetHack for some time and now\nfound the reason for it. It's not a off-by-one bug that gets triggered with the\nroom levels of vanilla, but it prevents random placed doors to get placed at\nevery possible place.\n\nIf I just add a level like the following to the vanilla code, it triggers a\n\"Floating exception\" in vanilla by calling rn2(0) (I've replaced bigrm-1 for\neasier debugging):\n\nLEVEL: \"bigrm-1\"\nROOM: \"ordinary\" , lit, random, random, (76,17)\nNAME: \"room\"\n\nSUBROOM: \"ordinary\", lit, (60,12), (6,1), \"room\"\nDOOR: false, closed, west, random\n\n\nThe problem is that the height of the room is only 1 tile and a door should get\nplaced randomly on such a short wall.\n\nIn line 623 of src/sp_lev.c this results in a difference of 0:\ndpos = rn2((dwall == W_WEST || dwall == W_EAST)&#160;?\n  (broom-&gt;hy - broom-&gt;ly)&#160;: (broom-&gt;hx - broom-&gt;lx));\n\nI'm not sure if this bug is the same as S343-2 (\"1x1 room in special level can\ntrigger panic due to off by one error (does not affect official room set)\").\n\nAlthough in the vanilla code there are no rooms that small, randomly placed\ndoors never gets placed at the last possible place because of this bug.\n\nHappy holidays!\nPatric\n</pre>\n<h3><span id=\"Robbing_rogue_not_getting_+1_alignment\"></span><span class=\"mw-headline\" id=\"Robbing_rogue_not_getting_.2B1_alignment\">Robbing rogue not getting +1 alignment</span></h3>\n<p>Reported by <a href=\"/wiki/User:Bhaak\" title=\"User:Bhaak\">Patric Mueller</a>\n</p>\n<pre>Below is what you submitted to The_DevTeam on Tuesday, August 11, 2009 at 07:39:18\n\nThe ID number for this message is '#H2003'\n\nmailversion:\n1.41\n\nnhversion:\n3.4.3\n\nnhfrom:\nOur 3.4.3 source release, unmodified\n\nsoftware:\n\ncomments:\nHi DevTeam,\n\nWhen robbing a shop as a lawful character one gets a -1 alignment penalty.\n\nA chaotic character gets a +1 alignment bonus but not if it is a Rogue.\n\nDoes that make sense?\n\nThe relevant source code is in shk.c in rob_shop() at line 494 (at line 984 in\nmake_happy_shk() is the reversal of the alignment change):\nif (!Role_if(PM_ROGUE)) /* stealing is unlawful */\n  adjalign(-sgn(u.ualign.type));\n\nBye\nPatric\n</pre>\n<h3><span class=\"mw-headline\" id=\"Drawbridge_killed_gas_spore_not_exploding\">Drawbridge killed gas spore not exploding</span></h3>\n<p>Reported by <a href=\"/wiki/User:Bhaak\" title=\"User:Bhaak\">Patric Mueller</a>\n</p>\n<pre>Below is what you submitted to The_DevTeam on Tuesday, April 7, 2009 at 06:52:37\n\nThe ID number for this message is '#H1843'\n\nmailversion:\n1.41\n\nnhversion:\n3.4.3\n\nnhfrom:\nOur 3.4.3 source release, unmodified\n\ncomments:\nHi there!\n\nKilling a gas spore with a falling portcullis doesn't cause it to explode.\n\nThe gas spore explosion part is handled in corpse_chance() in mon.c.\n\ne_died() in dbridge.c calls xkilled with the option to not generate corpses and\ntherefore corpse_chance isn't called in this case.\n\nBye\nPatric\n</pre>\n<h3><span class=\"mw-headline\" id=\"Removing_red_dragon_scale_mail_in_lava_causes_no_bad_effects\">Removing <a href=\"/wiki/Red_dragon_scale_mail\" title=\"Red dragon scale mail\">red dragon scale mail</a> in lava causes no bad effects</span></h3>\n<pre>The ID number for this message is '#H3032'\n\nmailversion:\n1.45\n\nnhversion:\n3.4.3\n\nnhfrom:\nOur 3.4.3 source release, unmodified\n\nhardware:\nProbably irrelevant, but it's a Toshiba Satellite netbook with 3\nGB memory and 4 GB swap, and an Intel U2700 1.3GHz processor.\n\nsoftware:\nUbuntu raring, running Linux 3.8.0, compiled from unmodified\n(apart from config.h/unixconf.h and makefiles) official NetHack\n3.4.3 sources compiled for Unix-like systems using gcc 4.4.3\n\ncomments:\nIf the player's only source of fire resistance is red dragon scale\nmail, the player enters lava while wearing the RDSM, and then removes\nit, the lava has the same effect as it would on a fire-resistant\nplayer, even though the player no longer has any fire resistance\nsources. (The player can even sit on the lava in that state with no\nbad effects other than a few points of damage.) I'm not 100% sure on\nthe cause, but it probably involves a failure to call spoteffects()\nsomewhere where it needs to be called.\n\nI've been trying to determine whether this is on the bug list\nalready, but the only bug that potentially seems to fit is\nSC343-18. Is this that bug, or something else?\n</pre>\n<h3><span class=\"mw-headline\" id=\"Crash_when_teleporting_onto_a_sink_while_equipping_levitation_boots\">Crash when teleporting onto a sink while equipping levitation boots</span></h3>\n<pre>The ID number for this message is '#H3033'\n\nmailversion:\n1.45\n\nnhversion:\n3.4.3\n\nnhfrom:\nOur 3.4.3 source release, unmodified\n\nhardware:\nProbably irrelevant, but it's a Toshiba Satellite netbook with 3\nGB memory and 4 GB swap, and an Intel U2700 1.3GHz processor.\n\nsoftware:\nUbuntu raring, running Linux 3.8.0, compiled from unmodified\n(apart from config.h/unixconf.h and makefiles) official NetHack\n3.4.3 sources compiled for Unix-like systems using gcc 4.4.3\n\ncomments:\nIf a player is putting on levitation boots, then during the\nhelplessness period (negative multi) afterwards, gets teleported\nonto a sink (this is easy to test via means of a quantum mechanic,\nteleport control, and no magic cancellation), the game crashes.\n\nBasically what happens is that Boots_on() (which is called at the\nend of the helplessness period) looks at uarmf in order to determine\nwhich item to wear, with no NULL check. If the boots get unequipped\nwhile wearing them (e.g. via a sink), uarmf is NULL by the time\nBoots_on() runs, meaning that the game segfaults. The easiest fix\nis to add a null check to the *_on() functions, that causes them to\nnot run if the armour is no longer equipped by the time its effects\nwould start applying.\n\n(The \"most correct\" fix would be to use an occupation callback,\ncombined with tracking the item being equipped the same way that,\nsay, the 'book' global variable does for spellbooks. This would be\nsymmetrical with A, rather than symmetrical with T. I'm currently\nin the process of rewriting NetHack 4 to do this, but the patch is\nvery large and would not easily be backported to NetHack 3.4.3.)\n</pre>\n<h3><span class=\"mw-headline\" id=\"Erroneously_rustproof_splint_mail_for_samurai\">Erroneously rustproof splint mail for samurai</span></h3>\n<pre>The ID number for this message is '#H3034'\n\nmailversion:\n1.45\n\nnhversion:\n3.4.3\n\nnhfrom:\nOur 3.4.3 source release, unmodified\n\nsoftware:\nNetHack 3.4.3, found in the source release.\n\ncomments:\nAs a samurai, splint mails generated via mksobj()\non the first turn of the game or in the quest\nbranch will always begin rustproof. This is\nsupposed to \"simulate lacquered armor\" (mkobj.c,\nline 564); however, this applies even to\nsplint mail you e.g. wished for. As this allows\nyou to receive rusty rustproof splint mail from\na wish, I think this is not intended, given that\nthis specific result isn't normally allowed\n(objnam.c, line 2641 only proceeds to set the\nerodeproof flag if you didn't also wish for the\nobject as eroded).\n\nAdditionally, you will know about the rustproof\nstate of the object; this is also inconsistent\nwith the normal outcome of wishing for an\nerodeproof object.\n</pre>\n<h3><span id=\"panic()_when_trying_to_drop_destroyed_object\"></span><span class=\"mw-headline\" id=\"panic.28.29_when_trying_to_drop_destroyed_object\"><tt>panic()</tt> when trying to drop destroyed object</span></h3>\n<pre>The ID number for this message is '#H3039'\n\nmailversion:\n1.45\n\nnhversion:\n3.4.3\n\nnhfrom:\nOur 3.4.3 source release, unmodified\n\nsoftware:\nNetHack 3.4.3, present in the source release\n(tested on multiple systems)\n\ncomments:\nWhen using the 'D' command to drop multiple items at once, the game will\npanic if it tries to drop an item that has been destroyed in between\n(\"extract_nobj: object lost\"). Mostly, this shouldn't happen. However,\nif one of the items is a lit potion of oil and you are levitating,\nit will explode when it hits the floor, possibly destroying other items\nyou were going to drop.\n\nThe problem seems to be that the code assumes the items selected to be\ndropped still exist when they are to be actually dropped, i.e., that\ndropping items will not affect other items. As shown above,\nthat isn't the case.\n</pre>\n<h3><span class=\"mw-headline\" id=\"Flesh_golems_are_healed_for_too_much_from_shock_attacks\">Flesh golems are healed for too much from shock attacks</span></h3>\n<pre>Flesh golems are supposed to only be healed for 1/6 the shock damage that\nwould occur if non-resistant, but is healed the full amount instead due to\na typo\n</pre>\n<h3><span class=\"mw-headline\" id=\"Long_worms_and_Elbereth\">Long worms and Elbereth</span></h3>\n<pre>If a long worm is scared by Elbereth but can't get anywhere, it will hit you,\nbypassing Elbereth. This attack pattern will use the otherwise unused\nwormhitu() codepath, leading to each tail segment next to you also hitting\nyou for damage.\n</pre>\n<h3><span class=\"mw-headline\" id=\"Monster_branch_stair_usage_bug\">Monster branch stair usage bug</span></h3>\n<pre>Monsters never use branch stairs to escape, due to a bug in find_defensive\nthat assumes that branch stairs are not considered stairs.\n</pre>\n<h3><span class=\"mw-headline\" id=\"Intrinsic_disintegration_resistance_shields_the_inventory\">Intrinsic disintegration resistance shields the inventory</span></h3>\n<pre>Intrinsic disintegration resistance protects against armor damage -- you may\nor may not consider this a bug, but scshunt [a DevTeam member] changed the\nbehaviour of this in NetHack4 last year\n</pre>\n<h3><span id=\"nasty()_is_broken\"></span><span class=\"mw-headline\" id=\"nasty.28.29_is_broken\">nasty() is broken</span></h3>\n<pre>nasty() is broken in several ways: replacement monsters can be asleep/non-hostile,\nthe \"retry if chosen monster isn't aligned with caster\" instead makes the summoning\ncreate several monsters (capped at 20) until one neutral or coaligned summon is\ncreated (where it bails out to the next summon), creating potentially up to 200\nmonsters in theory (this is however incredibly unlikely due to the selection of\nnasties).\n</pre>\n<h3><span class=\"mw-headline\" id=\"cast_protection_gives_too_little_AC\">cast protection gives too little AC</span></h3>\n<pre>A typo for the \"AC without the spell\" value results in the protection spell\ngiving less AC than it's supposed to.\n</pre>\n<h3><span class=\"mw-headline\" id=\"Scrolls_of_light_when_blind\">Scrolls of light when blind</span></h3>\n<pre>Scrolls/spells of light is blocked if you're engulfed, which makes sense.\nThis block is lifted if you're blind, which makes less sense.\n</pre>\n<div style=\"display:none; right:10px; padding-bottom: 17px\" class=\"metadata topicon nopopups\"><div style=\"margin-top: -10px\"><a href=\"/wiki/NetHackWiki:Next_version\" title=\"This article is unlikely to require revision for the next version of NetHack. Click here for more information.\"><img alt=\"This article is unlikely to require revision for the next version of NetHack. Click here for more information.\" src=\"/images/5/58/Noversion.png\" width=\"32\" height=\"32\" /></a></div></div>\n\n<!-- \nNewPP limit report\nCached time: 20240926182702\nCache expiry: 604800\nDynamic content: false\nCPU time usage: 0.029 seconds\nReal time usage: 0.058 seconds\nPreprocessor visited node count: 527/1000000\nPreprocessor generated node count: 1269/1000000\nPost‐expand include size: 1277/2097152 bytes\nTemplate argument size: 292/2097152 bytes\nHighest expansion depth: 8/40\nExpensive parser function count: 0/100\nUnstrip recursion depth: 0/20\nUnstrip post‐expand size: 49250/5000000 bytes\n-->\n<!--\nTransclusion expansion time report (%,ms,calls,template)\n100.00%    8.099      1 Template:Noversion\n100.00%    8.099      1 -total\n 48.19%    3.903      1 Template:Version_icon\n 27.54%    2.230      1 Template:Top_icon\n-->\n\n<!-- Saved in parser cache with key wikihackdb:pcache:idhash:20325-0!canonical and timestamp 20240926182702 and revision id 171302\n -->\n</div></div>\t\t\t\t\t<div class=\"printfooter\">\n\t\t\t\t\t\tRetrieved from \"<a dir=\"ltr\" href=\"https://nethackwiki.com/index.php?title=Bugs_in_NetHack_3.4.3/Reports&amp;oldid=171302\">https://nethackwiki.com/index.php?title=Bugs_in_NetHack_3.4.3/Reports&amp;oldid=171302</a>\"\t\t\t\t\t</div>\n\t\t\t\t<div id=\"catlinks\" class=\"catlinks\" data-mw=\"interface\"><div id=\"mw-normal-catlinks\" class=\"mw-normal-catlinks\"><a href=\"/wiki/Special:Categories\" title=\"Special:Categories\">Category</a>: <ul><li><a href=\"/wiki/Category:Bugs\" title=\"Category:Bugs\">Bugs</a></li></ul></div></div>\t\t\t\t<div class=\"visualClear\"></div>\n\t\t\t\t\t\t\t</div>\n\t\t</div>\n\t\t<div id=\"mw-navigation\">\n\t\t\t<h2>Navigation menu</h2>\n\t\t\t<div id=\"mw-head\">\n\t\t\t\t\t\t\t\t\t<div id=\"p-personal\" role=\"navigation\" class=\"\" aria-labelledby=\"p-personal-label\">\n\t\t\t\t\t\t<h3 id=\"p-personal-label\">Personal tools</h3>\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<li id=\"pt-createaccount\"><a href=\"/index.php?title=Special:CreateAccount&amp;returnto=Bugs+in+NetHack+3.4.3%2FReports\" title=\"You are encouraged to create an account and log in; however, it is not mandatory\">Create account</a></li><li id=\"pt-login\"><a href=\"/index.php?title=Special:UserLogin&amp;returnto=Bugs+in+NetHack+3.4.3%2FReports\" title=\"You are encouraged to log in; however, it is not mandatory [o]\" accesskey=\"o\">Log in</a></li>\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div id=\"left-navigation\">\n\t\t\t\t\t\t\t\t\t\t<div id=\"p-namespaces\" role=\"navigation\" class=\"vectorTabs\" aria-labelledby=\"p-namespaces-label\">\n\t\t\t\t\t\t<h3 id=\"p-namespaces-label\">Namespaces</h3>\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<li id=\"ca-nstab-main\" class=\"selected\"><span><a href=\"/wiki/Bugs_in_NetHack_3.4.3/Reports\" title=\"View the content page [c]\" accesskey=\"c\">Page</a></span></li><li id=\"ca-talk\"><span><a href=\"/wiki/Talk:Bugs_in_NetHack_3.4.3/Reports\" rel=\"discussion\" title=\"Discussion about the content page [t]\" accesskey=\"t\">Discussion</a></span></li>\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div id=\"p-variants\" role=\"navigation\" class=\"vectorMenu emptyPortlet\" aria-labelledby=\"p-variants-label\">\n\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"checkbox\" class=\"vectorMenuCheckbox\" aria-labelledby=\"p-variants-label\" />\n\t\t\t\t\t\t<h3 id=\"p-variants-label\">\n\t\t\t\t\t\t\t<span>Variants</span>\n\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t<div class=\"menu\">\n\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t<div id=\"right-navigation\">\n\t\t\t\t\t\t\t\t\t\t<div id=\"p-views\" role=\"navigation\" class=\"vectorTabs\" aria-labelledby=\"p-views-label\">\n\t\t\t\t\t\t<h3 id=\"p-views-label\">Views</h3>\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<li id=\"ca-view\" class=\"collapsible selected\"><span><a href=\"/wiki/Bugs_in_NetHack_3.4.3/Reports\">Read</a></span></li><li id=\"ca-viewsource\" class=\"collapsible\"><span><a href=\"/index.php?title=Bugs_in_NetHack_3.4.3/Reports&amp;action=edit\" title=\"This page is protected.&#10;You can view its source [e]\" accesskey=\"e\">View source</a></span></li><li id=\"ca-history\" class=\"collapsible\"><span><a href=\"/index.php?title=Bugs_in_NetHack_3.4.3/Reports&amp;action=history\" title=\"Past revisions of this page [h]\" accesskey=\"h\">View history</a></span></li>\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div id=\"p-cactions\" role=\"navigation\" class=\"vectorMenu emptyPortlet\" aria-labelledby=\"p-cactions-label\">\n\t\t\t\t\t\t<input type=\"checkbox\" class=\"vectorMenuCheckbox\" aria-labelledby=\"p-cactions-label\" />\n\t\t\t\t\t\t<h3 id=\"p-cactions-label\"><span>More</span></h3>\n\t\t\t\t\t\t<div class=\"menu\">\n\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div id=\"p-search\" role=\"search\">\n\t\t\t\t\t\t<h3>\n\t\t\t\t\t\t\t<label for=\"searchInput\">Search</label>\n\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t<form action=\"/index.php\" id=\"searchform\">\n\t\t\t\t\t\t\t<div id=\"simpleSearch\">\n\t\t\t\t\t\t\t\t<input type=\"search\" name=\"search\" placeholder=\"Search NetHackWiki\" title=\"Search NetHackWiki [f]\" accesskey=\"f\" id=\"searchInput\"/><input type=\"hidden\" value=\"Special:Search\" name=\"title\"/><input type=\"submit\" name=\"fulltext\" value=\"Search\" title=\"Search the pages for this text\" id=\"mw-searchButton\" class=\"searchButton mw-fallbackSearchButton\"/><input type=\"submit\" name=\"go\" value=\"Go\" title=\"Go to a page with this exact name if it exists\" id=\"searchButton\" class=\"searchButton\"/>\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div id=\"mw-panel\">\n\t\t\t\t<div id=\"p-logo\" role=\"banner\"><a class=\"mw-wiki-logo\" href=\"/wiki/Main_Page\"  title=\"Visit the main page\"></a></div>\n\t\t\t\t\t\t<div class=\"portal\" role=\"navigation\" id=\"p-navigation\" aria-labelledby=\"p-navigation-label\">\n\t\t\t<h3 id=\"p-navigation-label\">Navigation</h3>\n\t\t\t<div class=\"body\">\n\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t<li id=\"n-NetHack-Wiki\"><a href=\"/wiki/Main_Page\">NetHack Wiki</a></li><li id=\"n-Forum\"><a href=\"/wiki/Forum:Watercooler\">Forum</a></li><li id=\"n-portal\"><a href=\"/wiki/NetHackWiki:Community_Portal\" title=\"About the project, what you can do, where to find things\">Community portal</a></li><li id=\"n-recentchanges\"><a href=\"/wiki/Special:RecentChanges\" title=\"A list of recent changes in the wiki [r]\" accesskey=\"r\">Recent changes</a></li><li id=\"n-randompage\"><a href=\"/wiki/Special:Random\" title=\"Load a random page [x]\" accesskey=\"x\">Random page</a></li>\t\t\t\t</ul>\n\t\t\t\t\t\t\t</div>\n\t\t</div>\n\t\t\t<div class=\"portal\" role=\"navigation\" id=\"p-Popular_pages\" aria-labelledby=\"p-Popular_pages-label\">\n\t\t\t<h3 id=\"p-Popular_pages-label\">Popular pages</h3>\n\t\t\t<div class=\"body\">\n\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t<li id=\"n-Dungeon-features\"><a href=\"/wiki/Dungeon_feature\">Dungeon features</a></li><li id=\"n-Monsters\"><a href=\"/wiki/Monster#Canonical_list_of_monsters\">Monsters</a></li><li id=\"n-In.2FExtrinsics\"><a href=\"/wiki/Property#Intrinsic_properties\">In/Extrinsics</a></li><li id=\"n-Items\"><a href=\"/wiki/Item\">Items</a></li><li id=\"n-Spells\"><a href=\"/wiki/Spellbook#List_of_spellbooks\">Spells</a></li><li id=\"n-Game-options\"><a href=\"/wiki/Options\">Game options</a></li><li id=\"n-Websites\"><a href=\"/wiki/Websites\">Websites</a></li>\t\t\t\t</ul>\n\t\t\t\t\t\t\t</div>\n\t\t</div>\n\t\t\t<div class=\"portal\" role=\"navigation\" id=\"p-contributing\" aria-labelledby=\"p-contributing-label\">\n\t\t\t<h3 id=\"p-contributing-label\">Contributing</h3>\n\t\t\t<div class=\"body\">\n\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t<li id=\"n-Style-guide\"><a href=\"/wiki/NetHackWiki:Style_guide\">Style guide</a></li><li id=\"n-help\"><a href=\"/wiki/NetHackWiki:How_to_help\" title=\"The place to find out\">How to help</a></li><li id=\"n-Current-projects\"><a href=\"/wiki/NetHackWiki:Current_projects\">Current projects</a></li>\t\t\t\t</ul>\n\t\t\t\t\t\t\t</div>\n\t\t</div>\n\t\t\t<div class=\"portal\" role=\"navigation\" id=\"p-tb\" aria-labelledby=\"p-tb-label\">\n\t\t\t<h3 id=\"p-tb-label\">Tools</h3>\n\t\t\t<div class=\"body\">\n\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t<li id=\"t-whatlinkshere\"><a href=\"/wiki/Special:WhatLinksHere/Bugs_in_NetHack_3.4.3/Reports\" title=\"A list of all wiki pages that link here [j]\" accesskey=\"j\">What links here</a></li><li id=\"t-recentchangeslinked\"><a href=\"/wiki/Special:RecentChangesLinked/Bugs_in_NetHack_3.4.3/Reports\" rel=\"nofollow\" title=\"Recent changes in pages linked from this page [k]\" accesskey=\"k\">Related changes</a></li><li id=\"t-specialpages\"><a href=\"/wiki/Special:SpecialPages\" title=\"A list of all special pages [q]\" accesskey=\"q\">Special pages</a></li><li id=\"t-print\"><a href=\"/index.php?title=Bugs_in_NetHack_3.4.3/Reports&amp;printable=yes\" rel=\"alternate\" title=\"Printable version of this page [p]\" accesskey=\"p\">Printable version</a></li><li id=\"t-permalink\"><a href=\"/index.php?title=Bugs_in_NetHack_3.4.3/Reports&amp;oldid=171302\" title=\"Permanent link to this revision of the page\">Permanent link</a></li><li id=\"t-info\"><a href=\"/index.php?title=Bugs_in_NetHack_3.4.3/Reports&amp;action=info\" title=\"More information about this page\">Page information</a></li>\t\t\t\t</ul>\n\t\t\t\t\t\t\t</div>\n\t\t</div>\n\t\t\t\t</div>\n\t\t</div>\n\t\t\t\t<div id=\"footer\" role=\"contentinfo\">\n\t\t\t\t\t\t<ul id=\"footer-info\">\n\t\t\t\t\t\t\t\t<li id=\"footer-info-lastmod\"> This page was last edited on 20 June 2024, at 23:26.</li>\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t<ul id=\"footer-places\">\n\t\t\t\t\t\t\t\t<li id=\"footer-places-about\"><a href=\"/wiki/NetHackWiki:About\" title=\"NetHackWiki:About\">About NetHackWiki</a></li>\n\t\t\t\t\t\t\t\t<li id=\"footer-places-disclaimer\"><a href=\"/wiki/NetHackWiki:General_disclaimer\" title=\"NetHackWiki:General disclaimer\">Disclaimers</a></li>\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t\t\t<ul id=\"footer-icons\" class=\"noprint\">\n\t\t\t\t\t\t\t\t\t\t<li id=\"footer-poweredbyico\">\n\t\t\t\t\t\t<a href=\"//www.mediawiki.org/\"><img src=\"/resources/assets/poweredby_mediawiki_88x31.png\" alt=\"Powered by MediaWiki\" srcset=\"/resources/assets/poweredby_mediawiki_132x47.png 1.5x, /resources/assets/poweredby_mediawiki_176x62.png 2x\" width=\"88\" height=\"31\"/></a>\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t<div style=\"clear: both;\"></div>\n\t\t</div>\n\t\t\n<script>(window.RLQ=window.RLQ||[]).push(function(){mw.config.set({\"wgPageParseReport\":{\"limitreport\":{\"cputime\":\"0.029\",\"walltime\":\"0.058\",\"ppvisitednodes\":{\"value\":527,\"limit\":1000000},\"ppgeneratednodes\":{\"value\":1269,\"limit\":1000000},\"postexpandincludesize\":{\"value\":1277,\"limit\":2097152},\"templateargumentsize\":{\"value\":292,\"limit\":2097152},\"expansiondepth\":{\"value\":8,\"limit\":40},\"expensivefunctioncount\":{\"value\":0,\"limit\":100},\"unstrip-depth\":{\"value\":0,\"limit\":20},\"unstrip-size\":{\"value\":49250,\"limit\":5000000},\"timingprofile\":[\"100.00%    8.099      1 Template:Noversion\",\"100.00%    8.099      1 -total\",\" 48.19%    3.903      1 Template:Version_icon\",\" 27.54%    2.230      1 Template:Top_icon\"]},\"cachereport\":{\"timestamp\":\"20240926182702\",\"ttl\":604800,\"transientcontent\":false}}});mw.config.set({\"wgBackendResponseTime\":129});});</script>\n\t</body>\n</html>\n","rawPage":"The official list of [[bugs in NetHack 3.4.3]] gives very little information about the bugs in question. This page archives the known original bug reports sent to the [[DevTeam]], to give more information and insight into the bugs.\n== C341-5 ==\nClarification request send by [[User:Bulwersator]] via [https://nethack.org/common/contact.html contact form], response by Dave Cohrs.\n\nC341-5 - request for clarification\n\nOn known bug list it appears as \"When you see your pet move, the pet may be\nreferred to as \"it\".\" What are the circumstances in which this occurs?\n\nI am working on fixing vanilia bugs in my fork but this one is so unclear that\nnobody knows how to reproduce it.\n\nIn general - is it possible to publish at least bug reports send to devteam?\n\n:We are very low tech on the backend, so currently, no, we don't have the capability to publish bug reports.\n\n:I think I have found one that I believe relates to this issue, but it may not be the only case:\n:# Start a game in wizard mode\n:# Wish for a wand of make invisible\n:# Wish for a tripe ration\n:# Wish for an amulet of ESP\n:# Drop the tripe ration\n:# Put on the amulet of ESP\n:# Zap your starting pet with the wand of make invisible\n:# Step way and let your pet eat\n:# Watch the message \"It eats a tripe ration.\"\n\n:Although, it could also be this report, which mentions movement:\n:My character has invisible pet (it was a cat, but after polymorph it \"disappeared\" and now it walks around, answers magic whistle, fights...). My character cannot see it. Only - NetHack gave me message \"It moves only reluctantly\". And I/my character should not be able to see it (I do not even know on which item it was at the time).\n\n:Like I wrote, our backend is low tech.\n\n\n== C343-379 ==\nReported by [[User:Bhaak|Patric Mueller]]\n\n<pre>\nBelow is what you submitted to The_DevTeam on Tuesday, February 10, 2009 at 07:12:00 (13:15 CET)\n\nThe ID number for this message is '#H1810'\n\nmailversion:\n1.40\n\nnhversion:\n3.4.3\n\nnhfrom:\nOur 3.4.3 source release, unmodified\n\nhardware:\n\ncomments:\nHi DevTeam,\n\nI noticed two spelling errors in quest.txt.\n\nThe first in the Healers part: \"How are you feeling?  Perhaps a good bleeding will improve your sprits.\"\n(sprits instead of spirits)\n\nand the second in the Rangers: \"Is that truely %o that I see you carrying?\"\n(truely instead of truly)\n\nAlthough googling on Google Books for \"truely\" shows that this spelling has\nbeen in use in the past. It might look appropriately dated for use in the\nKnights quest texts where currently \"truly\" is used.\n\nBye\nPatric\n</pre>\n\n== C343-403 ==\nReported by ais523, although it was well known in the NetHack community before the report\n<pre>\nThe ID number for this message is '#H2161'\n\nmailversion:\n1.41\n\nnhversion:\n3.4.3\n\nnhfrom:\nOur 3.4.3 source release, unmodified\n\nhardware:\nProbably irrelevant, but it's a Toshiba Satellite netbook with 3 GB\nmemory and 4 GB swap, and an Intel U2700 1.3GHz processor. (The bug\nhas been verified on multiple patched/unpatched versions of NetHack,\non multiple sets of hardware, including public servers.)\n\nsoftware:\nUbuntu Lucid, running Linux 2.6.32, using a NetHack binary compiled\nfrom unmodified (apart from config.h/unixconf.h and makefiles)\nofficial NetHack 3.4.3 sources compiled for Unix-like systems using\ngcc 4.4.1. (Also probably irrelevant, given the above.)\n\ncomments:\nThere's a huge inconsistency in the way that writing scrolls via magic\nmarker works; in particular, it depends on interface details that\nshould be irrelevant. These checks were done as an unlucky non-wizard\nto minimize the chance of false positives due to writing the scroll by\nchance rather than due to having a 100% chance:\n\n1. trying to write unIDed scroll by label:\n\"What type of scroll do you want to write? KIRJE\" fails\n2. trying to write unIDed scroll by actual type:\n\"For what do you wish? scroll of fire\"\n\"What type of scroll do you want to write? fire\" fails\n3. trying to write called scroll by label:\n\"Call a scroll labeled KIRJE: X\"\n\"What type of scroll do you want to write? KIRJE\" succeeds\n4. trying to write called scroll via user-given name:\n\"Call a scroll labeled FOOBIE BLETCH: wished-for\"\n\"What type of scroll do you want to write? wished-for\"\n\"There is no such scroll!\"\n5. trying to write called scroll via actual type:\n\"What type of scroll do you want to write? fire\" succeeds\n6. trying to write an IDed scroll via label:\n(identify YUM YUM as magic mapping)\n\"What type of scroll do you want to write? YUM YUM\" succeeds\n7. trying to write an IDed scroll via actual type:\n\"What type of scroll do you want to write? magic mapping\" succeeds\n\nThe major inconsistencies here are between cases 1 and 3, and between\ncases 2 and 4. Case 3 implies that it's possible to copy a scroll\nyou've ever owned, even if you don't know what it does; case 1 implies\nthat it isn't. It's also incredibly unintuitive, if it makes sense at\nall, that giving a nickname to a scroll is necessary to be able to\ncopy it.\n\nThe inconsistency between cases 2 and 4 is much worse, and I've seen\npeople exploit it on public servers. Suppose a player has ten\nunidentified scrolls, and doesn't know what any of them do, but\nsuspects, say, that at least one is enchant armor. All they have to do\nin order to write an enchant armor scroll is to name all ten of those\nscrolls via #name-n, and then write enchant armor; if they had one in\ninventory to name, they write the scroll correctly, even if they\ndidn't know /which/ of those ten scrolls it was. This doesn't make a\nwhole lot of sense, especially as a mechanism for identifying items.\n\nThe culprit is line 200 of write.c, which checks to see if a scroll of\nthe type given by the player has been called (i.e. given an\noc_uname). This check is dangerous without additional safeguards, as\nit can let the scroll be written even if the player has no idea what\nit is.\n</pre>\n== C343-409 ==\nReported by ais523\n<pre>\nThe ID number for this message is '#H2210'\n\nmailversion:\n1.41\n\nnhversion:\n3.4.3\n\nnhfrom:\nOur 3.4.3 source release, unmodified\n\nhardware:\nProbably irrelevant, but it's a Toshiba Satellite netbook with 3 GB\nmemory and 4 GB swap, and an Intel U2700 1.3GHz processor.\n\nsoftware:\nUbuntu Lucid, running Linux 2.6.32, using a NetHack binary compiled\nfrom unmodified (apart from config.h/unixconf.h and makefiles)\nofficial NetHack 3.4.3 sources compiled for Unix-like systems using\ngcc 4.4.3\n\ncomments:\nIf a player applies an unlocking tool (key, lockpick, credit card) at\nan empty doorway containing a mimic pretending to be a door, the game\nsays \"that doorway has no door\", rather than reacting appropriately to\nthe presence of the mimic (say, by waking it and making the player\nstick to it, or adding the lockpick to the mimic's inventory with an\nappropriate message). The easiest way to reproduce this is in wizard\nmode, by standing next to a doorway without a door, and repeatedly\ndoing control-G large mimic.\n\nThe bug's caused by a logic problem in src/lock.c. The check starting\nat line 364 checks for mimics, but only for the purpose of not\nprinting any monster-related messages. Some time before line 385,\nthere needs to be code to allow for the possibility that in addition\nto having a doorway on the square (accomplishable via having a doorway\nwithout a door, which is still IS_DOOR internally), there's also an\napparent door in the doorway which is actually a mimic; the character\nwould believe there was an intact lock on the square even though they\ngame knows there isn't.\n\nI would make and supply a patch for this bug, but as the README says,\n\"we will assume your code is synchronized with ours\"; and I don't have\nanything newer than 3.4.3 handy to patch against (and I suspect\npatches against 3.4.3 wouldn't apply; you've likely changed your code\nas extensively as I've changed my local copy in an attempt to make a\nfork, but I test all bugs I report against the official 3.4.3\nsource). If you think a patch would help, let me know and I'll try to\nprovide one.\n</pre>\n== C343-421 ==\nReported by ais523\n<pre>\nThe ID number for this message is '#H2142'\n\nmailversion:\n1.41\n\nnhversion:\n3.4.3\n\nnhfrom:\nOur 3.4.3 source release, unmodified\n\nhardware:\nProbably irrelevant, but it's a Toshiba Satellite netbook with 3 GB\nmemory and 4 GB swap, and an Intel U2700 1.3GHz processor.\n\nsoftware:\nUbuntu Lucid, running Linux 2.6.32, using a NetHack binary compiled\nfrom unmodified (apart from config.h/unixconf.h and makefiles)\nofficial NetHack 3.4.3 sources compiled for Unix-like systems using\ngcc 4.4.1\n\ncomments:\nEven after 6 years, it seems that new bugs, or at least buglike\nbehaviour, is still being discovered in NetHack. Is it intentional\nthat it's possible to avoid going through all the levels in Gehennom\non the \"ascension run\" (bringing the Amulet to the surface)?\n\nThe issue in this case is that it's possible to use the magic portal\nleading to the Wizard of Yendor's Tower to skip several levels on the\nway up. Although the player is incapable of leaving the tower (via any\nmethod that works whilst holding the Amulet other than going back the\nway they came) and thus this would seem to prevent this being used for\na shortcut, it's possible to drop the Amulet, then teleport it out of\nthe tower (with a wand of teleportation). Because the player's no\nlonger holding the Amulet, they can then #sit back on the portal to\nleave the tower, level teleport back to the level the Amulet is on\n(possible because they aren't holding it), and pick it up, this time\n/outside/ the tower. (As an amusing aside, the fact that it's possible\nto level-teleport past the intervening levels on the way down makes it\npossible to not generate the levels in question at all.)\n</pre>\n== C343-425 ==\nReported by ais523\n<pre>\nmailversion:\n1.42\n\nnhversion:\n3.4.3\n\nnhfrom:\nOur 3.4.3 source release, unmodified\n\nhardware:\nProbably irrelevant, but it's a Toshiba Satellite netbook with 3\nGB memory and 4 GB swap, and an Intel U2700 1.3GHz processor.\n\nsoftware:\nUbuntu Lucid, running Linux 2.6.32, using a NetHack binary compiled\nfrom unmodified (apart from config.h/unixconf.h and makefiles)\nofficial NetHack 3.4.3 sources compiled for Unix-like systems using\ngcc 4.4.3\n\ncomments:\nA bug which was just discovered today in my unfinished NetHack fork\nAceHack: a player was riding through the dungeon and stepped on awel\nlandmine, and his warhorse survived the explosion but died from the\nfall. This lead to his dexterity permanently decreasing by one point.\n\nInvestigation on an unmodified version of NetHack shows that the\nbug was inherited from there. The culprit is src/steed.c, line 527\n(in NetHack 3.4.3; it's line 532 in AceHack, and I have no idea\nwhat line it is in NetHack 3.5, even though obviously that would be\nthe most useful line number to give), which sets the wounded legs\nintrinsic and extrinsic values to 0 without removing the dexterity\nadjustment. Although this could be fixed at that point in the code,\nit's probably easier to do it by calling the appropriate functions\ninstead (adjusting for the change in ride state).\n</pre>\n== C343-426 ==\nReported by ais523\n<pre>\nmailversion:\n1.42\n\nnhversion:\n3.4.3\n\nnhfrom:\nOur 3.4.3 source release, unmodified\n\nhardware:\nProbably irrelevant, but it's a Toshiba Satellite netbook with 3\nGB memory and 4 GB swap, and an Intel U2700 1.3GHz processor.\n\nsoftware:\nUbuntu Lucid, running Linux 2.6.32, using a NetHack binary compiled\nfrom unmodified (apart from config.h/unixconf.h and makefiles)\nofficial NetHack 3.4.3 sources compiled for Unix-like systems using\ngcc 4.4.3\n\ncomments:\nIf a level is almost but not entirely full of monsters, then a player\nhiding on the ceiling (after using #monster in any p or t form),\nthen when a monster moves onto the player's square, the player\nfalls to the nearest unoccupied square that the monster didn't come\nfrom, even if it's over the other end of the level. There are no\nrestrictions on this, so it can be used to, say, cross the Plane of\nAir or Astral in one turn, or escape from the Wizard of Yendor's\ntower (or phase into it, but that's less useful because there are\nvarious standard ways of luring him out, which as far as I know\nare intentional; let me know if they're bugs and I'll report them).\n\nThe culprit is a use of enexto() without any sort of check,\non src/mhitu.c line 362 (in NetHack 3.4.3); the check is made\nbefore moving the monster, even though the monster vacates the\nsquare in question, so it won't hit the square that the monster was\noccupying. (Every other use of enexto() in the 3.4.3 source to find a\nlocation to place the player also has a check on the maximum distance\nthat the player can be moved; I obviously can't check to see if more\nbuggy uses have been introduced in a development version.) The most\nobvious fix is simply to make the player and monster swap places,\nalthough that would have issues where long worms were involved.\n</pre>\n== C343-428 ==\nReported by ais523\n<pre>\nmailversion:\n1.42\n\nnhversion:\n3.4.3\n\nnhfrom:\nOur 3.4.3 source release, unmodified\n\nhardware:\nProbably irrelevant, but it's a Toshiba Satellite netbook with 3 GB\nmemory and 4 GB swap, and an Intel U2700 1.3GHz processor.\n\nsoftware:\nUbuntu Lucid, running Linux 2.6.32, using a NetHack binary compiled\nfrom unmodified (apart from config.h/unixconf.h and makefiles)\nofficial NetHack 3.4.3 sources compiled for Unix-like systems using\ngcc 4.4.3\n\ncomments:\nThis bug was found in a collaboration between me and dwangoAC (we're\ntrying to determine the theoretically fastest turncount you can get\nfor a game of NetHack). When a cockatrice nest (the special room)\ngenerates, all the statues in it are always of giant ants. This is\nbecause the code just doesn't initialise the monster type (corpsenm)\nof the statues anywhere; mkroom.c:346 calls mk_tt_object requesting a\nSTATUE, yet mk_tt_object explicitly asks for no initialisation on the\nstatues it creates (mkobj.c:1043). The comment on the line above is\nincorrect, or at least incomplete; it states that it prevents\ngeneration of statue contents, but the lack of initialization also\nprevents the statue's corpsenm being set by mksobj like it normally\nwould be. (In case it matters, and in _tt_-related functions it might,\nmy test case was with a blank high score table.)\n\nIt's kind-of interesting that this wasn't noticed earlier; perhaps\nplayers tend not to pay attention to the statues around cockatrice\nnests because they're too busy worrying about the cockatrices?\n</pre>\n\n== Unnumbered bugs ==\n=== Wielding potions of blindness confers blindness resistance ===\nReported by arxanas, confirmed by ais523 and ishanyx\n\n<pre>\nnhversion:\n3.4.3\n\nnhfrom:\nNot presently known\n\nhardware:\n  Model Name:                 MacBook Pro\n  Model Identifier:           MacBookPro8,2\n  Processor Name:             Intel Core i7\n  Processor Speed:            2.5 GHz\n  Number of Processors:\t      1\n  Total Number of Cores:      4\n  L2 Cache (per Core):        256 KB\n  L3 Cache:                   8 MB\n  Memory:                     8 GB\n  Boot ROM Version:           MBP81.0047.B27\n  SMC Version (system):       1.69f3\n  Serial Number (system):     [redacted]\n  Hardware UUID:              [redacted]\n  Sudden Motion Sensor state: Enabled\n\n\nsoftware:\nUnmodified 3.4.3\n\ncomments:\nMy dearest devteam,\n\nI write to inform you of a most pressing bug in your game. 'Tis present in the source\nrelease (nethack-343-src.tgz, MD5 21479c95990eefe7650df582426457f9), and as such remains\npresent in all compilations of our beloved game. To reproduce the bug, one might partake\nin the following steps:\n\n1. Get a potion of blindness.\n2. Wield it (as your primary or alternate weapon), or ready it in your quiver.\n3. Allow a yellow light to explode at you.\n\nDespite the expected behavior of a yellow light causing you blindness, you remain\nunaffected. This is a most grievous error, as one could simply saunter through the dungeon\nwith nary a thought for the poor yellow lights, who give their lives in vain. Even worse\nis that archons too cannot blind you, for the issue resides in resists_blnd, and archons\ncall this function to gaze.\n\nI know that you are all hard at work making the next version of NetHack for us all, so I\ndeigned to save you some time by providing a possible patch. It took me the better part of\nan hour to devise, as the coding involved is rather in-depth and hard to follow. I hope\nyou incorporate it into the forthcoming new version of NetHack (which I am sure will be\nhere sometime soon), as I would hate to play the game immune to yellow lights.\n\nThanks for all your hard work,\n[redacted]\n\n(attached documents):\npatch.diff:\n\nOnly in nethack-3.4.3-patched/: .DS_Store\ndiff -r nethack-3.4.3/src/mondata.c nethack-3.4.3-patched/src/mondata.c\n126,127c126\n< \t    if ((o->owornmask && objects[o->otyp].oc_oprop == BLINDED) ||\n< \t\t    (o->oartifact && protects(AD_BLND, o)))\n---\n> \t    if (o->oartifact && protects(AD_BLND, o))\n</pre>\n\n=== Turn alternation failure with 24 movement energy ===\nReported by ais523\n\n<pre>\nmailversion:\n1.45\n\nnhversion:\n3.4.3\n\nnhfrom:\nOur 3.4.3 source release, but modified\n\nhardware:\nUsing a qemu virtual machine with QEMU Virtual CPU version 0.12.3,\nwith 614196 kilobyes of disk space, and 56364 kilobyes of\nmemory. (We're using snapshots of the virtual machine for more easily\nreproducible bug testing.)\n\nsoftware:\nUsing a version of 3.4.3 modified to show the remaining movement\npoints of players and monsters, in order to more easily track the bug\ndown. I don't think I modified anything that would affect the bug (and\nbesides, I've already tracked it down from the source). Compiled with\ngcc 4.4.3. The virtual machine is running Linux 2.6.32.\n\ncomments:\nA short and sweet bug report: turn order becomes inconsistent with the\nrest of the game when a player has 24 movement points exactly, and a\nmonster has at least 24. Normally, after the player takes their\naction, monsters will get one action in response, then (if the player\nhas actions left in the turn) the player will get to take another\naction. However, if the player has 24 movement points exactly, their\naction will take them down to 12, at which point the monsters will get\nto take all their remaining actions at once, and the player will get\nthe last action in the turn, rather than alternating turns like usual.\n\nThe dependence on the exact number of movement points is weird and\nseems to be a bug. The offending line is, in 3.4.3, src/allmain.c line\n79 (sorry I can't give you a line number from the bugfixed and\nfeature-added version of NetHack you're presumably working from, but I\nhaven't seen it). \"youmonst.movement > NORMAL_SPEED\" should be\n\"youmonst.movement >= NORMAL_SPEED\".\n\nThanks to dwangoAC, who found this bug, and the testing system he made\nto help me reproduce events in NetHack games under controlled\ncircumstances. Obviously, being able to rewind games and do something\nelse is even worse than savescumming from an ascension perspective,\nbut it helps very much when finding bugs.\n</pre>\n\n=== Grammar and message-related errors ===\nReported by [[User:SGrunt|Grunt]]\n\n<pre>\nmailversion:\n1.45\n\nnhversion:\n3.4.3\n\nnhfrom:\nOur 3.4.3 source release, unmodified\n\nhardware:\nProbably unimportant, but: Intel Core 2 Quad Q8400 @ 2.66 GHz, 4GiB\nmemory, 2TB disk space.\n\nsoftware:\nGentoo Linux; NetHack 3.4.3 built using GCC 4.6.2.\n\ncomments:\nDuring development of a variant, I've come across the following which\nmay constitute bugs in NetHack 3.4.3, as checked against a build\nunmodified except for one configuration option (#define LINUX).\n\n* When reverse-genociding a nearly-extinct monster, sometimes only one\n  monster is generated, but the message is still \"Sent in some <plural\n  of monster>.\", suggesting more than one is generated.  This is best\n  illustrated with Nazgul - generate eight Nazgul and then\n  reverse-genocide them to see \"Sent in some Nazgul[s].\" (depending on\n  if you're looking at this in a build that has fixed C343-8 or not).\n  Under these cases, a more accurate message would be \"Sent in a\n  Nazgul\".\n\n* When attacking a monster carrying a stack of destroyable items with a \n  weapon that destroys them (e.g. scrolls/spellbooks/potions with Fire\n  Brand, potions with Frost Brand), if exactly one item of the stack is\n  destroyed, the object name is plural, but the message indicating that\n  it was destroyed is not (e.g. \"The dwarf king's scrolls labeled ELAM\n  EBOW catches fire and burns!\").  Perhaps the message should use the\n  same logic as when the player is hit by an item-destroying attack,\n  yielding, e.g., \"One of the dwarf king's scrolls labeled ELAM EBOW\n  catches fire and burns!\".\n\n* The death reason given for choking on an artifact is \"choked on {a|an}\n  <object>\", which can be inappropriate when quest artifacts are\n  involved - e.g. \"choked on an Eye of the Aethiopica\", inconsistent\n  with the use of \"[Tt]he\" as a prefix everywhere else they are\n  mentioned.  In the case of quest artifacts, this probably should be\n  \"choked on The Eye of the Aethiopica\", and for other artifacts,\n  perhaps \"choked on Grayswandir\" (skipping the article).  (It could be\n  argued that a further bug is treating the unidentified and identified\n  cases of artifacts differently, e.g. \"choked on a silver saber named\n  Grayswandir\" in some cases as opposed to \"choked on [a] Grayswandir\"\n  in all cases, particularly when working in a build where objects are\n  able to be named after artifacts - \"a silver saber named Grayswandir\"\n  without actually being Grayswandir - as the deaths in those two cases\n  would be indistinguishable.)\n \n* When a player zaps a wand of striking or casts force bolt at a monster\n  that is magic resistant, no \"Boing!\" message is generated; all other\n  cases (player against self, monster against player, and monster\n  against monster) generate this message, which is inconsistent.\n\nI hope that pointing out these bits of behaviour is useful to all of\nyou.\n</pre>\n\n=== Worn monster equipment can be picked up while engulfed ===\nReported by [[User:bcode|bcode]]\n\n<pre>\nThe ID number for this message is '#H2816'\n\nmailversion:\n1.45\n\nnhversion:\n3.4.3\n\nnhfrom:\nOur 3.4.3 source release, unmodified\n\nhardware:\nIt's probably unimportant, but I've tested this on a machine with a\n1.5 GHz Intel Pentium 4 processor and 896420 kB of memory.\n\nsoftware:\nUnmodified (except for config.h/unixconf.h and Makefiles) NetHack 3.4.3,\nbuilt from source with GCC 4.6.3 running on a Linux 2.6 system.\n\ncomments:\nA player can pick up worn equipment from inside a monster while\nengulfed by it. The object still has its owornmask set, so it will be\ndisplayed as \"(being worn)\" and cannot be dropped; however, the player\nis not actually wearing it, so it cannot be removed. Trying to put it\non, on the other hand, gives a message about it being already worn.\n\nTrying to remove the object (by selecting it when asked what to remove)\nwill output an impossible() message:\n\n| select_off: a blessed amulet of life saving (being worn)???\n| Program in disorder - perhaps you'd better #quit.\n\nI think it is easiest to reproduce this in wizard mode; create a\nsoldier and get him to pick up and put on an amulet of life saving,\nthen enable #monpolycontrol and polymorph him into an engulfer, for\nexample a fog cloud. Get engulfed by the fog cloud and pick up the\n(worn) amulet of life saving inside.\n\nAs a workaround, saving and loading the game seems to make the amulet\nremovable again.\n</pre>\n\n=== Jumping into portals can print messages out of order or incorrectly pick up items ===\nReported by [[User:ais523|ais523]]\n\n<pre>\nmailversion:\n1.45\n\nnhversion:\n(please select version)\n\nnhfrom:\nOur 3.4.3 source release, but modified\n\nhardware:\nUsing a qemu virtual machine with QEMU Virtual CPU version\n0.12.3, with 614196 kilobyes of disk space, and 56364 kilobyes\nof memory. (We're using snapshots of the virtual machine for more\neasily reproducible bug testing.)\n\nsoftware:\nUsing a version of 3.4.3 modified to show the remaining movement\npoints of players and monsters, in order to more easily track\nbugs in general down. I don't think I modified anything that would\naffect the bug (and besides, I've already tracked it down from the\nsource). Compiled with gcc 4.4.3. The virtual machine is running\nLinux 2.6.32.\n\ncomments:\nFirst, the bug (found today): if a player attempts to jump into or\nover a magic portal (I tested with the jumping spell, but suspect\nit would work the same for #jump), and there's an item on the square\nthat the player passes over immediately before reaching the portal,\nthen the game prints the messages for the portal (while showing\nthe player standing on the square before), then the messages for\nthe item, then autopicksup the item (if autopickup is on and set to\npick up that sort of item), and then the player actually moves to the\nportal destination. Expected behaviour is for the game to not mention\nor pick up the item (as would happen if no portal is involved).\n\nI'd again like to encourage the devteam to cooperate more with\nthe NetHack development community as a whole on the whole on\nbugfixes. Many bugs appear to be already known but not on the\ndevteam, and for many other bugs, the descriptions on the website\nare insufficient for us to work out what the bug is about, or find or\nreproduce it ourselves. (Imagine if I'd reported this bug simply as\n\"Messages sometimes appear out of order when jumping\"!) Incidentally,\nthe bug that's been confusing the community the most is SC343-18;\nfrom its description, it seems to be connected to C343-231, but we\nhave no idea what causes SC343-18 or even what the bug description\nmeans. Is there some way we can get more detailed descriptions of\nofficial bugs, like the ones we send to you when we find them?\n\nProbably the gold standard for understanding what's causing a bug\nis an explanation based on the code; the diff that fixes the bug\nis the method of explaining this that causes the least extra work,\nbut I understand that the DevTeam badly wants to avoid releasing\nany code until it's ready (even though this means that nobody else\ncan help them get it ready on time; and it's also meant that line\nnumbers in your development version have likely drifted away from\nline numbers in, say, community efforts to produce fixed versions of\nNetHack, such as NetHack 4, which would not even be as necessary if\nthe bug fixes were public). In the particular case, the code-based\nreason for the bug is that hurtle_step(), which is responsible for\ndetermining whether squares are passable when jumping or hurtling,\ncalls the code for handling a magic portal when the user reaches\nit and then returns FALSE, meaning that walk_path() treats the\nportal like a wall. Because the portal code just prints messages\nand then schedules a goto, you get the messages first, then the\ncharacter stops (and thus picks up items, if necessary), and then\nthe scheduled goto happens. I don't currently have a working fix\nfor the bug, although the most obvious methods of fixing it to\nme would involve making the jump/hurtle code check for traps when\nleaving or landing on squares, as opposed to before entering them.\n\n--\nAlex Smith\nNetHack 4 maintainer\n</pre>\n\n=== Alternative tilesets can spoil the identity of bags, gems, instruments, fake Amulets ===\nReported by [[User:ais523|ais523]]\n\n<pre>\n mailversion:\n1.45\n\nnhversion:\n3.4.3\n\nnhfrom:\nOur 3.4.3 source release, unmodified\n\nhardware:\nProbably irrelevant, but it's a Toshiba Satellite netbook with 3 GB memory and 4 GB swap, and an Intel U2700 1.3GHz processor.\n\nsoftware:\nUbuntu 13.04 (running Linux 3.8.0-31-generic), using gcc (Ubuntu/Linaro 4.7.3-1ubuntu1) 4.7.3. I tested two X11 tiles ports, and the bug appears on both:\n\n- The official source release, compiled according to the build instructions (i.e. nothing was modified but config/unixconf.h, and Makefiles);\n\n- The Ubuntu-packaged version of X11 NetHack (which is installed using secure permissions, i.e. I can't tamper with its files without root access (or access to the games group), and I didn't use it while testing for this bug).\n\nI suspect the bug also exists on other tiles ports, but I didn't check.\n\ncomments:\nI found a reasonably major (spoiler?) bug in the NetHack 3.4.3 code during the process of making a tiles port for NetHack 4. (The bug had already been fixed in NetHack 4 via NitroHack; I don't have access to the development source of 3.4.4 or 3.5.0 to check if it's fixed there or not, and as such I can't send a patch because I don't have access to the codebase it's meant to patch against, and thus it wouldn't apply.)\n\nThe issue is to do with custom user tilesets. In the X11 port of NetHack, the game loads the tileset from a path specified in NetHack.ad. Although this file is read-only and stored in the nethackdir, it's possible to override the X search path in order to use an alternative NetHack.ad, and thus an alternative tileset. This seems like a useful (possibly intended) feature, and not a bug.\n\nHowever, the code seem to implicitly assume that objects with the same unidentified description also have the same tiles. Simply changing the tileset to give different tiles where previously the tiles were the same effectively gives objects unique unidentified appearances, meaning that, say, bags, loadstones, and fake Amulets can be identified entirely via the tile you give them.\n\nHere's an example of this exploit being used on the X11 tiles version of NetHack (both \"prefix/games/nethack\", produced by compiling the 3.4.3 official source release, and \"xnethack\", the Ubuntu-packaged version):\n\nScript started on Thu 26 Sep 2013 02:37:59 BST\nais523@desert:/tmp$ ls distinct-bags/\ndistinct-bags.x11tiles  NetHack.ad\nais523@desert:/tmp$ diff -u prefix/games/lib/nethackdir/NetHack.ad distinct-bags/NetHack.ad\n--- prefix/games/lib/nethackdir/NetHack.ad 2013-09-26 02:23:47.254875282 +0100\n+++ distinct-bags/NetHack.ad 2013-09-26 02:33:24.130104957 +0100\n@@ -19,7 +19,7 @@\n ! the custom format - to enlarge an XPM file, use processing tools\n ! such as XV or preferably PBMplus.\n !\n-!NetHack.tile_file: x11tiles\n+NetHack.tile_file: /tmp/distinct-bags/distinct-bags.x11tiles\n !NetHack.double_tile_size: True\n !\n ! The annotation of pets.\nais523@desert:/tmp$ XUSERFILESEARCHPATH=/tmp/distinct-bags/NetHack.ad prefix/games/nethack -D\nais523@desert:/tmp$ XUSERFILESEARCHPATH=/tmp/distinct-bags/NetHack.ad xnethack\n\nYou didn't beat your previous score of 4 points.\n\n\n\nais523@desert:/tmp$ exit\n\nScript done on Thu 26 Sep 2013 02:42:37 BST\n\n/tmp/distinct-bags/distinct-bags.x11tiles is a copy of x11tiles (which regular users have read access to), with numbers added on the bag tiles to make them distinct; likewise, /tmp/distinct-bags/NetHack.ad is a copy of NetHack.ad with the tileset changed.\n\nThe game on the official NetHack source (which was in wizard mode for testing), I wished for a sack and a bag of holding, then threw both onto the ground. Here's the screenshot: <http://nethackwiki.com/wiki/File:Tiles-bugreport1-image1.png>. As you can see from the message buffer, the two bags are both indistinguishable to the character (I farlooked both of them), due to being unidentified. However, the difference in the bags is clearly visible to the player; the sack (tile 194) shows a \"1\", and the bag of holding (tile 196) shows a \"3\". This would allow a player to instantly recognise which bags were holding.\n\nIn the securely installed game (which I played to prove that this exploit does not require the ability to modify game files), I started a Rogue, and threw my starting sack: <http://nethackwiki.com/wiki/File:Tiles-bugreport1-image2.png> In this case, the character knew its identity; but the point is to demonstrate that the exploit-containing tileset still works (you can see the \"1\" I drew on the sack).\n\nThis exploit is more major than just bags; in particular, fake and real Amulets of Yendor have distinct tiles, as do loadstones.\n\n\nOther ports and variants of NetHack are likely to have a similar issue, if they use the same or similar tiles code to vanilla. (Interestingly, Slash'EM's default tileset actually has subtly different tiles for the various bags out of the box; I originally noticed this bug because NetHack 4's tileset is based on Slash'EM's, and although it's harder to reproduce in NetHack 3.4.3, it's still possible.) In particular, I strongly suspect that this bug exists on the widely-played Windows tiles version (which also has customizable tilesets).\n</pre>\n\n\n=== Crash while loading when riding and wielding Sting ===\nReported by [[User:Bhaak|Patric Mueller]]\n\n<pre>\nBelow is what you submitted to The_DevTeam on Wednesday, October 16, 2013 at 03:47:59\n\nThe ID number for this message is '#H3031'\n\nmailversion:\n1.45\n\nnhversion:\n3.4.3\n\nnhfrom:\nOur 3.4.3 source release, unmodified\n\nhardware:\n64 bit intel machine\n\nsoftware:\n- Linux version 3.10.7-gentoo (root@localhost) (gcc version 4.6.3 (Gentoo 4.6.3 p1.13, pie-0.5.2) ) #3 SMP Sat Aug 17 14:48:51 CEST 2013\n- Windows 7 Enterprise N Service Pack 1\n\ncomments:\nHi DevTeam,\n\nA player on UnNetHack's public server un.nethack.nu experienced a crash while\nhis game was loading while riding and wielding a SPFX_WARN conferring artifact.\n\nThis has been traced back to an issue that is also present in vanilla NetHack.\nAlthough there it is less likely to happen as Sting is the only SPFX_WARN\nweapon and most players don't seem to consider Sting to be a useful weapon.\n\nFor reproducing start up a knight, ride your pet, wish and wield Sting, save\nthe game and then try to load again will crash the game. I could reproduce this\non a 64 bit Linux and 64 bit Windows (on Windows, it didn't crash every time\nbut on Linux it did always).\n\nIt's possible that this bug is already fixed with C343-39 \"Restoring a game\nwhere the character is wielding Sting may result in temporary display errors\nduring the restore process.\" but from the description it's not obvious how to\nreproduce C343-39.\n\nThe problematic code tries to activate the artifact properties which will\nresult in a call to display_self() which will try to access u.usteed, even\nthough the program hasn't properly restored that structure at that point yet.\n\nFor fixing it I moved the part where the code calls setworn on all items in\nyour inventory out of restgamestate() to the end of dorecover(). I couldn't\nnotice any problems with that and at this later time, u.usteed is guarantee to\nbe restored.\nhttp://bhaak.net/nethack/nh343-fix-crash-riding-sting.diff\n\nThe stacktrace of the crash is this:\nCore was generated by `/opt/nethack-tmp/games/lib/nethackdir/nethack -D 4'.\nProgram terminated with signal 11, Segmentation fault.\n#0  0x0000000000431658 in newsym (x=66, y=4) at display.c:717\n717                 if (senseself()) display_self();\n(gdb) bt\n#0  0x0000000000431658 in newsym (x=66, y=4) at display.c:717\n#1  0x00000000004328b3 in see_monsters () at display.c:1071\n#2  0x000000000040ff76 in set_artifact_intrinsic (otmp=0x17243a0, on=1 '\\001', wp_mask=256) at artifact.c:451\n#3  0x0000000000571ea3 in setworn (obj=0x17243a0, mask=256) at worn.c:98\n#4  0x000000000051584f in restgamestate (fd=3, stuckid=0x7fff44f490c0, steedid=0x7fff44f490bc) at restore.c:413\n#5  0x0000000000515b65 in dorecover (fd=3) at restore.c:558\n#6  0x00000000005844bc in main (argc=3, argv=0x7fff44f49228) at ../sys/unix/unixmain.c:258\n\nBye\nPatric\n\n\n</pre>\n\n=== Can't wish for rusty rustproof  ===\nReported by [[User:Bhaak|Patric Mueller]]\n\n<pre>\nBelow is what you submitted to The_DevTeam on Thursday, May 19, 2011 at 08:09:54\n\nThe ID number for this message is '#H2285'\n\nmailversion:\n1.42\n\nnhversion:\n3.4.3\n\nnhfrom:\nOur 3.4.3 source release, unmodified\n\ncomments:\nHi DevTeam,\n\nWishing for a \"rusty rustproof long sword\" will only yield a \"rusty long sword\".\n\nBecause of a restriction in objnam.c line 2641:\n\"if (erodeproof && !eroded && !eroded2)\"\n\nThis seems to have been an intentional change for NetHack 3.3.0 as fixes33.0\nsays \"make sure non-erodable objects aren't eroded or erodeproof (could happen\nby wishing or object polymorph)\".\n\nAlthough it is not clear to me why one shouldn't allow a user to wish for such\na thing or why the erosion gets set instead of foo-proofness.\n\nBye\nPatric\n</pre>\n\n=== Odd message when player swallowing monster dies by wrath of god ===\nReported by [[User:Bhaak|Patric Mueller]]\n\n<pre>\nBelow is what you submitted to The_DevTeam on Thursday, December 9, 2010 at 06:59:37\n\nThe ID number for this message is '#H2200'\n\nSubject: Odd message when player swallowing monster dies by wrath of god\n\nmailversion:\n1.41\n\nnhversion:\n3.4.3\n\nnhfrom:\nOur 3.4.3 source release, unmodified\n\ncomments:\nHi DevTeam!\n\nIf the player manages to be swallowed by an electricity-resisting monster while\ndrawing the wrath of a god, the swallowing monster will be hit by a wide-angle\ndisintegration beam and still fry to a crisp (pray.c:495)\n\nI'm no native speaker but that does sound odd to me as IMO \"fry\" implies heat.\nIt doesn't look like a proper message for a disintegration death.\n\nAlthough I'm not even sure how to properly trigger that message in vanilla. I\nhad to give Juiblex MR_ELEC to test it.\n\nBTW, the message of bug C343-94 has a typo \"re-anmiated\".\n\nBye\nPatric\n</pre>\n\n=== Crash when picking up an unpaid object between two shops ===\nReported by [[User:Bhaak|Patric Mueller]]\n\n<pre>\nBelow is what you submitted to The_DevTeam on Tuesday, June 29, 2010 at 08:37:20\n\nThe ID number for this message is '#H2143'\n\nmailversion:\n1.41\n\nnhversion:\n3.4.3\n\nnhfrom:\nOur 3.4.3 source release, unmodified\n\nhardware:\n\nsoftware:\nGentoo Linux with kernel version 2.6.24.7\ngcc-Version 4.3.4 (Gentoo 4.3.4 p1.0, pie-10.1.5)\nglibc 2.10.1\n\nHi DevTeam!\n\nFollow this procedure to reliably trigger a crash when picking up an unpaid\nobject in a shop adjacent to another shop:\n\nYou need two populated shops with sharing walls (e.g. minetn-7 the hardware\nstore and Izchak's store).\n\nEnter part of the wall that is shared by both shops.\n\nYou are greeted by Izchak but not by the other shopkeeper.\n\nEnter the hardware store and pick up any unpaid object.\n\nA crash results as bp is 0:\n#0  0x081691ae in add_one_tobill (obj=0x823b778, dummy=0 '\\0') at shk.c:2107\n2107            bp->bo_id = obj->o_id;\n\n\nIt's important that this procedure is not interrupted by a save and reload and\nthat the hardware store hasn't been entered before. Otherwise the crash doesn't\nhappen.\n\n\nu_entered_shop() isn't called for the hardware store and that's why the\nhardware store shopkeeper's bill_p (from the struct eshk) is not correctly\ninitialized.\n\nInitializing bill_p in shkinit() from shknam.c fixes that:\ndiff -uwr nethack-3.4.3/src/shknam.c shk-crash/src/shknam.c\n--- nethack-3.4.3/src/shknam.c  2003-12-08 00:39:13.000000000 +0100\n+++ shk-crash/src/shknam.c      2010-06-29 14:30:34.000000000 +0200\n@@ -408,6 +408,7 @@\n        ESHK(shk)->visitct = 0;\n        ESHK(shk)->following = 0;\n        ESHK(shk)->billct = 0;\n+       ESHK(shk)->bill_p = &ESHK(shk)->bill[0];\n #ifndef GOLDOBJ\n        shk->mgold = 1000L + 30L*(long)rnd(100);        /* initial capital */\n #else\n</pre>\n\n=== Unnecessary head shaking ===\nReported by [[User:Bhaak|Patric Mueller]]\n\n<pre>\nBelow is what you submitted to The_DevTeam on Thursday, June 10, 2010 at 09:31:51\n\nThe ID number for this message is '#H2134'\n\nmailversion:\n1.41\n\nnhversion:\n3.4.3\n\nnhfrom:\nOur 3.4.3 source release, unmodified\n\ncomments:\nHi DevTeam!\n\nWhen the player dies and a shop is on the level, sometimes the message\n\"$shopkeeper looks at your corpse, shakes her head, and sighs.\" appears when it\nshouldn't (and probably doesn't appear when it should but I didn't check for\nthat).\n\nYou can easily reproduce this bug if you stand in the top right corner of\nminetn-5 and die there.\n\nLike the player did in this game:\nhttp://un.nethack.nu/users/ctaboir/dumps/ctaboir.last.txt.html\n\nThe shopkeeper of the general store will come and look at your corpse even\nthough he shouldn't.\n\nThis is due to a misplaced ')':\n\ndiff -uwr nethack-linux/src/shk.c nethack-shk/src/shk.c\n--- nethack-linux/src/shk.c     2008-05-26 19:47:02.000000000 +0200\n+++ nethack-shk/src/shk.c       2010-06-10 15:21:57.000000000 +0200\n@@ -1650,7 +1650,7 @@\n        /* the simplifying principle is that first-come */\n        /* already took everything you had.             */\n        if (numsk > 1) {\n-           if (cansee(shkp->mx, shkp->my && croaked))\n+           if (cansee(shkp->mx, shkp->my) && croaked)\n                pline(\"%s %slooks at your corpse%s and %s.\",\n                      Monnam(shkp),\n                      (!shkp->mcanmove || shkp->msleeping) ? \"wakes up, \" : \"\",\n\n\nBye, Happy Hacking!\n</pre>\n\n=== Standout inconsistency ===\nReported by [[User:Bhaak|Patric Mueller]]\n\n<pre>\nBelow is what you submitted to The_DevTeam on Wednesday, March 10, 2010 at 11:56:33\n\nThe ID number for this message is '#H2095'\n\nmailversion:\n1.41\n\nnhversion:\n3.4.3\n\nnhfrom:\nOur 3.4.3 source release, unmodified\n\ncomments:\nHi devteam,\n\nThe option \"standout\" isn't correct documented in the Guidebook.\n\nIt states there:\n  standout\n    Boldface monsters and ``--More--'' (default off).\n\nBut in the current codebase standout is only used for highlighting the end of\npager windows.\n\nLooking at code from 3.0.x it probably was true at that time, but no longer\nnowadays.\n\nAlso, this option doesn't do much and as the standout terminal sequence is\nusually shown as inverse on modern terminals, wouldn't it be best to integrate\nit into use_inverse?\n\nBye\nPatric\n</pre>\n\n=== No attacks when swallowed by tame monster ===\nReported by [[User:Bhaak|Patric Mueller]]\n\n<pre>\nBelow is what you submitted to The_DevTeam on Thursday, February 11, 2010 at 03:42:45\n\nThe ID number for this message is '#H2084'\n\nmailversion:\n1.41\n\nnhversion:\n3.4.3\n\nnhfrom:\nOur 3.4.3 source release, unmodified\n\nsoftware:\n\ncomments:\nHi DevTeam!\n\nkerio92 from #nethack on freenode told me about some interesting interaction\nbetween tame monsters with engulfing attack and ring of conflicts.\n\nWhile wearing a ring of conflict the player can get engulfed by a tame monster.\n\nIf the player takes off the ring of conflict inside the tame monster, the\nplayer can stay indefinitely long inside the monster and is *not subject to any\nattacks* (no digestion from purple worms, no elemental damages from vortices,\netc.).\n\nAs those attacks are more of a passive nature (I don't think a tame purple worm\ncan stop his stomach from digesting) I think they should also work with tame\nmonsters.\n\nThis patch should fix that:\n--- nethack-linux/src/monmove.c 2008-05-26 19:47:02.000000000 +0200\n+++ nethack-tame-engulfing/src/monmove.c        2010-02-11 09:30:16.000000000 +0100\n@@ -548,6 +548,8 @@\n /*     Now, attack the player if possible - one attack set per monst   */\n\n         if (!mtmp->mpeaceful ||\n +           /* Attacks work even when engulfed by tame monsters */\n +           (u.uswallow && mtmp == u.ustuck) ||\n             (Conflict && !resist(mtmp, RING_CLASS, 0, 0))) {\n                 if(inrange && !noattacks(mdat) && u.uhp > 0 && !scared && tmp != 3)\n                 if(mattacku(mtmp)) return(1); /* monster died (e.g. exploded) */\n</pre>\n\n=== \"You are protected\" from a +0 ring of protection ===\nReported by [[User:Bhaak|Patric Mueller]]\n\n<pre>\nBelow is what you submitted to The_DevTeam on Thursday, January 14, 2010 at 09:08:25\n\nThe ID number for this message is '#H2076'\n\nmailversion:\n1.41\n\nnhversion:\n3.4.3\n\nnhfrom:\nOur 3.4.3 source release, unmodified\n\ncomments:\nHi DevTeam!\n\nIf one is wearing a +0 ring of protection one gets the \"You are protected.\"\nmessage during enlightment.\n\nIn general, if intrinsic and extrinsic protection neutralize each other, you\nget this message.\n\nThe code in cmd.c:1016 only makes a distinction between values lesser than 0\nand the rest. No special treatment of a value of 0.\n\nIs this a side effect for getting this message while wearing a cloak of\nprotection?\n\nBye\nPatric\n</pre>\n\n=== Randomly placed doors not properly placed ===\nReported by [[User:Bhaak|Patric Mueller]]\n\n<pre>\nBelow is what you submitted to The_DevTeam on Wednesday, December 23, 2009 at 03:36:29\n\nThe ID number for this message is '#H2063'\n\nmailversion:\n1.41\n\nnhversion:\n3.4.3\n\nnhfrom:\nOur 3.4.3 source release, but modified\n\nhardware:\nvendor_id       : GenuineIntel\ncpu family      : 15\nmodel           : 4\nmodel name      : Intel(R) Pentium(R) 4 CPU 3.20GHz\n\nsoftware:\nGentoo Linux with kernel version 2.6.24.7\ngcc-Version 4.3.2 (Gentoo 4.3.2-r3 p1.6, pie-10.1.5)\nglibc 2.10.1\n\ncomments:\nHi DevTeam!\n\nI've been having a \"rn2(0) attempted\" bug in UnNetHack for some time and now\nfound the reason for it. It's not a off-by-one bug that gets triggered with the\nroom levels of vanilla, but it prevents random placed doors to get placed at\nevery possible place.\n\nIf I just add a level like the following to the vanilla code, it triggers a\n\"Floating exception\" in vanilla by calling rn2(0) (I've replaced bigrm-1 for\neasier debugging):\n\nLEVEL: \"bigrm-1\"\nROOM: \"ordinary\" , lit, random, random, (76,17)\nNAME: \"room\"\n\nSUBROOM: \"ordinary\", lit, (60,12), (6,1), \"room\"\nDOOR: false, closed, west, random\n\n\nThe problem is that the height of the room is only 1 tile and a door should get\nplaced randomly on such a short wall.\n\nIn line 623 of src/sp_lev.c this results in a difference of 0:\ndpos = rn2((dwall == W_WEST || dwall == W_EAST) ?\n  (broom->hy - broom->ly) : (broom->hx - broom->lx));\n\nI'm not sure if this bug is the same as S343-2 (\"1x1 room in special level can\ntrigger panic due to off by one error (does not affect official room set)\").\n\nAlthough in the vanilla code there are no rooms that small, randomly placed\ndoors never gets placed at the last possible place because of this bug.\n\nHappy holidays!\nPatric\n</pre>\n\n=== Robbing rogue not getting +1 alignment ===\nReported by [[User:Bhaak|Patric Mueller]]\n\n<pre>\nBelow is what you submitted to The_DevTeam on Tuesday, August 11, 2009 at 07:39:18\n\nThe ID number for this message is '#H2003'\n\nmailversion:\n1.41\n\nnhversion:\n3.4.3\n\nnhfrom:\nOur 3.4.3 source release, unmodified\n\nsoftware:\n\ncomments:\nHi DevTeam,\n\nWhen robbing a shop as a lawful character one gets a -1 alignment penalty.\n\nA chaotic character gets a +1 alignment bonus but not if it is a Rogue.\n\nDoes that make sense?\n\nThe relevant source code is in shk.c in rob_shop() at line 494 (at line 984 in\nmake_happy_shk() is the reversal of the alignment change):\nif (!Role_if(PM_ROGUE)) /* stealing is unlawful */\n  adjalign(-sgn(u.ualign.type));\n\nBye\nPatric\n</pre>\n\n=== Drawbridge killed gas spore not exploding ===\nReported by [[User:Bhaak|Patric Mueller]]\n\n<pre>\nBelow is what you submitted to The_DevTeam on Tuesday, April 7, 2009 at 06:52:37\n\nThe ID number for this message is '#H1843'\n\nmailversion:\n1.41\n\nnhversion:\n3.4.3\n\nnhfrom:\nOur 3.4.3 source release, unmodified\n\ncomments:\nHi there!\n\nKilling a gas spore with a falling portcullis doesn't cause it to explode.\n\nThe gas spore explosion part is handled in corpse_chance() in mon.c.\n\ne_died() in dbridge.c calls xkilled with the option to not generate corpses and\ntherefore corpse_chance isn't called in this case.\n\nBye\nPatric\n</pre>\n\n=== Removing [[red dragon scale mail]] in lava causes no bad effects ===\n<pre>\nThe ID number for this message is '#H3032'\n\nmailversion:\n1.45\n\nnhversion:\n3.4.3\n\nnhfrom:\nOur 3.4.3 source release, unmodified\n\nhardware:\nProbably irrelevant, but it's a Toshiba Satellite netbook with 3\nGB memory and 4 GB swap, and an Intel U2700 1.3GHz processor.\n\nsoftware:\nUbuntu raring, running Linux 3.8.0, compiled from unmodified\n(apart from config.h/unixconf.h and makefiles) official NetHack\n3.4.3 sources compiled for Unix-like systems using gcc 4.4.3\n\ncomments:\nIf the player's only source of fire resistance is red dragon scale\nmail, the player enters lava while wearing the RDSM, and then removes\nit, the lava has the same effect as it would on a fire-resistant\nplayer, even though the player no longer has any fire resistance\nsources. (The player can even sit on the lava in that state with no\nbad effects other than a few points of damage.) I'm not 100% sure on\nthe cause, but it probably involves a failure to call spoteffects()\nsomewhere where it needs to be called.\n\nI've been trying to determine whether this is on the bug list\nalready, but the only bug that potentially seems to fit is\nSC343-18. Is this that bug, or something else?\n</pre>\n\n=== Crash when teleporting onto a sink while equipping levitation boots ===\n<pre>\nThe ID number for this message is '#H3033'\n\nmailversion:\n1.45\n\nnhversion:\n3.4.3\n\nnhfrom:\nOur 3.4.3 source release, unmodified\n\nhardware:\nProbably irrelevant, but it's a Toshiba Satellite netbook with 3\nGB memory and 4 GB swap, and an Intel U2700 1.3GHz processor.\n\nsoftware:\nUbuntu raring, running Linux 3.8.0, compiled from unmodified\n(apart from config.h/unixconf.h and makefiles) official NetHack\n3.4.3 sources compiled for Unix-like systems using gcc 4.4.3\n\ncomments:\nIf a player is putting on levitation boots, then during the\nhelplessness period (negative multi) afterwards, gets teleported\nonto a sink (this is easy to test via means of a quantum mechanic,\nteleport control, and no magic cancellation), the game crashes.\n\nBasically what happens is that Boots_on() (which is called at the\nend of the helplessness period) looks at uarmf in order to determine\nwhich item to wear, with no NULL check. If the boots get unequipped\nwhile wearing them (e.g. via a sink), uarmf is NULL by the time\nBoots_on() runs, meaning that the game segfaults. The easiest fix\nis to add a null check to the *_on() functions, that causes them to\nnot run if the armour is no longer equipped by the time its effects\nwould start applying.\n\n(The \"most correct\" fix would be to use an occupation callback,\ncombined with tracking the item being equipped the same way that,\nsay, the 'book' global variable does for spellbooks. This would be\nsymmetrical with A, rather than symmetrical with T. I'm currently\nin the process of rewriting NetHack 4 to do this, but the patch is\nvery large and would not easily be backported to NetHack 3.4.3.)\n</pre>\n\n=== Erroneously rustproof splint mail for samurai ===\n<pre>\nThe ID number for this message is '#H3034'\n\nmailversion:\n1.45\n\nnhversion:\n3.4.3\n\nnhfrom:\nOur 3.4.3 source release, unmodified\n\nsoftware:\nNetHack 3.4.3, found in the source release.\n\ncomments:\nAs a samurai, splint mails generated via mksobj()\non the first turn of the game or in the quest\nbranch will always begin rustproof. This is\nsupposed to \"simulate lacquered armor\" (mkobj.c,\nline 564); however, this applies even to\nsplint mail you e.g. wished for. As this allows\nyou to receive rusty rustproof splint mail from\na wish, I think this is not intended, given that\nthis specific result isn't normally allowed\n(objnam.c, line 2641 only proceeds to set the\nerodeproof flag if you didn't also wish for the\nobject as eroded).\n\nAdditionally, you will know about the rustproof\nstate of the object; this is also inconsistent\nwith the normal outcome of wishing for an\nerodeproof object.\n</pre>\n\n===<tt>panic()</tt> when trying to drop destroyed object===\n<pre>\nThe ID number for this message is '#H3039'\n\nmailversion:\n1.45\n\nnhversion:\n3.4.3\n\nnhfrom:\nOur 3.4.3 source release, unmodified\n\nsoftware:\nNetHack 3.4.3, present in the source release\n(tested on multiple systems)\n\ncomments:\nWhen using the 'D' command to drop multiple items at once, the game will\npanic if it tries to drop an item that has been destroyed in between\n(\"extract_nobj: object lost\"). Mostly, this shouldn't happen. However,\nif one of the items is a lit potion of oil and you are levitating,\nit will explode when it hits the floor, possibly destroying other items\nyou were going to drop.\n\nThe problem seems to be that the code assumes the items selected to be\ndropped still exist when they are to be actually dropped, i.e., that\ndropping items will not affect other items. As shown above,\nthat isn't the case.\n</pre>\n\n===Flesh golems are healed for too much from shock attacks===\n<pre>\nFlesh golems are supposed to only be healed for 1/6 the shock damage that\nwould occur if non-resistant, but is healed the full amount instead due to\na typo\n</pre>\n\n===Long worms and Elbereth===\n<pre>\nIf a long worm is scared by Elbereth but can't get anywhere, it will hit you,\nbypassing Elbereth. This attack pattern will use the otherwise unused\nwormhitu() codepath, leading to each tail segment next to you also hitting\nyou for damage.\n</pre>\n\n===Monster branch stair usage bug===\n<pre>\nMonsters never use branch stairs to escape, due to a bug in find_defensive\nthat assumes that branch stairs are not considered stairs.\n</pre>\n\n===Intrinsic disintegration resistance shields the inventory===\n<pre>\nIntrinsic disintegration resistance protects against armor damage -- you may\nor may not consider this a bug, but scshunt [a DevTeam member] changed the\nbehaviour of this in NetHack4 last year\n</pre>\n\n===nasty() is broken===\n<pre>\nnasty() is broken in several ways: replacement monsters can be asleep/non-hostile,\nthe \"retry if chosen monster isn't aligned with caster\" instead makes the summoning\ncreate several monsters (capped at 20) until one neutral or coaligned summon is\ncreated (where it bails out to the next summon), creating potentially up to 200\nmonsters in theory (this is however incredibly unlikely due to the selection of\nnasties).\n</pre>\n\n===cast protection gives too little AC===\n<pre>\nA typo for the \"AC without the spell\" value results in the protection spell\ngiving less AC than it's supposed to.\n</pre>\n\n===Scrolls of light when blind===\n<pre>\nScrolls/spells of light is blocked if you're engulfed, which makes sense.\nThis block is lifted if you're blind, which makes less sense.\n</pre>\n{{noversion}}\n[[Category:Bugs]]"}
{"title":"Des-file format","url":"https://nethackwiki.com/wiki/Des-file_format","type":"markdown","data":"- - *For the corresponding feature in [NetHack 3.4.3](/wiki/NetHack_3.4.3 \"NetHack 3.4.3\") and variants based on it, see [Des-file format (NetHack 3.4.3)](/wiki/Des-file_format_\\(NetHack_3.4.3\\) \"Des-file format (NetHack 3.4.3)\").*\n  - *For the corresponding feature in [UnNetHack](/wiki/UnNetHack \"UnNetHack\"), see [Des-file format (UnNetHack)](/wiki/Des-file_format_\\(UnNetHack\\) \"Des-file format (UnNetHack)\").*\n\nThe **des-file format** is the language used to describe the [special levels](/wiki/Special_level \"Special level\") for NetHack. The [lev\\_comp](/wiki/Lev_comp \"Lev comp\") utility compiles `.des` files into `.lev` files, and then the NetHack executable loads `.lev` files to run the game.[\\[1\\]](#cite_note-1)[\\[2\\]](#cite_note-2)[\\[3\\]](#cite_note-3)[\\[4\\]](#cite_note-4)[\\[5\\]](#cite_note-5)\n\nThe [dungeon.def](/wiki/Dungeon.def_format \"Dungeon.def format\") file ties together all the `.des` files to describe the entire dungeon.\n\ndes-file format is not a *real* programming language: there is no flow control, and the order in which different NetHack features are created is fixed.\n\n*The following information pertains to an upcoming version ([NetHack 3.7.0](/wiki/NetHack_3.7.0 \"NetHack 3.7.0\")). If this version is now released, please verify that it is still accurate, then update the page to incorporate this information.*\n\nlev\\_comp and .des files are gone, replaced by Lua files to define special levels.\n\n[ ]\n\n## Contents\n\n- [1 Language syntax](#Language_syntax)\n\n  - [1.1 Comments](#Comments)\n  - [1.2 Types](#Types)\n  - [1.3 Variables](#Variables)\n  - [1.4 Shorthand for conditionals](#Shorthand_for_conditionals)\n  - [1.5 Terrain selections](#Terrain_selections)\n\n- [2 MAZE-type levels](#MAZE-type_levels)\n\n  - [2.1 MAZE](#MAZE)\n  - [2.2 FLAGS](#FLAGS)\n  - [2.3 INIT\\_MAP](#INIT_MAP)\n  - [2.4 MESSAGE](#MESSAGE)\n  - [2.5 NOMAP](#NOMAP)\n  - [2.6 GEOMETRY](#GEOMETRY)\n  - [2.7 MAP](#MAP)\n  - [2.8 NON\\_DIGGABLE](#NON_DIGGABLE)\n  - [2.9 NON\\_PASSWALL](#NON_PASSWALL)\n  - [2.10 RANDOM\\_PLACES](#RANDOM_PLACES)\n  - [2.11 RANDOM\\_MONSTERS](#RANDOM_MONSTERS)\n  - [2.12 RANDOM\\_OBJECTS](#RANDOM_OBJECTS)\n  - [2.13 DOOR](#DOOR)\n  - [2.14 DRAWBRIDGE](#DRAWBRIDGE)\n  - [2.15 REGION](#REGION)\n  - [2.16 STAIR-region](#STAIR-region)\n  - [2.17 PORTAL](#PORTAL)\n  - [2.18 TELEPORT\\_REGION](#TELEPORT_REGION)\n  - [2.19 BRANCH](#BRANCH)\n  - [2.20 MAZEWALK](#MAZEWALK)\n  - [2.21 WALLIFY](#WALLIFY)\n  - [2.22 LADDER](#LADDER)\n  - [2.23 GOLD](#GOLD)\n\n- [3 ROOM-type levels](#ROOM-type_levels)\n\n  - [3.1 LEVEL](#LEVEL)\n  - [3.2 RANDOM\\_CORRIDORS](#RANDOM_CORRIDORS)\n  - [3.3 ROOM](#ROOM)\n  - [3.4 SUBROOM](#SUBROOM)\n  - [3.5 NAME](#NAME)\n  - [3.6 CHANCE](#CHANCE)\n  - [3.7 Room DOOR](#Room_DOOR)\n  - [3.8 Common syntax](#Common_syntax)\n  - [3.9 ALTAR](#ALTAR)\n  - [3.10 CONTAINER](#CONTAINER)\n  - [3.11 ENGRAVING](#ENGRAVING)\n  - [3.12 FOUNTAIN](#FOUNTAIN)\n  - [3.13 GRAVE](#GRAVE)\n  - [3.14 MONSTER](#MONSTER)\n  - [3.15 OBJECT](#OBJECT)\n  - [3.16 SINK](#SINK)\n  - [3.17 STAIR](#STAIR)\n  - [3.18 TRAP](#TRAP)\n  - [3.19 Map characters](#Map_characters)\n  - [3.20 Trap names](#Trap_names)\n  - [3.21 Room types](#Room_types)\n\n- [4 History](#History)\n\n- [5 References](#References)\n\n## Language syntax\n\nThere are two types of levels you can create: mazes and rooms. For [MAZE-type levels](#MAZE-type_levels) you \"draw\" one or more maps with ASCII characters and then describe the monsters, objects and so on that are in the map (example: dat/bigroom.des).[\\[6\\]](#cite_note-6). For [ROOM-type levels](#ROOM-type_levels), you describe rooms and their contents (example: dat/oracle.des).[\\[7\\]](#cite_note-7). The maze-levels are easier to make and understand, and room-type levels do not offer as much control over the level.\n\n### Comments\n\nAll lines beginning with `#` are comments and are ignored by the level compiler, except between [MAP](#MAP) and [ENDMAP](#MAP).\n\nExample:\n\n```\n# This is a comment.\n```\n\n### Types\n\nThere are many data types used in des files. Some are relatively simple, such as characters, strings, and numbers. More complex ones include:\n\n| Type                 | Description                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              | Example                                             |\n| -------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | --------------------------------------------------- |\n| coord                | A coordinate pair, that is, a pair of numbers (x,y) representing a location on the last defined MAP or on the whole level if no MAP is defined, where (0,0) represents the point in the upper left corner. By convention, coordinates less than 10 have a leading 0, so that all coordinates are two digits, but this is not required.Also, using *rndcoord* on any terrain selection (see below) will select one pair of coordinates at random from that selection and thus resolves to a single coord. | (70,06)                                             |\n| math expression      | Fairly intuitive. Supported math operators are addition, subtraction, multiplication, division, and modulo division. Must resolve to an integer. Parentheses are also supported.                                                                                                                                                                                                                                                                                                                         | (3 + 5) / (2 \\* 4)                                  |\n| dice notation        | Represents a roll of an arbitrary amount of arbitrary-sided dice, in the format *XdY* (roll X dice with Y sides and total them). Resolves to an integer and can be used in math expressions.                                                                                                                                                                                                                                                                                                             | 4d6                                                 |\n| comparison statement | A percentage or math-based comparison that can be used to evaluate whether an IF block will be processed. Brackets are required.                                                                                                                                                                                                                                                                                                                                                                         | \\[33%]\\[$variable < 10]                             |\n| region               | A rectangular region of the level, expressed with the x and y coordinates of its upper left and lower right corners, respective to the most recently defined MAP. A variation is a *levregion*, which is the same thing except that the coordinates are absolute on the level irrespective of any MAPs.                                                                                                                                                                                                  | (03,10,64,10)levregion(10,18,21,25)                 |\n| mapchar              | One of the [map characters](#map_characters), or a pair of that with a light state.                                                                                                                                                                                                                                                                                                                                                                                                                      | 'T'('.',lit)                                        |\n| monster              | Either a single character representing a monster class (producing a random monster from that class), a string giving the name of a specific type of monster, or both as a parenthetical pair.                                                                                                                                                                                                                                                                                                            | 'F'\"lichen\"('F',\"lichen\")                           |\n| object               | Either a single character representing an object class (producing a random object from that class), a string giving the name of a specific type of object, or both as a parenthetical pair.                                                                                                                                                                                                                                                                                                              | '('\"tin opener\"('(',\"tin opener\")                   |\n| selection            | One, or a combination of multiple, [terrain selections](#terrain_selections) (see below), representing an area of the level that is not necessarily rectangular. Frequently, rndcoord is used on a selection to pick a pair of coordinates in it at random.                                                                                                                                                                                                                                              | rect (10,10,20,20) & line (50,50),(60,50) & (61,61) |\n| array                | An ordered list which can contain many of a single data type (any of the above, as well as the primitives).                                                                                                                                                                                                                                                                                                                                                                                              | { (43,11), (34,11), (23,12), (45,06) }              |\n\n### Variables\n\nYou can define variables, which must begin with a `$` sign. The name of the variable can contain only uppercase and lowercase letters and underscores. Variables must be assigned to something on the first line that they appear; they can then be used multiple times later.\n\nExamples:\n\n```\n# select and place exactly one of these four specific monsters at (10,18)\n# SHUFFLE can't be used because it would error if you tried to create for instance ('A',\"minotaur\")\n$mon_letters = { 'A', 'L', 'V', 'H' }\n$mon_names = { \"Archon\", \"arch-lich\", \"vampire lord\", \"minotaur\" }\n$mon_index = 1d4 - 1\nMONSTER:($mon_letters[$mon_index],$mon_names[$mon_index]),(10,18)\n```\n\nVarious types of variables require their type to be declared when set, with a colon:\n\n```\n$path = selection: randline (34,05),(43,05),10\n$enemy = monster: ('X',\"xorn\")\n$treasure = object: '/'\n$tree = terrain: 'T'\n```\n\n### Shorthand for conditionals\n\nIf there happens to be only one statement that will either execute or not based on a condition, a shorthand is to put the conditional at the beginning of the line followed by a `:`, and then the rest of the statement.\n\nExample:\n\n```\n[45%]: MONSTER:\"xorn\",random\n```\n\nHowever, if two or more statements need to be processed from the same condition, it's better to put them in an IF block.\n\n### Terrain selections\n\nMany complicated shapes can be generated with terrain selections, and these shapes can even be combined with each other. The easiest way to think of them is as a set of points. These are the available definitions for terrain selections:\n\n| Definition                                                                    | Explanation| Example                                                                      |\n| ----------------------------------------------------------------------------- || ---------------------------------------------------------------------------- |\n| *coord*                                                                       | Just a single point, one pair of coordinates| `(44,12)`                                                                    |\n| rect *region*                                                                 | An unfilled rectangle, containing just the edges and none of the interior points.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      | `rect (20,13,40,15)`                                                         |\n| fillrect *region*                                                             | A filled rectangle containing the edges and all of the interior points| `fillrect (20,13,40,15)`                                                     |\n| line *coord*,*coord*                                                          | A straight line drawn from one pair of coordinates to the other using Bresenham's line algorithm.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      | `line (76,03),(55,19)`                                                       |\n| randline *coord*,*coord*,*math expression*                                    | A line that is guaranteed to start at one pair of coordinates and finish at the other, but uses a random walk to get there. Specifically, the algorithm uses a form of fractal noise: it takes the midpoint of the line, moves it to a random point nearby no farther than the user-provided roughness (the last argument), then recurses over each resulting half of the line with the roughness reduced to 2/3 of its previous value.                                                                                                                                                                                                                                                                                                                                                                                | `randline (00,10),(75,10),15`                                                |\n| grow(*selection*)grow(*direction(s)*,*selection*)                             | Grows the provided selection by 1 in the specified directions, or in all directions if the first format is used| `grow(north,randline(20,12),(30,15),8)`                                      |\n| filter(*percentage*,*selection*)                                              | Independently for every space in the selection, keep it in the selection with a chance equal to the provided percentage; otherwise remove it| `filter(50%, fillrect(23,12,66,16))`                                         |\n| filter(*selection1*,*selection2*)                                             | Perform a set intersection operation on the two selections. Points that appear in both selections will be kept in the resulting selection; points that appear in only one or the other are removed| `filter(floodfill(23,23), fillrect(20,20,25,25))`                            |\n| filter(*mapchar*,*selection*)                                                 | This is a complicated one. If the mapchar is a simple character, then anything in the selection whose terrain type doesn't match that mapchar will be removed. If the mapchar is bundled with a *lit* or *unlit* light state, then anything in the selection whose light state doesn't match the provided state will additionally be removed, even if the mapchar matches. If the mapchar is bundled with a *random* light state, then matching mapchar locations in the selection have a 50% chance of being removed.                                                                                                                                                                                                                                                                                                 | `filter('.',fillrect(20,10,50,20))``filter(('.',unlit),line(20,00),(30,05))` |\n| floodfill *coord*                                                             | Performs a flood fill from the pair of coordinates provided, adding to the selection all the connected spaces with the same terrain type as the starting location. It does not fill across diagonals| `floodfill (34,15)`                                                          |\n| circle (*coord*, *radius* \\[, *unfilled*])                                    | Adds points in a ring around the given center point with the given radius, using McIlroy's Ellipse Algorithm. If \"unfilled\" is provided as an optional third argument the selection will be only that ring; otherwise the interior of the circle will also be added to the selection| `circle ((55,17),3)`                                                         |\n| ellipse (*coord*, *xradius*, *yradius* \\[, *unfilled*])                       | Same as the circle selection, but instead of a constant radius it is a more general ellipse whose x and y axes can be specified. Note that the des file is intended to specify the semi-x-axis and the semi-y-axis (the distances from the center to the right and top extremes of the ellipse), not the full axis lengths.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            | `ellipse((55,17),10,4)`                                                      |\n| gradient (*type*, (*mindist* - *maxdist* \\[, limited]), *coord* \\[, *coord*]) | Makes a radial gradient of probability that a space will independently be added to the selection.* The center of the gradient is either the single coord if only one is provided, or the line between the two coords if two are provided.\n* Within mindist of this center, no points will be added.\n* Between mindist and maxdist away from the center, each space has a probability of being added that linearly increases from 0% at mindist to 100% at maxdist.\n* Beyond maxdist, the probability for each square is either 0% if the limited flag is present, or 100% if it is missing or specified as \"unlimited\".\n* If the provided gradient type is \"square\" instead of \"radial\", the gradient will instead be square-shaped instead of circular/elliptical, but still emanating from the center point or line. | `gradient (radial, (4-10, unlimited), (35,08),(39,08))`                      |\n| complement *selection*                                                        | Inverts the selection across the whole level. Every point that was not in the selection will be added to it, and every point that was in the selection will be removed from it| `complement (fillrect(56,07,71,09))`                                         |\n\n## MAZE-type levels\n\nMaze-type levels begin with [MAZE](#MAZE), followed with optional [FLAGS](#FLAGS), optional [INIT\\_MAP](#INIT_MAP), 0 or more [MESSAGEs](#MESSAGE) and up to 9 maze-parts, each of which consists either of [NOMAP](#NOMAP) or [GEOMETRY](#GEOMETRY) and [MAP](#MAP), followed by zero or more the random register initializers, one of each ([RANDOM\\_MONSTERS](#RANDOM_MONSTERS), [RANDOM\\_OBJECTS](#RANDOM_OBJECTS), [RANDOM\\_PLACES](#RANDOM_PLACES)), followed by zero or more of the map details (everything else, eg. [MONSTER](#MONSTER), [OBJECT](#OBJECT), [TRAP](#TRAP), etc.)\n\nThat is:\n\n- [MAZE](#MAZE)\n\n- [FLAGS](#FLAGS), optional\n\n- [INIT\\_MAP](#INIT_MAP), optional\n\n- [MESSAGE](#MESSAGE), 0 or more\n\n- up to 9 map-parts, which consist of:\n\n  - [NOMAP](#NOMAP) or [GEOMETRY](#GEOMETRY) and [MAP](#MAP)\n  - [RANDOM\\_MONSTERS](#RANDOM_MONSTERS), optional\n  - [RANDOM\\_OBJECTS](#RANDOM_OBJECTS), optional\n  - [RANDOM\\_PLACES](#RANDOM_PLACES), optional\n  - The rest of the definitions of this map-part\n\nExample:\n\n```\nMAZE:\"test\",' '\nFLAGS:noteleport\nMESSAGE:\"Welcome!\"\nGEOMETRY:center,center\nMAP\n.....\n.L.L.\n.....\n.L.L.\n.....\nENDMAP\nMONSTER:random,random,random\nOBJECT:'%',random,random\n```\n\nMaze-type levels, or any level for which flags.is\\_maze\\_level is true in the code, have some different behaviors:\n\n- The level designer is expected to place any room furniture into rooms. Defining a throne room will only place a throne on non-maze-type levels, for instance.\n- Digging, where possible, will only dig one space, and will result in floor tiles being created instead of corridor tiles.\n- Mimics will mimic statues (instead of doors or boulders or objects).\n\n### MAZE\n\n```\nMAZE:\"foo\",'X'\n```\n\n- `foo` is the unique file name which will be used for this special level, up to 8 characters. For example: `soko3-2`. This file name which NetHack loads is defined by the way this level is defined in [dungeon.def](/wiki/Dungeon.def_format \"Dungeon.def format\").\n\n- `'X'` is the [fill map character](#Map_characters). The map will be filled with this [dungeon feature](/wiki/Dungeon_feature \"Dungeon feature\") before anything else is done. This can also be `random`, which fills the whole level with a checkerboard grid of walls and stone, so you can use [MAZEWALK](#MAZEWALK) on it.\n\nExample:\n\n```\nMAZE:\"soko3-2\",' '\n```\n\n### FLAGS\n\n```\nFLAGS:flaglist\n```\n\nThis sets level.flags.\\<flag> as true for the whole level. Note that the flags are not fixed and can be changed over the course of the game: for example, raising the dead with the [Book of the Dead](/wiki/Book_of_the_Dead \"Book of the Dead\") sets level.flags.graveyard to true regardless of whether the level was previously a graveyard level. `flaglist` is one or more of the following flags, separated by commas:\n\n- `noteleport`: Teleportation within the level is blocked.\n- `hardfloor`: The floor is too hard to dig.\n- `nommap`: [Magic mapping](/wiki/Magic_mapping \"Magic mapping\") does not work.\n- `arboreal`: Supposedly an outdoor map. Solid walls and secret corridors will be shown as trees, digging makes floor instead of corridor and randomly created corridors are made out of floor instead of corridor.\n- `shortsighted`: Monsters cannot see you from far away.\n- `mazelevel`: Used when a ROOM-type level wants to set the maze level flag to be treated as a maze level, with the corresponding effects.\n- `premapped`: When the player enters the level, it is automatically mapped, including all traps and boulders. This is only used for Sokoban at the moment.\n- `shroud`: Unseen locations on the level will not be remembered by the hero, instead of rendering as out-of-sight map, trap, and object glyphs like they normally do. No levels currently use this flag.\n- `graveyard`: Treats the level as a graveyard level (causes graveyard sounds and undead have a reduced chance of leaving corpses).\n- `icedpools`: Ice generated with the level will be treated as frozen pools instead of frozen moats.\n- `solidify`: Areas outside the specified level map are made undiggable and unphaseable. (Examples: Vlad's Tower, Sokoban, the Astral Plane)\n- `corrmaze`: If the level is a maze (not a maze-type level, an actual maze), the maze uses corridor tiles instead of floor tiles and solid rock instead of walls. Randomly generated mazes have a 1/3 chance of having corrmaze set.\n- `inaccessibles`: If inaccessible areas are generated, generate ways for them to connect to the \"accessible\" area. This tries first to create a secret door connecting it to the accessible area; if that fails it tries to create a hole or trapdoor; if that fails it tries to create an escape item (teleport items or digging tools). This code is not used for inaccessible [closets](/wiki/Closet \"Closet\"), which always get a scroll of teleportation.\n\nExample:\n\n```\nFLAGS:noteleport,hardfloor,graveyard\n```\n\n### INIT\\_MAP\n\n```\nINIT_MAP:'X', 'Y', smoothed, joined, lighted, walled\n```\n\nThis causes the level map to be initialized with a random map generator, similar to how the random [Gnomish Mines](/wiki/Gnomish_Mines \"Gnomish Mines\") look like. Each MAZE-level can contain only 0 or 1 of these definitions.\n\n- `'X'` is the \"foreground\" [fill map character](#Map_characters). This should be something the player can walk on, as the walkable part will be made out of this.\n\n- `'Y'` is the \"background\" [fill map character](#Map_characters). This will surround the foreground area, so can be solid or harmful to player.\n\n- `smoothed` is either `true` or `false`, and denotes whether the level will be \"smoothed\". This means that any foreground character surrounded by fewer than 3 foreground characters is changed to background character.\n\n- `joined` is either `true` or `false`, and denotes whether the level will be \"joined\", so that all parts are accessible by walking.\n\n- `lighted` is either `lit`, `unlit`, or `random`\n\n- `walled` is either `true` or `false`. This is equivalent of using a [WALLIFY](#WALLIFY) -command.\n\nExamples:\n\n```\nINIT_MAP: 'L', '.', false, false, unlit, false\nINIT_MAP: '.', ' ', true, true, random, true\n```\n\n### MESSAGE\n\n```\nMESSAGE:\"string\"\n```\n\nYou can have 0 or more of these per special level. Each message line gets separated with a `--more--` -prompt in the game. `\"string\"` is any message you want player to see when entering the level.\n\nExample (actual source from the Plane of Earth):\n\n```\nMAZE:\"earth\",' '\nFLAGS: noteleport,hardfloor,shortsighted\nMESSAGE: \"Well done, mortal!\"\nMESSAGE: \"But now thou must face the final Test...\"\nMESSAGE: \"Prove thyself worthy or perish!\"\n```\n\n### NOMAP\n\n```\nNOMAP\n```\n\nInstead of [GEOMETRY](#GEOMETRY) and [MAP](#MAP), you use this if you think that [INIT\\_MAP](#INIT_MAP) creates a good enough random map and you don't want to use any fixed map-parts.\n\nSee also [MAP](#MAP)\n\n### GEOMETRY\n\n```\nGEOMETRY:xadj,yadj\n```\n\nThis must be followed by a [MAP](#MAP) definition, and tells the approximate position of the following MAP-part on the level.\n\n- `xadj` is one of `left`, `half-left`, `center`, `half-right`, `right` or `random`\n\n- `yadj` is one of `top`, `center`, `bottom` or `random`\n\nExample:\n\n```\nGEOMETRY:left,top\n```\n\n### MAP\n\n```\nMAP\n...\n...\n...\nENDMAP\n```\n\nThis must be preceded by [GEOMETRY](#GEOMETRY) definition. You define a map-part by \"drawing\" with [map characters](#Map_characters) between the MAP and ENDMAP. The map can be up to 21 lines high and each line can be up to 76 chars long. Each line must also be the same length. You can also use numbers inside the map, but those will be ignored; they're considered as line numbers.\n\nSee also [NOMAP](#NOMAP).\n\n### NON\\_DIGGABLE\n\n```\nNON_DIGGABLE:region\n```\n\nSets the walls inside the region as non-diggable.\n\nExample:\n\n```\nNON_DIGGABLE:(00,00,13,12)\n```\n\n### NON\\_PASSWALL\n\n```\nNON_PASSWALL:region\n```\n\nPlayers and monsters cannot phase through the walls inside the region\n\nExample:\n\n```\nNON_PASSWALL:(00,00,13,12)\n```\n\n### RANDOM\\_PLACES\n\n```\nRANDOM_PLACES:place,...\n```\n\nWith this command you can set up to 10 coordinate-pair registers, which you can access by using `place[N]` instead of a pair of coordinates in any other command. The registers are shuffled at level creation time.\n\nExample:\n\n```\nRANDOM_PLACES:(23,9),(37,14),(51,9)\nOBJECT:'?',\"genocide\",place[0]\n```\n\n### RANDOM\\_MONSTERS\n\n```\nRANDOM_MONSTERS:'X',...\n```\n\nWith this command you can set up 10 monster symbol registers, which you can access by using `monster[N]` instead of a monster symbol in any other command. The registers are shuffled at level creation time.\n\nExample:\n\n```\nRANDOM_MONSTERS: 'E', 'X'\nMONSTER:monster[0],random,(27,05)\n```\n\n### RANDOM\\_OBJECTS\n\n```\nRANDOM_OBJECTS:'X',...\n```\n\nWith this command you can set up 10 object class symbol registers, which you can access by using `object[N]` instead of a object class symbol in any other command. The registers are shuffled at level creation time.\n\nExample:\n\n```\nRANDOM_OBJECTS:'[',')','*','%'\nOBJECT:object[0],random,(39,05)\n```\n\n### DOOR\n\n```\nDOOR:state,place\n```\n\nPuts a door on the map.\n\n- `state` is one of the following: `nodoor`, `locked`, `closed`, `open` or `random`\n\n- `place` is either a pair of coordinates, a [RANDOM\\_PLACES](#RANDOM_PLACES) place, or `random`\n\nExample:\n\n```\nDOOR:locked,(10,5)\n```\n\n### DRAWBRIDGE\n\n```\nDRAWBRIDGE:place,dir,state\n```\n\n- `place` is either a pair of coordinates, a [RANDOM\\_PLACES](#RANDOM_PLACES) place, or `random`\n\n- `dir` is one of the following: `north`, `east`, `south` or `west`\n\n- `state` is one of the following: `nodoor`, `locked`, `closed`, `open` or `random`\n\nNote that the drawbridge placement is different from door placement; the coordinates must be a place where the drawbridge would be when it's open, and from that place towards the direction there should be a wall, where the portcullis will be.\n\nExample:\n\n```\nDRAWBRIDGE:(25,18), north, closed\n```\n\n### REGION\n\n```\nREGION:(x1,y1,x2,y2), lighted, \"type\"\n```\n\nDefine a region on the map with certain light-state and type.\n\n- `lighted` is one of `lit`, `unlit` or `random`.\n\n- `\"type\"` is one of the [room types](#Room_types).\n\nYou can add `filled` or `unfilled`, it will denote whether the room will get stocked with the normal monsters or objects it would get. After that you can add `true` or `false` to denote whether the room is irregularly shaped. If the room is irregular, only the first pair of coordinates (x1,y1) must be inside the room, and the room must be closed off from other areas with non-floor [map characters](#Map_characters). Use the boundary symbol `'B'` in the [MAP](#MAP) to enclose an irregular room; it will be converted to floor symbol `'.'` after the level has been created.\n\nExamples:\n\n```\nREGION:(43,12,49,16),unlit,\"ordinary\"\nREGION:(12,01,20,09),unlit,\"morgue\",unfilled\nREGION:(11,03,29,10),lit,\"temple\",filled,true\n```\n\n### STAIR-region\n\n```\nSTAIR:(x1,y1,x2,y2), (x3,y3,x4,y4), updown\n```\n\nPlaces a stair within an area covered by (x1,y1,x2,y2) and not covered by (x3,y3,x4,y4).\n\n- `updown` is either `up` or `down`, denoting the direction of the stairs.\n\nIf the area is prefixed with `levregion` then the coordinates are relative to the whole level, otherwise the coordinates are relative to the last-defined [MAP](#MAP).\n\nExample:\n\n```\nSTAIR:(0,0,79,20), (20,5,50,15), up\nSTAIR:levregion(01,0,79,20), (0,0,28,12), up\nSTAIR:(0,0,50,10), levregion(10,0,20,15), down\n```\n\n### PORTAL\n\n```\nPORTAL:(x1,y1,x2,y2), (x3,y3,x4,y4),\"levelname\"\n```\n\nPlaces a magical portal within an area covered by (x1,y1,x2,y2) and not covered by (x3,y3,x4,y4). The portal will level teleport player to the level with the name \"levelname\". If the area is prefixed with `levregion` then the coordinates are relative to the whole level, otherwise the coordinates are relative to the last-defined [MAP](#MAP).\n\nExample:\n\n```\nPORTAL:levregion(57,01,78,19),(0,0,0,0),\"fire\"\nPORTAL:(0,0,75,19),(65,13,75,19),\"air\"\n```\n\n### TELEPORT\\_REGION\n\n```\nTELEPORT_REGION:(x1,y1,x2,y2),(x3,y3,x4,y4)\n```\n\nRestricts the area where player can end up on the level when he [level teleports](/wiki/Level_teleport \"Level teleport\") or falls in there. Player will end up within an area covered by (x1,y1,x2,y2) and not covered by (x3,y3,x4,y4). If the area is prefixed with `levregion` then the coordinates are relative to the whole level, otherwise the coordinates are relative to the last-defined [MAP](#MAP). You can also add an optional direction parameter, either `up` or `down`, which will tell when this rule is applied; when player is coming from below or above.\n\nExample:\n\n```\nTELEPORT_REGION:(69,16,69,16),(0,0,0,0)\nTELEPORT_REGION:levregion(56,00,79,20),levregion(01,00,55,20),down\n```\n\n### BRANCH\n\n```\nBRANCH:(x1,y1,x2,y2),(x3,y3,x4,y4)\n```\n\nPlaces stairs or a magical portal to a dungeon branch within an area covered by (x1,y1,x2,y2) and not covered by (x3,y3,x4,y4). If the area is prefixed with `levregion` then the coordinates are relative to the whole level, otherwise the coordinates are relative to the last-defined [MAP](#MAP).\n\nExample:\n\n```\nBRANCH:levregion(51,2,77,18),(0,0,40,20)\n```\n\n### MAZEWALK\n\n```\nMAZEWALK:place,dir\n```\n\nCreates a random maze, starting from place.\n\n- `place` is either a pair of coordinates, a [RANDOM\\_PLACES](#RANDOM_PLACES) place, or `random`\n\n- `dir` is one of the following: `north`, `east`, `south` or `west`\n\nMazewalk turns map grids with solid stone (`' '`) into floor (`'.'`). From the starting position, it checks the mapgrid in the direction given, and if it's solid stone, it will move there, and turn that place into floor. Then it will choose a random direction, jump over the nearest mapgrid in that direction, and check the next mapgrid for solid stone. If there is solid stone, mazewalk will move that direction, changing that place and the intervening mapgrid to floor. Normally the generated maze will not have any loops. For example\n\n```\nMAP\nTTTTTTT\nT T T T\nTTTTTTT\nT T T T\nTTTTTTT\nENDMAP\n```\n\nPointing mazewalk at that will create a small maze of trees, but unless the map (at the place where it's put into the level) is surrounded by something else than solid stone, mazewalk will get out of that MAP. Substituting floor characters for some of the trees \"in the maze\" will make loops in the maze, which are not otherwise possible. Substituting floor characters for some of the trees at the edges of the map will make maze entrances and exits at those places.\n\nIf the total area NOT covered by all maze-parts in the level is greater than 1/10 of the total area of the level, then the mazes in the level will get stocked with maze-specific stuff, such as [minotaurs](/wiki/Minotaur \"Minotaur\"), traps and items, proportionally to the amount of space not covered by MAPs.\n\nMazewalk will only work if the solid stone mapgrids in the level (where the MAP was put down) are on odd-numbered squares, both horizontally and vertically. You don't have to worry about this unless your MAP is 21 rows high or 76 columns wide, in which case you'll have to either make the MAP smaller, or move the places where the solid stone squares are.\n\nAlso, MAZEWALK will fail in certain types of MAP-parts if you also use [WALLIFY](#WALLIFY), as that command is applied before MAZEWALKs.\n\nExample:\n\n```\nMAZEWALK:(00,06),west\n```\n\n### WALLIFY\n\n```\nWALLIFY\n```\n\nTurns walls completely surrounded by other walls into solid stone `' '`.\n\n### LADDER\n\n```\nLADDER:place, updown\n```\n\nPlaces a ladder up or down at the given place. See also [STAIRS](#STAIRS).\n\n- `place` is either a pair of coordinates, a [RANDOM\\_PLACES](#RANDOM_PLACES) place, or `random`\n\n- `updown` is either `up` or `down`, denoting the direction of the stairs.\n\nExample:\n\n```\nLADDER:(11,05),down\n```\n\n### GOLD\n\n```\nGOLD:place, amount\n```\n\nPlaces amount of gold in place.\n\n- `place` is either a pair of coordinates, a [RANDOM\\_PLACES](#RANDOM_PLACES) place, or `random`\n\n- `amount` is any positive integer number.\n\nExample:\n\n```\nGOLD:(5,5),12345\n```\n\n## ROOM-type levels\n\nRoom-type levels begin with [LEVEL](#LEVEL), followed by optional [FLAGS](#FLAGS), optional [INIT\\_MAP](#INIT_MAP), 0 or more [MESSAGEs](#MESSAGE), followed by optional random register initializers ([RANDOM\\_MONSTERS](#RANDOM_MONSTERS) and [RANDOM\\_OBJECT](#RANDOM_OBJECT)), followed by 0 or more [ROOM](#ROOM) and [SUBROOM](#SUBROOM) definitions (and the contents for those rooms), followed by [RANDOM\\_CORRIDORS](#RANDOM_CORRIDORS).\n\nThat is:\n\n- [LEVEL](#LEVEL)\n\n- [FLAGS](#FLAGS), optional\n\n- [INIT\\_MAP](#INIT_MAP), optional\n\n- [MESSAGE](#MESSAGE), 0 or more\n\n- [RANDOM\\_MONSTERS](#RANDOM_MONSTERS), optional\n\n- [RANDOM\\_OBJECTS](#RANDOM_OBJECTS), optional\n\n  - [ROOM](#ROOM), 0 or more\n  - contents for the room (monsters, objects, traps, etc.)\n  - [SUBROOM](#SUBROOM), 0 or more\n    - contents for the subroom (monsters, objects, traps, etc.)\n\n- [RANDOM\\_CORRIDORS](#RANDOM_CORRIDORS)\n\nIt's not possible to define arbitrarily shaped rooms with this type of level.\n\n### LEVEL\n\n```\nLEVEL: \"name\"\n```\n\n`\"name\"` is the unique file name for this level. Can be up to 8 chars long. This file name is defined by the way this level is defined in [dungeon.def](/wiki/Dungeon.def_format \"Dungeon.def format\").\n\nExample:\n\n```\nLEVEL: \"oracle\"\n```\n\n### RANDOM\\_CORRIDORS\n\n```\nRANDOM_CORRIDORS\n```\n\nCreates random corridors between the rooms in the level, so that all rooms are accessible.\n\n### ROOM\n\n```\nROOM: \"type\" [chance], lighted, pos, align, size\n```\n\nCreates a room. The room will be placed on a position defined both by pos and align. pos defines the rough position (in a 5-by-5 grid on the screen), and align defines the room position within that. NOTE: Creation of a randomly located room may fail, especially if there's little free space to fit it on the level. Contents of such a room won't be created either.\n\n- `\"type\"` is one of the [room types](#Room_types), in double quotes.\n\n- `chance` is optional; if type is something other than \"ordinary\", this represents the chance (in percent) that the room will actually be generated as this special room type. Otherwise it will be an ordinary room.\n\n- `lighted` is one of `lit`, `unlit` or `random`.\n\n- `pos` is either `random` or `(xpos, ypos)`, where both `xpos` and `ypos` are between 0 and 5. This is an approximate position.\n\n- `align` is either `random` or `(xalign, yalign)` and is the room alignment within the `pos`.\n\n  - `xalign` is one of `left`, `half-left`, `center`, `half-right`, `right` or `random`\n\n  - `yalign` is one of `top`, `center`, `bottom` or `random`.\n\n- `size` is either `random` or `(width, height)`.\n\nYou can also give one additional parameter, which can either be `true` or `false`. This tells whether the room will get stocked by objects and monsters it would normally get (such as shopkeepers and items for sale for shops).\n\nExample:\n\n```\nROOM: \"ordinary\", random, random, random, random\nROOM: \"ordinary\", lit, (3,3), (center,center), (11,9)\n```\n\n### SUBROOM\n\n```\nSUBROOM: \"type\", lighted, pos, size, \"parent\"\n```\n\nCreates a room inside previously defined ROOM.\n\n- `\"type\"` is one of the [room types](#Room_types).\n\n- `lighted` is one of `lit`, `unlit` or `random`.\n\n- `pos` is either `random` or `(xpos, ypos)`, where `xpos` and `ypos` define the absolute position of this subroom inside the parent room. (0,0) is the upper left corner of the parent.\n\n- `size` is either `random` or `(width, height)`.\n\n- `\"parent\"` is the name of the parent room, as defined with [NAME](#NAME).\n\nYou can also give one additional parameter, which can either be `true` or `false`. This tells whether the room will get stocked by objects and monsters it would normally get (such as shopkeepers and items for sale for shops).\n\nExample:\n\n```\nSUBROOM:\"shop\",lit,(10,10),(3,3),\"town\"\nSUBROOM:\"ordinary\",random,(19,2),(2,2),\"town\"\n```\n\n### NAME\n\n```\nNAME: \"string\"\n```\n\nNames the previously defined ROOM or SUBROOM. Subrooms need to know the name of their parent room, this has no other meaning.\n\nExample:\n\n```\nNAME: \"town\"\n```\n\n### CHANCE\n\n```\nCHANCE: int\n```\n\nAssigns a creation chance to the previously defined ROOM or SUBROOM. The room walls and doors will get created no matter what, this just tells whether the room contents will be created. `int` should be in the 0-100 range. Only non-ordinary rooms can have this.\n\nExample:\n\n```\nCHANCE: 90\n```\n\n### Room DOOR\n\n```\nDOOR: secret, state, wall, pos\n```\n\nCreates a door with certain state on the previously defined ROOM or SUBROOM. Note that Room DOOR format is different from MAZE-level [DOOR](#DOOR).\n\n- `secret` can be `true`, `false` or `random`\n\n- `state` is one of the following: `nodoor`, `locked`, `closed`, `open` or `random`\n\n- `wall` is one of the following: `north`, `east`, `south` or `west` and tells on what wall of the room the door will be created.\n\n- `pos` is either `random` or a positive integer, and tells how far from top or left the door will be.\n\nExample:\n\n```\nDOOR: false, closed, south, random\n```\n\n### Common syntax\n\nThe following commands are common to both MAZE and ROOM-type levels. For the MAZE levels, the coordinates used are the previously defined MAP, for ROOM-levels, it's either the previously defined ROOM or SUBROOM.\n\n### ALTAR\n\n```\nALTAR:place,align,type\n```\n\nPlaces an altar in the previously defined map or ROOM or SUBROOM.\n\n- `place` is either a pair of coordinates, a [RANDOM\\_PLACES](#RANDOM_PLACES) place, or `random`\n\n- `align` is either `noalign`, `law`, `neutral`, `chaos`, `coaligned`, `noncoaligned`, `random` or an alignment register `align[N]`, where N can be either 0,1 or 2.\n\n- `type` is one of `sanctum`, `shrine`, `altar` or `random`\n\nExample:\n\n```\nALTAR:(50,14),chaos,altar\nALTAR:place[0],noalign,altar\nALTAR:(07,09),align[0],sanctum\n```\n\n### CONTAINER\n\nThis defines a container that you can put items in. It accepts exactly the same parameters as [OBJECT](#OBJECT). Normal content generation for this object is suppressed.\n\nExample:\n\n```\nCONTAINER:('(',\"chest\"),(5,5){\nOBJECT:('/',\"wishing\") }\n```\n\n### ENGRAVING\n\n```\nENGRAVING:place, type, \"text\"\n```\n\nCreates an engraving on the floor.\n\n- `place` is either a pair of coordinates, a [RANDOM\\_PLACES](#RANDOM_PLACES) place, or `random`\n\n- `type` is one of `dust`, `engrave`, `burn`, `mark` or `random`. `mark` is the type used for graffiti.\n\n- `\"text\"` is the text engraved on the floor.\n\nExample:\n\n```\nENGRAVING:(12,03), engrave, \"You are now entering the Gnome King's wine cellar.\"\n```\n\n### FOUNTAIN\n\n```\nFOUNTAIN:place\n```\n\nPlaces a fountain on the map.\n\n- `place` is either a pair of coordinates, a [RANDOM\\_PLACES](#RANDOM_PLACES) place, or `random`\n\nExample:\n\n```\nFOUNTAIN:(10,08)\n```\n\n### GRAVE\n\n```\nGRAVE:place,message\n```\n\nPlaces a [headstone](/wiki/Headstone \"Headstone\") on the map.\n\n- `place` is either a pair of coordinates, a [RANDOM\\_PLACES](#RANDOM_PLACES) place, or `random`\n\n- `message` is either a string which will be the epitaph on the grave, `random` (to place a random epitaph), or it can be left off entirely, in which case the grave will be blank.\n\nExamples:\n\n```\nGRAVE:(10,18),\"Epitaph goes here\"\nGRAVE:(10,18),random\nGRAVE:(10,18)\n```\n\n### MONSTER\n\n```\nMONSTER:'X',\"monst\",place\n```\n\n- `'X'` is the monster class symbol, or `random`, or a [RANDOM\\_MONSTERS](#RANDOM_MONSTERS) index\n\n- `\"monst\"` is the specific monster, or `random`\n\n- `place` is either a pair of coordinates, a [RANDOM\\_PLACES](#RANDOM_PLACES) place, or `random`\n\nOther things you can add to the monster definition:\n\n- `hostile` or `peaceful`\n\n- `asleep` or `awake`\n\n- For mimics and other shapechangers you can also add the following:\n\n  - `m_feature \"dungeon_feature\"` to force the mimic to be a dungeon feature.\n  - `m_object \"object_name\"` to force the mimic to be an object. object\\_name is the name of an object as they are in [objects.c](/wiki/Objects.c \"Objects.c\")\n  - `m_monster \"monster_name\"` to force the shapechanger to be a certain monster.\n\n- `\"Name\"` to name the monster.\n\nOptionally, you can put `[NN%]` right after `MONSTER` to make the monster generation optional. NN is a percentage chance of the monster being generated when the level is created.\n\nExamples:\n\n```\nMONSTER:'v',\"dust vortex\",(42,05)\nMONSTER:'E',\"earth elemental\",(39,06),peaceful\nMONSTER:'&',\"Pestilence\",place[0],hostile\nMONSTER:random,random,random\nMONSTER:random,random,(01,01), asleep\nMONSTER:monster[0],random,(27,05)\nMONSTER:'m',\"giant mimic\",place[1],m_feature \"fountain\"\nMONSTER:'m',random,place[0], m_object \"luckstone\"\nMONSTER:'@',\"rogue\",(35,06),peaceful,\"Pug\"\nMONSTER[50%]:'P', \"green slime\", random\n```\n\n### OBJECT\n\n```\nOBJECT:('X',\"name\"),place\n```\n\nEach map-part can contain any number of object definitions.\n\n- `'X'`: a character denoting one of the object classes.\n\n- `\"name\"`: either an object name as listed in [objects.c](/wiki/Objects.c \"Objects.c\"), or `random`\n\n- `place`: either a pair of coordinates, a [RANDOM\\_PLACES](#RANDOM_PLACES) place, or `random`, or `contained`. If contained, then this object will be placed in the previously defined [CONTAINER](#CONTAINER).\n\nOptional stuff you can add to the object definition:\n\n- `cursestate, \"monster_id\", spe`\n- `cursestate, spe`\n- `\"monster_id\", spe`\n- `name:\"name_given_object\"`\n- `quantity:int`\n\nWhere\n\n- `cursestate` is one of `blessed`, `uncursed`, `cursed` or `random`.\n\n- `\"monster_id\"` is a monster type, as defined in [\\[8\\]](#cite_note-8)\n\n- `spe` is an integer, and defines different things depending on what kind of object is generated:\n\n  - enchantment for [armor](/wiki/Armor \"Armor\") and [weapons](/wiki/Weapon \"Weapon\")\n  - charges for [wands](/wiki/Wands \"Wands\"), [rings](/wiki/Rings \"Rings\"), [magic markers](/wiki/Magic_marker \"Magic marker\") and everything else that has charges.\n  - historic and gender bit for [statues](/wiki/Statue \"Statue\"). 1 is historic, 2 is male, 4 is female. Adding the values together is possible, so you can create eg. historic, male statue with value 3 and historic, female with 5. Leaving the gender specification out will either result in a random gender, or if the monster is always of certain gender, then the statue will be that gender too. (eg. nymphs)\n  - [tins](/wiki/Tin \"Tin\"): 1 means spinach, -1 is home-made.\n  - [containers](/wiki/Container \"Container\"): 1 means the box contains [Schroedinger's Cat](/wiki/Schroedinger%27s_Cat \"Schroedinger's Cat\").\n  - [oil lamps](/wiki/Oil_lamp \"Oil lamp\") and [candles](/wiki/Candle \"Candle\"): 0 means the lamp is out of oil.\n  - [Candelabrum](/wiki/Candelabrum \"Candelabrum\"): how many candles are attached to it.\n  - [scroll of mail](/wiki/Scroll_of_mail \"Scroll of mail\"): 1 means it was not delivered to current player.\n  - [eggs](/wiki/Egg \"Egg\"): 1 means hero laid it.\n  - [chests](/wiki/Chest \"Chest\"): 2 means it's a royal coffer in a [throne room](/wiki/Throne_room \"Throne room\").\n\n- `name:\"name_of_object\"` gives the object a name as though the #name command had been used.\n\n- `quantity:int` specifies the quantity of objects just defined to be created.\n\nOptionally, you can put `[NN%]` right after `OBJECT` to make the object generation optional. NN is a percentage chance of the object being generated when the level is created.\n\nExamples:\n\n```\nOBJECT:('%', \"food ration\"), random\nOBJECT:('*', random), (10,10)\nOBJECT:'?', \"genocide\", place[0]\nOBJECT[10%]:('\"', \"amulet of life saving\"), random\nOBJECT:('%', \"corpse\"), random, \"archeologist\", 0\nOBJECT[50%]:(')', \"scimitar\"), contained, blessed, +2\nOBJECT:'`', \"statue\", (0,0), \"forest centaur\", 1\nOBJECT:('(', \"crystal ball\"), (17,08), blessed, 5,name:\"The Orb of Fate\"\nOBJECT:('%',\"egg\"), (05,04), montype:\"yellow dragon\"\n```\n\n### SINK\n\n```\nSINK:place\n```\n\nPlaces a sink on the map.\n\n- `place` is either a pair of coordinates, a terrain selection, or random.\n\n### STAIR\n\n```\nSTAIR:place, updown\n```\n\nPlaces a stair up or down at the given coordinates. See also [STAIR-region](#STAIR-region) and [LADDER](#LADDER).\n\n- `place` is either a pair of coordinates, a [RANDOM\\_PLACES](#RANDOM_PLACES) place, or `random`\n\n- `updown` is either `up` or `down`, denoting the direction of the stairs.\n\nExample:\n\n```\nSTAIR:(70,08), up\nSTAIR:random, down\nSTAIR:place[3], up\n```\n\n### TRAP\n\n```\nTRAP:\"name\",place\n```\n\n- `\"name\"` is the [trap's name](#Trap_names), or `random`\n\n- `place` is either a pair of coordinates, a [RANDOM\\_PLACES](#RANDOM_PLACES) place, or `random`\n\nOptionally, you can put `[NN%]` right after `TRAP` to make the trap generation optional. NN is a percentage chance of the trap being generated when the level is created.\n\nExamples:\n\n```\nTRAP:\"hole\",(12,10)\nTRAP:\"anti magic\",random\nTRAP:random,random\nTRAP[25%]:\"polymorph\",random\n```\n\n### Map characters\n\n| character | [dungeon feature](/wiki/Dungeon_feature \"Dungeon feature\")    |\n| --------- | ------------------------------------------------------------- |\n| `' '`     | solid wall                                                    |\n| `'#'`     | corridor                                                      |\n| `'.'`     | room floor (Unlit, unless lit with [REGION](#REGION)-command) |\n| `'-'`     | horizontal wall                                               |\n| `'\\|'`    | vertical wall                                                 |\n| `'+'`     | door (State is defined with [DOOR](#DOOR) -command)           |\n| `'A'`     | air                                                           |\n| `'B'`     | crosswall / boundary symbol hack (See [REGION](#REGION))      |\n| `'C'`     | cloud                                                         |\n| `'S'`     | secret door                                                   |\n| `'H'`     | secret corridor                                               |\n| `'{'`     | fountain                                                      |\n| `'\\'`     | throne                                                        |\n| `'K'`     | sink                                                          |\n| `'}'`     | moat                                                          |\n| `'P'`     | pool of water                                                 |\n| `'L'`     | lava pool                                                     |\n| `'I'`     | ice                                                           |\n| `'W'`     | water                                                         |\n| `'T'`     | tree                                                          |\n| `'F'`     | iron bars                                                     |\n\n### Trap names\n\n\"anti magic\", \"arrow\", \"bear\", \"board\", \"dart\", \"falling rock\", \"fire\", \"hole\", \"land mine\", \"level teleport\", \"magic portal\", \"magic\", \"pit\", \"polymorph\", \"rolling boulder\", \"rust\", \"sleep gas\", \"spiked pit\", \"statue\", \"teleport\", \"trap door\", \"web\"\n\n### Room types\n\n\"ordinary\", \"throne\", \"swamp\", \"vault\", \"beehive\", \"morgue\", \"barracks\", \"zoo\", \"delphi\", \"temple\", \"anthole\", \"cocknest\", \"leprehall\", \"shop\", \"armor shop\", \"scroll shop\", \"potion shop\", \"weapon shop\", \"food shop\", \"ring shop\", \"wand shop\", \"tool shop\", \"book shop\", \"candle shop\"\n\n## History\n\n.des files and lev\\_comp first appeared in [NetHack 3.0.0](/wiki/NetHack_3.0.0 \"NetHack 3.0.0\").\n\n## References\n\n1. [↑](#cite_ref-1) [doc/lev\\_comp.6 in NetHack 3.6.7, line 1](https://github.com/NetHack/NetHack/blob/NetHack-3.6.7_Released/doc/lev_comp.6#L1)\n2. [↑](#cite_ref-2) [doc/lev\\_comp.txt in NetHack 3.6.7, line 1](https://github.com/NetHack/NetHack/blob/NetHack-3.6.7_Released/doc/lev_comp.txt#L1)\n3. [↑](#cite_ref-3) [util/lev\\_comp.l in NetHack 3.6.7, line 1](https://github.com/NetHack/NetHack/blob/NetHack-3.6.7_Released/util/lev_comp.l#L1)\n4. [↑](#cite_ref-4) [util/lev\\_comp.y in NetHack 3.6.7, line 1](https://github.com/NetHack/NetHack/blob/NetHack-3.6.7_Released/util/lev_comp.y#L1)\n5. [↑](#cite_ref-5) [util/lev\\_main.c in NetHack 3.6.7, line 1](https://github.com/NetHack/NetHack/blob/NetHack-3.6.7_Released/util/lev_main.c#L1)\n6. [↑](#cite_ref-6) [dat/bigroom.des in NetHack 3.6.7, line 1](https://github.com/NetHack/NetHack/blob/NetHack-3.6.7_Released/dat/bigroom.des#L1)\n7. [↑](#cite_ref-7) [dat/oracle.des in NetHack 3.6.7, line 1](https://github.com/NetHack/NetHack/blob/NetHack-3.6.7_Released/dat/oracle.des#L1)\n8. [↑](#cite_ref-8) [src/monst.c in NetHack 3.6.7, line 1](https://github.com/NetHack/NetHack/blob/NetHack-3.6.7_Released/src/monst.c#L1)\n\n[![This article has been updated to reflect NetHack 3.6.0. Click here for more information.](/images/d/d6/Nh360-icon.png)](/wiki/NetHackWiki:Next_version \"This article has been updated to reflect NetHack 3.6.0. Click here for more information.\")\n\n**This page may need to be updated for the [current version](/wiki/Current_version \"Current version\") of *NetHack*.**\n\nIt may contain text specific to [NetHack 3.6.0](/wiki/NetHack_3.6.0 \"NetHack 3.6.0\"). Information on this page may be out of date.\n\n**Editors:** After reviewing this page and making necessary edits, please change the {{nethack-360}} tag to the current version's tag or {{noversion}} as appropriate.\n","html":"<!DOCTYPE html>\n<html class=\"client-nojs\" lang=\"en\" dir=\"ltr\">\n<head>\n<meta charset=\"UTF-8\"/>\n<title>des-file format - NetHack Wiki</title>\n<script>document.documentElement.className = document.documentElement.className.replace( /(^|\\s)client-nojs(\\s|$)/, \"$1client-js$2\" );</script>\n<script>(window.RLQ=window.RLQ||[]).push(function(){mw.config.set({\"wgCanonicalNamespace\":\"\",\"wgCanonicalSpecialPageName\":false,\"wgNamespaceNumber\":0,\"wgPageName\":\"Des-file_format\",\"wgTitle\":\"Des-file format\",\"wgCurRevisionId\":169415,\"wgRevisionId\":169415,\"wgArticleId\":5113,\"wgIsArticle\":true,\"wgIsRedirect\":false,\"wgAction\":\"view\",\"wgUserName\":null,\"wgUserGroups\":[\"*\"],\"wgCategories\":[\"Upcoming\",\"Annotations\",\"Nethack-360 articles\"],\"wgBreakFrames\":false,\"wgPageContentLanguage\":\"en\",\"wgPageContentModel\":\"wikitext\",\"wgSeparatorTransformTable\":[\"\",\"\"],\"wgDigitTransformTable\":[\"\",\"\"],\"wgDefaultDateFormat\":\"dmy\",\"wgMonthNames\":[\"\",\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"],\"wgMonthNamesShort\":[\"\",\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"],\"wgRelevantPageName\":\"Des-file_format\",\"wgRelevantArticleId\":5113,\"wgRequestId\":\"b7e8716a0483dc1f88b06de8\",\"wgCSPNonce\":false,\"wgIsProbablyEditable\":false,\"wgRelevantPageIsProbablyEditable\":false,\"wgRestrictionEdit\":[],\"wgRestrictionMove\":[],\"wgWikiEditorEnabledModules\":[],\"wgCategoryTreePageCategoryOptions\":\"{\\\"mode\\\":0,\\\"hideprefix\\\":20,\\\"showcount\\\":true,\\\"namespaces\\\":false}\"});mw.loader.state({\"site.styles\":\"ready\",\"noscript\":\"ready\",\"user.styles\":\"ready\",\"user\":\"ready\",\"user.options\":\"ready\",\"user.tokens\":\"loading\",\"ext.cite.styles\":\"ready\",\"mediawiki.legacy.shared\":\"ready\",\"mediawiki.legacy.commonPrint\":\"ready\",\"mediawiki.toc.styles\":\"ready\",\"mediawiki.skinning.interface\":\"ready\",\"skins.vector.styles\":\"ready\"});mw.loader.implement(\"user.tokens@0tffind\",function($,jQuery,require,module){/*@nomin*/mw.user.tokens.set({\"editToken\":\"+\\\\\",\"patrolToken\":\"+\\\\\",\"watchToken\":\"+\\\\\",\"csrfToken\":\"+\\\\\"});\n});RLPAGEMODULES=[\"ext.cite.a11y\",\"site\",\"mediawiki.page.startup\",\"mediawiki.user\",\"mediawiki.page.ready\",\"mediawiki.toc\",\"mediawiki.searchSuggest\",\"skins.vector.js\"];mw.loader.load(RLPAGEMODULES);});</script>\n<link rel=\"stylesheet\" href=\"/load.php?debug=false&amp;lang=en&amp;modules=ext.cite.styles%7Cmediawiki.legacy.commonPrint%2Cshared%7Cmediawiki.skinning.interface%7Cmediawiki.toc.styles%7Cskins.vector.styles&amp;only=styles&amp;skin=vector\"/>\n<script async=\"\" src=\"/load.php?debug=false&amp;lang=en&amp;modules=startup&amp;only=scripts&amp;skin=vector\"></script>\n<meta name=\"ResourceLoaderDynamicStyles\" content=\"\"/>\n<link rel=\"stylesheet\" href=\"/load.php?debug=false&amp;lang=en&amp;modules=site.styles&amp;only=styles&amp;skin=vector\"/>\n<meta name=\"generator\" content=\"MediaWiki 1.32.5\"/>\n<meta name=\"description\" content=\"There are two types of levels you can create: mazes and rooms. For MAZE-type levels you &amp;quot;draw&amp;quot; one or more maps with ASCII characters and then describe the monsters, objects and so on that are in the map (example: dat/bigroom.des).&amp;amp;#91;6&amp;amp;#93;. For ROOM-type levels, you describe rooms and their contents (example: dat/oracle.des).&amp;amp;#91;7&amp;amp;#93;. The maze-levels are easier to make and understand, and room-type levels do not offer as much control over the level.\"/>\n<link rel=\"image_src\" href=\"/images/6/65/Nethackwiki-logo.png\"/>\n<link rel=\"shortcut icon\" href=\"/images/6/64/Favicon.ico\"/>\n<link rel=\"search\" type=\"application/opensearchdescription+xml\" href=\"/opensearch_desc.php\" title=\"NetHackWiki\"/>\n<link rel=\"EditURI\" type=\"application/rsd+xml\" href=\"https://nethackwiki.com/api.php?action=rsd\"/>\n<link rel=\"canonical\" href=\"/wiki/Des-file_format\"/>\n<!--[if lt IE 9]><script src=\"/load.php?debug=false&amp;lang=en&amp;modules=html5shiv&amp;only=scripts&amp;skin=vector&amp;sync=1\"></script><![endif]-->\n</head>\n<body class=\"mediawiki ltr sitedir-ltr mw-hide-empty-elt ns-0 ns-subject page-Des-file_format rootpage-Des-file_format skin-vector action-view\">\t\t<div id=\"mw-page-base\" class=\"noprint\"></div>\n\t\t<div id=\"mw-head-base\" class=\"noprint\"></div>\n\t\t<div id=\"content\" class=\"mw-body\" role=\"main\">\n\t\t\t<a id=\"top\"></a>\n\t\t\t<div class=\"mw-indicators mw-body-content\">\n</div>\n<h1 id=\"firstHeading\" class=\"firstHeading\" lang=\"en\">des-file format</h1>\t\t\t<div id=\"bodyContent\" class=\"mw-body-content\">\n\t\t\t\t<div id=\"siteSub\" class=\"noprint\">From NetHackWiki</div>\t\t\t\t<div id=\"contentSub\"></div>\n\t\t\t\t<div id=\"jump-to-nav\"></div>\t\t\t\t<a class=\"mw-jump-link\" href=\"#mw-head\">Jump to navigation</a>\n\t\t\t\t<a class=\"mw-jump-link\" href=\"#p-search\">Jump to search</a>\n\t\t\t\t<div id=\"mw-content-text\" lang=\"en\" dir=\"ltr\" class=\"mw-content-ltr\"><div class=\"mw-parser-output\"><dl><dd><span class=\"dablink\"><i>For the corresponding feature in <a href=\"/wiki/NetHack_3.4.3\" title=\"NetHack 3.4.3\">NetHack 3.4.3</a> and variants based on it, see <a href=\"/wiki/Des-file_format_(NetHack_3.4.3)\" title=\"Des-file format (NetHack 3.4.3)\">Des-file format (NetHack 3.4.3)</a>.</i></span></dd>\n<dd><span class=\"dablink\"><i>For the corresponding feature in <a href=\"/wiki/UnNetHack\" title=\"UnNetHack\">UnNetHack</a>, see <a href=\"/wiki/Des-file_format_(UnNetHack)\" title=\"Des-file format (UnNetHack)\">Des-file format (UnNetHack)</a>.</i></span></dd></dl>\n<p>The <b>des-file format</b> is the language used to describe the <a href=\"/wiki/Special_level\" title=\"Special level\">special levels</a> for NetHack. The <a href=\"/wiki/Lev_comp\" title=\"Lev comp\">lev_comp</a> utility compiles <tt>.des</tt> files into <tt>.lev</tt> files, and then the NetHack executable loads <tt>.lev</tt> files to run the game.<sup id=\"cite_ref-1\" class=\"reference\"><a href=\"#cite_note-1\">&#91;1&#93;</a></sup><sup id=\"cite_ref-2\" class=\"reference\"><a href=\"#cite_note-2\">&#91;2&#93;</a></sup><sup id=\"cite_ref-3\" class=\"reference\"><a href=\"#cite_note-3\">&#91;3&#93;</a></sup><sup id=\"cite_ref-4\" class=\"reference\"><a href=\"#cite_note-4\">&#91;4&#93;</a></sup><sup id=\"cite_ref-5\" class=\"reference\"><a href=\"#cite_note-5\">&#91;5&#93;</a></sup>\n</p><p>The <a href=\"/wiki/Dungeon.def_format\" title=\"Dungeon.def format\">dungeon.def</a> file ties together all the <tt>.des</tt> files to describe the entire dungeon.\n</p><p>des-file format is not a <i>real</i> programming language: there is no flow control, and the order in which different NetHack features are created is fixed.\n</p>\n<div class=\"upcoming\">\n<p><i>The following information pertains to an upcoming version (<a href=\"/wiki/NetHack_3.7.0\" title=\"NetHack 3.7.0\">NetHack 3.7.0</a>). If this version is now released, please verify that it is still accurate, then update the page to incorporate this information.</i>\n</p>\nlev_comp and .des files are gone, replaced by Lua files to define special levels.</div>\n<div class=\"floatright\" style=\"float:right; clear:right;\"><div id=\"toc\" class=\"toc\"><input type=\"checkbox\" role=\"button\" id=\"toctogglecheckbox\" class=\"toctogglecheckbox\" style=\"display:none\" /><div class=\"toctitle\" lang=\"en\" dir=\"ltr\"><h2>Contents</h2><span class=\"toctogglespan\"><label class=\"toctogglelabel\" for=\"toctogglecheckbox\"></label></span></div>\n<ul>\n<li class=\"toclevel-1 tocsection-1\"><a href=\"#Language_syntax\"><span class=\"tocnumber\">1</span> <span class=\"toctext\">Language syntax</span></a>\n<ul>\n<li class=\"toclevel-2 tocsection-2\"><a href=\"#Comments\"><span class=\"tocnumber\">1.1</span> <span class=\"toctext\">Comments</span></a></li>\n<li class=\"toclevel-2 tocsection-3\"><a href=\"#Types\"><span class=\"tocnumber\">1.2</span> <span class=\"toctext\">Types</span></a></li>\n<li class=\"toclevel-2 tocsection-4\"><a href=\"#Variables\"><span class=\"tocnumber\">1.3</span> <span class=\"toctext\">Variables</span></a></li>\n<li class=\"toclevel-2 tocsection-5\"><a href=\"#Shorthand_for_conditionals\"><span class=\"tocnumber\">1.4</span> <span class=\"toctext\">Shorthand for conditionals</span></a></li>\n<li class=\"toclevel-2 tocsection-6\"><a href=\"#Terrain_selections\"><span class=\"tocnumber\">1.5</span> <span class=\"toctext\">Terrain selections</span></a></li>\n</ul>\n</li>\n<li class=\"toclevel-1 tocsection-7\"><a href=\"#MAZE-type_levels\"><span class=\"tocnumber\">2</span> <span class=\"toctext\">MAZE-type levels</span></a>\n<ul>\n<li class=\"toclevel-2 tocsection-8\"><a href=\"#MAZE\"><span class=\"tocnumber\">2.1</span> <span class=\"toctext\">MAZE</span></a></li>\n<li class=\"toclevel-2 tocsection-9\"><a href=\"#FLAGS\"><span class=\"tocnumber\">2.2</span> <span class=\"toctext\">FLAGS</span></a></li>\n<li class=\"toclevel-2 tocsection-10\"><a href=\"#INIT_MAP\"><span class=\"tocnumber\">2.3</span> <span class=\"toctext\">INIT_MAP</span></a></li>\n<li class=\"toclevel-2 tocsection-11\"><a href=\"#MESSAGE\"><span class=\"tocnumber\">2.4</span> <span class=\"toctext\">MESSAGE</span></a></li>\n<li class=\"toclevel-2 tocsection-12\"><a href=\"#NOMAP\"><span class=\"tocnumber\">2.5</span> <span class=\"toctext\">NOMAP</span></a></li>\n<li class=\"toclevel-2 tocsection-13\"><a href=\"#GEOMETRY\"><span class=\"tocnumber\">2.6</span> <span class=\"toctext\">GEOMETRY</span></a></li>\n<li class=\"toclevel-2 tocsection-14\"><a href=\"#MAP\"><span class=\"tocnumber\">2.7</span> <span class=\"toctext\">MAP</span></a></li>\n<li class=\"toclevel-2 tocsection-15\"><a href=\"#NON_DIGGABLE\"><span class=\"tocnumber\">2.8</span> <span class=\"toctext\">NON_DIGGABLE</span></a></li>\n<li class=\"toclevel-2 tocsection-16\"><a href=\"#NON_PASSWALL\"><span class=\"tocnumber\">2.9</span> <span class=\"toctext\">NON_PASSWALL</span></a></li>\n<li class=\"toclevel-2 tocsection-17\"><a href=\"#RANDOM_PLACES\"><span class=\"tocnumber\">2.10</span> <span class=\"toctext\">RANDOM_PLACES</span></a></li>\n<li class=\"toclevel-2 tocsection-18\"><a href=\"#RANDOM_MONSTERS\"><span class=\"tocnumber\">2.11</span> <span class=\"toctext\">RANDOM_MONSTERS</span></a></li>\n<li class=\"toclevel-2 tocsection-19\"><a href=\"#RANDOM_OBJECTS\"><span class=\"tocnumber\">2.12</span> <span class=\"toctext\">RANDOM_OBJECTS</span></a></li>\n<li class=\"toclevel-2 tocsection-20\"><a href=\"#DOOR\"><span class=\"tocnumber\">2.13</span> <span class=\"toctext\">DOOR</span></a></li>\n<li class=\"toclevel-2 tocsection-21\"><a href=\"#DRAWBRIDGE\"><span class=\"tocnumber\">2.14</span> <span class=\"toctext\">DRAWBRIDGE</span></a></li>\n<li class=\"toclevel-2 tocsection-22\"><a href=\"#REGION\"><span class=\"tocnumber\">2.15</span> <span class=\"toctext\">REGION</span></a></li>\n<li class=\"toclevel-2 tocsection-23\"><a href=\"#STAIR-region\"><span class=\"tocnumber\">2.16</span> <span class=\"toctext\">STAIR-region</span></a></li>\n<li class=\"toclevel-2 tocsection-24\"><a href=\"#PORTAL\"><span class=\"tocnumber\">2.17</span> <span class=\"toctext\">PORTAL</span></a></li>\n<li class=\"toclevel-2 tocsection-25\"><a href=\"#TELEPORT_REGION\"><span class=\"tocnumber\">2.18</span> <span class=\"toctext\">TELEPORT_REGION</span></a></li>\n<li class=\"toclevel-2 tocsection-26\"><a href=\"#BRANCH\"><span class=\"tocnumber\">2.19</span> <span class=\"toctext\">BRANCH</span></a></li>\n<li class=\"toclevel-2 tocsection-27\"><a href=\"#MAZEWALK\"><span class=\"tocnumber\">2.20</span> <span class=\"toctext\">MAZEWALK</span></a></li>\n<li class=\"toclevel-2 tocsection-28\"><a href=\"#WALLIFY\"><span class=\"tocnumber\">2.21</span> <span class=\"toctext\">WALLIFY</span></a></li>\n<li class=\"toclevel-2 tocsection-29\"><a href=\"#LADDER\"><span class=\"tocnumber\">2.22</span> <span class=\"toctext\">LADDER</span></a></li>\n<li class=\"toclevel-2 tocsection-30\"><a href=\"#GOLD\"><span class=\"tocnumber\">2.23</span> <span class=\"toctext\">GOLD</span></a></li>\n</ul>\n</li>\n<li class=\"toclevel-1 tocsection-31\"><a href=\"#ROOM-type_levels\"><span class=\"tocnumber\">3</span> <span class=\"toctext\">ROOM-type levels</span></a>\n<ul>\n<li class=\"toclevel-2 tocsection-32\"><a href=\"#LEVEL\"><span class=\"tocnumber\">3.1</span> <span class=\"toctext\">LEVEL</span></a></li>\n<li class=\"toclevel-2 tocsection-33\"><a href=\"#RANDOM_CORRIDORS\"><span class=\"tocnumber\">3.2</span> <span class=\"toctext\">RANDOM_CORRIDORS</span></a></li>\n<li class=\"toclevel-2 tocsection-34\"><a href=\"#ROOM\"><span class=\"tocnumber\">3.3</span> <span class=\"toctext\">ROOM</span></a></li>\n<li class=\"toclevel-2 tocsection-35\"><a href=\"#SUBROOM\"><span class=\"tocnumber\">3.4</span> <span class=\"toctext\">SUBROOM</span></a></li>\n<li class=\"toclevel-2 tocsection-36\"><a href=\"#NAME\"><span class=\"tocnumber\">3.5</span> <span class=\"toctext\">NAME</span></a></li>\n<li class=\"toclevel-2 tocsection-37\"><a href=\"#CHANCE\"><span class=\"tocnumber\">3.6</span> <span class=\"toctext\">CHANCE</span></a></li>\n<li class=\"toclevel-2 tocsection-38\"><a href=\"#Room_DOOR\"><span class=\"tocnumber\">3.7</span> <span class=\"toctext\">Room DOOR</span></a></li>\n<li class=\"toclevel-2 tocsection-39\"><a href=\"#Common_syntax\"><span class=\"tocnumber\">3.8</span> <span class=\"toctext\">Common syntax</span></a></li>\n<li class=\"toclevel-2 tocsection-40\"><a href=\"#ALTAR\"><span class=\"tocnumber\">3.9</span> <span class=\"toctext\">ALTAR</span></a></li>\n<li class=\"toclevel-2 tocsection-41\"><a href=\"#CONTAINER\"><span class=\"tocnumber\">3.10</span> <span class=\"toctext\">CONTAINER</span></a></li>\n<li class=\"toclevel-2 tocsection-42\"><a href=\"#ENGRAVING\"><span class=\"tocnumber\">3.11</span> <span class=\"toctext\">ENGRAVING</span></a></li>\n<li class=\"toclevel-2 tocsection-43\"><a href=\"#FOUNTAIN\"><span class=\"tocnumber\">3.12</span> <span class=\"toctext\">FOUNTAIN</span></a></li>\n<li class=\"toclevel-2 tocsection-44\"><a href=\"#GRAVE\"><span class=\"tocnumber\">3.13</span> <span class=\"toctext\">GRAVE</span></a></li>\n<li class=\"toclevel-2 tocsection-45\"><a href=\"#MONSTER\"><span class=\"tocnumber\">3.14</span> <span class=\"toctext\">MONSTER</span></a></li>\n<li class=\"toclevel-2 tocsection-46\"><a href=\"#OBJECT\"><span class=\"tocnumber\">3.15</span> <span class=\"toctext\">OBJECT</span></a></li>\n<li class=\"toclevel-2 tocsection-47\"><a href=\"#SINK\"><span class=\"tocnumber\">3.16</span> <span class=\"toctext\">SINK</span></a></li>\n<li class=\"toclevel-2 tocsection-48\"><a href=\"#STAIR\"><span class=\"tocnumber\">3.17</span> <span class=\"toctext\">STAIR</span></a></li>\n<li class=\"toclevel-2 tocsection-49\"><a href=\"#TRAP\"><span class=\"tocnumber\">3.18</span> <span class=\"toctext\">TRAP</span></a></li>\n<li class=\"toclevel-2 tocsection-50\"><a href=\"#Map_characters\"><span class=\"tocnumber\">3.19</span> <span class=\"toctext\">Map characters</span></a></li>\n<li class=\"toclevel-2 tocsection-51\"><a href=\"#Trap_names\"><span class=\"tocnumber\">3.20</span> <span class=\"toctext\">Trap names</span></a></li>\n<li class=\"toclevel-2 tocsection-52\"><a href=\"#Room_types\"><span class=\"tocnumber\">3.21</span> <span class=\"toctext\">Room types</span></a></li>\n</ul>\n</li>\n<li class=\"toclevel-1 tocsection-53\"><a href=\"#History\"><span class=\"tocnumber\">4</span> <span class=\"toctext\">History</span></a></li>\n<li class=\"toclevel-1 tocsection-54\"><a href=\"#References\"><span class=\"tocnumber\">5</span> <span class=\"toctext\">References</span></a></li>\n</ul>\n</div>\n</div>\n<h2><span class=\"mw-headline\" id=\"Language_syntax\">Language syntax</span></h2>\n<p>There are two types of levels you can create: mazes and rooms. For <a href=\"#MAZE-type_levels\">MAZE-type levels</a> you \"draw\" one or more maps with ASCII characters and then describe the monsters, objects and so on that are in the map (example: dat/bigroom.des).<sup id=\"cite_ref-6\" class=\"reference\"><a href=\"#cite_note-6\">&#91;6&#93;</a></sup>. For <a href=\"#ROOM-type_levels\">ROOM-type levels</a>, you describe rooms and their contents (example: dat/oracle.des).<sup id=\"cite_ref-7\" class=\"reference\"><a href=\"#cite_note-7\">&#91;7&#93;</a></sup>. The maze-levels are easier to make and understand, and room-type levels do not offer as much control over the level.\n</p>\n<h3><span class=\"mw-headline\" id=\"Comments\">Comments</span></h3>\n<p>All lines beginning with <tt>#</tt> are comments and are ignored by the level compiler, except between <a href=\"#MAP\">MAP</a> and <a href=\"#MAP\">ENDMAP</a>.\n</p><p>Example:\n</p>\n<pre># This is a comment.\n</pre>\n<h3><span class=\"mw-headline\" id=\"Types\">Types</span></h3>\n<p>There are many data types used in des files. Some are relatively simple, such as characters, strings, and numbers. More complex ones include:\n</p>\n<table class=\"wikitable\">\n<tbody><tr>\n<th>Type\n</th>\n<th>Description\n</th>\n<th>Example\n</th></tr>\n<tr>\n<td>coord\n</td>\n<td>A coordinate pair, that is, a pair of numbers (x,y) representing a location on the last defined MAP or on the whole level if no MAP is defined, where (0,0) represents the point in the upper left corner. By convention, coordinates less than 10 have a leading 0, so that all coordinates are two digits, but this is not required.\n<p>Also, using <i>rndcoord</i> on any terrain selection (see below) will select one pair of coordinates at random from that selection and thus resolves to a single coord.\n</p>\n</td>\n<td>(70,06)\n</td></tr>\n<tr>\n<td>math expression\n</td>\n<td>Fairly intuitive. Supported math operators are addition, subtraction, multiplication, division, and modulo division. Must resolve to an integer. Parentheses are also supported.\n</td>\n<td>(3 + 5) / (2 * 4)\n</td></tr>\n<tr>\n<td>dice notation\n</td>\n<td>Represents a roll of an arbitrary amount of arbitrary-sided dice, in the format <i>XdY</i> (roll X dice with Y sides and total them). Resolves to an integer and can be used in math expressions.\n</td>\n<td>4d6\n</td></tr>\n<tr>\n<td>comparison statement\n</td>\n<td>A percentage or math-based comparison that can be used to evaluate whether an IF block will be processed. Brackets are required.\n</td>\n<td>[33%]\n<p>[$variable &lt; 10]\n</p>\n</td></tr>\n<tr>\n<td>region\n</td>\n<td>A rectangular region of the level, expressed with the x and y coordinates of its upper left and lower right corners, respective to the most recently defined MAP. A variation is a <i>levregion</i>, which is the same thing except that the coordinates are absolute on the level irrespective of any MAPs.\n</td>\n<td>(03,10,64,10)\n<p>levregion(10,18,21,25)\n</p>\n</td></tr>\n<tr>\n<td>mapchar\n</td>\n<td>One of the <a href=\"#map_characters\">map characters</a>, or a pair of that with a light state.\n</td>\n<td>'T'\n<p>('.',lit)\n</p>\n</td></tr>\n<tr>\n<td>monster\n</td>\n<td>Either a single character representing a monster class (producing a random monster from that class), a string giving the name of a specific type of monster, or both  as a parenthetical pair.\n</td>\n<td>'F'\n<p>\"lichen\"\n</p><p>('F',\"lichen\")\n</p>\n</td></tr>\n<tr>\n<td>object\n</td>\n<td>Either a single character representing an object class (producing a random object from that class), a string giving the name of a specific type of object, or both as a parenthetical pair.\n</td>\n<td>'('\n<p>\"tin opener\"\n</p><p>('(',\"tin opener\")\n</p>\n</td></tr>\n<tr>\n<td>selection\n</td>\n<td>One, or a combination of multiple, <a href=\"#terrain_selections\">terrain selections</a> (see below), representing an area of the level that is not necessarily rectangular. Frequently, rndcoord is used on a selection to pick a pair of coordinates in it at random.\n</td>\n<td>rect (10,10,20,20) &amp; line (50,50),(60,50) &amp; (61,61)\n</td></tr>\n<tr>\n<td>array\n</td>\n<td>An ordered list which can contain many of a single data type (any of the above, as well as the primitives).\n</td>\n<td>{ (43,11), (34,11), (23,12), (45,06) }\n</td></tr></tbody></table>\n<h3><span class=\"mw-headline\" id=\"Variables\">Variables</span></h3>\n<p>You can define variables, which must begin with a <tt>$</tt> sign. The name of the variable can contain only uppercase and lowercase letters and underscores. Variables must be assigned to something on the first line that they appear; they can then be used multiple times later.\n</p><p>Examples:\n</p>\n<pre># select and place exactly one of these four specific monsters at (10,18)\n# SHUFFLE can't be used because it would error if you tried to create for instance ('A',\"minotaur\")\n$mon_letters = { 'A', 'L', 'V', 'H' }\n$mon_names = { \"Archon\", \"arch-lich\", \"vampire lord\", \"minotaur\" }\n$mon_index = 1d4 - 1\nMONSTER:($mon_letters[$mon_index],$mon_names[$mon_index]),(10,18)\n</pre>\n<p>Various types of variables require their type to be declared when set, with a colon:\n</p>\n<pre>$path = selection: randline (34,05),(43,05),10\n$enemy = monster: ('X',\"xorn\")\n$treasure = object: '/'\n$tree = terrain: 'T'\n</pre>\n<h3><span class=\"mw-headline\" id=\"Shorthand_for_conditionals\">Shorthand for conditionals</span></h3>\n<p>If there happens to be only one statement that will either execute or not based on a condition, a shorthand is to put the conditional at the beginning of the line followed by a <tt>:</tt>, and then the rest of the statement. \n</p><p>Example:\n</p>\n<pre>[45%]: MONSTER:\"xorn\",random\n</pre>\n<p>However, if two or more statements need to be processed from the same condition, it's better to put them in an IF block.\n</p>\n<h3><span class=\"mw-headline\" id=\"Terrain_selections\">Terrain selections</span></h3>\n<p>Many complicated shapes can be generated with terrain selections, and these shapes can even be combined with each other. The easiest way to think of them is as a set of points. These are the available definitions for terrain selections:\n</p>\n<table class=\"wikitable\">\n<tbody><tr>\n<th>Definition\n</th>\n<th>Explanation\n</th>\n<th>Example\n</th></tr>\n<tr>\n<td><i>coord</i>\n</td>\n<td>Just a single point, one pair of coordinates.\n</td>\n<td><tt>(44,12)</tt>\n</td></tr>\n<tr>\n<td>rect <i>region</i>\n</td>\n<td>An unfilled rectangle, containing just the edges and none of the interior points.\n</td>\n<td><tt>rect (20,13,40,15)</tt>\n</td></tr>\n<tr>\n<td>fillrect <i>region</i>\n</td>\n<td>A filled rectangle containing the edges and all of the interior points.\n</td>\n<td><tt>fillrect (20,13,40,15)</tt>\n</td></tr>\n<tr>\n<td>line <i>coord</i>,<i>coord</i>\n</td>\n<td>A straight line drawn from one pair of coordinates to the other using Bresenham's line algorithm.\n</td>\n<td><tt>line (76,03),(55,19)</tt>\n</td></tr>\n<tr>\n<td>randline <i>coord</i>,<i>coord</i>,<i>math expression</i>\n</td>\n<td>A line that is guaranteed to start at one pair of coordinates and finish at the other, but uses a random walk to get there. Specifically, the algorithm uses a form of fractal noise: it takes the midpoint of the line, moves it to a random point nearby no farther than the user-provided roughness (the last argument), then recurses over each resulting half of the line with the roughness reduced to 2/3 of its previous value.\n</td>\n<td><tt>randline (00,10),(75,10),15</tt>\n</td></tr>\n<tr>\n<td>grow(<i>selection</i>)\n<p>grow(<i>direction(s)</i>,<i>selection</i>)\n</p>\n</td>\n<td>Grows the provided selection by 1 in the specified directions, or in all directions if the first format is used.\n</td>\n<td><tt>grow(north,randline(20,12),(30,15),8)</tt>\n</td></tr>\n<tr>\n<td>filter(<i>percentage</i>,<i>selection</i>)\n</td>\n<td>Independently for every space in the selection, keep it in the selection with a chance equal to the provided percentage; otherwise remove it.\n</td>\n<td><tt>filter(50%, fillrect(23,12,66,16))</tt>\n</td></tr>\n<tr>\n<td>filter(<i>selection1</i>,<i>selection2</i>)\n</td>\n<td>Perform a set intersection operation on the two selections. Points that appear in both selections will be kept in the resulting selection; points that appear in only one or the other are removed.\n</td>\n<td><tt>filter(floodfill(23,23), fillrect(20,20,25,25))</tt>\n</td></tr>\n<tr>\n<td>filter(<i>mapchar</i>,<i>selection</i>)\n</td>\n<td>This is a complicated one. If the mapchar is a simple character, then anything in the selection whose terrain type doesn't match that mapchar will be removed. If the mapchar is bundled with a <i>lit</i> or <i>unlit</i> light state, then anything in the selection whose light state doesn't match the provided state will additionally be removed, even if the mapchar matches. If the mapchar is bundled with a <i>random</i> light state, then matching mapchar locations in the selection have a 50% chance of being removed.\n</td>\n<td><tt>filter('.',fillrect(20,10,50,20))</tt>\n<p><tt>filter(('.',unlit),line(20,00),(30,05))</tt>\n</p>\n</td></tr>\n<tr>\n<td>floodfill <i>coord</i>\n</td>\n<td>Performs a flood fill from the pair of coordinates provided, adding to the selection all the connected spaces with the same terrain type as the starting location. It does not fill across diagonals.\n</td>\n<td><tt>floodfill (34,15)</tt>\n</td></tr>\n<tr>\n<td>circle (<i>coord</i>, <i>radius</i> [, <i>unfilled</i>])\n</td>\n<td>Adds points in a ring around the given center point with the given radius, using McIlroy's Ellipse Algorithm. If \"unfilled\" is provided as an optional third argument the selection will be only that ring; otherwise the interior of the circle will also be added to the selection.\n</td>\n<td><tt>circle ((55,17),3)</tt>\n</td></tr>\n<tr>\n<td>ellipse (<i>coord</i>, <i>xradius</i>, <i>yradius</i> [, <i>unfilled</i>])\n</td>\n<td>Same as the circle selection, but instead of a constant radius it is a more general ellipse whose x and y axes can be specified. Note that the des file is intended to specify the semi-x-axis and the semi-y-axis (the distances from the center to the right and top extremes of the ellipse), not the full axis lengths.\n</td>\n<td><tt>ellipse((55,17),10,4)</tt>\n</td></tr>\n<tr>\n<td>gradient (<i>type</i>, (<i>mindist</i> - <i>maxdist</i> [, limited]), <i>coord</i> [, <i>coord</i>])\n</td>\n<td>Makes a radial gradient of probability that a space will independently be added to the selection.\n<ul><li>The center of the gradient is either the single coord if only one is provided, or the line between the two coords if two are provided.</li>\n<li>Within mindist of this center, no points will be added.</li>\n<li>Between mindist and maxdist away from the center, each space has a probability of being added that linearly increases from 0% at mindist to 100% at maxdist.</li>\n<li>Beyond maxdist, the probability for each square is either 0% if the limited flag is present, or 100% if it is missing or specified as \"unlimited\".</li>\n<li>If the provided gradient type is \"square\" instead of \"radial\", the gradient will instead be square-shaped instead of circular/elliptical, but still emanating from the center point or line.</li></ul>\n</td>\n<td><tt> gradient (radial, (4-10, unlimited), (35,08),(39,08))</tt>\n</td></tr>\n<tr>\n<td>complement <i>selection</i>\n</td>\n<td>Inverts the selection across the whole level. Every point that was not in the selection will be added to it, and every point that was in the selection will be removed from it.\n</td>\n<td><tt>complement (fillrect(56,07,71,09))</tt>\n</td></tr></tbody></table>\n<h2><span class=\"mw-headline\" id=\"MAZE-type_levels\">MAZE-type levels</span></h2>\n<p>Maze-type levels begin with <a href=\"#MAZE\">MAZE</a>, followed with optional <a href=\"#FLAGS\">FLAGS</a>, optional <a href=\"#INIT_MAP\">INIT_MAP</a>, 0 or more <a href=\"#MESSAGE\">MESSAGEs</a> and up to 9 maze-parts, each of which consists either of <a href=\"#NOMAP\">NOMAP</a> or <a href=\"#GEOMETRY\">GEOMETRY</a> and <a href=\"#MAP\">MAP</a>, followed by zero or more the random register initializers, one of each (<a href=\"#RANDOM_MONSTERS\">RANDOM_MONSTERS</a>, <a href=\"#RANDOM_OBJECTS\">RANDOM_OBJECTS</a>, <a href=\"#RANDOM_PLACES\">RANDOM_PLACES</a>), followed by zero or more of the map details (everything else, eg. <a href=\"#MONSTER\">MONSTER</a>, <a href=\"#OBJECT\">OBJECT</a>, <a href=\"#TRAP\">TRAP</a>, etc.)\n</p><p>That is:\n</p>\n<ul><li><a href=\"#MAZE\">MAZE</a></li>\n<li><a href=\"#FLAGS\">FLAGS</a>, optional</li>\n<li><a href=\"#INIT_MAP\">INIT_MAP</a>, optional</li>\n<li><a href=\"#MESSAGE\">MESSAGE</a>, 0 or more</li>\n<li>up to 9 map-parts, which consist of:\n<ul><li><a href=\"#NOMAP\">NOMAP</a> or <a href=\"#GEOMETRY\">GEOMETRY</a> and <a href=\"#MAP\">MAP</a></li>\n<li><a href=\"#RANDOM_MONSTERS\">RANDOM_MONSTERS</a>, optional</li>\n<li><a href=\"#RANDOM_OBJECTS\">RANDOM_OBJECTS</a>, optional</li>\n<li><a href=\"#RANDOM_PLACES\">RANDOM_PLACES</a>, optional</li>\n<li>The rest of the definitions of this map-part</li></ul></li></ul>\n<p>Example:\n</p>\n<pre>MAZE:\"test\",' '\nFLAGS:noteleport\nMESSAGE:\"Welcome!\"\nGEOMETRY:center,center\nMAP\n.....\n.L.L.\n.....\n.L.L.\n.....\nENDMAP\nMONSTER:random,random,random\nOBJECT:'%',random,random\n</pre>\n<p>Maze-type levels, or any level for which flags.is_maze_level is true in the code, have some different behaviors:\n</p>\n<ul><li>The level designer is expected to place any room furniture into rooms. Defining a throne room will only place a throne on non-maze-type levels, for instance.</li>\n<li>Digging, where possible, will only dig one space, and will result in floor tiles being created instead of corridor tiles.</li>\n<li>Mimics will mimic statues (instead of doors or boulders or objects).</li></ul>\n<h3><span class=\"mw-headline\" id=\"MAZE\">MAZE</span></h3>\n<pre>MAZE:\"foo\",'X'\n</pre>\n<ul><li><tt>foo</tt> is the unique file name which will be used for this special level, up to 8 characters. For example: <tt>soko3-2</tt>. This file name which NetHack loads is defined by the way this level is defined in <a href=\"/wiki/Dungeon.def_format\" title=\"Dungeon.def format\">dungeon.def</a>.</li>\n<li><tt>'X'</tt> is the <a href=\"#Map_characters\">fill map character</a>. The map will be filled with this <a href=\"/wiki/Dungeon_feature\" title=\"Dungeon feature\">dungeon feature</a> before anything else is done. This can also be <tt>random</tt>, which fills the whole level with a checkerboard grid of walls and stone, so you can use <a href=\"#MAZEWALK\">MAZEWALK</a> on it.</li></ul>\n<p>Example:\n</p>\n<pre>MAZE:\"soko3-2\",' '\n</pre>\n<h3><span class=\"mw-headline\" id=\"FLAGS\">FLAGS</span></h3>\n<pre>FLAGS:flaglist\n</pre>\n<p>This sets level.flags.&lt;flag&gt; as true for the whole level. Note that the flags are not fixed and can be changed over the course of the game: for example, raising the dead with the <a href=\"/wiki/Book_of_the_Dead\" title=\"Book of the Dead\">Book of the Dead</a> sets level.flags.graveyard to true regardless of whether the level was previously a graveyard level.\n<tt>flaglist</tt> is one or more of the following flags, separated by commas:\n</p>\n<ul><li><tt>noteleport</tt>: Teleportation within the level is blocked.</li>\n<li><tt>hardfloor</tt>: The floor is too hard to dig.</li>\n<li><tt>nommap</tt>: <a href=\"/wiki/Magic_mapping\" title=\"Magic mapping\">Magic mapping</a> does not work.</li>\n<li><tt>arboreal</tt>: Supposedly an outdoor map. Solid walls and secret corridors will be shown as trees, digging makes floor instead of corridor and randomly created corridors are made out of floor instead of corridor.</li>\n<li><tt>shortsighted</tt>: Monsters cannot see you from far away.</li>\n<li><tt>mazelevel</tt>: Used when a ROOM-type level wants to set the maze level flag to be treated as a maze level, with the corresponding effects.</li>\n<li><tt>premapped</tt>: When the player enters the level, it is automatically mapped, including all traps and boulders. This is only used for Sokoban at the moment.</li>\n<li><tt>shroud</tt>: Unseen locations on the level will not be remembered by the hero, instead of rendering as out-of-sight map, trap, and object glyphs like they normally do. No levels currently use this flag.</li>\n<li><tt>graveyard</tt>: Treats the level as a graveyard level (causes graveyard sounds and undead have a reduced chance of leaving corpses).</li>\n<li><tt>icedpools</tt>: Ice generated with the level will be treated as frozen pools instead of frozen moats.</li>\n<li><tt>solidify</tt>: Areas outside the specified level map are made undiggable and unphaseable. (Examples: Vlad's Tower, Sokoban, the Astral Plane)</li>\n<li><tt>corrmaze</tt>: If the level is a maze (not a maze-type level, an actual maze), the maze uses corridor tiles instead of floor tiles and solid rock instead of walls. Randomly generated mazes have a 1/3 chance of having corrmaze set.</li>\n<li><tt>inaccessibles</tt>: If inaccessible areas are generated, generate ways for them to connect to the \"accessible\" area. This tries first to create a secret door connecting it to the accessible area; if that fails it tries to create a hole or trapdoor; if that fails it tries to create an escape item (teleport items or digging tools). This code is not used for inaccessible <a href=\"/wiki/Closet\" title=\"Closet\">closets</a>, which always get a scroll of teleportation.</li></ul>\n<p>Example:\n</p>\n<pre>FLAGS:noteleport,hardfloor,graveyard\n</pre>\n<h3><span class=\"mw-headline\" id=\"INIT_MAP\">INIT_MAP</span></h3>\n<pre>INIT_MAP:'X', 'Y', smoothed, joined, lighted, walled\n</pre>\n<p>This causes the level map to be initialized with a random map generator, similar to how the random <a href=\"/wiki/Gnomish_Mines\" title=\"Gnomish Mines\">Gnomish Mines</a> look like.\nEach MAZE-level can contain only 0 or 1 of these definitions.\n</p>\n<ul><li><tt>'X'</tt> is the \"foreground\" <a href=\"#Map_characters\">fill map character</a>. This should be something the player can walk on, as the walkable part will be made out of this.</li>\n<li><tt>'Y'</tt> is the \"background\" <a href=\"#Map_characters\">fill map character</a>. This will surround the foreground area, so can be solid or harmful to player.</li>\n<li><tt>smoothed</tt> is either <tt>true</tt> or <tt>false</tt>, and denotes whether the level will be \"smoothed\". This means that any foreground character surrounded by fewer than 3 foreground characters is changed to background character.</li>\n<li><tt>joined</tt> is either <tt>true</tt> or <tt>false</tt>, and denotes whether the level will be \"joined\", so that all parts are accessible by walking.</li>\n<li><tt>lighted</tt> is either <tt>lit</tt>, <tt>unlit</tt>, or <tt>random</tt></li>\n<li><tt>walled</tt> is either <tt>true</tt> or <tt>false</tt>. This is equivalent of using a <a href=\"#WALLIFY\">WALLIFY</a> -command.</li></ul>\n<p>Examples:\n</p>\n<pre>INIT_MAP: 'L', '.', false, false, unlit, false\nINIT_MAP: '.', ' ', true, true, random, true\n</pre>\n<h3><span class=\"mw-headline\" id=\"MESSAGE\">MESSAGE</span></h3>\n<pre>MESSAGE:\"string\"\n</pre>\n<p>You can have 0 or more of these per special level. Each message line gets separated with a <tt>--more--</tt> -prompt in the game.\n<tt>\"string\"</tt> is any message you want player to see when entering the level.\n</p><p>Example (actual source from the Plane of Earth):\n</p>\n<pre>MAZE:\"earth\",' '\nFLAGS: noteleport,hardfloor,shortsighted\nMESSAGE: \"Well done, mortal!\"\nMESSAGE: \"But now thou must face the final Test...\"\nMESSAGE: \"Prove thyself worthy or perish!\"\n</pre>\n<h3><span class=\"mw-headline\" id=\"NOMAP\">NOMAP</span></h3>\n<pre>NOMAP\n</pre>\n<p>Instead of <a href=\"#GEOMETRY\">GEOMETRY</a> and <a href=\"#MAP\">MAP</a>, you use this if you think that <a href=\"#INIT_MAP\">INIT_MAP</a> creates a good enough random map and you don't want to use any fixed map-parts.\n</p><p>See also <a href=\"#MAP\">MAP</a>\n</p>\n<h3><span class=\"mw-headline\" id=\"GEOMETRY\">GEOMETRY</span></h3>\n<pre>GEOMETRY:xadj,yadj\n</pre>\n<p>This must be followed by a <a href=\"#MAP\">MAP</a> definition, and tells the approximate position of the following MAP-part on the level.\n</p>\n<ul><li><tt>xadj</tt> is one of <tt>left</tt>, <tt>half-left</tt>, <tt>center</tt>, <tt>half-right</tt>, <tt>right</tt> or <tt>random</tt></li>\n<li><tt>yadj</tt> is one of <tt>top</tt>, <tt>center</tt>, <tt>bottom</tt> or <tt>random</tt></li></ul>\n<p>Example:\n</p>\n<pre>GEOMETRY:left,top\n</pre>\n<h3><span class=\"mw-headline\" id=\"MAP\">MAP</span></h3>\n<pre>MAP\n...\n...\n...\nENDMAP\n</pre>\n<p>This must be preceded by <a href=\"#GEOMETRY\">GEOMETRY</a> definition.\nYou define a map-part by \"drawing\" with <a href=\"#Map_characters\">map characters</a> between the MAP and ENDMAP. The map can be up to 21 lines high and each line can be up to 76 chars long. Each line must also be the same length. You can also use numbers inside the map, but those will be ignored; they're considered as line numbers.\n</p><p>See also <a href=\"#NOMAP\">NOMAP</a>.\n</p>\n<h3><span class=\"mw-headline\" id=\"NON_DIGGABLE\">NON_DIGGABLE</span></h3>\n<pre>NON_DIGGABLE:region\n</pre>\n<p>Sets the walls inside the region as non-diggable.\n</p><p>Example:\n</p>\n<pre>NON_DIGGABLE:(00,00,13,12)\n</pre>\n<h3><span class=\"mw-headline\" id=\"NON_PASSWALL\">NON_PASSWALL</span></h3>\n<pre>NON_PASSWALL:region\n</pre>\n<p>Players and monsters cannot phase through the walls inside the region\n</p><p>Example:\n</p>\n<pre>NON_PASSWALL:(00,00,13,12)\n</pre>\n<h3><span class=\"mw-headline\" id=\"RANDOM_PLACES\">RANDOM_PLACES</span></h3>\n<pre>RANDOM_PLACES:place,...\n</pre>\n<p>With this command you can set up to 10 coordinate-pair registers, which you can access by using <tt>place[N]</tt> instead of a pair of coordinates in any other command. The registers are shuffled at level creation time.\n</p><p>Example:\n</p>\n<pre>RANDOM_PLACES:(23,9),(37,14),(51,9)\nOBJECT:'?',\"genocide\",place[0]\n</pre>\n<h3><span class=\"mw-headline\" id=\"RANDOM_MONSTERS\">RANDOM_MONSTERS</span></h3>\n<pre>RANDOM_MONSTERS:'X',...\n</pre>\n<p>With this command you can set up 10 monster symbol registers, which you can access by using <tt>monster[N]</tt> instead of a monster symbol in any other command. The registers are shuffled at level creation time.\n</p><p>Example:\n</p>\n<pre>RANDOM_MONSTERS: 'E', 'X'\nMONSTER:monster[0],random,(27,05)\n</pre>\n<h3><span class=\"mw-headline\" id=\"RANDOM_OBJECTS\">RANDOM_OBJECTS</span></h3>\n<pre>RANDOM_OBJECTS:'X',...\n</pre>\n<p>With this command you can set up 10 object class symbol registers, which you can access by using <tt>object[N]</tt> instead of a object class symbol in any other command. The registers are shuffled at level creation time.\n</p><p>Example:\n</p>\n<pre>RANDOM_OBJECTS:'[',')','*','%'\nOBJECT:object[0],random,(39,05)\n</pre>\n<h3><span class=\"mw-headline\" id=\"DOOR\">DOOR</span></h3>\n<pre>DOOR:state,place\n</pre>\n<p>Puts a door on the map.\n</p>\n<ul><li><tt>state</tt> is one of the following: <tt>nodoor</tt>, <tt>locked</tt>, <tt>closed</tt>, <tt>open</tt> or <tt>random</tt></li>\n<li><tt>place</tt> is either a pair of coordinates, a <a href=\"#RANDOM_PLACES\">RANDOM_PLACES</a> place, or <tt>random</tt></li></ul>\n<p>Example:\n</p>\n<pre>DOOR:locked,(10,5)\n</pre>\n<h3><span class=\"mw-headline\" id=\"DRAWBRIDGE\">DRAWBRIDGE</span></h3>\n<pre>DRAWBRIDGE:place,dir,state\n</pre>\n<ul><li><tt>place</tt> is either a pair of coordinates, a <a href=\"#RANDOM_PLACES\">RANDOM_PLACES</a> place, or <tt>random</tt></li>\n<li><tt>dir</tt> is one of the following: <tt>north</tt>, <tt>east</tt>, <tt>south</tt> or <tt>west</tt></li>\n<li><tt>state</tt> is one of the following: <tt>nodoor</tt>, <tt>locked</tt>, <tt>closed</tt>, <tt>open</tt> or <tt>random</tt></li></ul>\n<p>Note that the drawbridge placement is different from door placement; the coordinates must be a place where the drawbridge would be when it's open, and from that place towards the direction there should be a wall, where the portcullis will be.\n</p><p>Example:\n</p>\n<pre>DRAWBRIDGE:(25,18), north, closed\n</pre>\n<h3><span class=\"mw-headline\" id=\"REGION\">REGION</span></h3>\n<pre>REGION:(x1,y1,x2,y2), lighted, \"type\"\n</pre>\n<p>Define a region on the map with certain light-state and type.\n</p>\n<ul><li><tt>lighted</tt> is one of <tt>lit</tt>, <tt>unlit</tt> or <tt>random</tt>.</li>\n<li><tt>\"type\"</tt> is one of the <a href=\"#Room_types\">room types</a>.</li></ul>\n<p>You can add <tt>filled</tt> or <tt>unfilled</tt>, it will denote whether the room will get stocked with the normal monsters or objects it would get. After that you can add <tt>true</tt> or <tt>false</tt> to denote whether the room is irregularly shaped. If the room is irregular, only the first pair of coordinates (x1,y1) must be inside the room, and the room must be closed off from other areas with non-floor <a href=\"#Map_characters\">map characters</a>. Use the boundary symbol <tt>'B'</tt> in the <a href=\"#MAP\">MAP</a> to enclose an irregular room; it will be converted to floor symbol <tt>'.'</tt> after the level has been created.\n</p><p>Examples:\n</p>\n<pre>REGION:(43,12,49,16),unlit,\"ordinary\"\nREGION:(12,01,20,09),unlit,\"morgue\",unfilled\nREGION:(11,03,29,10),lit,\"temple\",filled,true\n</pre>\n<h3><span class=\"mw-headline\" id=\"STAIR-region\">STAIR-region</span></h3>\n<pre>STAIR:(x1,y1,x2,y2), (x3,y3,x4,y4), updown\n</pre>\n<p>Places a stair within an area covered by (x1,y1,x2,y2) and not covered by (x3,y3,x4,y4).\n</p>\n<ul><li><tt>updown</tt> is either <tt>up</tt> or <tt>down</tt>, denoting the direction of the stairs.</li></ul>\n<p>If the area is prefixed with <tt>levregion</tt> then the coordinates are relative to the whole level, otherwise the coordinates are relative to the last-defined <a href=\"#MAP\">MAP</a>.\n</p><p>Example:\n</p>\n<pre>STAIR:(0,0,79,20), (20,5,50,15), up\nSTAIR:levregion(01,0,79,20), (0,0,28,12), up\nSTAIR:(0,0,50,10), levregion(10,0,20,15), down\n</pre>\n<h3><span class=\"mw-headline\" id=\"PORTAL\">PORTAL</span></h3>\n<pre>PORTAL:(x1,y1,x2,y2), (x3,y3,x4,y4),\"levelname\"\n</pre>\n<p>Places a magical portal within an area covered by (x1,y1,x2,y2) and not covered by (x3,y3,x4,y4). The portal will level teleport player to the level with the name \"levelname\".\nIf the area is prefixed with <tt>levregion</tt> then the coordinates are relative to the whole level, otherwise the coordinates are relative to the last-defined <a href=\"#MAP\">MAP</a>.\n</p><p>Example:\n</p>\n<pre>PORTAL:levregion(57,01,78,19),(0,0,0,0),\"fire\"\nPORTAL:(0,0,75,19),(65,13,75,19),\"air\"\n</pre>\n<h3><span class=\"mw-headline\" id=\"TELEPORT_REGION\">TELEPORT_REGION</span></h3>\n<pre>TELEPORT_REGION:(x1,y1,x2,y2),(x3,y3,x4,y4)\n</pre>\n<p>Restricts the area where player can end up on the level when he <a href=\"/wiki/Level_teleport\" title=\"Level teleport\">level teleports</a> or falls in there. Player will end up within an area covered by (x1,y1,x2,y2) and not covered by (x3,y3,x4,y4).\nIf the area is prefixed with <tt>levregion</tt> then the coordinates are relative to the whole level, otherwise the coordinates are relative to the last-defined <a href=\"#MAP\">MAP</a>.\nYou can also add an optional direction parameter, either <tt>up</tt> or <tt>down</tt>, which will tell when this rule is applied; when player is coming from below or above.\n</p><p>Example:\n</p>\n<pre>TELEPORT_REGION:(69,16,69,16),(0,0,0,0)\nTELEPORT_REGION:levregion(56,00,79,20),levregion(01,00,55,20),down\n</pre>\n<h3><span class=\"mw-headline\" id=\"BRANCH\">BRANCH</span></h3>\n<pre>BRANCH:(x1,y1,x2,y2),(x3,y3,x4,y4)\n</pre>\n<p>Places stairs or a magical portal to a dungeon branch within an area covered by (x1,y1,x2,y2) and not covered by (x3,y3,x4,y4).\nIf the area is prefixed with <tt>levregion</tt> then the coordinates are relative to the whole level, otherwise the coordinates are relative to the last-defined <a href=\"#MAP\">MAP</a>.\n</p><p>Example:\n</p>\n<pre>BRANCH:levregion(51,2,77,18),(0,0,40,20)\n</pre>\n<h3><span class=\"mw-headline\" id=\"MAZEWALK\">MAZEWALK</span></h3>\n<pre>MAZEWALK:place,dir\n</pre>\n<p>Creates a random maze, starting from place.\n</p>\n<ul><li><tt>place</tt> is either a pair of coordinates, a <a href=\"#RANDOM_PLACES\">RANDOM_PLACES</a> place, or <tt>random</tt></li>\n<li><tt>dir</tt> is one of the following: <tt>north</tt>, <tt>east</tt>, <tt>south</tt> or <tt>west</tt></li></ul>\n<p>Mazewalk turns map grids with solid stone (<tt>' '</tt>) into floor (<tt>'.'</tt>). From the starting position, it checks the mapgrid in the direction given, and if it's solid stone, it will move there, and turn that place into floor. Then it will choose a random direction, jump over the nearest mapgrid in that direction, and check the next mapgrid for solid stone. If there is solid stone, mazewalk will move that direction, changing that place and the intervening mapgrid to floor. Normally the generated maze will not have any loops.\nFor example\n</p>\n<pre>MAP\nTTTTTTT\nT T T T\nTTTTTTT\nT T T T\nTTTTTTT\nENDMAP\n</pre>\n<p>Pointing mazewalk at that will create a small maze of trees, but unless the map (at the place where it's put into the level) is surrounded by something else than solid stone, mazewalk will get out of that MAP.  Substituting floor characters for some of the trees \"in the maze\" will make loops in the maze, which are not otherwise possible. Substituting floor characters for some of the trees at the edges of the map will make maze entrances and exits at those places.\n</p><p>If the total area NOT covered by all maze-parts in the level is greater than 1/10 of the total area of the level, then the mazes in the level will get stocked with maze-specific stuff, such as <a href=\"/wiki/Minotaur\" title=\"Minotaur\">minotaurs</a>, traps and items, proportionally to the amount of space not covered by MAPs.\n</p><p>Mazewalk will only work if the solid stone mapgrids in the level (where the MAP was put down) are on odd-numbered squares, both horizontally and vertically. You don't have to worry about this unless your MAP is 21 rows high or 76 columns wide, in which case you'll have to either make the MAP smaller, or move the places where the solid stone squares are.\n</p><p>Also, MAZEWALK will fail in certain types of MAP-parts if you also use <a href=\"#WALLIFY\">WALLIFY</a>, as that command is applied before MAZEWALKs.\n</p><p>Example:\n</p>\n<pre>MAZEWALK:(00,06),west\n</pre>\n<h3><span class=\"mw-headline\" id=\"WALLIFY\">WALLIFY</span></h3>\n<pre>WALLIFY\n</pre>\n<p>Turns walls completely surrounded by other walls into solid stone <tt>' '</tt>.\n</p>\n<h3><span class=\"mw-headline\" id=\"LADDER\">LADDER</span></h3>\n<pre>LADDER:place, updown\n</pre>\n<p>Places a ladder up or down at the given place. See also <a href=\"#STAIRS\">STAIRS</a>.\n</p>\n<ul><li><tt>place</tt> is either a pair of coordinates, a <a href=\"#RANDOM_PLACES\">RANDOM_PLACES</a> place, or <tt>random</tt></li>\n<li><tt>updown</tt> is either <tt>up</tt> or <tt>down</tt>, denoting the direction of the stairs.</li></ul>\n<p>Example:\n</p>\n<pre>LADDER:(11,05),down\n</pre>\n<h3><span class=\"mw-headline\" id=\"GOLD\">GOLD</span></h3>\n<pre>GOLD:place, amount\n</pre>\n<p>Places amount of gold in place.\n</p>\n<ul><li><tt>place</tt> is either a pair of coordinates, a <a href=\"#RANDOM_PLACES\">RANDOM_PLACES</a> place, or <tt>random</tt></li>\n<li><tt>amount</tt> is any positive integer number.</li></ul>\n<p>Example:\n</p>\n<pre>GOLD:(5,5),12345\n</pre>\n<h2><span class=\"mw-headline\" id=\"ROOM-type_levels\">ROOM-type levels</span></h2>\n<p>Room-type levels begin with <a href=\"#LEVEL\">LEVEL</a>, followed by optional <a href=\"#FLAGS\">FLAGS</a>, optional <a href=\"#INIT_MAP\">INIT_MAP</a>, 0 or more <a href=\"#MESSAGE\">MESSAGEs</a>, followed by optional random register initializers (<a href=\"#RANDOM_MONSTERS\">RANDOM_MONSTERS</a> and <a href=\"#RANDOM_OBJECT\">RANDOM_OBJECT</a>), followed by 0 or more <a href=\"#ROOM\">ROOM</a> and <a href=\"#SUBROOM\">SUBROOM</a> definitions (and the contents for those rooms), followed by <a href=\"#RANDOM_CORRIDORS\">RANDOM_CORRIDORS</a>.\n</p><p>That is:\n</p>\n<ul><li><a href=\"#LEVEL\">LEVEL</a></li>\n<li><a href=\"#FLAGS\">FLAGS</a>, optional</li>\n<li><a href=\"#INIT_MAP\">INIT_MAP</a>, optional</li>\n<li><a href=\"#MESSAGE\">MESSAGE</a>, 0 or more</li>\n<li><a href=\"#RANDOM_MONSTERS\">RANDOM_MONSTERS</a>, optional</li>\n<li><a href=\"#RANDOM_OBJECTS\">RANDOM_OBJECTS</a>, optional\n<ul><li><a href=\"#ROOM\">ROOM</a>, 0 or more</li>\n<li>contents for the room (monsters, objects, traps, etc.)</li>\n<li><a href=\"#SUBROOM\">SUBROOM</a>, 0 or more\n<ul><li>contents for the subroom (monsters, objects, traps, etc.)</li></ul></li></ul></li>\n<li><a href=\"#RANDOM_CORRIDORS\">RANDOM_CORRIDORS</a></li></ul>\n<p>It's not possible to define arbitrarily shaped rooms with this type of level.\n</p>\n<h3><span class=\"mw-headline\" id=\"LEVEL\">LEVEL</span></h3>\n<pre>LEVEL: \"name\"\n</pre>\n<p><tt>\"name\"</tt> is the unique file name for this level. Can be up to 8 chars long. This file name is defined by the way this level is defined in <a href=\"/wiki/Dungeon.def_format\" title=\"Dungeon.def format\">dungeon.def</a>.\n</p><p>Example:\n</p>\n<pre>LEVEL: \"oracle\"\n</pre>\n<h3><span class=\"mw-headline\" id=\"RANDOM_CORRIDORS\">RANDOM_CORRIDORS</span></h3>\n<pre>RANDOM_CORRIDORS\n</pre>\n<p>Creates random corridors between the rooms in the level, so that all rooms are accessible.\n</p>\n<h3><span class=\"mw-headline\" id=\"ROOM\">ROOM</span></h3>\n<pre>ROOM: \"type\" [chance], lighted, pos, align, size\n</pre>\n<p>Creates a room. The room will be placed on a position defined both by pos and align. pos defines the rough position (in a 5-by-5 grid on the screen), and align defines the room position within that. NOTE: Creation of a randomly located room may fail, especially if there's little free space to fit it on the level. Contents of such a room won't be created either.\n</p>\n<ul><li><tt>\"type\"</tt> is one of the <a href=\"#Room_types\">room types</a>, in double quotes.</li>\n<li><tt>chance</tt> is optional; if type is something other than \"ordinary\", this represents the chance (in percent) that the room will actually be generated as this special room type. Otherwise it will be an ordinary room.</li>\n<li><tt>lighted</tt> is one of <tt>lit</tt>, <tt>unlit</tt> or <tt>random</tt>.</li>\n<li><tt>pos</tt> is either <tt>random</tt> or <tt>(xpos, ypos)</tt>, where both <tt>xpos</tt> and <tt>ypos</tt> are between 0 and 5. This is an approximate position.</li>\n<li><tt>align</tt> is either <tt>random</tt> or <tt>(xalign, yalign)</tt> and is the room alignment within the <tt>pos</tt>.\n<ul><li><tt>xalign</tt> is one of <tt>left</tt>, <tt>half-left</tt>, <tt>center</tt>, <tt>half-right</tt>, <tt>right</tt> or <tt>random</tt></li>\n<li><tt>yalign</tt> is one of <tt>top</tt>, <tt>center</tt>, <tt>bottom</tt> or <tt>random</tt>.</li></ul></li>\n<li><tt>size</tt> is either <tt>random</tt> or <tt>(width, height)</tt>.</li></ul>\n<p>You can also give one additional parameter, which can either be <tt>true</tt> or <tt>false</tt>. This tells whether the room will get stocked by objects and monsters it would normally get (such as shopkeepers and items for sale for shops).\n</p><p>Example:\n</p>\n<pre>ROOM: \"ordinary\", random, random, random, random\nROOM: \"ordinary\", lit, (3,3), (center,center), (11,9)\n</pre>\n<h3><span class=\"mw-headline\" id=\"SUBROOM\">SUBROOM</span></h3>\n<pre>SUBROOM: \"type\", lighted, pos, size, \"parent\"\n</pre>\n<p>Creates a room inside previously defined ROOM.\n</p>\n<ul><li><tt>\"type\"</tt> is one of the <a href=\"#Room_types\">room types</a>.</li>\n<li><tt>lighted</tt> is one of <tt>lit</tt>, <tt>unlit</tt> or <tt>random</tt>.</li>\n<li><tt>pos</tt> is either <tt>random</tt> or <tt>(xpos, ypos)</tt>, where <tt>xpos</tt> and <tt>ypos</tt> define the absolute position of this subroom inside the parent room. (0,0) is the upper left corner of the parent.</li>\n<li><tt>size</tt> is either <tt>random</tt> or <tt>(width, height)</tt>.</li>\n<li><tt>\"parent\"</tt> is the name of the parent room, as defined with <a href=\"#NAME\">NAME</a>.</li></ul>\n<p>You can also give one additional parameter, which can either be <tt>true</tt> or <tt>false</tt>. This tells whether the room will get stocked by objects and monsters it would normally get (such as shopkeepers and items for sale for shops).\n</p><p>Example:\n</p>\n<pre>SUBROOM:\"shop\",lit,(10,10),(3,3),\"town\"\nSUBROOM:\"ordinary\",random,(19,2),(2,2),\"town\"\n</pre>\n<h3><span class=\"mw-headline\" id=\"NAME\">NAME</span></h3>\n<pre>NAME: \"string\"\n</pre>\n<p>Names the previously defined ROOM or SUBROOM. Subrooms need to know the name of their parent room, this has no other meaning.\n</p><p>Example:\n</p>\n<pre>NAME: \"town\"\n</pre>\n<h3><span class=\"mw-headline\" id=\"CHANCE\">CHANCE</span></h3>\n<pre>CHANCE: int\n</pre>\n<p>Assigns a creation chance to the previously defined ROOM or SUBROOM. The room walls and doors will get created no matter what, this just tells whether the room contents will be created. <tt>int</tt> should be in the 0-100 range. Only non-ordinary rooms can have this.\n</p><p>Example:\n</p>\n<pre>CHANCE: 90\n</pre>\n<h3><span class=\"mw-headline\" id=\"Room_DOOR\">Room DOOR</span></h3>\n<pre>DOOR: secret, state, wall, pos\n</pre>\n<p>Creates a door with certain state on the previously defined ROOM or SUBROOM. Note that Room DOOR format is different from MAZE-level <a href=\"#DOOR\">DOOR</a>.\n</p>\n<ul><li><tt>secret</tt> can be <tt>true</tt>, <tt>false</tt> or <tt>random</tt></li>\n<li><tt>state</tt> is one of the following: <tt>nodoor</tt>, <tt>locked</tt>, <tt>closed</tt>, <tt>open</tt> or <tt>random</tt></li>\n<li><tt>wall</tt> is one of the following: <tt>north</tt>, <tt>east</tt>, <tt>south</tt> or <tt>west</tt> and tells on what wall of the room the door will be created.</li>\n<li><tt>pos</tt> is either <tt>random</tt> or a positive integer, and tells how far from top or left the door will be.</li></ul>\n<p>Example:\n</p>\n<pre>DOOR: false, closed, south, random\n</pre>\n<h3><span class=\"mw-headline\" id=\"Common_syntax\">Common syntax</span></h3>\n<p>The following commands are common to both MAZE and ROOM-type levels. For the MAZE levels, the coordinates used are the previously defined MAP, for ROOM-levels, it's either the previously defined ROOM or SUBROOM.\n</p>\n<h3><span class=\"mw-headline\" id=\"ALTAR\">ALTAR</span></h3>\n<pre>ALTAR:place,align,type\n</pre>\n<p>Places an altar in the previously defined map or ROOM or SUBROOM.\n</p>\n<ul><li><tt>place</tt> is either a pair of coordinates, a <a href=\"#RANDOM_PLACES\">RANDOM_PLACES</a> place, or <tt>random</tt></li>\n<li><tt>align</tt> is either <tt>noalign</tt>, <tt>law</tt>, <tt>neutral</tt>, <tt>chaos</tt>, <tt>coaligned</tt>, <tt>noncoaligned</tt>, <tt>random</tt> or an alignment register <tt>align[N]</tt>, where N can be either 0,1 or 2.</li>\n<li><tt>type</tt> is one of <tt>sanctum</tt>, <tt>shrine</tt>, <tt>altar</tt> or <tt>random</tt></li></ul>\n<p>Example:\n</p>\n<pre>ALTAR:(50,14),chaos,altar\nALTAR:place[0],noalign,altar\nALTAR:(07,09),align[0],sanctum\n</pre>\n<h3><span class=\"mw-headline\" id=\"CONTAINER\">CONTAINER</span></h3>\n<p>This defines a container that you can put items in. It accepts exactly the same parameters as <a href=\"#OBJECT\">OBJECT</a>. Normal content generation for this object is suppressed.\n</p><p>Example:\n</p>\n<pre>CONTAINER:('(',\"chest\"),(5,5){\nOBJECT:('/',\"wishing\") }\n</pre>\n<h3><span class=\"mw-headline\" id=\"ENGRAVING\">ENGRAVING</span></h3>\n<pre>ENGRAVING:place, type, \"text\"\n</pre>\n<p>Creates an engraving on the floor.\n</p>\n<ul><li><tt>place</tt> is either a pair of coordinates, a <a href=\"#RANDOM_PLACES\">RANDOM_PLACES</a> place, or <tt>random</tt></li>\n<li><tt>type</tt> is one of <tt>dust</tt>, <tt>engrave</tt>, <tt>burn</tt>, <tt>mark</tt> or <tt>random</tt>. <tt>mark</tt> is the type used for graffiti.</li>\n<li><tt>\"text\"</tt> is the text engraved on the floor.</li></ul>\n<p>Example:\n</p>\n<pre>ENGRAVING:(12,03), engrave, \"You are now entering the Gnome King's wine cellar.\"\n</pre>\n<h3><span class=\"mw-headline\" id=\"FOUNTAIN\">FOUNTAIN</span></h3>\n<pre>FOUNTAIN:place\n</pre>\n<p>Places a fountain on the map.\n</p>\n<ul><li><tt>place</tt> is either a pair of coordinates, a <a href=\"#RANDOM_PLACES\">RANDOM_PLACES</a> place, or <tt>random</tt></li></ul>\n<p>Example:\n</p>\n<pre>FOUNTAIN:(10,08)\n</pre>\n<h3><span class=\"mw-headline\" id=\"GRAVE\">GRAVE</span></h3>\n<pre>GRAVE:place,message\n</pre>\n<p>Places a <a href=\"/wiki/Headstone\" title=\"Headstone\">headstone</a> on the map.\n</p>\n<ul><li><tt>place</tt> is either a pair of coordinates, a <a href=\"#RANDOM_PLACES\">RANDOM_PLACES</a> place, or <tt>random</tt></li>\n<li><tt>message</tt> is either a string which will be the epitaph on the grave, <tt>random</tt> (to place a random epitaph), or it can be left off entirely, in which case the grave will be blank.</li></ul>\n<p>Examples:\n</p>\n<pre>GRAVE:(10,18),\"Epitaph goes here\"\nGRAVE:(10,18),random\nGRAVE:(10,18)\n</pre>\n<h3><span class=\"mw-headline\" id=\"MONSTER\">MONSTER</span></h3>\n<pre>MONSTER:'X',\"monst\",place\n</pre>\n<ul><li><tt>'X'</tt> is the monster class symbol, or <tt>random</tt>, or a <a href=\"#RANDOM_MONSTERS\">RANDOM_MONSTERS</a> index</li>\n<li><tt>\"monst\"</tt> is the specific monster, or <tt>random</tt></li>\n<li><tt>place</tt> is either a pair of coordinates, a <a href=\"#RANDOM_PLACES\">RANDOM_PLACES</a> place, or <tt>random</tt></li></ul>\n<p>Other things you can add to the monster definition:\n</p>\n<ul><li><tt>hostile</tt> or <tt>peaceful</tt></li>\n<li><tt>asleep</tt> or <tt>awake</tt></li>\n<li>For mimics and other shapechangers you can also add the following:\n<ul><li><tt>m_feature \"<a href=\"/wiki/Dungeon_feature\" title=\"Dungeon feature\">dungeon_feature</a>\"</tt> to force the mimic to be a dungeon feature.</li>\n<li><tt>m_object \"object_name\"</tt> to force the mimic to be an object. object_name is the name of an object as they are in <a href=\"/wiki/Objects.c\" class=\"mw-redirect\" title=\"Objects.c\">objects.c</a></li>\n<li><tt>m_monster \"monster_name\"</tt> to force the shapechanger to be a certain monster.</li></ul></li>\n<li><tt>\"Name\"</tt> to name the monster.</li></ul>\n<p>Optionally, you can put <tt>[NN%]</tt> right after <tt>MONSTER</tt> to make the monster generation optional. NN is a percentage chance of the monster being generated when the level is created.\n</p><p>Examples:\n</p>\n<pre>MONSTER:'v',\"dust vortex\",(42,05)\nMONSTER:'E',\"earth elemental\",(39,06),peaceful\nMONSTER:'&amp;',\"Pestilence\",place[0],hostile\nMONSTER:random,random,random\nMONSTER:random,random,(01,01), asleep\nMONSTER:monster[0],random,(27,05)\nMONSTER:'m',\"giant mimic\",place[1],m_feature \"fountain\"\nMONSTER:'m',random,place[0], m_object \"luckstone\"\nMONSTER:'@',\"rogue\",(35,06),peaceful,\"Pug\"\nMONSTER[50%]:'P', \"green slime\", random\n</pre>\n<h3><span class=\"mw-headline\" id=\"OBJECT\">OBJECT</span></h3>\n<pre>OBJECT:('X',\"name\"),place\n</pre>\n<p>Each map-part can contain any number of object definitions.\n</p>\n<ul><li><tt>'X'</tt>: a character denoting one of the object classes.</li>\n<li><tt>\"name\"</tt>: either an object name as listed in <a href=\"/wiki/Objects.c\" class=\"mw-redirect\" title=\"Objects.c\">objects.c</a>, or <tt>random</tt></li>\n<li><tt>place</tt>: either a pair of coordinates, a <a href=\"#RANDOM_PLACES\">RANDOM_PLACES</a> place, or <tt>random</tt>, or <tt>contained</tt>. If contained, then this object will be placed in the previously defined <a href=\"#CONTAINER\">CONTAINER</a>.</li></ul>\n<p>Optional stuff you can add to the object definition:\n</p>\n<ul><li><tt>cursestate, \"monster_id\", spe</tt></li>\n<li><tt>cursestate, spe</tt></li>\n<li><tt>\"monster_id\", spe</tt></li>\n<li><tt>name:\"name_given_object\"</tt></li>\n<li><tt>quantity:int</tt></li></ul>\n<p>Where\n</p>\n<ul><li><tt>cursestate</tt> is one of <tt>blessed</tt>, <tt>uncursed</tt>, <tt>cursed</tt> or <tt>random</tt>.</li>\n<li><tt>\"monster_id\"</tt> is a monster type, as defined in <sup id=\"cite_ref-8\" class=\"reference\"><a href=\"#cite_note-8\">&#91;8&#93;</a></sup></li>\n<li><tt>spe</tt> is an integer, and defines different things depending on what kind of object is generated:\n<ul><li>enchantment for <a href=\"/wiki/Armor\" title=\"Armor\">armor</a> and <a href=\"/wiki/Weapon\" title=\"Weapon\">weapons</a></li>\n<li>charges for <a href=\"/wiki/Wands\" class=\"mw-redirect\" title=\"Wands\">wands</a>, <a href=\"/wiki/Rings\" class=\"mw-redirect\" title=\"Rings\">rings</a>, <a href=\"/wiki/Magic_marker\" title=\"Magic marker\">magic markers</a> and everything else that has charges.</li>\n<li>historic and gender bit for <a href=\"/wiki/Statue\" title=\"Statue\">statues</a>. 1 is historic, 2 is male, 4 is female. Adding the values together is possible, so you can create eg. historic, male statue with value 3 and historic, female with 5. Leaving the gender specification out will either result in a random gender, or if the monster is always of certain gender, then the statue will be that gender too. (eg. nymphs)</li>\n<li><a href=\"/wiki/Tin\" title=\"Tin\">tins</a>: 1 means spinach, -1 is home-made.</li>\n<li><a href=\"/wiki/Container\" title=\"Container\">containers</a>: 1 means the box contains <a href=\"/wiki/Schroedinger%27s_Cat\" title=\"Schroedinger&#39;s Cat\">Schroedinger's Cat</a>.</li>\n<li><a href=\"/wiki/Oil_lamp\" title=\"Oil lamp\">oil lamps</a> and <a href=\"/wiki/Candle\" class=\"mw-redirect\" title=\"Candle\">candles</a>: 0 means the lamp is out of oil.</li>\n<li><a href=\"/wiki/Candelabrum\" class=\"mw-redirect\" title=\"Candelabrum\">Candelabrum</a>: how many candles are attached to it.</li>\n<li><a href=\"/wiki/Scroll_of_mail\" title=\"Scroll of mail\">scroll of mail</a>: 1 means it was not delivered to current player.</li>\n<li><a href=\"/wiki/Egg\" title=\"Egg\">eggs</a>: 1 means hero laid it.</li>\n<li><a href=\"/wiki/Chest\" title=\"Chest\">chests</a>: 2 means it's a royal coffer in a <a href=\"/wiki/Throne_room\" title=\"Throne room\">throne room</a>.</li></ul></li>\n<li><tt>name:\"name_of_object\"</tt> gives the object a name as though the #name command had been used.</li>\n<li><tt>quantity:int</tt> specifies the quantity of objects just defined to be created.</li></ul>\n<p>Optionally, you can put <tt>[NN%]</tt> right after <tt>OBJECT</tt> to make the object generation optional. NN is a percentage chance of the object being generated when the level is created.\n</p><p>Examples:\n</p>\n<pre>OBJECT:('%', \"food ration\"), random\nOBJECT:('*', random), (10,10)\nOBJECT:'?', \"genocide\", place[0]\nOBJECT[10%]:('\"', \"amulet of life saving\"), random\nOBJECT:('%', \"corpse\"), random, \"archeologist\", 0\nOBJECT[50%]:(')', \"scimitar\"), contained, blessed, +2\nOBJECT:'`', \"statue\", (0,0), \"forest centaur\", 1\nOBJECT:('(', \"crystal ball\"), (17,08), blessed, 5,name:\"The Orb of Fate\"\nOBJECT:('%',\"egg\"), (05,04), montype:\"yellow dragon\"\n</pre>\n<h3><span class=\"mw-headline\" id=\"SINK\">SINK</span></h3>\n<pre>SINK:place\n</pre>\n<p>Places a sink on the map.\n</p>\n<ul><li><tt>place</tt> is either a pair of coordinates, a terrain selection, or random.</li></ul>\n<h3><span class=\"mw-headline\" id=\"STAIR\">STAIR</span></h3>\n<pre>STAIR:place, updown\n</pre>\n<p>Places a stair up or down at the given coordinates. See also <a href=\"#STAIR-region\">STAIR-region</a> and <a href=\"#LADDER\">LADDER</a>.\n</p>\n<ul><li><tt>place</tt> is either a pair of coordinates, a <a href=\"#RANDOM_PLACES\">RANDOM_PLACES</a> place, or <tt>random</tt></li>\n<li><tt>updown</tt> is either <tt>up</tt> or <tt>down</tt>, denoting the direction of the stairs.</li></ul>\n<p>Example:\n</p>\n<pre>STAIR:(70,08), up\nSTAIR:random, down\nSTAIR:place[3], up\n</pre>\n<h3><span class=\"mw-headline\" id=\"TRAP\">TRAP</span></h3>\n<pre>TRAP:\"name\",place\n</pre>\n<ul><li><tt>\"name\"</tt> is the <a href=\"#Trap_names\">trap's name</a>, or <tt>random</tt></li>\n<li><tt>place</tt> is either a pair of coordinates, a <a href=\"#RANDOM_PLACES\">RANDOM_PLACES</a> place, or <tt>random</tt></li></ul>\n<p>Optionally, you can put <tt>[NN%]</tt> right after <tt>TRAP</tt> to make the trap generation optional. NN is a percentage chance of the trap being generated when the level is created.\n</p><p>Examples:\n</p>\n<pre>TRAP:\"hole\",(12,10)\nTRAP:\"anti magic\",random\nTRAP:random,random\nTRAP[25%]:\"polymorph\",random\n</pre>\n<h3><span class=\"mw-headline\" id=\"Map_characters\">Map characters</span></h3>\n<table class=\"prettytable striped\">\n<tbody><tr>\n<th>character\n</th>\n<th><a href=\"/wiki/Dungeon_feature\" title=\"Dungeon feature\">dungeon feature</a>\n</th></tr>\n<tr>\n<td><tt>' '</tt>\n</td>\n<td>solid wall\n</td></tr>\n<tr>\n<td><tt>'#'</tt>\n</td>\n<td>corridor\n</td></tr>\n<tr>\n<td><tt>'.'</tt>\n</td>\n<td>room floor (Unlit, unless lit with <a href=\"#REGION\">REGION</a>-command)\n</td></tr>\n<tr>\n<td><tt>'-'</tt>\n</td>\n<td>horizontal wall\n</td></tr>\n<tr>\n<td><tt>'&#124;'</tt>\n</td>\n<td>vertical wall\n</td></tr>\n<tr>\n<td><tt>'+'</tt>\n</td>\n<td>door (State is defined with <a href=\"#DOOR\">DOOR</a> -command)\n</td></tr>\n<tr>\n<td><tt>'A'</tt>\n</td>\n<td>air\n</td></tr>\n<tr>\n<td><tt>'B'</tt>\n</td>\n<td>crosswall / boundary symbol hack (See <a href=\"#REGION\">REGION</a>)\n</td></tr>\n<tr>\n<td><tt>'C'</tt>\n</td>\n<td>cloud\n</td></tr>\n<tr>\n<td><tt>'S'</tt>\n</td>\n<td>secret door\n</td></tr>\n<tr>\n<td><tt>'H'</tt>\n</td>\n<td>secret corridor\n</td></tr>\n<tr>\n<td><tt>'{'</tt>\n</td>\n<td>fountain\n</td></tr>\n<tr>\n<td><tt>'\\'</tt>\n</td>\n<td>throne\n</td></tr>\n<tr>\n<td><tt>'K'</tt>\n</td>\n<td>sink\n</td></tr>\n<tr>\n<td><tt>'&#125;'</tt>\n</td>\n<td>moat\n</td></tr>\n<tr>\n<td><tt>'P'</tt>\n</td>\n<td>pool of water\n</td></tr>\n<tr>\n<td><tt>'L'</tt>\n</td>\n<td>lava pool\n</td></tr>\n<tr>\n<td><tt>'I'</tt>\n</td>\n<td>ice\n</td></tr>\n<tr>\n<td><tt>'W'</tt>\n</td>\n<td>water\n</td></tr>\n<tr>\n<td><tt>'T'</tt>\n</td>\n<td>tree\n</td></tr>\n<tr>\n<td><tt>'F'</tt>\n</td>\n<td>iron bars\n</td></tr></tbody></table>\n<h3><span class=\"mw-headline\" id=\"Trap_names\">Trap names</span></h3>\n<p>\"anti magic\", \"arrow\", \"bear\", \"board\", \"dart\", \"falling rock\", \"fire\", \"hole\", \"land mine\", \"level teleport\", \"magic portal\", \"magic\", \"pit\", \"polymorph\", \"rolling boulder\", \"rust\", \"sleep gas\", \"spiked pit\", \"statue\", \"teleport\", \"trap door\", \"web\"\n</p>\n<h3><span class=\"mw-headline\" id=\"Room_types\">Room types</span></h3>\n<p>\"ordinary\", \"throne\", \"swamp\", \"vault\", \"beehive\", \"morgue\", \"barracks\", \"zoo\", \"delphi\", \"temple\", \"anthole\", \"cocknest\", \"leprehall\", \"shop\", \"armor shop\", \"scroll shop\", \"potion shop\", \"weapon shop\", \"food shop\", \"ring shop\", \"wand shop\", \"tool shop\", \"book shop\", \"candle shop\"\n</p>\n<h2><span class=\"mw-headline\" id=\"History\">History</span></h2>\n<p>.des files and lev_comp first appeared in <a href=\"/wiki/NetHack_3.0.0\" title=\"NetHack 3.0.0\">NetHack 3.0.0</a>.\n</p>\n<h2><span class=\"mw-headline\" id=\"References\">References</span></h2>\n<div class=\"mw-references-wrap\"><ol class=\"references\">\n<li id=\"cite_note-1\"><span class=\"mw-cite-backlink\"><a href=\"#cite_ref-1\">↑</a></span> <span class=\"reference-text\"><a class=\"external text\" href=\"https://github.com/NetHack/NetHack/blob/NetHack-3.6.7_Released/doc/lev_comp.6#L1\">doc/lev_comp.6 in NetHack 3.6.7, line 1</a>\n     </span>\n</li>\n<li id=\"cite_note-2\"><span class=\"mw-cite-backlink\"><a href=\"#cite_ref-2\">↑</a></span> <span class=\"reference-text\"><a class=\"external text\" href=\"https://github.com/NetHack/NetHack/blob/NetHack-3.6.7_Released/doc/lev_comp.txt#L1\">doc/lev_comp.txt in NetHack 3.6.7, line 1</a>\n     </span>\n</li>\n<li id=\"cite_note-3\"><span class=\"mw-cite-backlink\"><a href=\"#cite_ref-3\">↑</a></span> <span class=\"reference-text\"><a class=\"external text\" href=\"https://github.com/NetHack/NetHack/blob/NetHack-3.6.7_Released/util/lev_comp.l#L1\">util/lev_comp.l in NetHack 3.6.7, line 1</a>\n     </span>\n</li>\n<li id=\"cite_note-4\"><span class=\"mw-cite-backlink\"><a href=\"#cite_ref-4\">↑</a></span> <span class=\"reference-text\"><a class=\"external text\" href=\"https://github.com/NetHack/NetHack/blob/NetHack-3.6.7_Released/util/lev_comp.y#L1\">util/lev_comp.y in NetHack 3.6.7, line 1</a>\n     </span>\n</li>\n<li id=\"cite_note-5\"><span class=\"mw-cite-backlink\"><a href=\"#cite_ref-5\">↑</a></span> <span class=\"reference-text\"><a class=\"external text\" href=\"https://github.com/NetHack/NetHack/blob/NetHack-3.6.7_Released/util/lev_main.c#L1\">util/lev_main.c in NetHack 3.6.7, line 1</a>\n     </span>\n</li>\n<li id=\"cite_note-6\"><span class=\"mw-cite-backlink\"><a href=\"#cite_ref-6\">↑</a></span> <span class=\"reference-text\"><a class=\"external text\" href=\"https://github.com/NetHack/NetHack/blob/NetHack-3.6.7_Released/dat/bigroom.des#L1\">dat/bigroom.des in NetHack 3.6.7, line 1</a>\n     </span>\n</li>\n<li id=\"cite_note-7\"><span class=\"mw-cite-backlink\"><a href=\"#cite_ref-7\">↑</a></span> <span class=\"reference-text\"><a class=\"external text\" href=\"https://github.com/NetHack/NetHack/blob/NetHack-3.6.7_Released/dat/oracle.des#L1\">dat/oracle.des in NetHack 3.6.7, line 1</a>\n     </span>\n</li>\n<li id=\"cite_note-8\"><span class=\"mw-cite-backlink\"><a href=\"#cite_ref-8\">↑</a></span> <span class=\"reference-text\"><a class=\"external text\" href=\"https://github.com/NetHack/NetHack/blob/NetHack-3.6.7_Released/src/monst.c#L1\">src/monst.c in NetHack 3.6.7, line 1</a>\n     </span>\n</li>\n</ol></div>\n<div style=\"display:none; right:10px; padding-bottom: 17px\" class=\"metadata topicon nopopups\"><div style=\"margin-top: -10px\"><a href=\"/wiki/NetHackWiki:Next_version\" title=\"This article has been updated to reflect NetHack 3.6.0. Click here for more information.\"><img alt=\"This article has been updated to reflect NetHack 3.6.0. Click here for more information.\" src=\"/images/d/d6/Nh360-icon.png\" width=\"32\" height=\"32\" /></a></div></div>\n<div class=\"todo\">\n<p><b>This page may need to be updated for the <a href=\"/wiki/Current_version\" class=\"mw-redirect\" title=\"Current version\">current version</a> of <i>NetHack</i>.</b>\n</p><p>It may contain text specific to <a href=\"/wiki/NetHack_3.6.0\" title=\"NetHack 3.6.0\">NetHack 3.6.0</a>. Information on this page may be out of date.\n</p><p><b>Editors:</b> After reviewing this page and making necessary edits, please change the {{nethack-360}} tag to the current version's tag or {{noversion}} as appropriate.\n</p>\n</div>\n\n<!-- \nNewPP limit report\nCached time: 20240926172715\nCache expiry: 604800\nDynamic content: false\nCPU time usage: 0.087 seconds\nReal time usage: 0.108 seconds\nPreprocessor visited node count: 1791/1000000\nPreprocessor generated node count: 3675/1000000\nPost‐expand include size: 8240/2097152 bytes\nTemplate argument size: 2756/2097152 bytes\nHighest expansion depth: 9/40\nExpensive parser function count: 0/100\nUnstrip recursion depth: 0/20\nUnstrip post‐expand size: 3117/5000000 bytes\n-->\n<!--\nTransclusion expansion time report (%,ms,calls,template)\n100.00%   45.942      1 -total\n 33.06%   15.190      8 Template:Refsrc\n 23.83%   10.948     85 Template:Sa\n 15.11%    6.943      8 Template:Refsrc/link\n 11.06%    5.081      1 Template:Nethack-360\n  8.87%    4.073      2 Template:For\n  7.69%    3.532      1 Template:Version_icon\n  4.60%    2.113      1 Template:Top_icon\n  3.39%    1.556      1 Template:Upcoming\n  2.52%    1.160      1 Template:Float_right\n-->\n\n<!-- Saved in parser cache with key wikihackdb:pcache:idhash:5113-0!canonical and timestamp 20240926172715 and revision id 169415\n -->\n</div></div>\t\t\t\t\t<div class=\"printfooter\">\n\t\t\t\t\t\tRetrieved from \"<a dir=\"ltr\" href=\"https://nethackwiki.com/index.php?title=Des-file_format&amp;oldid=169415\">https://nethackwiki.com/index.php?title=Des-file_format&amp;oldid=169415</a>\"\t\t\t\t\t</div>\n\t\t\t\t<div id=\"catlinks\" class=\"catlinks\" data-mw=\"interface\"><div id=\"mw-normal-catlinks\" class=\"mw-normal-catlinks\"><a href=\"/wiki/Special:Categories\" title=\"Special:Categories\">Categories</a>: <ul><li><a href=\"/wiki/Category:Upcoming\" title=\"Category:Upcoming\">Upcoming</a></li><li><a href=\"/wiki/Category:Annotations\" title=\"Category:Annotations\">Annotations</a></li><li><a href=\"/wiki/Category:Nethack-360_articles\" title=\"Category:Nethack-360 articles\">Nethack-360 articles</a></li></ul></div></div>\t\t\t\t<div class=\"visualClear\"></div>\n\t\t\t\t\t\t\t</div>\n\t\t</div>\n\t\t<div id=\"mw-navigation\">\n\t\t\t<h2>Navigation menu</h2>\n\t\t\t<div id=\"mw-head\">\n\t\t\t\t\t\t\t\t\t<div id=\"p-personal\" role=\"navigation\" class=\"\" aria-labelledby=\"p-personal-label\">\n\t\t\t\t\t\t<h3 id=\"p-personal-label\">Personal tools</h3>\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<li id=\"pt-createaccount\"><a href=\"/index.php?title=Special:CreateAccount&amp;returnto=Des-file+format\" title=\"You are encouraged to create an account and log in; however, it is not mandatory\">Create account</a></li><li id=\"pt-login\"><a href=\"/index.php?title=Special:UserLogin&amp;returnto=Des-file+format\" title=\"You are encouraged to log in; however, it is not mandatory [o]\" accesskey=\"o\">Log in</a></li>\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div id=\"left-navigation\">\n\t\t\t\t\t\t\t\t\t\t<div id=\"p-namespaces\" role=\"navigation\" class=\"vectorTabs\" aria-labelledby=\"p-namespaces-label\">\n\t\t\t\t\t\t<h3 id=\"p-namespaces-label\">Namespaces</h3>\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<li id=\"ca-nstab-main\" class=\"selected\"><span><a href=\"/wiki/Des-file_format\" title=\"View the content page [c]\" accesskey=\"c\">Page</a></span></li><li id=\"ca-talk\"><span><a href=\"/wiki/Talk:Des-file_format\" rel=\"discussion\" title=\"Discussion about the content page [t]\" accesskey=\"t\">Discussion</a></span></li>\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div id=\"p-variants\" role=\"navigation\" class=\"vectorMenu emptyPortlet\" aria-labelledby=\"p-variants-label\">\n\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"checkbox\" class=\"vectorMenuCheckbox\" aria-labelledby=\"p-variants-label\" />\n\t\t\t\t\t\t<h3 id=\"p-variants-label\">\n\t\t\t\t\t\t\t<span>Variants</span>\n\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t<div class=\"menu\">\n\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t<div id=\"right-navigation\">\n\t\t\t\t\t\t\t\t\t\t<div id=\"p-views\" role=\"navigation\" class=\"vectorTabs\" aria-labelledby=\"p-views-label\">\n\t\t\t\t\t\t<h3 id=\"p-views-label\">Views</h3>\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<li id=\"ca-view\" class=\"collapsible selected\"><span><a href=\"/wiki/Des-file_format\">Read</a></span></li><li id=\"ca-viewsource\" class=\"collapsible\"><span><a href=\"/index.php?title=Des-file_format&amp;action=edit\" title=\"This page is protected.&#10;You can view its source [e]\" accesskey=\"e\">View source</a></span></li><li id=\"ca-history\" class=\"collapsible\"><span><a href=\"/index.php?title=Des-file_format&amp;action=history\" title=\"Past revisions of this page [h]\" accesskey=\"h\">View history</a></span></li>\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div id=\"p-cactions\" role=\"navigation\" class=\"vectorMenu emptyPortlet\" aria-labelledby=\"p-cactions-label\">\n\t\t\t\t\t\t<input type=\"checkbox\" class=\"vectorMenuCheckbox\" aria-labelledby=\"p-cactions-label\" />\n\t\t\t\t\t\t<h3 id=\"p-cactions-label\"><span>More</span></h3>\n\t\t\t\t\t\t<div class=\"menu\">\n\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div id=\"p-search\" role=\"search\">\n\t\t\t\t\t\t<h3>\n\t\t\t\t\t\t\t<label for=\"searchInput\">Search</label>\n\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t<form action=\"/index.php\" id=\"searchform\">\n\t\t\t\t\t\t\t<div id=\"simpleSearch\">\n\t\t\t\t\t\t\t\t<input type=\"search\" name=\"search\" placeholder=\"Search NetHackWiki\" title=\"Search NetHackWiki [f]\" accesskey=\"f\" id=\"searchInput\"/><input type=\"hidden\" value=\"Special:Search\" name=\"title\"/><input type=\"submit\" name=\"fulltext\" value=\"Search\" title=\"Search the pages for this text\" id=\"mw-searchButton\" class=\"searchButton mw-fallbackSearchButton\"/><input type=\"submit\" name=\"go\" value=\"Go\" title=\"Go to a page with this exact name if it exists\" id=\"searchButton\" class=\"searchButton\"/>\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div id=\"mw-panel\">\n\t\t\t\t<div id=\"p-logo\" role=\"banner\"><a class=\"mw-wiki-logo\" href=\"/wiki/Main_Page\"  title=\"Visit the main page\"></a></div>\n\t\t\t\t\t\t<div class=\"portal\" role=\"navigation\" id=\"p-navigation\" aria-labelledby=\"p-navigation-label\">\n\t\t\t<h3 id=\"p-navigation-label\">Navigation</h3>\n\t\t\t<div class=\"body\">\n\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t<li id=\"n-NetHack-Wiki\"><a href=\"/wiki/Main_Page\">NetHack Wiki</a></li><li id=\"n-Forum\"><a href=\"/wiki/Forum:Watercooler\">Forum</a></li><li id=\"n-portal\"><a href=\"/wiki/NetHackWiki:Community_Portal\" title=\"About the project, what you can do, where to find things\">Community portal</a></li><li id=\"n-recentchanges\"><a href=\"/wiki/Special:RecentChanges\" title=\"A list of recent changes in the wiki [r]\" accesskey=\"r\">Recent changes</a></li><li id=\"n-randompage\"><a href=\"/wiki/Special:Random\" title=\"Load a random page [x]\" accesskey=\"x\">Random page</a></li>\t\t\t\t</ul>\n\t\t\t\t\t\t\t</div>\n\t\t</div>\n\t\t\t<div class=\"portal\" role=\"navigation\" id=\"p-Popular_pages\" aria-labelledby=\"p-Popular_pages-label\">\n\t\t\t<h3 id=\"p-Popular_pages-label\">Popular pages</h3>\n\t\t\t<div class=\"body\">\n\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t<li id=\"n-Dungeon-features\"><a href=\"/wiki/Dungeon_feature\">Dungeon features</a></li><li id=\"n-Monsters\"><a href=\"/wiki/Monster#Canonical_list_of_monsters\">Monsters</a></li><li id=\"n-In.2FExtrinsics\"><a href=\"/wiki/Property#Intrinsic_properties\">In/Extrinsics</a></li><li id=\"n-Items\"><a href=\"/wiki/Item\">Items</a></li><li id=\"n-Spells\"><a href=\"/wiki/Spellbook#List_of_spellbooks\">Spells</a></li><li id=\"n-Game-options\"><a href=\"/wiki/Options\">Game options</a></li><li id=\"n-Websites\"><a href=\"/wiki/Websites\">Websites</a></li>\t\t\t\t</ul>\n\t\t\t\t\t\t\t</div>\n\t\t</div>\n\t\t\t<div class=\"portal\" role=\"navigation\" id=\"p-contributing\" aria-labelledby=\"p-contributing-label\">\n\t\t\t<h3 id=\"p-contributing-label\">Contributing</h3>\n\t\t\t<div class=\"body\">\n\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t<li id=\"n-Style-guide\"><a href=\"/wiki/NetHackWiki:Style_guide\">Style guide</a></li><li id=\"n-help\"><a href=\"/wiki/NetHackWiki:How_to_help\" title=\"The place to find out\">How to help</a></li><li id=\"n-Current-projects\"><a href=\"/wiki/NetHackWiki:Current_projects\">Current projects</a></li>\t\t\t\t</ul>\n\t\t\t\t\t\t\t</div>\n\t\t</div>\n\t\t\t<div class=\"portal\" role=\"navigation\" id=\"p-tb\" aria-labelledby=\"p-tb-label\">\n\t\t\t<h3 id=\"p-tb-label\">Tools</h3>\n\t\t\t<div class=\"body\">\n\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t<li id=\"t-whatlinkshere\"><a href=\"/wiki/Special:WhatLinksHere/Des-file_format\" title=\"A list of all wiki pages that link here [j]\" accesskey=\"j\">What links here</a></li><li id=\"t-recentchangeslinked\"><a href=\"/wiki/Special:RecentChangesLinked/Des-file_format\" rel=\"nofollow\" title=\"Recent changes in pages linked from this page [k]\" accesskey=\"k\">Related changes</a></li><li id=\"t-specialpages\"><a href=\"/wiki/Special:SpecialPages\" title=\"A list of all special pages [q]\" accesskey=\"q\">Special pages</a></li><li id=\"t-print\"><a href=\"/index.php?title=Des-file_format&amp;printable=yes\" rel=\"alternate\" title=\"Printable version of this page [p]\" accesskey=\"p\">Printable version</a></li><li id=\"t-permalink\"><a href=\"/index.php?title=Des-file_format&amp;oldid=169415\" title=\"Permanent link to this revision of the page\">Permanent link</a></li><li id=\"t-info\"><a href=\"/index.php?title=Des-file_format&amp;action=info\" title=\"More information about this page\">Page information</a></li>\t\t\t\t</ul>\n\t\t\t\t\t\t\t</div>\n\t\t</div>\n\t\t\t\t</div>\n\t\t</div>\n\t\t\t\t<div id=\"footer\" role=\"contentinfo\">\n\t\t\t\t\t\t<ul id=\"footer-info\">\n\t\t\t\t\t\t\t\t<li id=\"footer-info-lastmod\"> This page was last edited on 5 June 2024, at 16:27.</li>\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t<ul id=\"footer-places\">\n\t\t\t\t\t\t\t\t<li id=\"footer-places-about\"><a href=\"/wiki/NetHackWiki:About\" title=\"NetHackWiki:About\">About NetHackWiki</a></li>\n\t\t\t\t\t\t\t\t<li id=\"footer-places-disclaimer\"><a href=\"/wiki/NetHackWiki:General_disclaimer\" title=\"NetHackWiki:General disclaimer\">Disclaimers</a></li>\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t\t\t<ul id=\"footer-icons\" class=\"noprint\">\n\t\t\t\t\t\t\t\t\t\t<li id=\"footer-poweredbyico\">\n\t\t\t\t\t\t<a href=\"//www.mediawiki.org/\"><img src=\"/resources/assets/poweredby_mediawiki_88x31.png\" alt=\"Powered by MediaWiki\" srcset=\"/resources/assets/poweredby_mediawiki_132x47.png 1.5x, /resources/assets/poweredby_mediawiki_176x62.png 2x\" width=\"88\" height=\"31\"/></a>\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t<div style=\"clear: both;\"></div>\n\t\t</div>\n\t\t\n<script>(window.RLQ=window.RLQ||[]).push(function(){mw.config.set({\"wgPageParseReport\":{\"limitreport\":{\"cputime\":\"0.087\",\"walltime\":\"0.108\",\"ppvisitednodes\":{\"value\":1791,\"limit\":1000000},\"ppgeneratednodes\":{\"value\":3675,\"limit\":1000000},\"postexpandincludesize\":{\"value\":8240,\"limit\":2097152},\"templateargumentsize\":{\"value\":2756,\"limit\":2097152},\"expansiondepth\":{\"value\":9,\"limit\":40},\"expensivefunctioncount\":{\"value\":0,\"limit\":100},\"unstrip-depth\":{\"value\":0,\"limit\":20},\"unstrip-size\":{\"value\":3117,\"limit\":5000000},\"timingprofile\":[\"100.00%   45.942      1 -total\",\" 33.06%   15.190      8 Template:Refsrc\",\" 23.83%   10.948     85 Template:Sa\",\" 15.11%    6.943      8 Template:Refsrc/link\",\" 11.06%    5.081      1 Template:Nethack-360\",\"  8.87%    4.073      2 Template:For\",\"  7.69%    3.532      1 Template:Version_icon\",\"  4.60%    2.113      1 Template:Top_icon\",\"  3.39%    1.556      1 Template:Upcoming\",\"  2.52%    1.160      1 Template:Float_right\"]},\"cachereport\":{\"timestamp\":\"20240926172715\",\"ttl\":604800,\"transientcontent\":false}}});mw.config.set({\"wgBackendResponseTime\":88});});</script>\n\t</body>\n</html>\n","rawPage":"{{DISPLAYTITLE:des-file format}}\n{{for|the corresponding feature in [[NetHack 3.4.3]] and variants based on it|Des-file format (NetHack 3.4.3)}}\n{{for|the corresponding feature in [[UnNetHack]]|Des-file format (UnNetHack)}}\nThe '''des-file format''' is the language used to describe the [[special level]]s for NetHack. The [[lev_comp]] utility compiles <tt>.des</tt> files into <tt>.lev</tt> files, and then the NetHack executable loads <tt>.lev</tt> files to run the game.{{refsrc|doc/lev_comp.6|1|nethack=3.6.7}}{{refsrc|doc/lev_comp.txt|1|nethack=3.6.7}}{{refsrc|util/lev_comp.l|1|nethack=3.6.7}}{{refsrc|util/lev_comp.y|1|nethack=3.6.7}}{{refsrc|util/lev_main.c|1|nethack=3.6.7}}\n\nThe [[Dungeon.def format|dungeon.def]] file ties together all the <tt>.des</tt> files to describe the entire dungeon.\n\ndes-file format is not a ''real'' programming language: there is no flow control, and the order in which different NetHack features are created is fixed.\n\n{{upcoming|NetHack 3.7.0|lev_comp and .des files are gone, replaced by Lua files to define special levels.}}\n\n{{Float right|__TOC__}}\n\n==Language syntax==\n\nThere are two types of levels you can create: mazes and rooms. For {{sa|MAZE-type levels}} you \"draw\" one or more maps with ASCII characters and then describe the monsters, objects and so on that are in the map (example: dat/bigroom.des).{{refsrc|dat/bigroom.des|1|nethack=3.6.7}}. For {{sa|ROOM-type levels}}, you describe rooms and their contents (example: dat/oracle.des).{{refsrc|dat/oracle.des|1|nethack=3.6.7}}. The maze-levels are easier to make and understand, and room-type levels do not offer as much control over the level.\n\n=== Comments ===\nAll lines beginning with <tt>#</tt> are comments and are ignored by the level compiler, except between {{sa|MAP}} and [[#MAP|ENDMAP]].\n\nExample:\n # This is a comment.\n\n=== Types ===\nThere are many data types used in des files. Some are relatively simple, such as characters, strings, and numbers. More complex ones include:\n{|class=\"wikitable\"\n! Type\n! Description\n! Example\n|-\n|coord\n|A coordinate pair, that is, a pair of numbers (x,y) representing a location on the last defined MAP or on the whole level if no MAP is defined, where (0,0) represents the point in the upper left corner. By convention, coordinates less than 10 have a leading 0, so that all coordinates are two digits, but this is not required.\nAlso, using ''rndcoord'' on any terrain selection (see below) will select one pair of coordinates at random from that selection and thus resolves to a single coord.\n|(70,06)\n|-\n|math expression\n|Fairly intuitive. Supported math operators are addition, subtraction, multiplication, division, and modulo division. Must resolve to an integer. Parentheses are also supported.\n|(3 + 5) / (2 * 4)\n|-\n|dice notation\n|Represents a roll of an arbitrary amount of arbitrary-sided dice, in the format ''XdY'' (roll X dice with Y sides and total them). Resolves to an integer and can be used in math expressions.\n|4d6\n|-\n|comparison statement\n|A percentage or math-based comparison that can be used to evaluate whether an IF block will be processed. Brackets are required.\n|[33%]\n[$variable < 10]\n|-\n|region\n|A rectangular region of the level, expressed with the x and y coordinates of its upper left and lower right corners, respective to the most recently defined MAP. A variation is a ''levregion'', which is the same thing except that the coordinates are absolute on the level irrespective of any MAPs.\n|(03,10,64,10)\nlevregion(10,18,21,25)\n|-\n|mapchar\n|One of the {{sa|map characters}}, or a pair of that with a light state.\n|'T'\n('.',lit)\n|-\n|monster\n|Either a single character representing a monster class (producing a random monster from that class), a string giving the name of a specific type of monster, or both  as a parenthetical pair.\n|'F'\n\"lichen\"\n\n('F',\"lichen\")\n|-\n|object\n|Either a single character representing an object class (producing a random object from that class), a string giving the name of a specific type of object, or both as a parenthetical pair.\n|'('\n\"tin opener\"\n\n('(',\"tin opener\")\n|-\n|selection\n|One, or a combination of multiple, {{sa|terrain selections}} (see below), representing an area of the level that is not necessarily rectangular. Frequently, rndcoord is used on a selection to pick a pair of coordinates in it at random.\n|rect (10,10,20,20) & line (50,50),(60,50) & (61,61)\n|-\n|array\n|An ordered list which can contain many of a single data type (any of the above, as well as the primitives). \n|{ (43,11), (34,11), (23,12), (45,06) }\n|}\n\n=== Variables ===\nYou can define variables, which must begin with a <tt>$</tt> sign. The name of the variable can contain only uppercase and lowercase letters and underscores. Variables must be assigned to something on the first line that they appear; they can then be used multiple times later.\n\nExamples:\n # select and place exactly one of these four specific monsters at (10,18)\n # SHUFFLE can't be used because it would error if you tried to create for instance ('A',\"minotaur\")\n $mon_letters = { 'A', 'L', 'V', 'H' }\n $mon_names = { \"Archon\", \"arch-lich\", \"vampire lord\", \"minotaur\" }\n $mon_index = 1d4 - 1\n MONSTER:($mon_letters[$mon_index],$mon_names[$mon_index]),(10,18)\n\nVarious types of variables require their type to be declared when set, with a colon:\n $path = selection: randline (34,05),(43,05),10\n $enemy = monster: ('X',\"xorn\")\n $treasure = object: '/'\n $tree = terrain: 'T'\n\n=== Shorthand for conditionals ===\nIf there happens to be only one statement that will either execute or not based on a condition, a shorthand is to put the conditional at the beginning of the line followed by a <tt>:</tt>, and then the rest of the statement. \n\nExample:\n [45%]: MONSTER:\"xorn\",random\n\nHowever, if two or more statements need to be processed from the same condition, it's better to put them in an IF block.\n\n=== Terrain selections ===\nMany complicated shapes can be generated with terrain selections, and these shapes can even be combined with each other. The easiest way to think of them is as a set of points. These are the available definitions for terrain selections:\n\n{|class=\"wikitable\"\n! Definition\n! Explanation\n! Example\n|-\n|''coord''\n|Just a single point, one pair of coordinates.\n|<tt>(44,12)</tt>\n|-\n|rect ''region''\n|An unfilled rectangle, containing just the edges and none of the interior points.\n|<tt>rect (20,13,40,15)</tt>\n|-\n|fillrect ''region''\n|A filled rectangle containing the edges and all of the interior points.\n|<tt>fillrect (20,13,40,15)</tt>\n|-\n|line ''coord'',''coord''\n|A straight line drawn from one pair of coordinates to the other using Bresenham's line algorithm.\n|<tt>line (76,03),(55,19)</tt>\n|-\n|randline ''coord'',''coord'',''math expression''\n|A line that is guaranteed to start at one pair of coordinates and finish at the other, but uses a random walk to get there. Specifically, the algorithm uses a form of fractal noise: it takes the midpoint of the line, moves it to a random point nearby no farther than the user-provided roughness (the last argument), then recurses over each resulting half of the line with the roughness reduced to 2/3 of its previous value.\n|<tt>randline (00,10),(75,10),15</tt>\n|-\n|grow(''selection'')\ngrow(''direction(s)'',''selection'')\n|Grows the provided selection by 1 in the specified directions, or in all directions if the first format is used.\n|<tt>grow(north,randline(20,12),(30,15),8)</tt>\n|-\n|filter(''percentage'',''selection'')\n|Independently for every space in the selection, keep it in the selection with a chance equal to the provided percentage; otherwise remove it.\n|<tt>filter(50%, fillrect(23,12,66,16))</tt>\n|-\n|filter(''selection1'',''selection2'')\n|Perform a set intersection operation on the two selections. Points that appear in both selections will be kept in the resulting selection; points that appear in only one or the other are removed.\n|<tt>filter(floodfill(23,23), fillrect(20,20,25,25))</tt>\n|-\n|filter(''mapchar'',''selection'')\n|This is a complicated one. If the mapchar is a simple character, then anything in the selection whose terrain type doesn't match that mapchar will be removed. If the mapchar is bundled with a ''lit'' or ''unlit'' light state, then anything in the selection whose light state doesn't match the provided state will additionally be removed, even if the mapchar matches. If the mapchar is bundled with a ''random'' light state, then matching mapchar locations in the selection have a 50% chance of being removed.\n|<tt>filter('.',fillrect(20,10,50,20))</tt>\n<tt>filter(('.',unlit),line(20,00),(30,05))</tt>\n|-\n|floodfill ''coord''\n|Performs a flood fill from the pair of coordinates provided, adding to the selection all the connected spaces with the same terrain type as the starting location. It does not fill across diagonals.\n|<tt>floodfill (34,15)</tt>\n|-\n|circle (''coord'', ''radius'' [, ''unfilled''])\n|Adds points in a ring around the given center point with the given radius, using McIlroy's Ellipse Algorithm. If \"unfilled\" is provided as an optional third argument the selection will be only that ring; otherwise the interior of the circle will also be added to the selection.\n|<tt>circle ((55,17),3)</tt>\n|-\n|ellipse (''coord'', ''xradius'', ''yradius'' [, ''unfilled''])\n|Same as the circle selection, but instead of a constant radius it is a more general ellipse whose x and y axes can be specified. Note that the des file is intended to specify the semi-x-axis and the semi-y-axis (the distances from the center to the right and top extremes of the ellipse), not the full axis lengths.\n|<tt>ellipse((55,17),10,4)</tt>\n|-\n|gradient (''type'', (''mindist'' - ''maxdist'' [, limited]), ''coord'' [, ''coord''])\n|Makes a radial gradient of probability that a space will independently be added to the selection. \n* The center of the gradient is either the single coord if only one is provided, or the line between the two coords if two are provided. \n* Within mindist of this center, no points will be added.\n* Between mindist and maxdist away from the center, each space has a probability of being added that linearly increases from 0% at mindist to 100% at maxdist. \n* Beyond maxdist, the probability for each square is either 0% if the limited flag is present, or 100% if it is missing or specified as \"unlimited\". \n* If the provided gradient type is \"square\" instead of \"radial\", the gradient will instead be square-shaped instead of circular/elliptical, but still emanating from the center point or line.\n|<tt> gradient (radial, (4-10, unlimited), (35,08),(39,08))</tt>\n|-\n|complement ''selection''\n|Inverts the selection across the whole level. Every point that was not in the selection will be added to it, and every point that was in the selection will be removed from it.\n|<tt>complement (fillrect(56,07,71,09))</tt>\n|}\n\n==MAZE-type levels==\n\nMaze-type levels begin with {{sa|MAZE}}, followed with optional {{sa|FLAGS}}, optional {{sa|INIT_MAP}}, 0 or more {{sa|MESSAGE}}s and up to 9 maze-parts, each of which consists either of {{sa|NOMAP}} or {{sa|GEOMETRY}} and {{sa|MAP}}, followed by zero or more the random register initializers, one of each ({{sa|RANDOM_MONSTERS}}, {{sa|RANDOM_OBJECTS}}, {{sa|RANDOM_PLACES}}), followed by zero or more of the map details (everything else, eg. {{sa|MONSTER}}, {{sa|OBJECT}}, {{sa|TRAP}}, etc.)\n\nThat is:\n\n*{{sa|MAZE}}\n*{{sa|FLAGS}}, optional\n*{{sa|INIT_MAP}}, optional\n*{{sa|MESSAGE}}, 0 or more\n*up to 9 map-parts, which consist of:\n**{{sa|NOMAP}} or {{sa|GEOMETRY}} and {{sa|MAP}}\n**{{sa|RANDOM_MONSTERS}}, optional\n**{{sa|RANDOM_OBJECTS}}, optional\n**{{sa|RANDOM_PLACES}}, optional\n**The rest of the definitions of this map-part\n\nExample:\n MAZE:\"test\",' '\n FLAGS:noteleport\n MESSAGE:\"Welcome!\"\n GEOMETRY:center,center\n MAP\n .....\n .L.L.\n .....\n .L.L.\n .....\n ENDMAP\n MONSTER:random,random,random\n OBJECT:'%',random,random\n\nMaze-type levels, or any level for which flags.is_maze_level is true in the code, have some different behaviors:\n* The level designer is expected to place any room furniture into rooms. Defining a throne room will only place a throne on non-maze-type levels, for instance.\n* Digging, where possible, will only dig one space, and will result in floor tiles being created instead of corridor tiles.\n* Mimics will mimic statues (instead of doors or boulders or objects).\n\n===MAZE===\n MAZE:\"foo\",'X'\n\n*<tt>foo</tt> is the unique file name which will be used for this special level, up to 8 characters. For example: <tt>soko3-2</tt>. This file name which NetHack loads is defined by the way this level is defined in [[Dungeon.def format|dungeon.def]].\n*<tt>'X'</tt> is the [[#Map characters|fill map character]]. The map will be filled with this [[dungeon feature]] before anything else is done. This can also be <tt>random</tt>, which fills the whole level with a checkerboard grid of walls and stone, so you can use {{sa|MAZEWALK}} on it.\n\nExample:\n MAZE:\"soko3-2\",' '\n\n===FLAGS===\n FLAGS:flaglist\n\nThis sets level.flags.<flag> as true for the whole level. Note that the flags are not fixed and can be changed over the course of the game: for example, raising the dead with the [[Book of the Dead]] sets level.flags.graveyard to true regardless of whether the level was previously a graveyard level.\n<tt>flaglist</tt> is one or more of the following flags, separated by commas:\n*<tt>noteleport</tt>: Teleportation within the level is blocked.\n*<tt>hardfloor</tt>: The floor is too hard to dig.\n*<tt>nommap</tt>: [[Magic mapping]] does not work.\n*<tt>arboreal</tt>: Supposedly an outdoor map. Solid walls and secret corridors will be shown as trees, digging makes floor instead of corridor and randomly created corridors are made out of floor instead of corridor.\n*<tt>shortsighted</tt>: Monsters cannot see you from far away.\n*<tt>mazelevel</tt>: Used when a ROOM-type level wants to set the maze level flag to be treated as a maze level, with the corresponding effects.\n*<tt>premapped</tt>: When the player enters the level, it is automatically mapped, including all traps and boulders. This is only used for Sokoban at the moment.\n*<tt>shroud</tt>: Unseen locations on the level will not be remembered by the hero, instead of rendering as out-of-sight map, trap, and object glyphs like they normally do. No levels currently use this flag.\n*<tt>graveyard</tt>: Treats the level as a graveyard level (causes graveyard sounds and undead have a reduced chance of leaving corpses).\n*<tt>icedpools</tt>: Ice generated with the level will be treated as frozen pools instead of frozen moats.\n*<tt>solidify</tt>: Areas outside the specified level map are made undiggable and unphaseable. (Examples: Vlad's Tower, Sokoban, the Astral Plane)\n*<tt>corrmaze</tt>: If the level is a maze (not a maze-type level, an actual maze), the maze uses corridor tiles instead of floor tiles and solid rock instead of walls. Randomly generated mazes have a 1/3 chance of having corrmaze set.\n*<tt>inaccessibles</tt>: If inaccessible areas are generated, generate ways for them to connect to the \"accessible\" area. This tries first to create a secret door connecting it to the accessible area; if that fails it tries to create a hole or trapdoor; if that fails it tries to create an escape item (teleport items or digging tools). This code is not used for inaccessible [[closet]]s, which always get a scroll of teleportation.\n\nExample:\n FLAGS:noteleport,hardfloor,graveyard\n\n===INIT_MAP===\n INIT_MAP:'X', 'Y', smoothed, joined, lighted, walled\n\nThis causes the level map to be initialized with a random map generator, similar to how the random [[Gnomish Mines]] look like.\nEach MAZE-level can contain only 0 or 1 of these definitions.\n*<tt>'X'</tt> is the \"foreground\" [[#Map characters|fill map character]]. This should be something the player can walk on, as the walkable part will be made out of this.\n*<tt>'Y'</tt> is the \"background\" [[#Map characters|fill map character]]. This will surround the foreground area, so can be solid or harmful to player.\n*<tt>smoothed</tt> is either <tt>true</tt> or <tt>false</tt>, and denotes whether the level will be \"smoothed\". This means that any foreground character surrounded by fewer than 3 foreground characters is changed to background character.\n*<tt>joined</tt> is either <tt>true</tt> or <tt>false</tt>, and denotes whether the level will be \"joined\", so that all parts are accessible by walking.\n*<tt>lighted</tt> is either <tt>lit</tt>, <tt>unlit</tt>, or <tt>random</tt>\n*<tt>walled</tt> is either <tt>true</tt> or <tt>false</tt>. This is equivalent of using a {{sa|WALLIFY}} -command.\n\nExamples:\n INIT_MAP: 'L', '.', false, false, unlit, false\n INIT_MAP: '.', ' ', true, true, random, true\n\n===MESSAGE===\n MESSAGE:\"string\"\n\nYou can have 0 or more of these per special level. Each message line gets separated with a <tt>--more--</tt> -prompt in the game.\n<tt>\"string\"</tt> is any message you want player to see when entering the level.\n\nExample (actual source from the Plane of Earth):\n MAZE:\"earth\",' '\n FLAGS: noteleport,hardfloor,shortsighted\n MESSAGE: \"Well done, mortal!\"\n MESSAGE: \"But now thou must face the final Test...\"\n MESSAGE: \"Prove thyself worthy or perish!\"\n\n===NOMAP===\n NOMAP\n\nInstead of {{sa|GEOMETRY}} and {{sa|MAP}}, you use this if you think that {{sa|INIT_MAP}} creates a good enough random map and you don't want to use any fixed map-parts.\n\nSee also {{sa|MAP}}\n\n===GEOMETRY===\n GEOMETRY:xadj,yadj\n\nThis must be followed by a {{sa|MAP}} definition, and tells the approximate position of the following MAP-part on the level.\n*<tt>xadj</tt> is one of <tt>left</tt>, <tt>half-left</tt>, <tt>center</tt>, <tt>half-right</tt>, <tt>right</tt> or <tt>random</tt>\n*<tt>yadj</tt> is one of <tt>top</tt>, <tt>center</tt>, <tt>bottom</tt> or <tt>random</tt>\n\nExample:\n GEOMETRY:left,top\n\n===MAP===\n MAP\n ...\n ...\n ...\n ENDMAP\n\nThis must be preceded by {{sa|GEOMETRY}} definition.\nYou define a map-part by \"drawing\" with [[#Map characters|map characters]] between the MAP and ENDMAP. The map can be up to 21 lines high and each line can be up to 76 chars long. Each line must also be the same length. You can also use numbers inside the map, but those will be ignored; they're considered as line numbers.\n\nSee also {{sa|NOMAP}}.\n\n===NON_DIGGABLE===\n NON_DIGGABLE:region\n\nSets the walls inside the region as non-diggable.\n\nExample:\n NON_DIGGABLE:(00,00,13,12)\n\n===NON_PASSWALL===\n NON_PASSWALL:region\n\nPlayers and monsters cannot phase through the walls inside the region\n\nExample:\n NON_PASSWALL:(00,00,13,12)\n\n===RANDOM_PLACES===\n RANDOM_PLACES:place,...\n\nWith this command you can set up to 10 coordinate-pair registers, which you can access by using <tt>place[N]</tt> instead of a pair of coordinates in any other command. The registers are shuffled at level creation time.\n\nExample:\n RANDOM_PLACES:(23,9),(37,14),(51,9)\n OBJECT:'?',\"genocide\",place[0]\n\n===RANDOM_MONSTERS===\n RANDOM_MONSTERS:'X',...\n\nWith this command you can set up 10 monster symbol registers, which you can access by using <tt>monster[N]</tt> instead of a monster symbol in any other command. The registers are shuffled at level creation time.\n\nExample:\n RANDOM_MONSTERS: 'E', 'X'\n MONSTER:monster[0],random,(27,05)\n\n===RANDOM_OBJECTS===\n RANDOM_OBJECTS:'X',...\n\nWith this command you can set up 10 object class symbol registers, which you can access by using <tt>object[N]</tt> instead of a object class symbol in any other command. The registers are shuffled at level creation time.\n\nExample:\n RANDOM_OBJECTS:'[',')','*','%'\n OBJECT:object[0],random,(39,05)\n\n===DOOR===\n DOOR:state,place\n\nPuts a door on the map.\n*<tt>state</tt> is one of the following: <tt>nodoor</tt>, <tt>locked</tt>, <tt>closed</tt>, <tt>open</tt> or <tt>random</tt>\n*<tt>place</tt> is either a pair of coordinates, a {{sa|RANDOM_PLACES}} place, or <tt>random</tt>\n\nExample:\n DOOR:locked,(10,5)\n\n===DRAWBRIDGE===\n DRAWBRIDGE:place,dir,state\n\n*<tt>place</tt> is either a pair of coordinates, a {{sa|RANDOM_PLACES}} place, or <tt>random</tt>\n*<tt>dir</tt> is one of the following: <tt>north</tt>, <tt>east</tt>, <tt>south</tt> or <tt>west</tt>\n*<tt>state</tt> is one of the following: <tt>nodoor</tt>, <tt>locked</tt>, <tt>closed</tt>, <tt>open</tt> or <tt>random</tt>\n\nNote that the drawbridge placement is different from door placement; the coordinates must be a place where the drawbridge would be when it's open, and from that place towards the direction there should be a wall, where the portcullis will be.\n\nExample:\n DRAWBRIDGE:(25,18), north, closed\n\n===REGION===\n REGION:(x1,y1,x2,y2), lighted, \"type\"\n\nDefine a region on the map with certain light-state and type.\n*<tt>lighted</tt> is one of <tt>lit</tt>, <tt>unlit</tt> or <tt>random</tt>.\n*<tt>\"type\"</tt> is one of the [[#Room types|room types]].\n\nYou can add <tt>filled</tt> or <tt>unfilled</tt>, it will denote whether the room will get stocked with the normal monsters or objects it would get. After that you can add <tt>true</tt> or <tt>false</tt> to denote whether the room is irregularly shaped. If the room is irregular, only the first pair of coordinates (x1,y1) must be inside the room, and the room must be closed off from other areas with non-floor [[#Map characters|map characters]]. Use the boundary symbol <tt>'B'</tt> in the {{sa|MAP}} to enclose an irregular room; it will be converted to floor symbol <tt>'.'</tt> after the level has been created.\n\nExamples:\n REGION:(43,12,49,16),unlit,\"ordinary\"\n REGION:(12,01,20,09),unlit,\"morgue\",unfilled\n REGION:(11,03,29,10),lit,\"temple\",filled,true\n\n===STAIR-region===\n STAIR:(x1,y1,x2,y2), (x3,y3,x4,y4), updown\n\nPlaces a stair within an area covered by (x1,y1,x2,y2) and not covered by (x3,y3,x4,y4).\n*<tt>updown</tt> is either <tt>up</tt> or <tt>down</tt>, denoting the direction of the stairs.\nIf the area is prefixed with <tt>levregion</tt> then the coordinates are relative to the whole level, otherwise the coordinates are relative to the last-defined {{sa|MAP}}.\n\nExample:\n STAIR:(0,0,79,20), (20,5,50,15), up\n STAIR:levregion(01,0,79,20), (0,0,28,12), up\n STAIR:(0,0,50,10), levregion(10,0,20,15), down\n\n===PORTAL===\n PORTAL:(x1,y1,x2,y2), (x3,y3,x4,y4),\"levelname\"\n\nPlaces a magical portal within an area covered by (x1,y1,x2,y2) and not covered by (x3,y3,x4,y4). The portal will level teleport player to the level with the name \"levelname\".\nIf the area is prefixed with <tt>levregion</tt> then the coordinates are relative to the whole level, otherwise the coordinates are relative to the last-defined {{sa|MAP}}.\n\nExample:\n PORTAL:levregion(57,01,78,19),(0,0,0,0),\"fire\"\n PORTAL:(0,0,75,19),(65,13,75,19),\"air\"\n\n===TELEPORT_REGION===\n TELEPORT_REGION:(x1,y1,x2,y2),(x3,y3,x4,y4)\n\nRestricts the area where player can end up on the level when he [[level teleport]]s or falls in there. Player will end up within an area covered by (x1,y1,x2,y2) and not covered by (x3,y3,x4,y4).\nIf the area is prefixed with <tt>levregion</tt> then the coordinates are relative to the whole level, otherwise the coordinates are relative to the last-defined {{sa|MAP}}.\nYou can also add an optional direction parameter, either <tt>up</tt> or <tt>down</tt>, which will tell when this rule is applied; when player is coming from below or above.\n\nExample:\n TELEPORT_REGION:(69,16,69,16),(0,0,0,0)\n TELEPORT_REGION:levregion(56,00,79,20),levregion(01,00,55,20),down\n\n===BRANCH===\n BRANCH:(x1,y1,x2,y2),(x3,y3,x4,y4)\n\nPlaces stairs or a magical portal to a dungeon branch within an area covered by (x1,y1,x2,y2) and not covered by (x3,y3,x4,y4).\nIf the area is prefixed with <tt>levregion</tt> then the coordinates are relative to the whole level, otherwise the coordinates are relative to the last-defined {{sa|MAP}}.\n\nExample:\n BRANCH:levregion(51,2,77,18),(0,0,40,20)\n\n===MAZEWALK===\n MAZEWALK:place,dir\n\nCreates a random maze, starting from place.\n\n*<tt>place</tt> is either a pair of coordinates, a {{sa|RANDOM_PLACES}} place, or <tt>random</tt>\n*<tt>dir</tt> is one of the following: <tt>north</tt>, <tt>east</tt>, <tt>south</tt> or <tt>west</tt>\n\nMazewalk turns map grids with solid stone (<tt>' '</tt>) into floor (<tt>'.'</tt>). From the starting position, it checks the mapgrid in the direction given, and if it's solid stone, it will move there, and turn that place into floor. Then it will choose a random direction, jump over the nearest mapgrid in that direction, and check the next mapgrid for solid stone. If there is solid stone, mazewalk will move that direction, changing that place and the intervening mapgrid to floor. Normally the generated maze will not have any loops.\nFor example\n MAP\n TTTTTTT\n T T T T\n TTTTTTT\n T T T T\n TTTTTTT\n ENDMAP\nPointing mazewalk at that will create a small maze of trees, but unless the map (at the place where it's put into the level) is surrounded by something else than solid stone, mazewalk will get out of that MAP.  Substituting floor characters for some of the trees \"in the maze\" will make loops in the maze, which are not otherwise possible. Substituting floor characters for some of the trees at the edges of the map will make maze entrances and exits at those places.\n\nIf the total area NOT covered by all maze-parts in the level is greater than 1/10 of the total area of the level, then the mazes in the level will get stocked with maze-specific stuff, such as [[minotaur]]s, traps and items, proportionally to the amount of space not covered by MAPs.\n\nMazewalk will only work if the solid stone mapgrids in the level (where the MAP was put down) are on odd-numbered squares, both horizontally and vertically. You don't have to worry about this unless your MAP is 21 rows high or 76 columns wide, in which case you'll have to either make the MAP smaller, or move the places where the solid stone squares are.\n\nAlso, MAZEWALK will fail in certain types of MAP-parts if you also use {{sa|WALLIFY}}, as that command is applied before MAZEWALKs.\n\nExample:\n MAZEWALK:(00,06),west\n\n===WALLIFY===\n WALLIFY\n\nTurns walls completely surrounded by other walls into solid stone <tt>' '</tt>.\n\n===LADDER===\n LADDER:place, updown\n\nPlaces a ladder up or down at the given place. See also {{sa|STAIRS}}.\n\n*<tt>place</tt> is either a pair of coordinates, a {{sa|RANDOM_PLACES}} place, or <tt>random</tt>\n*<tt>updown</tt> is either <tt>up</tt> or <tt>down</tt>, denoting the direction of the stairs.\n\nExample:\n LADDER:(11,05),down\n\n===GOLD===\n GOLD:place, amount\n\nPlaces amount of gold in place.\n*<tt>place</tt> is either a pair of coordinates, a {{sa|RANDOM_PLACES}} place, or <tt>random</tt>\n*<tt>amount</tt> is any positive integer number.\n\nExample:\n GOLD:(5,5),12345\n\n==ROOM-type levels==\n\nRoom-type levels begin with {{sa|LEVEL}}, followed by optional {{sa|FLAGS}}, optional {{sa|INIT_MAP}}, 0 or more {{sa|MESSAGE}}s, followed by optional random register initializers ({{sa|RANDOM_MONSTERS}} and {{sa|RANDOM_OBJECT}}), followed by 0 or more {{sa|ROOM}} and {{sa|SUBROOM}} definitions (and the contents for those rooms), followed by {{sa|RANDOM_CORRIDORS}}.\n\nThat is:\n*{{sa|LEVEL}}\n*{{sa|FLAGS}}, optional\n*{{sa|INIT_MAP}}, optional\n*{{sa|MESSAGE}}, 0 or more\n*{{sa|RANDOM_MONSTERS}}, optional\n*{{sa|RANDOM_OBJECTS}}, optional\n**{{sa|ROOM}}, 0 or more\n**contents for the room (monsters, objects, traps, etc.)\n**{{sa|SUBROOM}}, 0 or more\n***contents for the subroom (monsters, objects, traps, etc.)\n*{{sa|RANDOM_CORRIDORS}}\n\nIt's not possible to define arbitrarily shaped rooms with this type of level.\n\n===LEVEL===\n\n LEVEL: \"name\"\n\n<tt>\"name\"</tt> is the unique file name for this level. Can be up to 8 chars long. This file name is defined by the way this level is defined in [[Dungeon.def format|dungeon.def]].\n\nExample:\n LEVEL: \"oracle\"\n\n===RANDOM_CORRIDORS===\n\n RANDOM_CORRIDORS\n\nCreates random corridors between the rooms in the level, so that all rooms are accessible.\n\n===ROOM===\n\n ROOM: \"type\" [chance], lighted, pos, align, size\n\nCreates a room. The room will be placed on a position defined both by pos and align. pos defines the rough position (in a 5-by-5 grid on the screen), and align defines the room position within that. NOTE: Creation of a randomly located room may fail, especially if there's little free space to fit it on the level. Contents of such a room won't be created either.\n\n*<tt>\"type\"</tt> is one of the [[#Room types|room types]], in double quotes.\n*<tt>chance</tt> is optional; if type is something other than \"ordinary\", this represents the chance (in percent) that the room will actually be generated as this special room type. Otherwise it will be an ordinary room.\n*<tt>lighted</tt> is one of <tt>lit</tt>, <tt>unlit</tt> or <tt>random</tt>.\n*<tt>pos</tt> is either <tt>random</tt> or <tt>(xpos, ypos)</tt>, where both <tt>xpos</tt> and <tt>ypos</tt> are between 0 and 5. This is an approximate position.\n*<tt>align</tt> is either <tt>random</tt> or <tt>(xalign, yalign)</tt> and is the room alignment within the <tt>pos</tt>.\n**<tt>xalign</tt> is one of <tt>left</tt>, <tt>half-left</tt>, <tt>center</tt>, <tt>half-right</tt>, <tt>right</tt> or <tt>random</tt>\n**<tt>yalign</tt> is one of <tt>top</tt>, <tt>center</tt>, <tt>bottom</tt> or <tt>random</tt>.\n*<tt>size</tt> is either <tt>random</tt> or <tt>(width, height)</tt>.\n\nYou can also give one additional parameter, which can either be <tt>true</tt> or <tt>false</tt>. This tells whether the room will get stocked by objects and monsters it would normally get (such as shopkeepers and items for sale for shops).\n\nExample:\n ROOM: \"ordinary\", random, random, random, random\n ROOM: \"ordinary\", lit, (3,3), (center,center), (11,9)\n\n===SUBROOM===\n\n SUBROOM: \"type\", lighted, pos, size, \"parent\"\n\nCreates a room inside previously defined ROOM.\n\n*<tt>\"type\"</tt> is one of the [[#Room types|room types]].\n*<tt>lighted</tt> is one of <tt>lit</tt>, <tt>unlit</tt> or <tt>random</tt>.\n*<tt>pos</tt> is either <tt>random</tt> or <tt>(xpos, ypos)</tt>, where <tt>xpos</tt> and <tt>ypos</tt> define the absolute position of this subroom inside the parent room. (0,0) is the upper left corner of the parent.\n*<tt>size</tt> is either <tt>random</tt> or <tt>(width, height)</tt>.\n*<tt>\"parent\"</tt> is the name of the parent room, as defined with {{sa|NAME}}.\n\nYou can also give one additional parameter, which can either be <tt>true</tt> or <tt>false</tt>. This tells whether the room will get stocked by objects and monsters it would normally get (such as shopkeepers and items for sale for shops).\n\nExample:\n SUBROOM:\"shop\",lit,(10,10),(3,3),\"town\"\n SUBROOM:\"ordinary\",random,(19,2),(2,2),\"town\"\n\n===NAME===\n\n NAME: \"string\"\n\nNames the previously defined ROOM or SUBROOM. Subrooms need to know the name of their parent room, this has no other meaning.\n\nExample:\n NAME: \"town\"\n\n===CHANCE===\n\n CHANCE: int\n\nAssigns a creation chance to the previously defined ROOM or SUBROOM. The room walls and doors will get created no matter what, this just tells whether the room contents will be created. <tt>int</tt> should be in the 0-100 range. Only non-ordinary rooms can have this.\n\nExample:\n CHANCE: 90\n\n===Room DOOR===\n\n DOOR: secret, state, wall, pos\n\nCreates a door with certain state on the previously defined ROOM or SUBROOM. Note that Room DOOR format is different from MAZE-level {{sa|DOOR}}.\n\n*<tt>secret</tt> can be <tt>true</tt>, <tt>false</tt> or <tt>random</tt>\n*<tt>state</tt> is one of the following: <tt>nodoor</tt>, <tt>locked</tt>, <tt>closed</tt>, <tt>open</tt> or <tt>random</tt>\n*<tt>wall</tt> is one of the following: <tt>north</tt>, <tt>east</tt>, <tt>south</tt> or <tt>west</tt> and tells on what wall of the room the door will be created.\n*<tt>pos</tt> is either <tt>random</tt> or a positive integer, and tells how far from top or left the door will be.\n\nExample:\n DOOR: false, closed, south, random\n\n===Common syntax===\n\nThe following commands are common to both MAZE and ROOM-type levels. For the MAZE levels, the coordinates used are the previously defined MAP, for ROOM-levels, it's either the previously defined ROOM or SUBROOM.\n\n===ALTAR===\n ALTAR:place,align,type\n\nPlaces an altar in the previously defined map or ROOM or SUBROOM.\n\n*<tt>place</tt> is either a pair of coordinates, a {{sa|RANDOM_PLACES}} place, or <tt>random</tt>\n*<tt>align</tt> is either <tt>noalign</tt>, <tt>law</tt>, <tt>neutral</tt>, <tt>chaos</tt>, <tt>coaligned</tt>, <tt>noncoaligned</tt>, <tt>random</tt> or an alignment register <tt>align[N]</tt>, where N can be either 0,1 or 2.\n*<tt>type</tt> is one of <tt>sanctum</tt>, <tt>shrine</tt>, <tt>altar</tt> or <tt>random</tt>\n\nExample:\n ALTAR:(50,14),chaos,altar\n ALTAR:place[0],noalign,altar\n ALTAR:(07,09),align[0],sanctum\n\n===CONTAINER===\n\nThis defines a container that you can put items in. It accepts exactly the same parameters as {{sa|OBJECT}}. Normal content generation for this object is suppressed.\n\nExample:\n CONTAINER:('(',\"chest\"),(5,5){\n OBJECT:('/',\"wishing\") }\n\n===ENGRAVING===\n ENGRAVING:place, type, \"text\"\n\nCreates an engraving on the floor.\n\n*<tt>place</tt> is either a pair of coordinates, a {{sa|RANDOM_PLACES}} place, or <tt>random</tt>\n*<tt>type</tt> is one of <tt>dust</tt>, <tt>engrave</tt>, <tt>burn</tt>, <tt>mark</tt> or <tt>random</tt>. <tt>mark</tt> is the type used for graffiti.\n*<tt>\"text\"</tt> is the text engraved on the floor.\n\nExample:\n ENGRAVING:(12,03), engrave, \"You are now entering the Gnome King's wine cellar.\"\n\n===FOUNTAIN===\n FOUNTAIN:place\n\nPlaces a fountain on the map.\n\n*<tt>place</tt> is either a pair of coordinates, a {{sa|RANDOM_PLACES}} place, or <tt>random</tt>\n\nExample:\n FOUNTAIN:(10,08)\n\n===GRAVE===\n GRAVE:place,message\n\nPlaces a [[headstone]] on the map.\n*<tt>place</tt> is either a pair of coordinates, a {{sa|RANDOM_PLACES}} place, or <tt>random</tt>\n*<tt>message</tt> is either a string which will be the epitaph on the grave, <tt>random</tt> (to place a random epitaph), or it can be left off entirely, in which case the grave will be blank.\n\nExamples:\n GRAVE:(10,18),\"Epitaph goes here\"\n GRAVE:(10,18),random\n GRAVE:(10,18)\n\n===MONSTER===\n MONSTER:'X',\"monst\",place\n\n*<tt>'X'</tt> is the monster class symbol, or <tt>random</tt>, or a {{sa|RANDOM_MONSTERS}} index\n*<tt>\"monst\"</tt> is the specific monster, or <tt>random</tt>\n*<tt>place</tt> is either a pair of coordinates, a {{sa|RANDOM_PLACES}} place, or <tt>random</tt>\n\nOther things you can add to the monster definition:\n*<tt>hostile</tt> or <tt>peaceful</tt>\n*<tt>asleep</tt> or <tt>awake</tt>\n*For mimics and other shapechangers you can also add the following:\n**<tt>m_feature \"[[dungeon_feature]]\"</tt> to force the mimic to be a dungeon feature.\n**<tt>m_object \"object_name\"</tt> to force the mimic to be an object. object_name is the name of an object as they are in [[objects.c]]\n**<tt>m_monster \"monster_name\"</tt> to force the shapechanger to be a certain monster.\n*<tt>\"Name\"</tt> to name the monster.\n\nOptionally, you can put <tt>[NN%]</tt> right after <tt>MONSTER</tt> to make the monster generation optional. NN is a percentage chance of the monster being generated when the level is created.\n\nExamples:\n MONSTER:'v',\"dust vortex\",(42,05)\n MONSTER:'E',\"earth elemental\",(39,06),peaceful\n MONSTER:'&',\"Pestilence\",place[0],hostile\n MONSTER:random,random,random\n MONSTER:random,random,(01,01), asleep\n MONSTER:monster[0],random,(27,05)\n MONSTER:'m',\"giant mimic\",place[1],m_feature \"fountain\"\n MONSTER:'m',random,place[0], m_object \"luckstone\"\n MONSTER:'@',\"rogue\",(35,06),peaceful,\"Pug\"\n MONSTER[50%]:'P', \"green slime\", random\n\n===OBJECT===\n OBJECT:('X',\"name\"),place\n\nEach map-part can contain any number of object definitions.\n*<tt>'X'</tt>: a character denoting one of the object classes.\n*<tt>\"name\"</tt>: either an object name as listed in [[objects.c]], or <tt>random</tt>\n*<tt>place</tt>: either a pair of coordinates, a {{sa|RANDOM_PLACES}} place, or <tt>random</tt>, or <tt>contained</tt>. If contained, then this object will be placed in the previously defined {{sa|CONTAINER}}.\n\nOptional stuff you can add to the object definition:\n\n*<tt>cursestate, \"monster_id\", spe</tt>\n*<tt>cursestate, spe</tt>\n*<tt>\"monster_id\", spe</tt>\n*<tt>name:\"name_given_object\"</tt>\n*<tt>quantity:int</tt>\n\nWhere\n*<tt>cursestate</tt> is one of <tt>blessed</tt>, <tt>uncursed</tt>, <tt>cursed</tt> or <tt>random</tt>.\n*<tt>\"monster_id\"</tt> is a monster type, as defined in {{refsrc|src/monst.c|1|nethack=3.6.7}}\n*<tt>spe</tt> is an integer, and defines different things depending on what kind of object is generated:\n**enchantment for [[armor]] and [[weapon]]s\n**charges for [[wands]], [[rings]], [[magic marker]]s and everything else that has charges.\n**historic and gender bit for [[statue]]s. 1 is historic, 2 is male, 4 is female. Adding the values together is possible, so you can create eg. historic, male statue with value 3 and historic, female with 5. Leaving the gender specification out will either result in a random gender, or if the monster is always of certain gender, then the statue will be that gender too. (eg. nymphs)\n**[[tin]]s: 1 means spinach, -1 is home-made.\n**[[container]]s: 1 means the box contains [[Schroedinger's Cat]].\n**[[oil lamp]]s and [[candle]]s: 0 means the lamp is out of oil.\n**[[Candelabrum]]: how many candles are attached to it.\n**[[scroll of mail]]: 1 means it was not delivered to current player.\n**[[egg]]s: 1 means hero laid it.\n**[[chest]]s: 2 means it's a royal coffer in a [[throne room]].\n*<tt>name:\"name_of_object\"</tt> gives the object a name as though the #name command had been used.\n*<tt>quantity:int</tt> specifies the quantity of objects just defined to be created.\n\nOptionally, you can put <tt>[NN%]</tt> right after <tt>OBJECT</tt> to make the object generation optional. NN is a percentage chance of the object being generated when the level is created.\n\nExamples:\n OBJECT:('%', \"food ration\"), random\n OBJECT:('*', random), (10,10)\n OBJECT:'?', \"genocide\", place[0]\n OBJECT[10%]:('\"', \"amulet of life saving\"), random\n OBJECT:('%', \"corpse\"), random, \"archeologist\", 0\n OBJECT[50%]:(')', \"scimitar\"), contained, blessed, +2\n OBJECT:'`', \"statue\", (0,0), \"forest centaur\", 1\n OBJECT:('(', \"crystal ball\"), (17,08), blessed, 5,name:\"The Orb of Fate\"\n OBJECT:('%',\"egg\"), (05,04), montype:\"yellow dragon\"\n\n===SINK===\n SINK:place\n\nPlaces a sink on the map.\n*<tt>place</tt> is either a pair of coordinates, a terrain selection, or random.\n\n===STAIR===\n STAIR:place, updown\n\nPlaces a stair up or down at the given coordinates. See also {{sa|STAIR-region}} and {{sa|LADDER}}.\n*<tt>place</tt> is either a pair of coordinates, a {{sa|RANDOM_PLACES}} place, or <tt>random</tt>\n*<tt>updown</tt> is either <tt>up</tt> or <tt>down</tt>, denoting the direction of the stairs.\n\nExample:\n STAIR:(70,08), up\n STAIR:random, down\n STAIR:place[3], up\n\n===TRAP===\n TRAP:\"name\",place\n\n*<tt>\"name\"</tt> is the [[#Trap names|trap's name]], or <tt>random</tt>\n*<tt>place</tt> is either a pair of coordinates, a {{sa|RANDOM_PLACES}} place, or <tt>random</tt>\n\nOptionally, you can put <tt>[NN%]</tt> right after <tt>TRAP</tt> to make the trap generation optional. NN is a percentage chance of the trap being generated when the level is created.\n\nExamples:\n TRAP:\"hole\",(12,10)\n TRAP:\"anti magic\",random\n TRAP:random,random\n TRAP[25%]:\"polymorph\",random\n\n===Map characters===\n{|class=\"prettytable striped\"\n!character\n![[dungeon feature]]\n|-\n|<tt>' '</tt>\n|solid wall\n|-\n|<tt>'#'</tt>\n|corridor\n|-\n|<tt>'.'</tt>\n|room floor (Unlit, unless lit with {{sa|REGION}}-command)\n|-\n|<tt>'-'</tt>\n|horizontal wall\n|-\n|<tt>'&#124;'</tt>\n|vertical wall\n|-\n|<tt>'+'</tt>\n|door (State is defined with {{sa|DOOR}} -command)\n|-\n|<tt>'A'</tt>\n|air\n|-\n|<tt>'B'</tt>\n|crosswall / boundary symbol hack (See {{sa|REGION}})\n|-\n|<tt>'C'</tt>\n|cloud\n|-\n|<tt>'S'</tt>\n|secret door\n|-\n|<tt>'H'</tt>\n|secret corridor\n|-\n|<tt>'{'</tt>\n|fountain\n|-\n|<tt>'\\'</tt>\n|throne\n|-\n|<tt>'K'</tt>\n|sink\n|-\n|<tt>'&#125;'</tt>\n|moat\n|-\n|<tt>'P'</tt>\n|pool of water\n|-\n|<tt>'L'</tt>\n|lava pool\n|-\n|<tt>'I'</tt>\n|ice\n|-\n|<tt>'W'</tt>\n|water\n|-\n|<tt>'T'</tt>\n|tree\n|-\n|<tt>'F'</tt>\n|iron bars\n|}\n\n===Trap names===\n\"anti magic\", \"arrow\", \"bear\", \"board\", \"dart\", \"falling rock\", \"fire\", \"hole\", \"land mine\", \"level teleport\", \"magic portal\", \"magic\", \"pit\", \"polymorph\", \"rolling boulder\", \"rust\", \"sleep gas\", \"spiked pit\", \"statue\", \"teleport\", \"trap door\", \"web\"\n\n===Room types===\n\"ordinary\", \"throne\", \"swamp\", \"vault\", \"beehive\", \"morgue\", \"barracks\", \"zoo\", \"delphi\", \"temple\", \"anthole\", \"cocknest\", \"leprehall\", \"shop\", \"armor shop\", \"scroll shop\", \"potion shop\", \"weapon shop\", \"food shop\", \"ring shop\", \"wand shop\", \"tool shop\", \"book shop\", \"candle shop\"\n\n==History==\n.des files and lev_comp first appeared in [[NetHack 3.0.0]].\n\n==References==\n<references/>\n\n[[Category:Annotations]]\n{{nethack-360}}"}
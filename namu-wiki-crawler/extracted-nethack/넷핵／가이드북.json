{
  "title": "넷핵/가이드북",
  "data": "[목차]\n[clearfix]\n== 개요 ==\nGuidebook.txt\n[[NetHack]]의 게임 파일 내에 있는 텍스트 파일.\n이름에서 알 수 있듯이 일종의 설명서다.\n\n||<:> 공포의 미궁으로의 안내\n(NetHack을 위한 안내서)\n\n\n원판 - 에릭 S. 레이몬드\n(마이크 스테펜슨과 여러 사람들의 도움으로 3.6 판에 맞게 수정 및 보충됨)\n\n2020년 1월 27일 ||\n== 서론 ==\n최근, 당신은 매일의 일상이 실망스럽고 아득하게 느껴지기 시작했다.\n많은 날 동안 탐험하거나 훔치고, 전쟁을 벌인다거나 싸우는 이상한 꿈들이 당신의 꿈에서 떠나지 않고 있지만, 당신은 그 이유를 확신하지 못한다.\n당신은 한평생 이러한 꿈들을 꾸고 있었지만, 지금까지 무슨 이유에서인지 이것들을 잊어버릴 수 있었던 것이 아니었을까 하고 생각한다. \n어떤 날 밤 당신은 꿈 속에서 던전의 구석구석에 도사리고 있는 기이하고 강력한 생명체들의 생생한 모습에, 겁에 질려 갑자기 깨어나 비명을 지른다. \n혹시 당신의 꿈을 괴롭히는 이러한 것들이 진짜일까?\n하루가 지날 때마다, 당신은 유적 근처의 불가사의한 동굴에 들어가고 싶은 욕망이 커져감을 느낀다. 하지만, 매일 아침 당신은 이전에 동굴에 들어갔다가 돌아오지 않은 자들의 이야기를 떠올리며 그 생각을 재빨리 머릿속에서 지운다.\n결국 당신은 꿈에 나온 환상적인 장소를 찾아내고픈 갈망을 견디지 못하게 된다.\n어쨌든, 동굴에서 시간을 보내고 난 다음 이 길로 돌아온 다른 여행자들은 처음 지나왔을 때보다는 대개 더 나아 보였으니까.\n그리고 돌아오지 않은 자들이 가는 것을 멈추었다고 누가 그러던가? \n\n수소문 끝에, 당신은 찾을 수만 있다면 엄청난 부를 가져다 준다는, 옌도르의 부적이라는 싸구려 장식에 대해 어떤 사람들로부터 듣게 된다.\n심지어 당신은 어느 한 전설에서 부적을 찾는 이는 신들로부터 영생을 얻게 된다는 것도 듣게 된다.\n소문에 의하면 부적은 공포의 미궁 안쪽 깊숙히 있는 게헨놈의 골짜기 너머 어딘가에 있다고 한다.\n그 전설들을 듣자마자, 당신은 자신이 동굴에 내려가 그들이 말하는 부적을 찾아야 하는 데에 심오하고 알려지지 않은 이유가 있었다는 것을 깨닫는다.\n만일 부적의 힘에 대한 소문이 거짓이라 할지라도, 당신은 적어도 자신의 모험담을 마을의 음유시인들에게 상당한 금액에 팔 수 있을 거라고 결심한다.\n여정 중에 꿈에서 나온 무시무시하고 불가사의한 생명체들을 맞닥뜨렸다면 더더욱.\n당신은 마을 여관에서 용기를 돋우며 마지막 밤을 보내지만, 여관의 벽에 자신의 성공이 써붙혀질 가능성이 계속 낮아지는 것을 보며 덩달아 우울해진다.       \n\n아침이 되고, 당신은 잠에서 깨어나 소지품을 챙겨 던전으로 출발한다.\n며칠간의 순조로운 여행 끝에, 당신은 공포의 미궁으로의 입구를 가리키는 고대 유적에 도달했다. 밤이 깊었으므로, 당신은 입구에 야영지를 만들고 광활한 하늘 아래서 밤을 보낸다. 다시 아침이 밝아오자 당신은 장비를 챙겨 밖에서의 마지막이 될 지도 모르는 식사를 먹고는 던전에 들어간다...\n== 무슨 일이 벌어지고 있는 거죠? ==\n당신은 이제 막 NetHack의 게임을 시작했습니다.\n당신의 목표는 가능한 많은 보물을 모으고, 옌도르의 부적을 되찾아 공포의 미궁에서 살아나오는 것입니다.\n\n모험의 위험을 맞닥뜨릴 당신의 능력과 힘은, 당신의 배경과 훈련에 따라 다를 것입니다:             \n               \n * ''고고학자 (Archeologist)''\n고고학자들은 던전을 매우 잘 이해합니다; 이것은 그들로 하여금 빠르게 움직이고 현지의 더러운 괴물들에게 은밀히 다가갈 수 있게 합니다. 이들은 적절한 과학적 탐사를 위한 도구들을 착용한 채로 시작합니다.\n\n * ''야만인 (Barbarian)'' \n야만인들은 내륙 지역에서 온 용사들이며, 전투에 매우 강합니다. 이들은 쓸모없지만 비범한 힘과, 믿음직스러운 [[사슬 갑옷]], 그리고 거대한 [[양손검]]을 지니고 있습니다.\n\n * ''원시인 (Cavemen)''\n원시인들은 굉장한 힘을 가진 채로 시작합니다. 하지만 불행하게도 이들의 무기는 신석기 시대의 것입니다.\n\n * ''치유사 (Healer)''\n치유사들은 의술과 제약(製藥)에 정통합니다. 이들은 체력을 회복시키거나, 통증을 가라앉히고, 마취시키며, 독을 중화시킬 수 있는 약초에 대해 알고 있습니다; 그리고 이들의 도구로 어떤 대상이 건강한지 혹은 병들었는지 알 수 있습니다. 이들의 의술은 이들로 하여금 던전에 들어가 어디에서건 꽤나 많은 양의 돈을 벌게 해줍니다.\n \n * ''기사 (Knight)''\n기사들은 기사도 정신의 이상에 대한 헌신과, 이들의 갑옷의 뛰어난 우수성으로 인해 일반 척후병과 구별됩니다.\n\n * ''수도승 (Monk)''\n수도승들은 혹독한 육체적 훈련과 정신적 수련으로 인해, 무기 없이도 효율적으로 싸울 수 있게 된 고행자입니다. 이들은 갑옷을 입지 않지만, 높아진 기동성으로 이를 보완합니다.\n\n * ''사제 (Priest)''\n사제[* 원문에서는 Priests and Priestesses로 남사제와 여사제를 구분하지만, 한국어의 언어 특성 상 사제로 통일했습니다.]들은 공격적인 성직자이며, 무기, 갑옷, 그리고 기적 계열의 기술들을 통해 정의라는 대의를 나아가게 만드는 십자군 전사입니다. 이들은 기도를 통해 신들과 교제할 수 있는 능력으로 종종 위험에서 빠져나올 수 있지만, 반대로 이로 인해 위험에 빠지기도 합니다.\n\n * ''레인저 (Ranger)''\n레인저들은 대개 숲 속에 살고 있으며, 일부는 던전에서 아주 조금 떨어진 곳이라고 말하고는 합니다. 하지만 이들은 궁술, 추격, 은밀한 움직임에 있어서는 전문가입니다.\n\n * ''도적 (Rogue)''\n도적들은 민첩하고 은밀한 도둑들이며, 자물쇠, 함정, 그리고 독에 대한 지식을 가지고 있습니다. 이들의 강점은 깜짝 놀래키는 데에 있으며, 이를 통해 큰 이득을 얻습니다.\n\n * ''사무라이 (Samurai)''\n사무라이들은 봉건시대 일본의 정예 무사입니다. 이들은 가볍게 무장했으며 민첩하고, 치명적인 예리함을 가진 두개의 칼, 다이쇼를 지니고 있습니다.\n\n * ''관광객 (Tourist)''\n관광객들은 쇼핑에 적격인 많은 양의 금화와, 신용 카드, 많은 식품, 지도 몇 개, 그리고 값비싼 카메라를 들고 시작합니다. 대부분의 몬스터들은 카메라에 찍히는 것을 싫어합니다.\n\n * ''발키리 (Valkyrie)''\n발키리들은 강한 여성 전사입니다. 북부 지방에서의 고된 일생은 이들을 강하게 만들었으며, 극한의 추위에 익숙해지고, 은밀함과 교활함을 불어넣어 주었습니다.\n\n * ''마법사(Wizard)''\n마법사들은 마법에 대한 지식과, 다양한 마법 아이템들, 그리고 드웨머의 기술에 대한 각별한 애호감을 가지고 시작합니다. 비록 초면에는 겉으로 보기에 약하고, 쉽게 이길 수 있을 것처럼 보이지만, 숙련된 마법사는 치명적인 적입니다.\n----\n당신은 또한 캐릭터의 종족을 선택할 수 있습니다 (제한 내에서 가능합니다; 대부분의 직업들은 어떤 종족이 그것들에 적합한지에 대한 제한사항을 가집니다.):\n\n * ''드워프 (Dwarf)''\n드워프들은 인간이나 엘프보다 작지만, 개개인이 다부지고 튼튼합니다. 드워프들의 가장 주목할 만한 특성은 채굴과 금공 (金工)에 있어 엄청난 전문 기술입니다. 드워프제 갑옷은 엘프들의 [[미스릴]] 갑옷에도 뒤지지 않는 품질이라고 합니다.\n\n * ''엘프 (Elf)''\n엘프들은 민첩하고, 빠르고, 예민합니다; 엘프에게서 빠져나가는 이들은 극소수입니다. 엘프들의 뛰어난 손재주는 무기와 갑옷에 있어 그들에게 이점을 제공합니다.\n\n * ''노움 (Gnome)''\n노움들은 일반적으로 드워프들과 비슷하지만, 더 작습니다. 노움들은 전문 광부로 알려져 있으며, 공포의 미궁 내부에는 이 종족에 의해 지어진, 온갖 보물과 위험으로 가득찬 비밀의 지하 채굴 시설이 존재한다고 알려져 있습니다.\n\n * ''인간 (Human)''\n인간은 지상에서 가장 흔한 종족이며, 따라서 보통 다른 종족들과 많이 비교되는 기준이 됩니다. 비록 이들에게 특별한 능력은 없지만, 어떤 직업에서든 성공할 수 있습니다.\n\n * 오크 (Orc)\n오크들은 잔혹하고 야만적인 종족으로, 모든 살아있는 것들을 싫어합니다 (다른 오크들도 포함해서). 그 중에서도 다른 모든 것들보다 엘프를 월등히 싫어하며, 기회만 되면 무리하면서까지 죽이려 들 것입니다. 오크들이 만든 갑옷과 무기는 보통 하급품입니다.\n== 화면에 이게 다 뭐에요? ==\n화면에는 당신이 현재 던전 레벨에서 어디에 있었고 무엇을 보았는지에 대한 지도가 표시됩니다; 이는 당신이 레벨을 탐사함에 따라 화면에 나타납니다.\n\nNetHack의 선조 [[로그#s-2.2|Rogue]]가 처음 등장했을 때, 그것의 화면 배치는 컴퓨터 판타지 게임들 사이에서는 거의 유일하다시피 했습니다. 그때 이후로, 화면 배치는 예외라기보다는 하나의 기준으로 자리잡았습니다; NetHack은 이 좋은 전통을 이어가고 있습니다. 가짜-영어 문장으로 명령어를 인식하고, 결과를 단어로 설명하는 [[텍스트 어드벤처 게임]]들과는 다르게, NetHack의 명령어들은 전부 하나 또는 두개의 키를 누르는 것이며, 결과는 화면에 그래픽으로 표시될 것입니다. 최소 화면 크기로는 높이 24줄 x 너비 80칸[* 해외에서는 이를 80/24 rule이라고 부르는데, 왜 하필 80칸이냐면 터미널에서 한 줄을 의미하는 IBM 펀치카드가 80개의 문자를 표시했기 때문. 24줄은 당시 DEC가 VT50과 VT05 터미널을 공개했을 당시 디스플레이 [[RAM]]이 1[[킬로바이트|KB]]였기 때문에 최대치인 12줄이었는데, 후속 부품인 VT52와 VT100에서는 이것의 2배가 됨으로써 24줄로 늘어나게 된 것. 여담으로 이를 최초로 지원한 기기는 1983년에 출시된 [[애플 II#s-4.3|애플 lle]]. 자세한 사항은 [[http://exple.tive.org/blarg/2019/10/23/80x25/]]를 참고할 것.]이 권장됩니다; 만일 화면이 이보다 더 클 경우, 오직 21x80의 부분만이 지도로 쓰이게 될 것입니다.\n\nNetHack은 맹인인 플레이어들조차도 [[점자]] 리더나 음성 합성 프로그램의 도움을 받아 플레이할 수 있습니다. 맹인을 위해 NetHack을 설정하는 방법은 이 문서의 뒷부분에 나와 있습니다.\n\nNetHack은 매번 당신이 플레이할 때마다 새로운 던전을 생성합니다; 심지어 제작자들조차 여러 번 승리했음에도 불구하고 이를 즐겁고 흥미진진한 게임으로 생각하고 있습니다.\n\nNetHack은 다양한 디스플레이 옵션을 제공합니다. 당신이 이용할 수 있는 옵션은 포트별로, 당신의 하드웨어나 소프트웨어의 기량별로, 그리고 당신의 게임 파일이 생성될 때 다양한 컴파일-타임 옵션이 설정되었는지에 따라 다를 것입니다. 가능한 세 가지 디스플레이 옵션으로는: 흑백 문자 인터페이스, 색깔 문자 인터페이스, 그리고 '타일'이라고 불리는 작은 그림들을 사용하는 그래픽 인터페이스가 있습니다. 두가지의 문자 인터페이스는 글꼴을 다른 문자들로 대체시키는 것을 허용하지만, 기본 지정으로는 모든 것을 표시할 때 표준 [[ASCII]]를 사용하게끔 되어 있습니다. 게임플레이에 있어 여러 디스플레이 옵션 간에는 차이점이 전혀 없습니다. 저희가 가이드북에서 타일이나 색깔을 재현할 수 없을 뿐더러, 모든 포트에 공통적으로 존재하기 때문에, 당신이 게임 중에 화면에서 보게 될 것들을 가리킬 때에는 흑백 문자 화면에서의 기본 [[ASCII]] 문자를 사용할 것입니다.\n\nNetHack에서 무슨 일이 벌어지고 있는지 이해하기 위해선, 먼저 당신은 NetHack이 화면에서 무엇을 하고 있는지를 이해해야 합니다. NetHack의 화면은 [[텍스트 어드벤처 게임]]에서의 \"You see ...\" (당신은 ~을 보고 있습니다) 설명을 대체합니다. 그림 1은 NetHack의 화면이 어떻게 생겼는지에 대한 견본입니다. 당신의 플랫폼에 따라 화면은 다르게 보일 것입니다.\n\n[[파일:NethackGuidebook1.png]]\n== 상태 표시줄 (하단) ==\n화면 아래의 두 줄에는 당신의 현재 상태를 설명하는 몇가지 짧은 정보들이 있습니다. 둘 중 어느 한 줄이라도 화면의 너비보다 길어지면, 다 보이지 않을 수도 있습니다. 이하는 각 항목들이 무엇을 의미하는지에 대한 설명입니다 (당신의 설정에 따라 이하의 항목들이 다 보이지 않을 수도 있습니다):\n\n * ''등급 (Rank)''\n당신의 캐릭터의 이름과 전문 등급 (경험치 레벨에 기반합니다. 아래를 참고하십시오.)\n\n * ''힘 (Strength / St)''\n당신의 캐릭터의 힘 수치; 당신의 6가지 기본 특성 중 하나입니다. 인간 캐릭터의 특성 수치는 3부터 18 사이로 정해집니다; 인간 종족이 아닐 경우 이 한계치를 넘기도 합니다. (종종 당신은 18/xx 형태로 표시되는 super strengths를 얻거나 마법으로 한계치를 넘을 수 있을 것입니다.) 당신의 힘 수치가 높을수록 당신은 강합니다. 힘 수치는 당신이 물리적인 일을 얼마나 성공적으로 잘 해결하는지 여부와 전투에서 입히는 피해량, 그리고 들고 다닐 수 있는 물건 수량을 결정합니다. non-humans may exceed  these  limits (occasionally you may get super-strengths of the form 18/xx, and magic can also cause attributes  to  exceed  the  normal limits).   The  higher  your strength, the stronger you are. Strength  affects  how successfully  you  perform  physical tasks,  how  much damage you do in combat, and how much loot you can carry.\n\n * ''민첩 (Dexterity / Dx)''\n민첩은 당신이 전투에서 명중시키거나, 함정을 피하거나, 민첩함 또는 물건의 조작을 요하는 다른 일들을 할 확률에 영향을 미칩니다.\n\n * ''체력 (Constitution / Co)''\n체력은 당신이 부상이나 스테미나에 영향을 주는 다른 상태에서 회복하는 능력에 영향을 미칩니다. 힘이 낮거나 보통이라면, 체력 역시 운반 가능한 물건량에 영향을 미칩니다. 힘이 충분히 높다면, 당신의 체력은 운반 가능한 물건량과 크게 상관 없습니다. \nConstitution affects your ability to recover  from  injuries\nand  other strains on your stamina.  When strength is low or\nmodest, constitution also affects how much  you  can  carry.\nWith  sufficiently high strength, the contribution to carrying capacity from your constitution no longer matters.\n\n * ''지능 (Intelligence / In)''\n지능은 당신이 주문을 시전하거나 주문서을 읽는 능력에 영향을 미칩니다.\nIntelligence affects your ability to cast  spells  and  read spellbooks.\n\n * ''지혜 (Wisdom / Wi)''\n지혜는 당신의 실질적인 경험(특히 마법을 다룰 때)에서 비롯됩니다. 당신의 마법 에너지에 영향을 미칩니다.\nWisdom comes from your practical experience (especially when\ndealing with magic).  It affects your magical energy.\n\n * ''카리스마 (Charisma / Ch)''\n카리스마는 다른 존재가 당신에게 보이는 반응에 대해 영향을 미칩니다. 대표적으로, 상점주인이 제시하는 가격에 영향을 줍니다.\n\n * 성향\n질서, 중립, 또는 혼돈. 종종 질서가 선이고 혼돈이 악으로 받아들여지지만, 합법과 도덕이 항상 일치하는 건 아닙니다. 당신의 성향은 다른 몬스터들이 당신에게 어떻게 반응하는지에 영향을 미칩니다. 같은 성향의 몬스터들은 비적대적일 가능성이 높은 반면, 반대 성향의 몬스터들은 당신의 존재에 심각하게 불쾌해할 가능성이 높습니다.\n\n * Dungeon Level\n당신이 얼마나 던전 깊이 들어와있는지를 나타냅니다. 당신은 레벨 1에서 시작하고 던전 깊이 들어갈수록 레벨은 증가합니다. \n어떤 레벨은 특별하기에 숫자 대신 이름이 표기됩니다. Amulet of Yendor는 대략 20층 아래 어딘가에 있다고 알려져 있습니다.\nHow deep you are in the dungeon.  You start at level one and the  number  increases  as  you  go deeper into the dungeon.\nSome levels are special, and are identified by  a  name  and not  a  number.  The Amulet of Yendor is reputed to be somewhere beneath the twentieth level.\n\n * ''금화 ($)''\n당신이 자유로이 들고다니는 금붙이의 개수입니다. 용기 속에 감춰둔 금붙이는 표기되지 않습니다.\nThe number of gold pieces you  are  openly  carrying.   Gold which you have concealed in containers is not counted.\n\n * ''체력 (HP)''\n당신의 현재 체력과 최대 체력입니다. 체력은 당신이 죽기 전 얼마나 많은 대미지를 견딜 수 있는지를 나타냅니다. 당신이 전투에서 많이 맞을수록 체력은 그만큼 낮아집니다. 체력은 휴식을 취하거나 마법 아이템, 주문을 통해 회복할 수 있습니다. 괄호 내의 숫자는 당신의 최대 체력을 나타냅니다.\n\n * Power\n주문 점수입니다. 이는 당신이 주문을 외우기 위한 신비한 기운(마나)를 얼마나 사용할 수 있는지를 나타냅니다. 이 역시 휴식 시 재생됩니다.  \nSpell points.  This tells you how much mystic energy  (mana) you  have  available for spell casting.  Again, resting will regenerate the amount available.\n\n * [[Armor Class|방어력 (Armor Class)]]\n당신의 방어구가 얼마나 효과적으로 적대적인 생물의 공격을 막는지를 나타냅니다. 수치가 낮을수록 방어구는 효과적입니다; 음수값을 갖는 것 역시 가능합니다. \nA measure of how effectively your armor stops blows from unfriendly  creatures.  The lower this number is, the more effective the armor; it is quite possible to have negative armor class.\n\n * 경험치 (Experience / Xp)\n당신의 현재 경험치 레벨과 경험치입니다. 당신은 탐험하며 경험치를 얻게 됩니다. 특정 경험치 합계에 도달할 때마다, 당신은 경험치 레벨을 얻게 됩니다. 경험이 풍부할 수록, 더 능숙하게 싸우고, 마법 공격들을 견뎌내게 됩니다. Many dungeons show only your experience level here.\n\n * ''시간 (Time)''\n지금까지 경과한 턴의 수입니다. '''time''' 옵션을 설정했을 때에만 표시됩니다.\n\n * 상태\n허기:  당신의 현재 허기 상태입니다. 값으로는 배부름 (Satiated), 배고프지 않음 (또는 보통), 배고픔 (Hungry), 허약함 (Weak), 그리고 기절 (Fainting)이 있습니다. 보통일 때에는 표시되지 않습니다.\n\n * Encumbrance:  an indication of how what you are carrying affects your ability to move.  Values are Unencumbered, Encumbered,  Stressed,  Strained, Overtaxed, and Overloaded.  Not shown when Unencumbered.\n\n * Fatal conditions: Stone (aka Petrifying, turning to  stone),\nSlime  (turning into green slime), Strngl (being strangled), FoodPois (suffering  from  acute  food  poisoning),  TermIll (suffering from a terminal illness).\n\n * Non-fatal  conditions: Blind (can't see), Deaf (can't hear),\nStun (stunned), Conf (confused), Hallu (hallucinating).\n\n * Movement modifiers: Lev  (levitating),  Fly  (flying),  Ride\n(riding).\n\nOther conditions and modifiers exist, but there isn't enough room to display them with the other status fields.  The `^X' command shows all relevant status conditions.\n== 상태 표시줄 (상단) ==\n3.2.  The message line (top)\n\nThe top line of the screen is reserved for messages that describe things that are impossible to represent visually.  If  you\nsee a \"--More--\" on the top line, this means that NetHack has another message to display on the screen, but it wants to make certain that  you've read the one that is there first.  To read the next message, just press the space bar.\n\nTo change how and what messages are  shown  on  the  message line, see \"Configuring Message Types\" and the verbose option.\n== 지도 (화면의 나머지) ==\n3.3.  The map (rest of the screen)\n\nThe  rest  of the screen is the map of the level as you have explored it so far.  Each symbol on the screen  represents  something.   You  can  set various graphics options to change some of\nthe symbols the game uses; otherwise, the game will  use  default symbols.  Here is a list of what the default symbols mean:\n\n|| - 와 | || 방의 벽 또는 열린 문 또는 무덤 (|). ||\n|| . || 방의 바닥 또는 얼음 또는 문 없는 출입구. ||\n|| # || 통로 또는 철창 또는 나무 또는 싱크대 (만약 당신의 던전에 싱크대가 있다면) 또는 도개교. ||\n|| \\> || 내려가는 계단: 다음 레벨로 향하는 길입니다. ||\n|| < || 올라가는 계단: 이전 레벨로 향하는 길입니다. ||\n|| + || 닫힌 문 또는 당신이 배울 수 있을수도 있는 주문이 담긴 주문서. ||\n|| @ || 당신의 캐릭터 또는 인간. ||\n|| $ || 금화 더미. ||\n|| ^ || 함정 (감지한 후). ||\n|| ) || 무기 ||\n|| [ || 옷 또는 갑옷 ||\n|| % || 무언가 먹을 수 있는 것 (반드시 먹어도 안전한 것은 아님) ||\n|| ? || 두루마리 ||\n|| / || 지팡이 ||\n|| = || 반지 ||\n|| ! || 물약 ||\n|| ( || 유용한 아이템 (곡괭이, 열쇠, 램프 등) ||\n|| \" || 부적 또는 거미줄 ||\n|| * || 보석 또는 돌 (가치가 있을 수도, 없을 수도 있습니다) ||\n|| ` || 바위 또는 조각상 ||\n|| 0 || 철공 ||\n|| _ || 제단 또는 쇠사슬 ||\n|| { || 분수 ||\n|| } || 물웅덩이 또는 해자 또는 용암 웅덩이 ||\n|| \\ || 화려한 왕좌 ||\n|| a-zA-Z || 이외의 다른 기호들\n\nLetters  and certain other symbols represent the various inhabitants of the Mazes of Menace.  Watch out,  they  can  be\n nasty and vicious.  Sometimes, however, they can be helpful.\n\n I    This marks the last known location of an invisible or otherwise unseen monster.   Note  that  the  monster  could  have moved.  The `F' and `m' commands may be useful here.\n\nYou  need  not  memorize  all these symbols; you can ask the game what any symbol represents with the  `/'  command  (see  the next section for more info). ||\n== 명령어 ==\n명령어는 해당 명령어가 지정된 하나 혹은 두 개의 문자를 누르거나, 확장 명령어 입력란에 명령어의 이름을 넣음으로써 발동할 수 있습니다.\n\"search\"(탐색)를 비롯한 일부 명령어들은 NetHack에서 추가적인 정보를 요구하지 않습니다. 하지만 다른 명령어들은 방향이나, 사용할 물건 등의 추가적인 정보를 필요로 할 수도 있습니다. \n이렇듯 추가적인 정보를 필요로 하는 명령어들에 대해서는, NetHack은 당신에게 선택지의 메뉴 또는 명령줄 프롬프트를 제시할 것입니다. 당신에게 무엇이 주어질 지는 당신이 '''menustyle''' 옵션을 어떻게 설정했냐에 따라 달라질 것입니다.          \n\n예시로, 흔한 질문인 \"What do you want to use? [a-zA-Z ?*]\" (무엇을 사용하시겠습니까?)의 경우, 당신이 소지중인 물건을 고르라고 묻습니다.\n여기서, \"a-zA-Z\"는 당신이 입력할 수 있는 소지품의 문자를 의미합니다.\n?를 입력하면 당신으로 하여금 각 글자가 무엇을 가리키고 있는지 볼 수 있도록 소지품 목록을 보여줍니다.\n이 예시에서, *은 당신이 무언가 예상 밖의 것을 사용하고 싶을 때, 목록에 없는 물건을 고를 수 있게 해줍니다. *를 누르면 당신의 모든 소지품을 열거하여, 가지고 있는 모든 물건 목록의 문자를 볼 수 있게 됩니다.\n마지막으로, 당신의 생각이 바뀌어 이 명령어를 실행하고 싶지 않다면, ESC를 눌러 명령어를 취소할 수 있습니다.\n\n당신은 일부 명령어 앞에 숫자를 넣음으로써 해당 숫자만큼 반복할 수 있습니다; 예를 들어, \"10s\"는 탐색을 10번 수행할 것입니다.\n만약 당신이 '''number_pad''' 옵션을 설정해뒀다면, 횟수 앞에 접두사로 'n'을 붙여야 하므로 상기 예시 대신 \"n10s\"라고 입력해야 합니다. 횟수의 의미가 없는 명령어의 경우에는 무시될 것입니다. 또한, 이동 명령어의 경우 큰 이동을 위해 접두사가 붙을 수 있습니다 (하단을 참고하십시오). \n횟수나 접두사를 취소하고 싶다면, ESC를 누르십시오. \n\n명령어의 목록은 꽤나 길지만, 게임 중 어느 때나 '?' 명령어를 통해 도움이 되는 글들의 메뉴에 접근할 수 있습니다.\n여기 당신이 참고할 만한 기본 키 목록이 있습니다:\n{{{#!folding [ 펼치기 · 접기 ]\n||<width=7%> {{{+1 '''?'''}}} || 도움 메뉴 : \n이용 가능한 도움말 중 하나를 출력합니다. ||\n|| {{{+1 '''/'''}}} ||<:> \"whatis\" 명령어 : \n해당 문자가 무엇을 가리키는지 알려줍니다. 당신은 위치를 지정하거나 문자를 (혹은 단어를 통째로) 입력함으로써 설명할 것을 선택할 수 있습니다. \n\n장소를 지정하는 것은, 커서를 지도의 특정 위치에 이동시킨 다음, {{{+1 '''.'''}}} (마침표) / {{{+1 ''','''}}} (쉼표) / {{{+1 ''';'''}}} (쌍반점) / {{{+1 ''':'''}}} (쌍점)을 입력하는 것으로 행할 수 있습니다.\n\n{{{+1 '''.'''}}}는 선택된 위치에 있는 문자를 설명할 것이며, '''help''' 옵션이 켜져 있는지에 따라 \"More info?\" (추가 정보를 원하십니까?)라고 묻습니다. 이후 당신은 다른 위치를 고르라는 메시지를 보게 될 것입니다;\n\n{{{+1 ''','''}}}는 해당 문자를 설명하지만, 추가 정보를 생략합니다.\n그러고 나서 다른 위치를 고르라고 할 것입니다.\n\n{{{+1 ''';'''}}}는 추가 정보를 생략할 것이며, 확인할 다른 위치를 선택하라고 묻지도 않을 것입니다.\n\n{{{+1 ''':'''}}}는 만약 추가 정보가 존재한다면 확인을 묻지 않고 바로 보여줄 것입니다.\n\n위치를 선택할 때, ESC를 누르면 이 명령어를 취소하게 되지만,\n?를 입력하면 이 명령어가 어떻게 작동하는지에 대한 짧은 조언이 뜰 것입니다.\n\n만약 '''autodescribe''' (자동 설명) 옵션이 켜져 있다면, \n당신이 커서를 이동함에 따라 각 위치에서 보게 되는 것에 대한 짧은 설명이 뜰 것입니다.\n위치를 선택하는 중에 #을 누르면 이 옵션을 키거나 끄게 됩니다.\n'''whatis_coord''' (좌표 확인) 옵션은 짧은 설명에 지도의 좌표를 포함시킬지를 결정합니다.\n\n위치 대신 이름을 제시하면, 항상 그 이름에 대한 추가적인 정보가 주어질 것입니다.\n\n또한 당신은 근처의 몬스터나, 현재 표시된 모든 몬스터들, 근처의 물건들, 또는 모든 물건들에 대한 설명을 요청할 수도 있습니다.\n여기에서도 whatis_coord 옵션으로 해당 설명에 지도의 좌표를 포함시킬지를 결정할 수 있습니다. ||\n|| {{{+1 '''&'''}}} || 해당 명령어의 기능이 무엇인지 알려줍니다. ||\n|| {{{+1 '''<'''}}} || 이전 층으로 올라갑니다. (당신이 계단이나 사다리에 있을 때에 한정) ||\n|| {{{+1 '''>'''}}} || 다음 층으로 내려갑니다. (당신이 계단이나 사다리에 있을 때에 한정) ||\n||<:>{{{-1 '''yu'''}}}[br]{{{-1 '''hjkl'''}}}[br]{{{-1 '''bn'''}}}[br] || [[파일:NethackGuidebook2(1).png]][br]표기된 방향으로 한걸음 이동합니다 (그림 2를 참고하십시오). 만일 당신이 그곳에서 몬스터를 감지하거나 기억하고 있다면, 당신은 이동하는 대신 그 몬스터와 싸우게 될 것입니다. 오직 이 한걸음-이동만이 몬스터와 싸우게 될 것이며, 다른 이동법은 '안전함'으로 취급됩니다. ||\n||<:>{{{-1 '''YU'''}}}[br]{{{-1 '''HJKL'''}}}[br]{{{-1 '''BN'''}}}[br] || 당신이 벽이나 다른 무언가에 부딪히기 전까지 그 방향으로 이동합니다. ||\n|| {{{+1 '''m'''}}}[br]{{{-2 yu[br]hjkl[br]bn}}} || 접두사 : 물건을 집거나 싸우지 않고 이동합니다 (당신이 그곳의 몬스터를 기억하고 있다고 해도). \n\n일부의 비-이동 명령어는 메뉴를 통한 동작을 요청하기 위해서 'm' 접두사를 사용합니다 (일시적으로 menustyle:Traditional 옵션을 무시하기 위함). 주로 단 한 종류의 물건만 존재할 때 {{{+1 ''','''}}} (집기) 명령어에 유용합니다 (\"what kinds of objects? (무슨 종류의 물건 말인가요?)\"라는 메시지가 뜨지 않을 것이므로, 해당 상황에서는 m을 누를 필요가 없습니다). \n\n다른 일부의 명령어들도 'm' 접두사를 사용합니다. 예를 들어 '음식 섭취, 제물 번제, 캔따개 사용'은 현재 바닥에 적용 가능한 물건이 있는지 확인하는 것을 건너뛰고 곧장 소지품 확인으로 넘어갈 때 사용하며, '안장을 벗기기 위해 \"#loot\" (약탈하기)를 사용하는 경우'에는 보관함들을 건너뛰고 곧장 인접한 몬스터에게 이동할 때 사용합니다. 이 접두사는 \"#travel\" (이동하기) 명령어로 하여금 시야에 들어오는 흥미로운 대상들의 메뉴를 띄우게 합니다. 디버그 모드 (\"위자드 모드\"라고도 부릅니다)에서는 'm' 접두사가 \"#teleport\" (순간이동)과 \"#wizlevelport\" (위자드 모드 층계 순간이동) 명령어에도 쓰일 수 있습니다. ||\n|| {{{+1 '''F'''}}}[br]{{{-2 yu[br]hjkl[br]bn}}} || 접두사 : 몬스터와 싸웁니다 (그곳에 한 마리밖에 존재하지 않는다고 생각해도 말입니다). ||\n|| {{{+1 '''M'''}}}[br]{{{-2 yu[br]hjkl[br]bn}}} || 접두사 : 물건을 집지 않고 멀리 이동합니다. ||\n|| {{{+1 '''g'''}}}[br]{{{-2 yu[br]hjkl[br]bn}}} || 접두사 : 무언가 흥미로운 것을 발견할 때까지 이동합니다. ||\n|| {{{+1 '''G'''}}}[br]{{{-2 yu[br]hjkl[br]bn}}} [br]or [br]<CONTROL->[yuhjklbn] || 접두사 : 'g'와 동일하지만, 통로의 갈림길을 흥미로운 것으로 고려하지 않습니다. ||\n|| {{{+1 '''_'''}}} || 최단거리 알고리듬을 통해 지도의 위치로 이동합니다.\n영웅이 알고 있는 지도의 위치 (예를 들어, 봤거나 기존에 지나갔던 길)에 최단거리를 계산합니다. 알고 있는 길이 없을 경우, 추측이 대신 제기됩니다. 대부분의 경우 'G' 명령어와 동일한 상황에서 멈추지만, 'M' 명령어와 비슷하게 아이템을 줍지 않습니다. [[포팅]]한 운영체제에서 마우스를 지원하는 경우, 현재 위치 이외의 다른 곳을 클릭할 경우 이 명령어가 실행됩니다. ||\n|| {{{+1 '''.'''}}} || 기다리거나 휴식합니다. 한 턴 동안 아무것도 하지 않습니다. ||\n|| {{{+1 '''a'''}}} || 도구를 적용(사용)합니다 (곡괭이, 열쇠, 램프 등).\n\n지팡이에 실행했을 경우, 해당 완드는 부러뜨려지고, 가지고 있던 마법을 모두 방출하게 됩니다. 확인을 필요로 합니다. ||\n|| {{{+1 '''A'''}}} || 착용하고 있던 물건들 (갑옷 등)을 벗습니다. 갑옷을 하나만 벗고 싶으면 'T' (벗기)를, 장신구를 하나만 빼고 싶으면 'R' (빼기) 명령어를 사용하십시오. ||\n|| {{{+1 '''c'''}}} || 문을 닫습니다. ||\n|| {{{+1 '''C'''}}} || 한 종류의 몬스터나, 물건, 또는 물건의 종류를 다른 명칭으로 부릅니다 (이름 붙이기). \n확장 명령어 \"#name\" (이름 붙이기)과 동일한 기능을 가집니다. ||\n|| {{{+1 '''^C'''}}} || [[#패닉s-2|패닉]] 버튼입니다. 게임을 종료합니다. ||\n|| {{{+1 '''d'''}}} || 무언가를 떨어뜨립니다. 예를 들어 \"d7a\"는 물건 a를 7개 떨어뜨림을 의미합니다. ||\n|| {{{+1 '''D'''}}} || 여러 가지를 떨어뜨립니다.\n\"What kinds of things do you want to drop? [!%= BUCXaium]\" (어떤 종류의 물건들을 떨어뜨리겠습니까?) 라는 질문에 대해서,\n\nyou should type zero or more object symbols possibly followed by `a' and/or `i' and/or `u' and/or `m'.  In addition,\n one or more of the  blessed/uncursed/cursed  groups  may  be typed.\n\n * DB  - 알고 있는 모든 축복받은 물건들을 떨어뜨립니다.\n * DU  - 알고 있는 모든 저주받지 않은 물건들을 떨어뜨립니다.\n * DC  - 알고 있는 모든 저주받은 물건들을 떨어뜨립니다.\n * DX  - 축복/비저주/저주 상태가 불확실한 모든 물건들을 떨어뜨립니다.\n * Da  - 확인을 묻지 않고, 모든 물건들을 떨어뜨립니다.\n * Di  - 무언가를 떨어뜨리기 전에 당신의 소지품을 검사합니다.\n * Du  - 계산하지 않은 물건들만 떨어뜨립니다 (상점 내에서).\n * Dm  - 메뉴를 사용해 어떤 물건(들)을 떨어뜨릴 건지 선택합니다.\n * D%u - 계산하지 않은 음식만 떨어뜨립니다.\n\nThe last example shows a combination.  There are three categories of object filtering: class (`!' for potions, `?'  for\n scrolls,  and  so on), shop status (`u' for unpaid, in other words, owned by the shop), and bless/curse state (`B',  `U', `C',  and `X' as shown above).  If you specify more than one value in a category (such as \"!?\" for potions and scrolls or \"BU\"  for  blessed  and  uncursed), an inventory object will meet the criteria if it matches any of the specified  values (so  \"!?\"  means  `!' or `?').  If you specify more than one category, an inventory object must meet each of the category criteria  (so \"%u\" means class `%' and unpaid `u').  Lastly, you may specify multiple values within multiple  categories: \"!?BU\"  will  select all potions and scrolls which are known to be blessed or uncursed.  (In versions prior to 3.6,  filter combinations behaved differently.) ||\n|| {{{+1 '''e'''}}} || 음식을 먹습니다. \nNormally  checks  for  edible  item(s) on the floor, then if none are found or none are chosen, checks for edible item(s) in inventory.  Precede `e' with the `m' prefix to bypass attempting to eat anything off the floor.\n\nIf you attempt to eat  while  already  satiated,  you  might choke  to  death.  If you risk it, you will be asked whether to \"continue eating?\" if you survive the  first  bite.   You can set the paranoid_confirmation:eating option to require a response of yes instead of just y. ||\n|| {{{+1 '''E'''}}} || 바닥에 메시지를 새깁니다. \nE- 를 누르게 되면 손가락으로 먼지에 쓰게 됩니다.\n\n단어 \"Elbereth\" (엘베레스)를 새길 경우 대부분의 몬스터들은 백병전으로는 공격하지 않을 것입니다 (만약 당신이 공격하면, 당신은 글자를 문질러서 지워버릴 것입니다); 이것은 한숨 돌리고자 할 때 종종 유용합니다. ||\n|| {{{+1 '''f'''}}} || Fire (shoot or throw) one of  the  objects  placed  in  your quiver (or quiver sack, or that you have at the ready).  You may select ammunition with a previous `Q'  command,  or  let the  computer  pick  something  appropriate if autoquiver is true. \n\n더욱 일반적인 던지기와 발사에 대해서는 't' (던지기)를 참고하십시오. ||\n|| {{{+1 '''I'''}}} || 소지품을 나열합니다 (당신이 가지고 있는 모든 것). ||\n|| {{{+1 '''^A'''}}} || List selected parts of your inventory, usually be specifying the character for a particular set of objects, like `\\[' for armor or `!' for potions.\n\n               I* - list all gems in inventory;\n               Iu - list all unpaid items;\n               Ix - list all used up items that are on your shopping bill;\n               IB - list all items known to be blessed;\n               IU - list all items known to be uncursed;\n               IC - list all items known to be cursed;\n               IX - list all items whose bless/curse status is unknown;\n               I$ - count your money. ||\n|| {{{+1 '''o'''}}} || 문을 엽니다. ||\n|| {{{+1 '''O'''}}} || Set options.\n\n               A menu showing the current option values will be  displayed.\n               You  can change most values simply by selecting the menu en-\n               try for the given option (ie, by typing its letter or click-\n               ing  upon  it,  depending  on your user interface).  For the\n               non-boolean choices, a further menu or  prompt  will  appear\n               once  you've  closed  this  menu.  The available options are\n listed later in this Guidebook.  Options are usually set be-\n               fore the game rather than with the `O' command; see the sec-\n               tion on options below. ||\n|| {{{+1 '''^O'''}}} || Show overview.\n\nShortcut for \"#overview\":  list interesting  dungeon  levels visited.\n\n(Prior  to 3.6.0, `^O' was a debug mode command which listed the placement of all special levels.  Use \"#wizwhere\" to run that command.) ||\n|| {{{+1 '''p'''}}} || 쇼핑 계산서를 지불합니다. ||\n|| {{{+1 '''P'''}}} || Put on an accessory (ring, amulet, or blindfold).\n\nThis command may also be used to wear armor.  The prompt for which inventory item to use will only list accessories,  but choosing  an unlisted item of armor will attempt to wear it. (See the `W' command below.  It lists armor as the inventory choices but will accept an accessory and attempt to put that on.) ||\n|| {{{+1 '''^P'''}}} || 이전 메시지를 반복합니다.\nSubsequent `^P's repeat earlier messages.  For  some  interfaces, the behavior can be varied via the msg_window option. ||\n|| {{{+1 '''q'''}}} || 무언가 (물약, 물, 기타 등등)를 마십니다. ||\n|| {{{+1 '''Q'''}}} || Select  an object for your quiver, quiver sack, or just generally at the ready (only one of these  is  available  at  a time).   You can then throw this (or one of these) using the `f' command.\n\n(In versions prior to 3.3 this was the command to  quit  the game, which has been moved to \"#quit\".) ||\n|| {{{+1 '''r'''}}} || 두루마리나 주문서를 읽습니다. ||\n|| {{{+1 '''R'''}}} || Remove a worn accessory (ring, amulet, or blindfold).\n\nIf  you're  wearing  more  than  one, you'll be prompted for which one to remove.  When you're only wearing one, then  by default  it  will be removed without asking, but you can set the paranoid_confirmation option to require a prompt.\n\nThis command may also be used to take off armor.  The prompt for  which  inventory  item to remove only lists worn accessories, but an item of worn armor can be chosen.   (See  the `T'  command below.  It lists armor as the inventory choices but will accept an accessory and attempt to remove it.) ||\n|| {{{+1 '''^R'''}}} || Redraw the screen. ||\n|| {{{+1 '''s'''}}} || Search for secret doors and traps around  you. It  usually takes several tries to find something.\n\nCan also be used to figure out whether there is still a monster at an adjacent \"remembered, unseen monster\" marker. ||\n|| {{{+1 '''S'''}}} || Save the game (which suspends play and exits  the  program).\nThe  saved game will be restored automatically the next time you play using the same character name.\n\nIn normal play, once a saved game is restored the file  used to  hold  the  saved data is deleted.  In explore mode, once restoration is accomplished you are asked whether to keep or delete the file.  Keeping the file makes it feasible to play for a while then  quit  without  saving  and  later  restore again.\n\nThere  is no \"save current game state and keep playing\" command, not even in explore mode where saved game files can be\n kept and re-used. ||\n|| {{{+1 '''t'''}}} || Throw an object or shoot a projectile.\n\nThere's  no separate \"shoot\" command.  If you throw an arrow while wielding a bow, you are shooting that  arrow  and  any weapon skill bonus or penalty for bow applies.  If you throw an arrow while not wielding a bow, you are  throwing  it  by hand and it will generally be less effective than when shot.\n\nSee also `f' (fire) for throwing or shooting an item pre-selected via the `Q' (quiver) command. ||\n|| {{{+1 '''T'''}}} || Take off armor.\n\nIf you're wearing more than one piece,  you'll  be  prompted for  which  one to take off.  (Note that this treats a cloak covering a suit and/or a shirt, or a suit covering a  shirt, as if the underlying items weren't there.)  When you're only wearing one, then by default it will be  taken  off  without asking,  but you can set the paranoid_confirmation option to require a prompt.\n\nThis command may also be used to  remove  accessories.   The prompt  for which inventory item to take off only lists worn armor, but a worn accessory can be  chosen.   (See  the  `R' command above.  It lists accessories as the inventory choices but will accept an item of armor and attempt to  take  it off.) ||\n|| {{{+1 '''^T'''}}} || 순간이동합니다. 해당 능력이 있다면 말입니다. ||\n|| {{{+1 '''v'''}}} || 현재 버전 정보를 표시합니다. ||\n|| {{{+1 '''V'''}}} || 게임의 역사를 표시합니다. ||\n|| {{{+1 '''w'''}}} || Wield weapon.\n\nw- - wield nothing, use your bare (or gloved) hands.\n\nSome characters can wield two weapons at once; use the `X' command (or the \"#twoweapon\" extended command) to do so. ||\n|| {{{+1 '''W'''}}} || Wear armor.\n\nThis command may also be used to put on an accessory  (ring, amulet,  or blindfold).  The prompt for which inventory item to use will only list armor, but choosing an unlisted accessory will attempt to put it on.  (See the `P' command above. It lists accessories as the inventory choices but  will  accept an item of armor and attempt to wear it.) ||\n|| {{{+1 '''x'''}}} || Exchange your wielded weapon with the item in your alternate weapon slot.\n\nThe latter is used as your secondary weapon when engaging in two-weapon  combat.  Note that if one of these slots is empty, the exchange still takes place. ||\n|| {{{+1 '''X'''}}} || Toggle two-weapon combat, if your character can do it.  Also available via the \"#twoweapon\" extended command.\n\n(In  versions  prior  to  3.6 this was the command to switch from normal play to \"explore mode\", also known as \"discovery mode\", which has now been moved to \"#exploremode\".) ||\n|| {{{+1 '''^X'''}}} || Display basic information about your character.\n\nDisplays  name,  role,  race, gender (unless role name makes\nthat redundant, such as Caveman or  Priestess),  and  align-\nment,  along  with  your patron deity and his or her opposi-\ntion.  It also shows most of the various items  of  informa-\ntion from the status line(s) in a less terse form, including\nseveral additional things which don't appear in  the  normal\nstatus display due to space considerations.\n\nIn  normal  play, that's all that `^X' displays.  In explore\nmode, the role and status feedback is augmented by  the  in-\nformation provided by enlightenment magic. ||\n|| {{{+1 '''z'''}}} || Zap a wand.\n\nz. - to aim at yourself, use `.' for the direction. ||\n|| {{{+1 '''Z'''}}} || Zap (cast) a spell.\n\nZ. - to cast at yourself, use `.' for the direction. ||\n|| {{{+1 '''^Z'''}}} || Suspend the game (UNIX(R) versions with job control only). ||\n|| {{{+1 ''':'''}}} || 여기에 무엇이 있는지 봅니다. ||\n|| {{{+1 ''';'''}}} || Show what type of thing a visible symbol corresponds to. ||\n|| {{{+1 ''','''}}} || Pick up some things from the floor beneath you.\n\nMay be preceded by `m' to force a selection menu. ||\n|| {{{+1 '''@'''}}} || Toggle the autopickup option on and off. ||\n|| {{{+1 '''^'''}}} || Ask for the type of an adjacent trap you found earlier. ||\n|| {{{+1 ''')'''}}} || Tell what weapon you are wielding. ||\n|| {{{+1 '''['''}}} || Tell what armor you are wearing. ||\n|| {{{+1 '''\\='''}}} || Tell what rings you are wearing. ||\n|| {{{+1 '''\"'''}}} || Tell what amulet you are wearing. ||\n|| {{{+1 '''('''}}} || Tell what tools you are using. ||\n|| {{{+1 '''*'''}}} || Tell what equipment you are using.\n\nCombines the preceding five type-specific commands into one. ||\n|| {{{+1 '''$'''}}} || Count your gold pieces. ||\n|| {{{+1 '''+'''}}} || List the spells you know.\n\nUsing  this  command,  you  can  also rearrange the order in\nwhich your spells are listed, either by sorting  the  entire\nlist  or by picking one spell from the menu then picking an-\nother to swap places with  it.   Swapping  pairs  of  spells\nchanges their casting letters, so the change lasts after the\ncurrent `+' command finishes.  Sorting  the  whole  list  is\ntemporary.   To  make the most recent sort order persist be-\nyond the current `+' command, choose the sort  option  again\nand  then  pick  \"reassign  casting  letters\".   (Any spells\nlearned after that will be added to  the  end  of  the  list\nrather than be inserted into the sorted ordering.) ||\n|| {{{+1 '''\\'''}}} || Show what types of objects have been discovered. ||\n|| {{{+1 '''`'''}}} || Show discovered types for one class of objects. ||\n|| {{{+1 '''!'''}}} || Escape to a shell. ||}}}\n확장 명령어와 추가 명령어의 목록은 다음과 같습니다:\n{{{#!folding [ 펼치기 · 접기 ]\n\n> {{{+1 '''#'''}}} 확장 명령어를 수행합니다.\n보시다시피, NetHack의 제작자들은 모든 문자를 사용했으므로, 이는 덜 자주 사용되는 명령어를 소개하기 위한 방법입니다. 무슨 확장 명령어를 사용할 수 있는지의 여부는 게임이 컴파일된 기기가 무엇을 지원하는지에 따라 다릅니다.\n||<width=14%> #adjust || Adjust inventory letters (most useful when the fixinv option is \"on\").  Autocompletes.  Default key is `M-a'.\n\nThis  command allows you to move an item from one particular inventory slot to another so that it has a letter  which is more meaningful for you or that it will appear in a particular location when inventory listings are displayed.  You can move to a currently empty slot, or if the destination is occupied -- and won't merge -- the item there will swap  slots with  the  one  being  moved.  \"#adjust\" can also be used to split a stack of objects; when choosing the item to adjust, enter a count prior to its letter.\n\nAdjusting  without  a  count  used to collect all compatible stacks when moving to the destination.   That  behavior  has been changed; to gather compatible stacks, \"#adjust\" a stack into its own inventory slot.  If it  has  a  name  assigned, other  stacks  with the same name or with no name will merge provided that all their other attributes match.  If it  does not  have  a name, only other stacks with no name are eligible.  In either case, otherwise  compatible  stacks  with a different  name will not be merged.  This contrasts with using \"#adjust\" to move from one slot to a different slot.  In that  situation,  moving (no count given) a compatible stack will merge if either stack has a name when the other doesn't and  give  that  name  to the result, while splitting (count given) will ignore the source  stack's  name  when deciding whether to merge with the destination stack. ||\n|| #annotate || Allows you to specify one line of text to associate with the current dungeon level.  All levels with annotations are displayed  by the \"#overview\" command.  Autocompletes.  Default key is `M-A', and also `^N' if number_pad is on. ||\n|| #apply || Apply (use) a tool such as a pick-axe, a  key,  or  a  lamp.\nDefault key is `a'.\n\nIf  the  tool used acts on items on the floor, using the `m' prefix skips those items.\n\nIf used on a wand, that wand will be broken,  releasing  its magic in the process.  Confirmation is required. ||\n|| #attributes || Show your attributes.  Default key is `^X'. ||\n|| #autopickup || Toggle the autopickup option on/off.  Default key is `@'. ||\n|| #call || Call  (name)  a  monster,  or an object in inventory, on the\nfloor, or in the discoveries list, or add an annotation  for\nthe  current  level  (same  as \"#annotate\").  Default key is `C'. ||\n|| #cast || Cast a spell.  Default key is `Z'. ||\n|| #chat || Talk to someone.  Default key is `M-c'. ||\n|| #close || Close a door.  Default key is `c'. ||\n|| #conduct || List voluntary challenges  you  have  maintained.   Autocompletes.  Default key is `M-C'.\n\nSee the section below entitled \"Conduct\" for details. ||\n|| #dip || Dip  an  object into something.  Autocompletes.  Default key is `M-d'. ||\n|| #down || Go down a staircase.  Default key is `>'. ||\n|| #drop || Drop an item.  Default key is `d'. ||\n|| #droptype || Drop specific item types.  Default key is `D'. ||\n|| #eat || Eat something.  Default key is `e'.  The  `m'  prefix  skips eating items on the floor. ||\n|| #engrave || Engrave writing on the floor.  Default key is `E'. ||\n|| #enhance || Advance  or  check  weapon and spell skills.  Autocompletes. Default key is `M-e'. ||\n|| #exploremode || Enter the explore mode.\n\nRequires confirmation; default response is n (no).  To really  switch to explore mode, respond with y.  You can set the\n   paranoid_confirmation:quit option to require a  response  of yes instead. ||\n|| #fire || Fire ammunition from quiver.  Default key is `f'. ||\n|| #force || Force a lock.  Autocompletes.  Default key is `M-f'. ||\n|| #glance || Show  what  type  of thing a map symbol corresponds to.  Default key is `;'. ||\n|| #help || Show the help menu.  Default key is `?',  and  also  `h'  if number_pad is on. ||\n|| #herecmdmenu || Show a menu of possible actions in your current location. ||\n|| #history || Show long version and game history.  Default key is `V'. ||\n|| #inventory || Show your inventory.  Default key is `i'. ||\n|| #inventtype || Inventory specific item types.  Default key is `I'. ||\n|| #invoke || Invoke  an object's special powers.  Autocompletes.  Default key is `M-i'. ||\n|| #jump || Jump to another location.  Autocompletes.   Default  key  is `M-j', and also `j' if number_pad is on. ||\n|| #kick || Kick  something.  Default key is `^D', and `k' if number_pad is on. ||\n|| #known || Show what object types have been discovered.  Default key is `\\'. ||\n|| #knownclass || Show discovered types for one class of objects.  Default key is ``'. ||\n|| #levelchange || Change your experience level.   Autocompletes.   Debug  mode only. ||\n|| #lightsources || Show mobile light sources.  Autocompletes.  Debug mode only. ||\n|| #look || Look at what is here, under you.  Default key is `:'. ||\n|| #loot || Loot  a  box  or bag on the floor beneath you, or the saddle from a steed standing next to you.  Autocompletes.   Precede with  the `m' prefix to skip containers at your location and go directly to removing a saddle.  Default key is `M-l', and also `l' if number_pad is on. ||\n|| #monster || Use  a monster's special ability (when polymorphed into monster form).  Autocompletes.  Default key is `M-m'. ||\n|| #name || Name a monster, an individual object, or a type  of  object. Same  as \"#call\".  Autocompletes.  Default keys are `N', `M-n', and `M-N'. ||\n|| #offer || Offer a sacrifice to the gods.  Autocompletes.  Default  key is `M-o'.\n\nYou'll  need to find an altar to have any chance at success.\nCorpses of  recently  killed  monsters  are  the  fodder  of choice.\n\nThe `m' prefix skips offering any items which are on the altar. ||\n|| #open || Open a door.  Default key is `o'. ||\n|| #options || Show and change option settings.  Default key is `O'. ||\n|| #overview || Display information you've  discovered  about  the  dungeon.\nAny  visited level (unless forgotten due to amnesia) with an\nannotation is included, and many  things  (altars,  thrones,\nfountains,  and  so on; extra stairs leading to another dun-\ngeon branch) trigger an automatic  annotation.   If  dungeon\noverview is chosen during end-of-game disclosure, every vis-\nited level will be included regardless of annotations.   Au-\ntocompletes.  Default keys are `^O', and `M-O'. ||\n|| #panic || Test the panic routine.  Terminates the current game.  Autocompletes.  Debug mode only.\n\nAsks for confirmation; default is n (no); continue  playing.\nTo  really  panic,  respond  with  y.  You can set the para-\nnoid_confirmation:quit option to require a response  of  yes instead. ||\n|| #pay || Pay your shopping bill.  Default key is `p'. ||\n|| #pickup || Pick up things at the current location.  Default key is `,'. The `m' prefix forces use of a menu. ||\n|| #polyself || Polymorph self.  Autocompletes.  Debug mode only. ||\n|| #pray || Pray to the gods for help.  Autocompletes.  Default  key  is `M-p'.\n\nPraying  too  soon after receiving prior help is a bad idea.\n(Hint: entering the dungeon alive is treated as  having  re-\nceived help.  You probably shouldn't start off a new game by\npraying right away.)  Since using this command  by  accident\ncan  cause  trouble,  there is an option to make you confirm\nyour intent before praying.  It is enabled by  default,  and\nyou  can  reset  the paranoid_confirmation option to disable it. ||\n|| #prevmsg || Show previously displayed game  messages.   Default  key  is `^P'. ||\n|| #puton || Put  on  an  accessory  (ring, amulet, etc).  Default key is `P'. ||\n|| #quaff || Quaff (drink) something.  Default key is `q'. ||\n|| #quit || Quit the program without saving your  game.   Autocompletes.\nDefault key is `M-q'.\n\nSince  using  this  command by accident would throw away the\ncurrent game, you are asked to confirm  your  intent  before\nquitting.  Default response is n (no); continue playing.  To\nreally quit, respond with y.  You can set the  paranoid_con-\nfirmation:quit option to require a response of yes instead. ||\n|| #quiver || Select ammunition for quiver.  Default key is `Q'. ||\n|| #read || 두루마리 또는 주문서 또는 다른 무언가를 읽습니다. 기본 키는 '''r'''입니다. ||\n|| #redraw || Redraw the screen.  Default key is `^R', and  also  `^L'  if number_pad is on. ||\n|| #remove || Remove  an  accessory  (ring,  amulet, etc).  Default key is `R'. ||\n|| #ride || Ride (or stop riding) a  saddled  creature.   Autocompletes. Default key is `M-R'. ||\n|| #rub || Rub  a  lamp or a stone.  Autocompletes.  Default key is `M-r'. ||\n|| #save || Save the game and exit the program.  Default key is `S'. ||\n|| #search || Search for traps and secret doors around you.   Default  key is `s'.||\n|| #seeall || Show all equipment in use.  Default key is `*'. ||\n|| #seeamulet || Show the amulet currently worn.  Default key is `\"'. ||\n|| #seearmor || Show the armor currently worn.  Default key is `['. ||\n|| #seegold || Count your gold.  Default key is `$'. ||\n|| #seenv || Show seen vectors.  Autocompletes.  Debug mode only. ||\n|| #seerings || Show the ring(s) currently worn.  Default key is `\\='. ||\n|| #seespells || List and reorder known spells.  Default key is `+'. ||\n|| #seetools || Show the tools currently in use.  Default key is `('. ||\n|| #seetrap || Show the type of an adjacent trap.  Default key is `^'. ||\n|| #seeweapon || Show the weapon currently wielded.  Default key is `)'. ||\n|| #shell || Do a shell escape.  Default key is `!'. ||\n|| #sit || Sit down.  Autocompletes.  Default key is `M-s'. ||\n|| #stats || Show  memory  usage  statistics.  Autocompletes.  Debug mode only. ||\n|| #suspend || Suspend the game.  Default key is `^Z'. ||\n|| #swap || Swap wielded and secondary weapons.  Default key is `x'. ||\n|| #takeoff || Take off one piece of armor.  Default key is `T'. ||\n|| #takeoffall || Remove all armor.  Default key is `A'. ||\n|| #teleport || Teleport around the level.  Default key is `^T'. ||\n|| #terrain || Show bare  map  without  displaying  monsters,  objects,  or traps.  Autocompletes.||\n|| #therecmdmenu || Show a menu of possible actions in a location next to you. ||\n|| #throw || Throw something.  Default key is `t'. ||\n|| #timeout || Look at the timeout queue.  Autocompletes.  Debug mode only. ||\n|| #tip || Tip  over a container (bag or box) to pour out its contents.\nAutocompletes.  Default key is `M-T'.  The `m' prefix  makes the command use a menu. ||\n|| #travel || Travel  to  a  specific location on the map.  Default key is\n`_'.  Using the \"request menu\" prefix shows a menu of inter-\nesting  targets  in sight without asking to move the cursor.\nWhen picking a  target  with  cursor  and  the  autodescribe\n  option  is  on, the top line will show \"(no travel path)\" if\n               your character does not know of a path to that location. ||\n|| #turn || Turn undead away.  Autocompletes.  Default key is `M-t'. ||\n|| #twoweapon ||<(> \nToggle two-weapon combat on or off.  Autocompletes.  Default\nkey is `X', and also `M-2' if number_pad is off.\n\nNote  that  you  must  use suitable weapons for this type of\ncombat, or it will be automatically turned off. ||\n|| #untrap || Untrap something (trap, door, or chest).  Default key is `M-u', and `u' if number_pad is on.\n\nIn  some circumstances it can also be used to rescue trapped monsters. ||\n|| #up || Go up a staircase.  Default key is `<'. ||\n|| #vanquished || List vanquished monsters.  Autocompletes.  Debug mode only. ||\n|| #version || Print compile time options for this version of NetHack.  Autocompletes.  Default key is `M-v'. ||\n|| #versionshort || Show version string.  Default key is `v'. ||\n|| #vision || Show vision array.  Autocompletes.  Debug mode only. ||\n|| #wait || Rest  one move while doing nothing.  Default key is `.', and also ` ' if rest_on_space is on. ||\n|| #wear || Wear a piece of armor.  Default key is `W'. ||\n|| #whatdoes || Tell what a key does.  Default key is `&'. ||\n|| #whatis || Show what type of thing a symbol  corresponds  to.   Default key is `/'. ||\n|| #wield || Wield a weapon.  Default key is `w'. ||\n|| #wipe || Wipe off your face.  Autocompletes.  Default key is `M-w'. ||\n|| #wizbury || Bury  objects  under  and around you.  Autocompletes.  Debug mode only. ||\n|| #wizdetect || Search for hidden things (secret doors or  traps  or  unseen monsters)  within  a  modest  radius.  Autocompletes.  Debug mode only.  Default key is `^E'. ||\n|| #wizgenesis || Create a monster.  May be prefixed by a count to create more than  one.  Autocompletes.  Debug mode only.  Default key is `^G'. ||\n|| #wizidentify || Identify all items in inventory.  Autocompletes.  Debug mode only.  Default key is `^I'. ||\n|| #wizintrinsic || Set one or more intrinsic attributes.  Autocompletes.  Debug mode only. ||\n|| #wizlevelport || Teleport to another level.  Autocompletes.  Debug mode only. Default key is `^V'. ||\n|| #wizmap || Map  the  level.   Autocompletes.  Debug mode only.  Default key is `^F'. ||\n|| #wizrumorcheck || Verify rumor boundaries.  Autocompletes.  Debug mode only. ||\n|| #wizsmell || Smell monster.  Autocompletes.  Debug mode only. ||\n|| #wizwhere || Show locations of  special  levels.   Autocompletes.   Debug mode only. ||\n|| #wizwish || Wish  for  something.  Autocompletes.  Debug mode only.  Default key is `^W'. ||\n|| #wmode || Show wall modes.  Autocompletes.  Debug mode only. ||\n|| #zap || Zap a wand.  Default key is `z'. ||\n|| #? || Help menu:  get the list of available extended commands. ||\n\n> {{{+1 '''메타 키'''}}}\nIf your keyboard has a meta key (which, when pressed in combination  with  another  key,  modifies  it by setting the \"meta\" [8th, or \"high\"] bit), you can invoke many extended  commands  by meta-ing the first letter of the command.\n\nIn NT, OS/2, PC and ST NetHack, the \"Alt\" key can be used in this fashion; on the Amiga, set the altmeta option  to  get  this behavior.   On  other  systems,  if typing \"Alt\" plus another key transmits a two character sequence consisting of an  Escape  followed  by  the  other key, you may set the altmeta option to have NetHack combine them into meta+key.\n\n|| M-? || #? (not supported by all platforms) ||\n|| M-2 || #twoweapon (unless the number_pad option is enabled) ||\n|| M-a || #adjust ||\n|| M-A || #annotate ||\n|| M-c || #chat ||\n|| M-C || #conduct ||\n|| M-d || #dip ||\n|| M-e || #enhance ||\n|| M-f || #force ||\n|| M-i || #invoke ||\n|| M-j || #jump ||\n|| M-l || #loot ||\n|| M-m || #monster ||\n|| M-n || #name ||\n|| M-o || #offer ||\n|| M-O || #overview ||\n|| M-p || #pray ||\n|| M-q || #quit ||\n|| M-r || #rub ||\n|| M-R || #ride ||\n|| M-s || #sit ||\n|| M-t || #turn ||\n|| M-T || #tip ||\n|| M-u || #untrap ||\n|| M-v || #version ||\n|| M-w || #wipe ||}}}\n만약 '''number_pad''' (숫자 패드) 설정이 켜져 있으면, 일부의 추가적인 문자 명령어를 사용할 수 있습니다:\n|| {{{+1 '''h'''}}} || #help ||\n|| {{{+1 '''j'''}}} || #jump ||\n|| {{{+1 '''k'''}}} || #kick ||\n|| {{{+1 '''l'''}}} || #loot ||\n|| {{{+1 '''N'''}}} || #name ||\n|| {{{+1 '''u'''}}} || #untrap ||\n== 방과 통로 ==\n던전에 있는 방과 통로는 불이 켜져 있거나 어두운 상태입니다.\n당신의 시야 내의 불이 켜진 곳은 화면에 표시될 것입니다; 어두운 구역의 경우, 그것들이 당신과 한 칸 이내에 있을 때에만 화면에 표시됩니다.\n벽과 통로의 경우, 당신이 탐사함에 따라 화면에 표시된 채로 남아있을 것입니다.\n비밀 통로는 숨겨져 있습니다. 당신은 's' (탐색) 명령어로 그것들을 찾을 수 있습니다.\n=== 출입구 ===\n5.1.  Doorways\n\nDoorways connect rooms and corridors.  Some doorways have no\ndoors; you can walk right through.  Others have  doors  in  them,\nwhich may be open, closed, or locked.  To open a closed door, use\nthe `o' (open) command; to close it again, use  the  `c'  (close)\ncommand.\n\nYou  can  get  through a locked door by using a tool to pick\nthe lock with the `a' (apply) command, or by kicking it open with\nthe `^D' (kick) command.\n\nOpen  doors  cannot be entered diagonally; you must approach\nthem straight on, horizontally or vertically.   Doorways  without\ndoors are not restricted in this fashion.\n\nDoors  can  be  useful for shutting out monsters.  Most monsters cannot open doors, although a few don't need to (for  example, ghosts can walk through doors).\n\nSecret  doors  are  hidden.   You can find them with the `s' (search) command.  Once found they are in all ways equivalent to normal doors.\n=== 함정 ===\n5.2.  Traps (`^')\n\nThere  are  traps throughout the dungeon to snare the unwary delver.  For example, you may suddenly fall into  a  pit  and  be stuck for a few turns trying to climb out.  Traps don't appear on your map until you see one triggered by moving onto it, see something fall into it, or you discover it with the `s' (search) command.  Monsters can fall prey to traps, too, which can be a  very useful defensive strategy.\n\nThere is a special pre-mapped branch of the dungeon based on the classic computer game \"Sokoban.\"  The goal  is  to  push  the boulders  into  the pits or holes.  With careful foresight, it is possible to complete all of the levels according  to  the  traditional  rules  of Sokoban.  Some allowances are permitted in case the player gets stuck; however, they will lower your luck.\n=== 계단과 사다리 ===\n5.3.  Stairs and ladders (`<', `>')\n\nIn general, each level in the dungeon will have a  staircase going up (`<') to the previous level and another going down (`>') to the next level.  There are some exceptions  though.   For  instance,  fairly  early  in the dungeon you will find a level with two down staircases, one continuing into the dungeon and the other  branching  into  an  area  known as the Gnomish Mines.  Those mines eventually hit a dead end, so after exploring them (if  you choose  to  do so), you'll need to climb back up to the main dungeon.\n\nWhen you traverse a set of stairs, or trigger a  trap  which sends  you to another level, the level you're leaving will be deactivated and stored in a file on disk.  If you're  moving  to  a previously visited level, it will be loaded from its file on disk and reactivated.  If you're moving to a level which has  not  yet been  visited,  it  will be created (from scratch for most random levels, from a template for some \"special\" levels, or loaded from the remains of an earlier game for a \"bones\" level as briefly described below).  Monsters are only active on the  current  level; those on other levels are essentially placed into stasis.\n\nOrdinarily  when  you climb a set of stairs, you will arrive on the corresponding staircase  at  your  destination.   However, pets  (see  below)  and  some other monsters will follow along if they're close enough when you travel up or down stairs, and occasionally  one  of  these  creatures  will displace you during the climb.  When that occurs, the pet or other monster will arrive on the staircase and you will end up nearby.\n\nLadders  serve  the  same purpose as staircases, and the two types of inter-level  connections  are  nearly  indistinguishable during game play.\n=== 상점과 장보기 ===\n5.4.  Shops and shopping\n\nOccasionally  you  will  run across a room with a shopkeeper near the door and many items lying on the  floor.   You  can  buy items by picking them up and then using the `p' command.  You can inquire about the price of an item prior to picking it up by  using the \"#chat\" command while standing on it.  Using an item prior to paying for it will incur a charge, and the shopkeeper won't allow you to leave the shop until you have paid any debt you owe.\n\nYou  can  sell items to a shopkeeper by dropping them to the floor while inside a shop.  You will either be offered an  amount of  gold  and  asked whether you're willing to sell, or you'll be told that the shopkeeper isn't interested (generally,  your  item needs  to  be  compatible with the type of merchandise carried by the shop).\n\nIf you drop something in a shop by accident, the  shopkeeper will  usually  claim ownership without offering any compensation. You'll have to buy it back if you want to reclaim it.\n\nShopkeepers sometimes run out of money.  When that  happens, you'll  be  offered  credit  instead of gold when you try to sell something.  Credit can be used to pay for purchases,  but  it  is only  good  in  the shop where it was obtained; other shopkeepers won't honor it.  (If you happen to find a \"credit  card\"  in  the dungeon, don't bother trying to use it in shops; shopkeepers will not accept it.)\n\nThe `$' command, which reports the amount of  gold  you  are carrying (in inventory, not inside bags or boxes), will also show current shop debt or credit, if any.  The \"Iu\" command lists  unpaid items (those which still belong to the shop) if you are carrying any.  The \"Ix\" command shows an inventory-like  display  of any  unpaid  items which have been used up, along with other shop fees, if any.\n==== 상점의 기행 ====\n5.4.1.  Shop idiosyncrasies\n\nSeveral aspects of shop behavior might be unexpected.\n\n * The price of a given item can vary due to a variety of factors.\n\n * A shopkeeper treats the spot immediately inside the door as  if it were outside the shop.\n\n * While the shopkeeper watches you like a hawk, he will generally ignore any other customers.\n\n * If a shop is \"closed for inventory,\" it will not  open  of  its own accord.\n\n * Shops do not get restocked with new items, regardless of inventory depletion.\n== 몬스터 ==\n6.  Monsters\n\nMonsters you cannot see are not  displayed  on  the  screen. Beware!   You  may  suddenly come upon one in a dark place.  Some magic items can help you  locate  them  before  they  locate  you (which some monsters can do very well).\n\nThe  commands  `/' and `;' may be used to obtain information about those monsters who are displayed on the screen.   The  command  \"#name\"  (by  default bound to `C'), allows you to assign a name to a monster, which may be useful to  help  distinguish  one from  another  when  multiple  monsters are present.  Assigning a name which is just a space will remove any prior name.\n\nThe extended command \"#chat\" can be used to interact with an adjacent monster.  There is no actual dialog (in other words, you don't get to choose what you'll say), but chatting with some monsters  such  as  a shopkeeper or the Oracle of Delphi can produce useful results.\n=== 전투 ===\n6.1.  Fighting\n\nIf you see a monster and you wish to fight it, just  attempt\nto  walk  into  it.   Many  monsters you find will mind their own\nbusiness unless you attack them.  Some of them are very dangerous\nwhen angered.  Remember:  discretion is the better part of valor.\n\nIn  most  circumstances, if you attempt to attack a peaceful\nmonster by moving into its location, you'll be asked  to  confirm\nyour  intent.   By default an answer of `y' acknowledges that in-\ntent, which can be error prone if you're using `y' to move.   You\ncan set the paranoid_confirmation option to require a response of\n\"yes\" instead.\n\nIf you can't see a monster (if it is invisible,  or  if  you\nare  blinded), the symbol `I' will be shown when you learn of its\npresence.  If you attempt to walk into it, you will try to  fight\nit  just  like a monster that you can see; of course, if the mon-\nster has moved, you will attack empty air.  If you guess that the\nmonster  has  moved  and you don't wish to fight, you can use the\n`m' command to move without fighting; likewise, if you don't  re-\nmember a monster but want to try fighting anyway, you can use the `F' command.\n=== 당신의 애완동물 ===\n          6.2.  Your pet\n\n               You start the game with a little dog (`d'), kitten (`f'), or\n          pony  (`u'),  which follows you about the dungeon and fights mon-\n          sters with you.  Like you, your pet needs food to survive.   Dogs\n          and  cats  usually  feed  themselves  on  fresh carrion and other\n          meats; horses need vegetarian food which is harder  to  come  by.\n          If  you're  worried  about  your pet or want to train it, you can\n          feed it, too, by throwing it food.  A properly trained pet can be\n          very useful under certain circumstances.\n\n               Your  pet  also  gains experience from killing monsters, and\n          can grow over time, gaining hit points  and  doing  more  damage.\n          Initially,  your  pet  may  even be better at killing things than\n          you, which makes pets useful for low-level characters.\n\n               Your pet will follow you up and down  staircases  if  it  is\n          next  to  you when you move.  Otherwise your pet will be stranded\n          and may become wild.  Similarly, when you trigger  certain  types\n          of  traps  which  alter  your location (for instance, a trap door\n          which drops you to a lower dungeon level), any adjacent pet  will\n          accompany you and any non-adjacent pet will be left behind.  Your\n          pet may trigger such traps itself; you will not be carried  along\n          with it even if adjacent at the time.\n=== 안장 ===\n          6.3.  Steeds\n\n               Some  types of creatures in the dungeon can actually be rid-\n          den if you have the right equipment and skill.  Convincing a wild\n          beast  to  let  you  saddle  it up is difficult to say the least.\n          Many a dungeoneer has had to resort to magic and wizardry in  or-\n          der to forge the alliance.  Once you do have the beast under your\n          control however, you can easily climb in and out  of  the  saddle\n          with the \"#ride\" command.  Lead the beast around the dungeon when\n          riding, in the same manner as you would move yourself.  It is the\n          beast that you will see displayed on the map.\n\n               Riding  skill is managed by the \"#enhance\" command.  See the\n          section on Weapon proficiency for more information about that.\n\n               Use the `a' (apply) command and pick a saddle in your inven-\n          tory  to  attempt to put that saddle on an adjacent creature.  If\n          successful, it will be transferred to that creature's inventory.\n\n               Use the \"#loot\" command while adjacent to a saddled creature\n          to  try  to remove the saddle from that creature.  If successful,\n          it will be transferred to your inventory.\n=== Bones 레벨 ===\n          6.4.  Bones levels\n\n               You may encounter the shades and corpses of other  adventur-\n          ers (or even former incarnations of yourself!) and their personal effects.  Ghosts are hard to  kill,  but  easy  to  avoid,  since\n          they're  slow and do little damage.  You can plunder the deceased\n          adventurer's possessions; however, they are likely to be  cursed.\n          Beware of whatever killed the former player; it is probably still\n          lurking around, gloating over its last victory.\n=== 몬스터의 지속 ===\n          6.5.  Persistence of Monsters\n\n               Monsters (a generic reference which also includes humans and\n          pets)  are only shown while they can be seen or otherwise sensed.\n          Moving to a location where you can't see or sense a  monster  any\n          more  will  result in it disappearing from your map, similarly if\n          it is the one who moved rather than you.\n\n               However, if you encounter a monster which you can't  see  or\n          sense  --  perhaps it is invisible and has just tapped you on the\n          noggin -- a special \"remembered, unseen monster\" marker  will  be\n          displayed  at the location where you think it is.  That will per-\n          sist until you have proven that there is no monster  there,  even\n          if  the unseen monster moves to another location or you move to a\n          spot where the marker's location ordinarily wouldn't be seen  any\n          more.\n== 물체 ==\n          7.  Objects\n\n               When you find something in the dungeon, it is common to want\n          to pick it up.  In NetHack, this is accomplished automatically by\n          walking  over  the object (unless you turn off the autopickup op-\n          tion (see below), or move with the `m' prefix  (see  above)),  or\n          manually by using the `,' command.\n\n               If  you're carrying too many items, NetHack will tell you so\n          and you won't be able to pick up anything  more.   Otherwise,  it\n          will  add  the  object(s) to your pack and tell you what you just\n          picked up.\n\n               As you add items to your inventory, you also add the  weight\n          of  that  object to your load.  The amount that you can carry de-\n          pends on your strength and your constitution.  The  stronger  and\n          sturdier  you  are, the less the additional load will affect you.\n          There comes a point, though, when the weight of all of that stuff\n          you  are carrying around with you through the dungeon will encum-\n          ber you.  Your reactions will get slower and you'll burn calories\n          faster,  requiring food more frequently to cope with it.  Eventu-\n          ally, you'll be so overloaded that you'll either have to  discard\n          some of what you're carrying or collapse under its weight.\n\n               NetHack  will  tell  you how badly you have loaded yourself.\n          If  you  are  encumbered,  one  of  the  conditions   \"Burdened\",\n          \"Stressed\", \"Strained\", \"Overtaxed\" or \"Overloaded\" will be shown\n          on the bottom line status display.\n\n               When you pick up an object, it is assigned an inventory let-\n          ter.   Many commands that operate on objects must ask you to find out which object you want to  use.   When  NetHack  asks  you  to\n          choose a particular object you are carrying, you are usually pre-\n          sented with a list of inventory letters to choose from (see  Com-\n          mands, above).\n\n               Some  objects,  such  as weapons, are easily differentiated.\n          Others, like scrolls and potions, are  given  descriptions  which\n          vary  according to type.  During a game, any two objects with the\n          same description are the same type.   However,  the  descriptions\n          will vary from game to game.\n\n               When you use one of these objects, if its effect is obvious,\n          NetHack will remember what it is for you.  If  its  effect  isn't\n          extremely  obvious,  you will be asked what you want to call this\n          type of object so you will recognize it later.  You can also  use\n          the  \"#name\"  command,  for the same purpose at any time, to name\n          all objects of a particular type or just  an  individual  object.\n          When  you  use \"#name\" on an object which has already been named,\n          specifying a space as the value will remove the  prior  name  in-\n          stead of assigning a new one.\n=== 저주와 축복 ===\n          7.1.  Curses and Blessings\n\n               Any  object  that you find may be cursed, even if the object\n          is otherwise helpful.  The most common effect of a curse is being\n          stuck  with (and to) the item.  Cursed weapons weld themselves to\n          your hand when wielded, so you cannot unwield them.   Any  cursed\n          item  you  wear is not removable by ordinary means.  In addition,\n          cursed arms and armor usually, but not always, bear negative  en-\n          chantments that make them less effective in combat.  Other cursed\n          objects may act poorly or detrimentally in other ways.\n\n               Objects can also be blessed.   Blessed  items  usually  work\n          better  or more beneficially than normal uncursed items.  For ex-\n          ample, a blessed weapon will do more damage against demons.\n\n               Objects which are neither cursed nor blessed are referred to\n          as  uncursed.   They  could just as easily have been described as\n          unblessed, but the uncursed designation  is  what  you  will  see\n          within  the  game.   A  \"glass half full versus glass half empty\"\n          situation; make of that what you will.\n\n               There are magical means of bestowing or removing curses upon\n          objects,  so  even  if you are stuck with one, you can still have\n          the curse lifted and the item removed.  Priests  and  Priestesses\n          have  an  innate  sensitivity  to this property in any object, so\n          they can more easily avoid cursed objects  than  other  character\n          roles.\n\n               An  item with unknown status will be reported in your inven-\n          tory with no prefix.  An item which you know the state of will be\n          distinguished  in  your  inventory  by  the  presence of the word\n          \"cursed\", \"uncursed\" or \"blessed\" in the description of the item.\n          In  some cases \"uncursed\" will be omitted as being redundant when enough other information is displayed.  The implicit_uncursed op-\n          tion  can  be  used  to  control this; toggle it off to have \"un-\n          cursed\" be displayed even when that can be deduced from other at-\n          tributes.\n=== 무기 ===\n          7.2.  Weapons (`)')\n\n               Given  a  chance,  most monsters in the Mazes of Menace will\n          gratuitously try to kill you.  You need weapons for  self-defense\n          (killing  them  first).   Without  a  weapon, you do only 1-2 hit\n          points of damage (plus bonuses, if any).  Monk characters are  an\n          exception;  they  normally  do  more damage with bare (or gloved)\n          hands than they do with weapons.\n\n               There are wielded weapons, like maces and swords, and thrown\n          weapons,  like arrows and spears.  To hit monsters with a weapon,\n          you must wield it and attack them, or throw it at them.  You  can\n          simply  elect  to  throw  a spear.  To shoot an arrow, you should\n          first wield a bow, then throw the arrow.  Crossbows shoot  cross-\n          bow bolts.  Slings hurl rocks and (other) stones (like gems).\n\n               Enchanted  weapons  have  a  \"plus\" (or \"to hit enhancement\"\n          which can be either positive  or  negative)  that  adds  to  your\n          chance  to  hit and the damage you do to a monster.  The only way\n          to determine a weapon's enchantment is to have it magically iden-\n          tified  somehow.  Most weapons are subject to some type of damage\n          like rust.  Such \"erosion\" damage can be repaired.\n\n               The chance that an attack will successfully hit  a  monster,\n          and  the  amount  of damage such a hit will do, depends upon many\n          factors.  Among them are: type of weapon, quality of weapon  (en-\n          chantment and/or erosion), experience level, strength, dexterity,\n          encumbrance, and proficiency (see below).   The  monster's  armor\n          class -- a general defense rating, not necessarily due to wearing\n          of armor -- is a factor too; also, some monsters are particularly\n          vulnerable to certain types of weapons.\n\n               Many  weapons  can be wielded in one hand; some require both\n          hands.  When wielding a two-handed weapon, you  can  not  wear  a\n          shield,  and  vice versa.  When wielding a one-handed weapon, you\n          can have another weapon ready to use by setting  things  up  with\n          the  `x'  command,  which  exchanges  your primary (the one being\n          wielded) and alternate weapons.  And if you have  proficiency  in\n          the  \"two weapon combat\" skill, you may wield both weapons simul-\n          taneously as primary and secondary; use the `X' command to engage\n          or  disengage  that.   Only some types of characters (barbarians,\n          for instance) have the necessary skill available.  Even with that\n          skill,  using  two weapons at once incurs a penalty in the chance\n          to hit your target compared to using just one weapon at a time.\n\n               There might be times when you'd rather not wield any  weapon\n          at  all.  To accomplish that, wield `-', or else use the `A' com-\n          mand which allows you to unwield the current weapon  in  addition\n          to taking off other worn items.\n\nThose  of you in the audience who are AD&D players, be aware\n          that each weapon which existed in AD&D does roughly the same dam-\n          age  to  monsters  in  NetHack.  Some of the more obscure weapons\n          (such as the aklys, lucern hammer, and bec-de-corbin) are defined\n          in an appendix to Unearthed Arcana, an AD&D supplement.\n\n               The  commands  to  use weapons are `w' (wield), `t' (throw),\n          `f' (fire, an alternate way of throwing), `Q' (quiver), `x'  (ex-\n          change), `X' (twoweapon), and \"#enhance\" (see below).\n==== 던지기와 쏘기 ====\n          7.2.1.  Throwing and shooting\n\n               You  can  throw just about anything via the `t' command.  It\n          will prompt for the item to throw; picking `?' will  list  things\n          in  your  inventory  which are considered likely to be thrown, or\n          picking `*' will list your entire inventory.  After you've chosen\n          what  to  throw, you will be prompted for a direction rather than\n          for a specific target.  The distance something can be thrown  de-\n          pends mainly on the type of object and your strength.  Arrows can\n          be thrown by hand, but can be thrown much  farther  and  will  be\n          more likely to hit when thrown while you are wielding a bow.\n\n               You  can  simplify  the  throwing operation by using the `Q'\n          command to select your preferred \"missile\", then  using  the  `f'\n          command  to  throw  it.   You'll  be  prompted for a direction as\n          above, but you don't have to specify which  item  to  throw  each\n          time you use `f'.  There is also an option, autoquiver, which has\n          NetHack choose another item to automatically fill your quiver (or\n          quiver  sack,  or have at the ready) when the inventory slot used\n          for `Q' runs out.\n\n               Some characters have the ability to fire a volley of  multi-\n          ple  items  in a single turn.  Knowing how to load several rounds\n          of ammunition at once -- or hold several missiles in your hand --\n          and  still  hit  a target is not an easy task.  Rangers are among\n          those who are adept at this task, as are those with a high  level\n          of  proficiency  in  the  relevant  weapon skill (in bow skill if\n          you're wielding one to shoot arrows, in crossbow skill if  you're\n          wielding one to shoot bolts, or in sling skill if you're wielding\n          one to shoot stones).  The number of items that the character has\n          a  chance  to  fire varies from turn to turn.  You can explicitly\n          limit the number of shots by using a numeric  prefix  before  the\n          `t'  or  `f'  command.  For example, \"2f\" (or \"n2f\" if using num-\n          ber_pad mode) would ensure that at most 2 arrows are shot even if\n          you  could  have  fired  3.   If you specify a larger number than\n          would have been shot (\"4f\" in this example), you'll just  end  up\n          shooting the same number (3, here) as if no limit had been speci-\n          fied.  Once the volley is in motion, all of the items will travel\n          in the same direction; if the first ones kill a monster, the oth-\n          ers can still continue beyond that spot.\n\n==== 무기 숙련도 ====\n          7.2.2.  Weapon proficiency\n\n               You will have varying degrees of skill in the weapons avail-\n          able.   Weapon proficiency, or weapon skills, affect how well you\n          can use particular types of weapons, and you'll be  able  to  im-\n          prove  your  skills  as you progress through a game, depending on\n          your role, your experience level, and use of the weapons.\n\n               For the purposes of proficiency, weapons have  been  divided\n          up   into  various  groups  such  as  daggers,  broadswords,  and\n          polearms.  Each role has a limit on what level of  proficiency  a\n          character  can achieve for each group.  For instance, wizards can\n          become highly skilled in daggers or staves but not in  swords  or\n          bows.\n\n               The  \"#enhance\"  extended  command is used to review current\n          weapons proficiency (also spell proficiency) and to choose  which\n          skill(s) to improve when you've used one or more skills enough to\n          become eligible to do so.  The skill rankings are  \"none\"  (some-\n          times also referred to as \"restricted\", because you won't be able\n          to advance), \"unskilled\", \"basic\", \"skilled\", and \"expert\".   Re-\n          stricted skills simply will not appear in the list shown by \"#en-\n          hance\".   (Divine  intervention  might  unrestrict  a  particular\n          skill, in which case it will start at unskilled and be limited to\n          basic.)  Some characters can enhance their barehanded  combat  or\n          martial arts skill beyond expert to \"master\" or \"grand master\".\n\n               Use of a weapon in which you're restricted or unskilled will\n          incur a modest penalty in the chance to hit a monster and also in\n          the  amount of damage done when you do hit; at basic level, there\n          is no penalty or bonus; at skilled level, you  receive  a  modest\n          bonus  in  the chance to hit and amount of damage done; at expert\n          level, the bonus is higher.  A successful hit  has  a  chance  to\n          boost  your  training towards the next skill level (unless you've\n          already reached the limit for this skill).   Once  such  training\n          reaches  the  threshold  for that next level, you'll be told that\n          you feel more confident in your skills.  At that  point  you  can\n          use  \"#enhance\"  to increase one or more skills.  Such skills are\n          not increased automatically because there is a limit to your  to-\n          tal  overall  skills, so you need to actively choose which skills\n          to enhance and which to ignore.\n==== 양손무기 전투 ====\n          7.2.3.  Two-Weapon combat\n\n               Some characters can use two weapons at once.  Setting things\n          up  to  do  so can seem cumbersome but becomes second nature with\n          use.  To wield two weapons, you need to use the \"#twoweapon\" com-\n          mand.   But  first you need to have a weapon in each hand.  (Note\n          that your two weapons are not fully equal; the one  in  the  hand\n          you  normally  wield with is considered primary and the other one\n          is considered secondary.  The most noticeable difference is after\n          you  stop -- or before you begin, for that matter -- wielding two\n          weapons at once.  The primary is your wielded weapon and the sec-\n          ondary  is  just an item in your inventory that's been designated as alternate weapon.)\n\n               If your primary weapon is wielded but your off hand is empty\n          or  has the wrong weapon, use the sequence `x', `w', `x' to first\n          swap your primary into your off hand, wield whatever you want  as\n          secondary  weapon,  then  swap  them  both back into the intended\n          hands.  If your secondary or alternate weapon is correct but your\n          primary one is not, simply use `w' to wield the primary.  Lastly,\n          if neither hand holds the correct weapon, use `w',  `x',  `w'  to\n          first wield the intended secondary, swap it to off hand, and then\n          wield the primary.\n\n               The whole process can be simplified via  use  of  the  push-\n          weapon option.  When it is enabled, then using `w' to wield some-\n          thing causes the currently wielded weapon to become  your  alter-\n          nate weapon.  So the sequence `w', `w' can be used to first wield\n          the weapon you intend to be secondary, and then wield the one you\n          want  as  primary  which will push the first into secondary posi-\n          tion.\n\n               When in two-weapon combat mode, using the `X'  command  tog-\n          gles  back to single-weapon mode.  Throwing or dropping either of\n          the weapons or having one of them be stolen or destroyed will al-\n          so make you revert to single-weapon combat.\n=== 갑옷 ===\n          7.3.  Armor (`[')\n\n               Lots of unfriendly things lurk about; you need armor to pro-\n          tect yourself from their blows.  Some types of armor offer better\n          protection  than  others.   Your armor class is a measure of this\n          protection.  Armor class (AC) is measured as in AD&D, with 10 be-\n          ing  the equivalent of no armor, and lower numbers meaning better\n          armor.  Each suit of armor which exists in AD&D  gives  the  same\n          protection in NetHack.  Here is an (incomplete) list of the armor\n          classes provided by various suits of armor:\n                             dragon scale mail         1\n                             plate mail                3\n                             crystal plate mail        3\n                             bronze plate mail         4\n                             splint mail               4\n                             banded mail               4\n                             dwarvish mithril-coat     4\n                             elven mithril-coat        5\n                             chain mail                5\n                             orcish chain mail         6\n                             scale mail                6\n                             dragon scales             7\n                             studded leather armor     7\n                             ring mail                 7\n                             orcish ring mail          8\n                             leather armor             8\n                             leather jacket            9\n                             no armor                 10\n\n               You can also wear other pieces of armor  (for  example  hel-\n          mets, boots, shields, cloaks) to lower your armor class even fur-\n          ther, but you can only wear one item of each category  (one  suit\n          of  armor,  one  cloak,  one  helmet, one shield, and so on) at a\n          time.\n\n               If a piece of armor is enchanted, its armor protection  will\n          be  better (or worse) than normal, and its \"plus\" (or minus) will\n          subtract from your armor class.  For example,  a  +1  chain  mail\n          would give you better protection than normal chain mail, lowering\n          your armor class one unit further to 4.  When you put on a  piece\n          of  armor,  you  immediately  find  out  the  armor class and any\n          \"plusses\" it provides.  Cursed pieces of armor usually have nega-\n          tive enchantments (minuses) in addition to being unremovable.\n\n               Many  types of armor are subject to some kind of damage like\n          rust.  Such damage can be repaired.  Some types of armor may  in-\n          hibit spell casting.\n\n               The commands to use armor are `W' (wear) and `T' (take off).\n          The `A' command can also be used to take off  armor  as  well  as\n          other worn items.\n=== 식품 ===\n          7.4.  Food (`%')\n\n               Food  is  necessary  to survive.  If you go too long without\n          eating you will faint, and eventually die  of  starvation.   Some\n          types  of  food  will  spoil, and become unhealthy to eat, if not\n          protected.  Food stored in ice boxes or tins (\"cans\") will usual-\n          ly  stay fresh, but ice boxes are heavy, and tins take a while to\n          open.\n\n               When you kill monsters, they usually leave corpses which are\n          also  \"food.\"   Many, but not all, of these are edible; some also\n          give you special powers when you eat them.  A good rule of  thumb\n          is \"you are what you eat.\"\n\n               Some character roles and some monsters are vegetarian.  Veg-\n          etarian monsters will typically never eat animal  corpses,  while\n          vegetarian  players can, but with some rather unpleasant side-ef-\n          fects.\n\n               You can name one food item after something you like  to  eat\n          with the fruit option.\n\n               The command to eat food is `e'.\n=== 두루마리 ===\n          7.5.  Scrolls (`?')\n\n               Scrolls  are labeled with various titles, probably chosen by\n          ancient wizards for their amusement value (for example \"READ ME,\"\n          or  \"THANX  MAUD\"  backwards).   Scrolls disappear after you read\n          them (except for blank ones, without magic spells on them).\n\n  One of the most useful of these is the scroll  of  identify,\n          which can be used to determine what another object is, whether it\n          is cursed or blessed, and how many uses it has  left.   Some  ob-\n          jects  of  subtle  enchantment  are difficult to identify without\n          these.\n\n               A mail daemon may run up and deliver mail to you as a scroll\n          of  mail  (on  versions compiled with this feature).  To use this\n          feature on versions where NetHack mail delivery is  triggered  by\n          electronic  mail  appearing  in your system mailbox, you must let\n          NetHack know where to look for new mail by setting the \"MAIL\" en-\n          vironment variable to the file name of your mailbox.  You may al-\n          so want to set the \"MAILREADER\" environment variable to the  file\n          name of your favorite reader, so NetHack can shell to it when you\n          read the scroll.  On versions of NetHack where mail  is  randomly\n          generated  internal  to the game, these environment variables are\n          ignored.  You can disable the mail daemon by turning off the mail\n          option.\n\n               The command to read a scroll is `r'.\n=== 물약 ===\n          7.6.  Potions (`!')\n\n               Potions  are distinguished by the color of the liquid inside\n          the flask.  They disappear after you quaff them.\n\n               Clear potions are potions of  water.   Sometimes  these  are\n          blessed or cursed, resulting in holy or unholy water.  Holy water\n          is the bane of the undead, so potions  of  holy  water  are  good\n          things  to throw (`t') at them.  It is also sometimes very useful\n          to dip (\"#dip\") an object into a potion.\n\n               The command to drink a potion is `q' (quaff).\n=== 지팡이 ===\n          7.7.  Wands (`/')\n\n               Wands usually have multiple magical charges.  Some types  of\n          wands require a direction in which to zap them.  You can also zap\n          them at yourself (just give a `.' or `s' for the direction).   Be\n          warned,  however, for this is often unwise.  Other types of wands\n          don't require a direction.  The number of charges in  a  wand  is\n          random and decreases by one whenever you use it.\n\n               When  the number of charges left in a wand becomes zero, at-\n          tempts to use the wand will usually result in nothing  happening.\n          Occasionally, however, it may be possible to squeeze the last few\n          mana points from an otherwise spent wand, destroying  it  in  the\n          process.   A  wand  may be recharged by using suitable magic, but\n          doing so runs the risk of causing it to explode.  The chance  for\n          such  an  explosion starts out very small and increases each time\n          the wand is recharged.\n\n               In a truly desperate situation, when your back is up against\n          the  wall,  you might decide to go for broke and break your wand.\n\n This is not for the faint of heart.  Doing so  will  almost  cer-\n          tainly cause a catastrophic release of magical energies.\n\n               When  you have fully identified a particular wand, inventory\n          display will include additional information in  parentheses:  the\n          number  of  times  it  has been recharged followed by a colon and\n          then by its current number of charges.  A current charge count of\n          -1 is a special case indicating that the wand has been cancelled.\n\n               The  command  to use a wand is `z' (zap).  To break one, use\n          the `a' (apply) command.\n=== 반지 ===\n          7.8.  Rings (`=')\n\n               Rings are very useful items, since they are relatively  per-\n          manent  magic,  unlike  the  usually fleeting effects of potions,\n          scrolls, and wands.\n\n               Putting on a ring activates its magic.  You  can  wear  only\n          two rings, one on each ring finger.\n\n               Most  rings  also cause you to grow hungry more rapidly, the\n          rate varying with the type of ring.\n\n               The commands to use rings are `P' (put on) and `R' (remove).\n=== Spellbooks ===\n          7.9.  Spellbooks (`+')\n\n               Spellbooks are tomes of mighty magic.  When studied with the\n          `r'  (read) command, they transfer to the reader the knowledge of\n          a spell (and therefore eventually become  unreadable)  --  unless\n          the  attempt  backfires.   Reading a cursed spellbook or one with\n          mystic runes beyond your ken can be harmful to your health!\n\n               A spell (even when learned) can also backfire when you  cast\n          it.   If  you  attempt to cast a spell well above your experience\n          level, or if you have little skill  with  the  appropriate  spell\n          type,  or  cast  it at a time when your luck is particularly bad,\n          you can end up wasting both the energy and the time  required  in\n          casting.\n\n               Casting  a  spell  calls  forth magical energies and focuses\n          them with your naked mind.  Some of the magical  energy  released\n          comes  from  within you.  Casting temporarily drains your magical\n          power, which will slowly be recovered, and causes you to need ad-\n          ditional  food.   Casting of spells also requires practice.  With\n          practice, your skill in each category of spell casting  will  im-\n          prove.   Over  time, however, your memory of each spell will dim,\n          and you will need to relearn it.\n\n               Some spells require a direction in which to cast them, simi-\n          lar  to  wands.   To cast one at yourself, just give a `.' or `s'\n          for the direction.  A few spells require you to pick a target lo-\n          cation  rather  than  just specify a particular direction.  Other spells don't require any direction or target.\n\n               Just as weapons are divided into groups in which a character\n          can  become proficient (to varying degrees), spells are similarly\n          grouped.  Successfully casting a spell exercises its skill group;\n          using  the \"#enhance\" command to advance a sufficiently exercised\n          skill will affect all spells within the  group.   Advanced  skill\n          may  increase the potency of spells, reduce their risk of failure\n          during casting attempts, and improve the accuracy of the estimate\n          for  how much longer they will be retained in your memory.  Skill\n          slots are shared with weapons skills.  (See also the  section  on\n          \"Weapon proficiency\".)\n\n               Casting a spell also requires flexible movement, and wearing\n          various types of armor may interfere with that.\n\n               The command to read a spellbook is the same as for  scrolls,\n          `r' (read).  The `+' command lists each spell you know along with\n          its level, skill category, chance of failure when casting, and an\n          estimate  of  how strongly it is remembered.  The `Z' (cast) com-\n          mand casts a spell.\n=== 도구 ===\n          7.10.  Tools (`(')\n\n               Tools are miscellaneous objects with various purposes.  Some\n          tools  have  a limited number of uses, akin to wand charges.  For\n          example, lamps burn out after a while.  Other tools are  contain-\n          ers, which objects can be placed into or taken out of.\n\n               The command to use a tool is `a' (apply).\n==== 용기(容器) ====\n          7.10.1.  Containers\n\n               You  may  encounter bags, boxes, and chests in your travels.\n          A tool of this sort can be opened with the \"#loot\" extended  com-\n          mand  when  you  are  standing on top of it (that is, on the same\n          floor spot), or with the `a' (apply) command when you are  carry-\n          ing  it.   However,  chests are often locked, and are in any case\n          unwieldy objects.  You must set one down before unlocking  it  by\n          using a key or lock-picking tool with the `a' (apply) command, by\n          kicking it with the `^D' command, or by using a weapon  to  force\n          the lock with the \"#force\" extended command.\n\n               Some chests are trapped, causing nasty things to happen when\n          you unlock or open them.  You can check for and try to deactivate\n          traps with the \"#untrap\" extended command.\n=== 부적 ===\n          7.11.  Amulets (`\"')\n\n               Amulets  are very similar to rings, and often more powerful.\n          Like rings, amulets have various magical properties, some benefi-\n          cial, some harmful, which are activated by putting them on.\n\n               Only one amulet may be worn at a time, around your neck.\n\n               The  commands  to use amulets are the same as for rings, `P'\n          (put on) and `R' (remove).\n=== 보석 ===\n          7.12.  Gems (`*')\n\n               Some gems are valuable, and can be sold for a lot  of  gold.\n          They  are  also a far more efficient way of carrying your riches.\n          Valuable gems increase your score if you bring them with you when\n          you exit.\n\n               Other small rocks are also categorized as gems, but they are\n          much less valuable.  All rocks, however, can be used  as  projec-\n          tile  weapons  (if  you  have a sling).  In the most desperate of\n          cases, you can still throw them by hand.\n=== Large rocks ===\n          7.13.  Large rocks (``')\n\n               Statues and boulders are not particularly  useful,  and  are\n          generally  heavy.   It  is rumored that some statues are not what\n          they seem.\n\n               Very large humanoids (giants and their ilk) have been  known\n          to use boulders as weapons.\n\n               For  some  configurations  of  the  program,  statues are no\n          longer shown as ``' but by the letter  representing  the  monster\n          they depict instead.\n=== 금화 ===\n          7.14.  Gold (`$')\n\n               Gold  adds  to  your  score, and you can buy things in shops\n          with it.  There are a number of monsters in the dungeon that  may\n          be influenced by the amount of gold you are carrying (shopkeepers\n          aside).\n=== 물체의 지속 ===\n          7.15.  Persistence of Objects\n\n               Normally, if you have seen an object at a particular map lo-\n          cation  and move to another location where you can't directly see\n          that object any more, if will continue to be  displayed  on  your\n          map.   That remains the case even if it is not actually there any\n          more -- perhaps a monster has picked it up or it has rotted  away\n          --  until  you  can see or feel that location again.  One notable\n          exception is that if the object gets covered by the  \"remembered,\n          unseen  monster\" marker.  When that marker is later removed after\n          you've verified that no monster is there, you  will  forget  that\n          there  was any object there regardless of whether the unseen mon-\n          ster actually took the object.  If the  object  is  still  there,\n          then once you see or feel that location again you will re-discov-\n          er the object and resume remembering it.\n\n               The situation is the same for a pile of objects, except that\n          only  the top item of the pile is displayed.  The hilite_pile op-\n          tion can be enabled in order to show an item differently when  it\n          is the top one of a pile.\n\n== 컨덕트 ==\n          8.  Conduct\n\n               As  if  winning  NetHack  were not difficult enough, certain\n          players seek to challenge themselves by imposing restrictions  on\n          the  way  they play the game.  The game automatically tracks some\n          of these challenges, which can be checked at any  time  with  the\n          #conduct  command or at the end of the game.  When you perform an\n          action which breaks a challenge, it will  no  longer  be  listed.\n          This  gives  players extra \"bragging rights\" for winning the game\n          with these challenges.  Note that it is perfectly  acceptable  to\n          win  the game without resorting to these restrictions and that it\n          is unusual for players to adhere to  challenges  the  first  time\n          they win the game.\n\n               Several  of  the  challenges are related to eating behavior.\n          The most difficult of these is the foodless challenge.   Although\n          creatures can survive long periods of time without food, there is\n          a physiological need for water; thus there is no  restriction  on\n          drinking  beverages,  even  if they provide some minor food bene-\n          fits.  Calling upon your god for help with  starvation  does  not\n          violate any food challenges either.\n\n               A  strict  vegan  diet  is one which avoids any food derived\n          from animals.  The primary source of nutrition is fruits and veg-\n          etables.  The corpses and tins of blobs (`b'), jellies (`j'), and\n          fungi (`F') are also considered to be vegetable matter.   Certain\n          human  food  is  prepared without animal products; namely, lembas\n          wafers, cram rations, food rations (gunyoki), K-rations,  and  C-\n          rations.   Metal  or another normally indigestible material eaten\n          while polymorphed into a creature that can digest it is also con-\n          sidered  vegan  food.   Note however that eating such items still\n          counts against foodless conduct.\n\n               Vegetarians do not eat animals; however, they are  less  se-\n          lective  about eating animal byproducts than vegans.  In addition\n          to the vegan items listed above, they may eat any kind of pudding\n          (`P') other than the black puddings, eggs and food made from eggs\n          (fortune cookies and pancakes), food made with milk  (cream  pies\n          and candy bars), and lumps of royal jelly.  Monks are expected to\n          observe a vegetarian diet.\n\n               Eating any kind of meat violates the vegetarian, vegan,  and\n          foodless  conducts.   This includes tripe rations, the corpses or\n          tins of any monsters not mentioned above, and the  various  other\n          chunks  of meat found in the dungeon.  Swallowing and digesting a\n          monster while polymorphed is treated as if you ate the creature's\n          corpse.   Eating  leather, dragon hide, or bone items while poly-\n          morphed into a creature that can digest  it,  or  eating  monster\n          brains while polymorphed into a mind flayer, is considered eating an animal, although wax is only an animal byproduct.\n\n               Regardless of conduct, there will be some  items  which  are\n          indigestible,  and  others  which  are hazardous to eat.  Using a\n          swallow-and-digest attack against a monster is equivalent to eat-\n          ing  the  monster's corpse.  Please note that the term \"vegan\" is\n          used here only in the context of diet.  You  are  still  free  to\n          choose  not  to  use  or  wear  items  derived from animals (e.g.\n          leather, dragon hide, bone, horns, coral), but the game will  not\n          keep  track  of this for you.  Also note that \"milky\" potions may\n          be a translucent white, but they do not contain milk, so they are\n          compatible  with  a  vegan  diet.   Slime molds or player-defined\n          \"fruits\", although they could  be  anything  from  \"cherries\"  to\n          \"pork chops\", are also assumed to be vegan.\n\n               An atheist is one who rejects religion.  This means that you\n          cannot #pray, #offer sacrifices to  any  god,  #turn  undead,  or\n          #chat  with  a  priest.  Particularly selective readers may argue\n          that playing Monk or Priest characters should violate  this  con-\n          duct;  that  is a choice left to the player.  Offering the Amulet\n          of Yendor to your god is necessary to win the  game  and  is  not\n          counted against this conduct.  You are also not penalized for be-\n          ing spoken to by an angry god, priest(ess),  or  other  religious\n          figure; a true atheist would hear the words but attach no special\n          meaning to them.\n\n               Most players fight with a wielded weapon (or  tool  intended\n          to be wielded as a weapon).  Another challenge is to win the game\n          without using such a wielded weapon.  You are still permitted  to\n          throw,  fire,  and kick weapons; use a wand, spell, or other type\n          of item; or fight with your hands and feet.\n\n               In NetHack, a pacifist refuses to cause  the  death  of  any\n          other  monster  (i.e. if you would get experience for the death).\n          This is a particularly difficult challenge, although it is  still\n          possible to gain experience by other means.\n\n               An illiterate character cannot read or write.  This includes\n          reading a scroll, spellbook, fortune cookie message, or  t-shirt;\n          writing a scroll; or making an engraving of anything other than a\n          single \"X\" (the traditional signature of an  illiterate  person).\n          Reading an engraving, or any item that is absolutely necessary to\n          win the game, is not counted against this conduct.  The  identity\n          of  scrolls  and  spellbooks  (and  knowledge  of spells) in your\n          starting inventory is assumed to be learned  from  your  teachers\n          prior to the start of the game and isn't counted.\n\n               There  are several other challenges tracked by the game.  It\n          is possible to eliminate one or more species of monsters by geno-\n          cide;  playing  without  this  feature is considered a challenge.\n          When the game offers you an opportunity to genocide monsters, you\n          may  respond with the monster type \"none\" if you want to decline.\n          You can change the form of an item into another item of the  same\n          type  (\"polypiling\")  or  the  form of your own body into another creature (\"polyself\") by wand, spell,  or  potion  of  polymorph;\n          avoiding  these effects are each considered challenges.  Polymor-\n          phing monsters, including pets, does not break  either  of  these\n          challenges.   Finally,  you  may sometimes receive wishes; a game\n          without an attempt to wish for any items is a challenge, as is  a\n          game  without wishing for an artifact (even if the artifact imme-\n          diately disappears).  When the game offers you an opportunity  to\n          make  a wish for an item, you may choose \"nothing\" if you want to\n          decline.\n== 옵션 ==\nNetHack이 일을 처리함에 있어 개인의 입맛과 생각이 모두 제각각이기 때문에, NetHack이 어떻게 작동하는지를 변경하기 위한 여러 옵션들이 존재합니다.\n=== 옵션 설정하기 ===\n옵션은 여러 방법으로 설정할 수 있습니다. 게임 내에서는, 'O' 명령어로 모든 옵션을 보거나 변경할 수 있습니다. 그리고 당신은 옵션을 설정 파일이나 NETHACKOPTIONS environment variable (환경 변수) 안에 입력함으로써 자동으로 설정할 수도 있습니다. 또한, NetHack의 일부 버전은 당신으로 하여금 게임을 시작하기 전에 옵션이나 시스템 관리자를 위한 공용 설정을 설정할 수 있게 해주는 프론트-엔드 프로그램을 가지고 있습니다.\n=== configuration 파일 이용하기 ===\n          9.2.  Using a configuration file\n\nThe default name of the configuration file varies on different operating systems.\n\nOn  UNIX,  Linux, and Mac OS X it is \".nethackrc\" in the user's home directory.  The file may not exist, but it is a  normal ASCII text file and can be created with any text editor.\n\nOn  Windows,  it  is  \".nethackrc\" in the folder \"\\%USERPROFILE%\\NetHack\\3.6\".  The file may not exist, but it is  a  normal ASCII  text  file can can be created with any text editor.  After running NetHack for the first time, you  should  find a default template  for  the configuration file named \".nethackrc.template\" in \"\\%USERPROFILE%\\NetHack\\3.6\".  If you had not created the configuration  file,  NetHack will create the configuration file for you using the default template file.\n\nOn MS-DOS,  it  is  \"defaults.nh\" in the same folder as nethack.exe.\n\n               Any  line  in  the  configuration  file starting with `#' is\n          treated as a comment.  Empty lines are ignored.\n\n               Any line beginning with `[' and ending in `]' is  considered\n          a  section  marker.   The text between the square brackets is the\n          section name.  Lines after a section marker belong to  that  sec-\n          tion,  and  are  ignored  unless  a  CHOOSE statement was used to select that section.  Section names are case insensitive.\n\n               You can use different configuration statements in the  file,\n          some of which can be used multiple times.  In general, the state-\n          ments are written in capital letters, followed by an equals sign,\n          followed by settings particular to that statement.\n\n               Here is a list of allowed statements:\n{{{#!folding [ 펼치기 · 접기 ]\n * OPTIONS\nThere  are  two types of options, boolean and compound options.\n     Boolean options toggle a setting on or off, while compound  options  take  more diverse values.  Prefix a boolean option with\n            \"no\" or `!' to turn it off.  For compound options,  the  option\n            name and value are separated by a colon.  Some options are per-\n            sistent, and apply only to new games.  You can specify multiple\n            OPTIONS statements, and multiple options separated by commas in\n            a single OPTIONS statement.  (Comma separated options are  pro-\n            cessed from right to left.)\n\n            Example:\n\n                 OPTIONS=dogname:Fido\n                 OPTIONS=!legacy,autopickup,pickup_types:$\"=/!?+ \n * HACKDIR\nDefault  location  of  files  NetHack needs. On Windows HACKDIR defaults to the location of  the  NetHack.exe  or  NetHackw.exe file  so setting HACKDIR to override that is not usually necessary or recommended.\n * LEVELDIR\nThe location that in-progress level files are stored. Defaults to HACKDIR, must be writable.\n * SAVEDIR\nThe  location  where saved games are kept. Defaults to HACKDIR, must be writable.\n * BONESDIR\nThe location that bones files are kept. Defaults  to  HACKDIR, must be writable.\n * LOCKDIR\nThe  location  that  file  synchronization locks  are  stored. Defaults to HACKDIR, must be writable.\n * TROUBLEDIR\nThe location that a record of game  aborts  and  self-diagnosed game problems is kept. Defaults to HACKDIR, must be writable.\n * AUTOCOMPLETE\nEnable or disable an extended command autocompletion. Autocompletion has no effect for the X11 windowport.  You can  specify multiple  autocompletions. To enable autocompletion, list the extended command.  Prefix the command with \"!\" to  disable  the autocompletion for that command.\n\n            Example:\n\n                 AUTOCOMPLETE=zap,!annotate\n * AUTOPICKUP_EXCEPTION\nSet  exceptions to the pickup_types option.  See the \"Configuring Autopickup Exceptions\" section.\n * BINDINGS\nChange the key bindings of some special  keys,  menu  accelerators, or extended commands. You can specify multiple bindings.\nFormat is key followed by the command, separated  by  a  colon.\nSee the \"Changing Key Bindings\" section for more information.\n\n            Example:\n\n                 BIND=^X:getpos.autodescribe\n * CHOOSE\nChooses  at  random one of the comma-separated parameters as an active section name. Lines in other sections are ignored.\n\n            Example:\n\n                 OPTIONS=color\n                 CHOOSE=char A,char B\n                 [char A]\n                 OPTIONS=role:arc,race:dwa,align:law,gender:fem\n                 [char B]\n                 OPTIONS=role:wiz,race:elf,align:cha,gender:mal\n * MENUCOLOR \nHighlight menu lines with different colors.  See the \"Configuring Menu Colors\" section.\n * MSGTYPE\nChange  the way messages are shown in the top status line.  See the \"Configuring Message Types\" section.\n * ROGUESYMBOLS\nCustom symbols for for the rogue level's symbol set.  See  SYMBOLS below.\n * SOUND\nDefine a sound mapping.  See the \"Configuring User Sounds\" section.\n * SOUNDDIR\nDefine the directory that contains the sound  files. See  the \"Configuring User Sounds\" section.\n * SYMBOLS\nOverride  one  or  more  symbols in the symbol set used for all dungeon levels except for the special  rogue  level.   See  the \"Modifying NetHack Symbols\" section.\n\n            Example:\n\n                 # replace small punctuation (tick marks) with digits\n                 SYMBOLS=S_boulder:0,S_golem:7\n * WIZKIT\nDebug  mode  only:   extra  items  to add to initial inventory.\nValue is the name of a text file  containing  a  list  of  item names,  one  per line, up to a maximum of 128 lines.  Each line is processed by the function that handles wishing.\n\n            Example:\n\n                 WIZKIT=~/wizkit.txt}}}\n\n\n\n          Here is an example of configuration file contents:\n\n          # Set your character's role, race, gender, and alignment.\n          OPTIONS=role:Valkyrie, race:Human, gender:female, align:lawful\n          #\n          # Turn on autopickup, set automatically picked up object types\n          OPTIONS=autopickup,pickup_types:$\"=/!?+\n          #\n          # Map customization\n          OPTIONS=color           # Display things in color if possible\n          OPTIONS=lit_corridor    # Show lit corridors differently\n          OPTIONS=hilite_pet,hilite_pile\n          # Replace small punctuation (tick marks) with digits\n          SYMBOLS=S_boulder:0,S_golem:7\n          #\n          # No startup splash screen. Windows GUI only.\n          OPTIONS=!splash_screen\n\n\n=== NETHACKOPTIONS 환경 변수 이용하기 ===\n          9.3.  Using the NETHACKOPTIONS environment variable\n\n               The NETHACKOPTIONS variable is  a  comma-separated  list  of\n          initial  values for the various options.  Some can only be turned\n          on or off.  You turn one of these on by adding the  name  of  the\n          option  to  the list, and turn it off by typing a `!' or \"no\" be-\n          fore the name.  Others take a character string as a  value.   You\n          can  set  string  options  by  typing the option name, a colon or\n          equals sign, and then the value of the string.  The value is ter-\n          minated by the next comma or the end of string.\n\nFor example, to set up an environment variable so that color\n          is on, legacy is off, character name is set to \"Blue Meanie\", and\n          named fruit is set to \"lime\", you would enter the command\n\n          % setenv NETHACKOPTIONS \"color,\\!leg,name:Blue Meanie,fruit:lime\"\n\n          in  csh  (note  the  need to escape the `!' since it's special to\n          that shell), or the pair of commands\n\n          $ NETHACKOPTIONS=\"color,!leg,name:Blue Meanie,fruit:lime\"\n          $ export NETHACKOPTIONS\n\n          in sh, ksh, or bash.\n\n               The NETHACKOPTIONS value is effectively the same as a single\n          OPTIONS statement in a configuration file.  The \"OPTIONS=\" prefix\n          is implied and comma separated options are processed  from  right\n          to left.  Other types of configuration statements such as BIND or\n          MSGTYPE are not allowed.\n\n               Instead of a comma-separated list of options, NETHACKOPTIONS\n          can  be  set to the full name of a configuration file you want to\n          use.  If that full name doesn't start with a  slash,  precede  it\n          with  `@' (at-sign) to let NetHack know that the rest is intended\n          as a file name.  If it does start with `/', the  at-sign  is  op-\n          tional.\n=== 커스터마이징 ===\n          9.4.  Customization options\n\n               Here are explanations of what the various options do.  Char-\n          acter strings that are too long may be truncated.   Some  of  the\n          options listed may be inactive in your dungeon.\n\n               Some  options  are  persistent,  and  are saved and reloaded\n          along with the game.  Changing a persistent option in the config-\n          uration file applies only to new games.\n\n          acoustics\n            Enable  messages  about what your character hears (default on).\n            Note that this has nothing to do with your computer's audio ca-\n            pabilities.  Persistent.\n\n          align\n            Your   starting   alignment  (align:lawful,  align:neutral,  or\n            align:chaotic).  You may specify just the  first  letter.   The\n            default  is  to randomly pick an appropriate alignment.  If you\n            prefix the value with `!' or \"no\", you will exclude that align-\n            ment  from  being  picked randomly.  Cannot be set with the `O'\n            command.  Persistent.\n\n          autodescribe\n            Automatically describe the terrain under cursor when  asked  to\n            get a location on the map (default true).  The whatis_coord op-\n            tion controls whether the description includes map coordinates.\n\n          autodig\n            Automatically dig if you are wielding a digging tool and moving\n            into a place that can be dug (default false). Persistent.\n\n          autoopen\n            Walking into a door attempts to open it (default true). Persis-\n            tent.\n\n          autopickup\n            Automatically pick up things onto which you move (default  on).\n            Persistent.  See pickup_types to refine the behavior.\n\n          autoquiver\n            This  option  controls  what  happens  when you attempt the `f'\n            (fire) command when nothing is  quivered  or  readied  (default\n            false).   When  true,  the  computer  will  fill your quiver or\n            quiver sack or make ready some suitable weapon.  Note  that  it\n            will  not take into account the blessed/cursed status, enchant-\n            ment, damage, or quality of the weapon; you are free to manual-\n            ly  fill  your quiver or quiver sack or make ready with the `Q'\n            command instead.  If no weapon is found or the option is false,\n            the `t' (throw) command is executed instead.  Persistent.\n\n          blind\n            Start the character permanently blind (default false).  Persis-\n            tent.\n\n          bones\n            Allow saving and loading bones files (default  true).   Persis-\n            tent.\n\n          boulder\n            Set  the  character  used  to  display boulders (default is the\n            \"large rock\" class symbol, ``').\n\n          catname\n            Name your starting cat (for example \"catname:Morris\").   Cannot\n            be set with the `O' command.\n\n          character\n            Synonym  for \"role\" to pick the type of your character (for ex-\n            ample \"character:Monk\").  See role for more details.\n\n          checkpoint\n            Save game state after each level change, for possible  recovery\n            after program crash (default on).  Persistent.\n\n          checkspace\n            Check  free  disk  space  before writing files to disk (default\n            on).  You may have to turn this off if you have more than 2  GB\n            free  space on the partition used for your save and level files\n            (because too much space might overflow the calculation and  end\n            up looking like insufficient space).  Only applies when MFLOPPY\n            was defined during compilation.\n\n          clicklook\n            Allows looking at things on the screen by navigating the  mouse\n            over them and clicking the right mouse button (default off).\n\n          cmdassist\n            Have  the  game  provide some additional command assistance for\n            new players if it detects some  anticipated  mistakes  (default\n            on).\n\n          confirm\n            Have  user  confirm  attacks  on  pets,  shopkeepers, and other\n            peaceable creatures (default on).  Persistent.\n\n          dark_room\n            Show out-of-sight areas of lit rooms (default on).  Persistent.\n\n          disclose\n            Controls what information the program  reveals  when  the  game\n            ends.   Value  is  a space separated list of prompting/category\n            pairs (default is \"ni na nv ng nc no\", prompt with default  re-\n            sponse of `n' for each candidate).  Persistent.  The possibili-\n            ties are:\n\n                 i - disclose your inventory;\n                 a - disclose your attributes;\n                 v - summarize monsters that have been vanquished;\n                 g - list monster species that have been genocided;\n                 c - display your conduct;\n                 o - display dungeon overview.\n\n            Each disclosure possibility can optionally  be  preceded  by  a\n            prefix  which  lets  you  refine  how it behaves.  Here are the\n            valid prefixes:\n\n                 y - prompt you and default to yes on the prompt;\n                 n - prompt you and default to no on the prompt;\n                 + - disclose it without prompting;\n                 - - do not disclose it and do not prompt.\n\n            The listing of vanquished monsters can be sorted, so there  are\n            two additional choices for `v':\n\n                 ? - prompt you and default to ask on the prompt;\n                 # - disclose it without prompting, ask for sort order.\n\n            Asking refers to picking one of the orderings from a menu.  The\n            `+' disclose without prompting choice, or  being  prompted  and\n            answering `y' rather than `a', will default to showing monsters\n            in the traditional order, from high level to low level.\n\n            Omitted categories are implicitly added with `n' prefix.  Spec-\n            ified categories with omitted prefix implicitly use `+' prefix.\n            Order of the disclosure categories  does  not  matter,  program\n            display for end-of-game disclosure follows a set sequence.\n\n            (for  example \"disclose:yi na +v -g o\") The example sets inven-\n            tory to prompt and default to yes, attributes to prompt and de-\n            fault to no, vanquished to disclose without prompting, genocid-\n            ed to not disclose and not prompt, conduct to implicitly prompt\n            and default to no, and overview to disclose without prompting.\n\n            Note  that  the  vanquished monsters list includes all monsters\n            killed by traps and each other as well as by you.  And the dun-\n            geon overview shows all levels you had visited but does not re-\n            veal things about them that you hadn't discovered.\n\n          dogname\n            Name your starting dog (for example \"dogname:Fang\").  Cannot be\n            set with the `O' command.\n\n          extmenu\n            Changes  the  extended  commands  interface to pop-up a menu of\n            available commands.  It is keystroke compatible with the tradi-\n            tional  interface  except that it does not require that you hit\n            Enter.  It is implemented for the tty interface (default off).\n\n            For the X11 interface, which always uses a menu for choosing an\n            extended command, it controls whether the menu shows all avail-\n            able commands (on) or just the subset of  commands  which  have\n            traditionally been considered extended ones (off).\n\n          female\n            An  obsolete  synonym  for \"gender:female\".  Cannot be set with\n            the `O' command.\n\n          fixinv\n            An object's inventory letter sticks to  it  when  it's  dropped\n            (default  on).   If  this is off, dropping an object shifts all\n            the remaining inventory letters.  Persistent.\n\n          force_invmenu\n            Commands asking for an inventory item show a menu instead of  a\n            text query with possible menu letters. Default is off.\n\n          fruit\n            Name  a  fruit  after  something  you enjoy eating (for example\n            \"fruit:mango\") (default \"slime mold\").  Basically  a  nostalgic\n            whimsy  that  NetHack  uses  from time to time.  You should set\n            this to something you find more  appetizing  than  slime  mold.\n            Apples,  oranges,  pears,  bananas, and melons already exist in\n            NetHack, so don't use those.\n\n          gender\n            Your starting gender (gender:male or gender:female).   You  may\n            specify  just  the first letter.  Although you can still denote\n            your gender using the \"male\" and \"female\" options, the \"gender\"\n            option  will  take precedence.  The default is to randomly pick\n            an appropriate gender.  If you prefix the  value  with  `!'  or\n            \"no\",  you will exclude that gender from being picked randomly.\n\n            Cannot be set with the `O' command.  Persistent.\n\n          goldX\n            When filtering  objects  based  on  bless/curse  state  (BUCX),\n            whether  to  treat gold pieces as X (unknown bless/curse state,\n            when \"on\") or U (known to be  uncursed,  when  \"off\",  the  de-\n            fault).   Gold  is  never  blessed or cursed, but it is not de-\n            scribed as \"uncursed\" even when the implicit_uncursed option is\n            \"off\".\n\n          help\n            If  more  information is available for an object looked at with\n            the `/' command, ask if you want to see it (default on).  Turn-\n            ing  help  off  makes  just looking at things faster, since you\n            aren't interrupted with the \"More info?\" prompt,  but  it  also\n            means that you might miss some interesting and/or important in-\n            formation.  Persistent.\n\n          herecmd_menu\n            When using a windowport that supports  mouse  and  clicking  on\n            yourself  or  next  to you, show a menu of possible actions for\n            the location.  Same as \"#herecmdmenu\" and \"#therecmdmenu\"  com-\n            mands.\n\n          hilite_pet\n            Visually  distinguish  pets from similar animals (default off).\n            The behavior of this option depends on the  type  of  windowing\n            you use.  In text windowing, text highlighting or inverse video\n            is often used; with tiles, generally displays  a  heart  symbol\n            near pets.\n\n            With  the  curses interface, the petattr option controls how to\n            highlight pets and setting it will turn the  hilite_pet  option\n            on or off as warranted.\n\n          hilite_pile\n            Visually  distinguish  piles of objects from individual objects\n            (default off).  The behavior of this option depends on the type\n            of  windowing you use.  In text windowing, text highlighting or\n            inverse video is often used; with tiles, generally  displays  a\n            small plus-symbol beside the object on the top of the pile.\n\n          hitpointbar\n            Show  a  hit  point bar graph behind your name and title.  Only\n            available for TTY and Windows GUI, and only when  statushilites\n            is on.\n\n          horsename\n            Name  your  starting  horse  (for example \"horsename:Trigger\").\n            Cannot be set with the `O' command.\n\n          ignintr\n            Ignore interrupt signals, including breaks (default off).  Per-\n            sistent.\n\n          implicit_uncursed\n            Omit \"uncursed\" from inventory lists, if possible (default on).\n\n          legacy\n            Display an introductory message when starting the game (default\n            on).  Persistent.\n\n          lit_corridor\n            Show corridor squares seen by night vision or  a  light  source\n            held by your character as lit (default off).  Persistent.\n\n          lootabc\n            When  using  a  menu  to interact with a container, use the old\n            `a', `b', and `c' keyboard shortcuts rather than the  mnemonics\n            `o', `i', and `b' (default off).  Persistent.\n\n          mail\n            Enable mail delivery during the game (default on).  Persistent.\n\n          male\n            An  obsolete synonym for \"gender:male\".  Cannot be set with the\n            `O' command.\n\n          mention_walls\n            Give feedback when walking against a wall (default off).\n\n          menucolors\n            Enable coloring menu lines  (default  off).   See  \"Configuring\n            Menu Colors\" on how to configure the colors.\n\n          menustyle\n            Controls the interface used when you need to choose various ob-\n            jects (in response to the Drop  command,  for  instance).   The\n            value  specified  should be the first letter of one of the fol-\n            lowing:  traditional, combination, full,  or  partial.   Tradi-\n            tional  was the only interface available for early versions; it\n            consists of a prompt for object class characters,  followed  by\n            an  object-by-object prompt for all items matching the selected\n            object class(es).  Combination starts with a prompt for  object\n            class(es) of interest, but then displays a menu of matching ob-\n            jects rather than prompting one-by-one.  Full displays  a  menu\n            of  object  classes  rather than a character prompt, and then a\n            menu of matching objects for selection.  Partial skips the  ob-\n            ject class filtering and immediately displays a menu of all ob-\n            jects.  Persistent.\n\n          menu_deselect_all\n            Menu character accelerator to deselect all  items  in  a  menu.\n            Implemented by the Amiga, Gem, X11 and tty ports.  Default `-'.\n\n          menu_deselect_page\n            Menu  character  accelerator to deselect all items on this page\n            of a menu.  Implemented by the Amiga, Gem and tty  ports.   De-\n            fault `\\'.\n\n          menu_first_page\n            Menu character accelerator to jump to the first page in a menu.\n            Implemented by the Amiga, Gem and tty ports.  Default `^'.\n\n          menu_headings\n            Controls how the headings in a menu  are  highlighted.   Values\n            are  \"none\", \"bold\", \"dim\", \"underline\", \"blink\", or \"inverse\".\n            Not all ports can actually display all types.\n\n          menu_invert_all\n            Menu character accelerator to invert all items in a menu.   Im-\n            plemented by the Amiga, Gem, X11 and tty ports.  Default `@'.\n\n          menu_invert_page\n            Menu  character accelerator to invert all items on this page of\n            a menu.  Implemented by the Amiga, Gem and tty ports.   Default\n            `~'.\n\n          menu_last_page\n            Menu  character accelerator to jump to the last page in a menu.\n            Implemented by the Amiga, Gem and tty ports.  Default `|'.\n\n          menu_next_page\n            Menu character accelerator to goto the next menu page.   Imple-\n            mented by the Amiga, Gem and tty ports.  Default `>'.\n\n          menu_objsyms\n            Show  object symbols in menu headings in menus where the object\n            symbols act as menu accelerators (default off).\n\n          menu_overlay\n            Do not clear the screen before drawing menus, and  align  menus\n            to  the  right edge of the screen. Only for the tty port.  (de-\n            fault on)\n\n          menu_previous_page\n            Menu character accelerator to goto the previous menu page.  Im-\n            plemented by the Amiga, Gem and tty ports.  Default `<'.\n\n          menu_search\n            Menu  character  accelerator to search for a menu item.  Imple-\n            mented by the Amiga, Gem, X11 and tty ports.  Default `:'.\n\n          menu_select_all\n            Menu character accelerator to select all items in a menu.   Im-\n            plemented by the Amiga, Gem, X11 and tty ports.  Default `.'.\n\n          menu_select_page\n            Menu  character accelerator to select all items on this page of\n            a menu.  Implemented by the Amiga, Gem and tty ports.   Default\n            `,'.\n\n          monpolycontrol\n            Prompt for new form whenever any monster changes shape (default off).  Debug mode only.\n\n          mouse_support\n            Allow use of the mouse for input and  travel.   Valid  settings\n            are:\n\n                 0 - disabled\n                 1 - enabled and make OS adjustments to support mouse use\n                 2 - like 1 but does not make any OS adjustments\n\n            Omitting  a  value  is  the  same  as specifying 1 and negating\n            mouse_support is the same as specifying 0.\n\n          msghistory\n            The number of top line messages to keep (and be able to  recall\n            with `^P') (default 20).  Cannot be set with the `O' command.\n\n          msg_window\n            Allows  you  to change the way recalled messages are displayed.\n            Currently it is only supported for tty (all four  choices)  and\n            for  curses  (`f'  and `r' choices, default `r').  The possible\n            values are:\n\n                 s - single message (default; only choice prior to 3.4.0);\n                 c - combination, two messages as \"single\", then as \"full\";\n                 f - full window, oldest message first;\n                 r - full window reversed, newest message first.\n\n            For backward compatibility, no  value  needs  to  be  specified\n            (which  defaults  to  \"full\"),  or  it  can  be  negated (which\n            defaults to \"single\").\n\n          name\n            Set your character's name (defaults to your  user  name).   You\n            can  also set your character's role by appending a dash and one\n            or more letters of the role (that is, by suffixing one of -A -B\n            -C  -H  -K  -M  -P -Ra -Ro -S -T -V -W).  If -@ is used for the\n            role, then a random one will be automatically  chosen.   Cannot\n            be set with the `O' command.\n\n          news\n            Read the NetHack news file, if present (default on).  Since the\n            news is shown at the beginning of the game, there's no point in\n            setting this with the `O' command.\n\n          nudist\n            Start the character with no armor (default false).  Persistent.\n\n          null\n            Send padding nulls to the terminal (default on).  Persistent.\n\n          number_pad\n            Use  digit  keys instead of letters to move (default 0 or off).\n            Valid settings are:\n\n             0 - move by letters; \"yuhjklbn\"\n             1 - move by numbers; digit `5' acts as `G' movement prefix\n             2 - like 1 but `5' works as `g' prefix instead of as `G'\n             3 - by numbers using phone key layout; 123 above, 789 below\n             4 - combines 3 with 2; phone layout plus MS-DOS compatibility\n            -1 - by letters but use `z' to go northwest, `y' to zap wands\n\n            For backward compatibility, omitting a value  is  the  same  as\n            specifying  1 and negating number_pad is the same as specifying\n            0.  (Settings 2 and 4 are for compatibility with MS-DOS or  old\n            PC Hack; in addition to the different behavior for `5', `Alt-5'\n            acts as `G' and `Alt-0' acts as `I'.  Setting -1 is to accommo-\n            date  some  QWERTZ keyboards which have the location of the `y'\n            and `z' keys swapped.)  When moving  by  numbers,  to  enter  a\n            count prefix for those commands which accept one (such as \"12s\"\n            to search  twelve  times),  precede  it  with  the  letter  `n'\n            (\"n12s\").\n\n          packorder\n            Specify   the   order   to   list   object  types  in  (default\n            \"\")[%?+!=/(*`0_\").  The value of this option should be a string\n            containing the symbols for the various object types.  Any omit-\n            ted types are filled in at the end from the previous order.\n\n          paranoid_confirmation\n            A space separated list of specific situations  where  alternate\n            prompting   is  desired.   The  default  is  paranoid_confirma-\n            tion:pray.\n\n            Confirm     - for any prompts which are set  to  require  \"yes\"\n                          rather  than `y', also require \"no\" to reject in-\n                          stead of accepting any non-yes response as no\n            quit        - require \"yes\" rather than `y' to confirm quitting\n                          the  game  or  switching into non-scoring explore\n                          mode;\n            die         - require \"yes\" rather than `y'  to  confirm  dying\n                          (not  useful  in  normal play; applies to explore\n                          mode);\n            bones       - require \"yes\" rather than `y' to  confirm  saving\n                          bones data when dying in debug mode;\n            attack      - require  \"yes\" rather than `y' to confirm attack-\n                          ing a peaceful monster;\n            wand-break  - require \"yes\" rather than `y' to confirm breaking\n                          a wand;\n            eating      - require  \"yes\" rather than `y' to confirm whether\n                          to continue eating;\n            Were-change - require \"yes\" rather than `y' to confirm changing\n                          form  due  to lycanthropy when hero has polymorph\n                          control;\n            pray        - require `y' to confirm an attempt to pray  rather\n                          than immediately praying; on by default;\n            Remove      - require  selection from inventory for `R' and `T'\n                          commands even when wearing  just  one  applicable\n                          item.\n\n            all         - turn on all of the above.\n\n            By  default,  the  pray choice is enabled, the others disabled.\n            To disable it without setting any of  the  other  choices,  use\n            \"paranoid_confirmation:none\".  To keep it enabled while setting\n            any of the others, include it  in  the  list,  such  as  \"para-\n            noid_confirmation:attack pray Remove\".\n\n          perm_invent\n            If  true,  always  display  your current inventory in a window.\n            This only makes sense for windowing system interfaces that  im-\n            plement this feature.\n\n          petattr\n            Specifies  one or more text highlighting attributes to use when\n            showing pets  on  the  map.   Effectively  a  superset  of  the\n            hilite_pet boolean option.  Curses interface only; value is one\n            or more of the following letters.\n\n                 n - Normal text (no highlighting)\n                 i - Inverse video (default)\n                 b - Bold text\n                 u - Underlined text\n                 k - blinKing text\n                 d - Dim text\n                 t - iTalic text\n                 l - Left line indicator\n                 r - Right line indicator\n\n            Some of those choices might not work,  particularly  the  final\n            three,  depending  upon terminal hardware or terminal emulation\n            software.\n\n            Currently multiple highlight-style letters can be  combined  by\n            simply  stringing them together (for example, \"bk\"), but in the\n            future they might require being separated by plus  signs  (such\n            as  \"b+k\", which works already).  When using the `n' choice, it\n            should be specified on its own, not in combination with any  of\n            the other letters.\n\n          pettype\n            Specify  the  type  of  your  initial pet, if you are playing a\n            character class that uses multiple types of pets; or choose  to\n            have  no initial pet at all.  Possible values are \"cat\", \"dog\",\n            \"horse\", and \"none\".  If the choice is not allowed for the role\n            you  are  currently  playing, it will be silently ignored.  For\n            example, \"horse\" will only be honored when  playing  a  knight.\n            Cannot be set with the `O' command.\n\n          pickup_burden\n            When  you  pick  up  an item that would exceed this encumbrance\n            level (Unencumbered, Burdened, streSsed,  straiNed,  overTaxed,\n            or  overLoaded),  you  will  be  asked if you want to continue.\n            (Default `S').  Persistent.\n\n          pickup_thrown\n            If this option is on and autopickup is also on, try to pick  up\n            things  that  you threw, even if they aren't in pickup_types or\n            match an autopickup exception.  Default is on.  Persistent.\n\n          pickup_types\n            Specify the object types to be picked up when autopickup is on.\n            Default is all types.  You can use autopickup_exception config-\n            uration file lines to further refine autopickup behavior.  Per-\n            sistent.\n\n          pile_limit\n            When  walking  across a pile of objects on the floor, threshold\n            at which the message \"there are few/several/many objects  here\"\n            is  given  instead of showing a popup list of those objects.  A\n            value of 0 means \"no limit\" (always list the objects); a  value\n            of  1 effectively means \"never show the objects\" since the pile\n            size will always be at least that  big;  default  value  is  5.\n            Persistent.\n\n          playmode\n            Values  are  \"normal\", \"explore\", or \"debug\".  Allows selection\n            of explore mode (also known as discovery mode)  or  debug  mode\n            (also known as wizard mode) instead of normal play.  Debug mode\n            might only be allowed for someone logged in under a  particular\n            user  name  (on  multi-user systems) or specifying a particular\n            character name (on single-user systems) or it might be disabled\n            entirely.   Requesting  it when not allowed or not possible re-\n            sults in explore mode instead.  Default is normal play.\n\n          pushweapon\n            Using the `w' (wield) command when already  wielding  something\n            pushes  the  old  item into your alternate weapon slot (default\n            off).  Likewise for the `a' (apply) command if  it  causes  the\n            applied item to become wielded.  Persistent.\n\n          race\n            Selects your race (for example, \"race:human\").  Default is ran-\n            dom.  If you prefix the value with `!' or \"no\",  you  will  ex-\n            clude that race from being picked randomly.  Cannot be set with\n            the `O' command.  Persistent.\n\n          rest_on_space\n            Make the space bar a synonym for the `.' (#wait)  command  (de-\n            fault off).  Persistent.\n\n          role\n            Pick  your type of character (for example \"role:Samurai\"); syn-\n            onym for \"character\".  See \"name\" for an  alternate  method  of\n            specifying  your  role.   Normally only the first letter of the\n            value is examined; `r' is an exception with \"Rogue\",  \"Ranger\",\n            and \"random\" values.  If you prefix the value with `!' or \"no\",\n            you will exclude that role from being picked randomly.   Cannot\n            be set with the `O' command.  Persistent.\n\n          roguesymset\n            This  option may be used to select one of the named symbol sets\n            found within \"symbols\" to alter the symbols  displayed  on  the\n            screen on the rogue level.\n\n          rlecomp\n            When writing out a save file, perform run length compression of\n            the map.  Not all ports support run length compression. It  has\n            no effect on reading an existing save file.\n\n          runmode\n            Controls  the amount of screen updating for the map window when\n            engaged in multi-turn movement (running via shift+direction  or\n            control+direction  and  so  forth, or via the travel command or\n            mouse click).  The possible values are:\n\n            teleport - update the map after movement has finished;\n            run      - update the map after every seven or so steps;\n            walk     - update the map after each step;\n            crawl    - like walk, but pause briefly after each step.\n\n            This option only affects the game's screen display, not the ac-\n            tual  results  of moving.  The default is \"run\"; versions prior\n            to 3.4.1 used \"teleport\" only.  Whether or not  the  effect  is\n            noticeable will depend upon the window port used or on the type\n            of terminal.  Persistent.\n\n          safe_pet\n            Prevent you from (knowingly) attacking your pets (default  on).\n            Persistent.\n\n          sanity_check\n            Evaluate monsters, objects, and map prior to each turn (default\n            off).  Debug mode only.\n\n          scores\n            Control what parts of the score list you are shown at  the  end\n            (for   example  \"scores:5  top  scores/4  around  my  score/own\n            scores\").  Only the first letter of each category (`t', `a', or\n            `o') is necessary.  Persistent.\n\n          showexp\n            Show your accumulated experience points on bottom line (default\n            off).  Persistent.\n\n          showrace\n            Display yourself as the glyph for your race,  rather  than  the\n            glyph  for your role (default off).  Note that this setting af-\n            fects only the appearance of the display, not the way the  game\n            treats you.  Persistent.\n\n          showscore\n            Show your approximate accumulated score on bottom line (default\n            off).  Persistent.\n\n          silent\n            Suppress terminal beeps (default on).  Persistent.\n\n          sortloot\n            Controls the sorting behavior of the pickup lists for inventory\n            and  #loot commands and some others.  Persistent.  The possible\n            values are:\n\n            full - always sort the lists;\n            loot - only sort the lists that don't  use  inventory  letters,\n                   like with the #loot and pickup commands;\n            none - show lists the traditional way without sorting.\n\n          sortpack\n            Sort  the  pack contents by type when displaying inventory (de-\n            fault on).  Persistent.\n\n          sparkle\n            Display a sparkly effect when a monster (including yourself) is\n            hit  by  an attack to which it is resistant (default on).  Per-\n            sistent.\n\n          standout\n            Boldface monsters and \"--More--\" (default off).  Persistent.\n\n          statushilites\n            Controls how many turns status hilite behaviors  highlight  the\n            field.   If  negated  or set to zero, disables status hiliting.\n            See \"Configuring Status Hilites\" for further information.\n\n          status_updates\n            Allow updates to the status lines at the bottom of  the  screen\n            (default true).\n\n          suppress_alert\n            This  option  may be set to a NetHack version level to suppress\n            alert notification messages about feature changes for that  and\n            prior versions (for example \"suppress_alert:3.3.1\").\n\n          symset\n            This  option may be used to select one of the named symbol sets\n            found within \"symbols\" to alter the symbols  displayed  on  the\n            screen.   Use \"symset:default\" to explicitly select the default\n            symbols.\n\n          time\n            Show the elapsed game time in turns  on  bottom  line  (default\n            off).  Persistent.\n\n          timed_delay\n            When  pausing  momentarily for display effect, such as with ex-\n            plosions and moving objects, use a timer  rather  than  sending\n            extra  characters  to  the screen.  (Applies to \"tty\" interface\n            only; \"X11\" interface always uses a  timer  based  delay.   The default is on if configured into the program.)  Persistent.\n\n          tombstone\n            Draw a tombstone graphic upon your death (default on).  Persis-\n            tent.\n\n          toptenwin\n            Put the ending display in a NetHack window instead of on stdout\n            (default  off).  Setting this option makes the score list visi-\n            ble when a windowing version of NetHack is  started  without  a\n            parent  window,  but  it no longer leaves the score list around\n            after game end on a terminal or emulating window.\n\n          travel\n            Allow the travel command (default on).  Turning this option off\n            will  prevent  the game from attempting unintended moves if you\n            make inadvertent mouse clicks on the map window.  Persistent.\n\n          verbose\n            Provide more commentary during the game (default on).   Persis-\n            tent.\n\n          whatis_coord\n            When  using  the  `/' or `;' commands to look around on the map\n            with autodescribe on, display coordinates  after  the  descrip-\n            tion.   Also  works  in other situations where you are asked to\n            pick a location.\n\n            The possible settings are:\n\n                 c - compass (\"east\" or \"3s\" or \"2n,4w\");\n                 f - full compass (\"east\" or \"3south\" or \"2north,4west\");\n                 m - map <x,y> (map column x=0 is not used);\n                 s - screen [row,column] (row is offset to match tty usage);\n                 n - none (no coordinates shown) [default].\n\n            The whatis_coord option is also used with the \"/m\", \"/M\", \"/o\",\n            and \"/O\" sub-commands of `/', where the \"none\" setting is over-\n            ridden with \"map\".\n\n          whatis_filter\n            When getting a location on the map, and using the keys to cycle\n            through  next and previous targets, allows filtering the possi-\n            ble targets.\n\n                 n - no filtering [default]\n                 v - in view only\n                 a - in same area only\n\n            The area-filter tries to be slightly predictive  --  if  you're\n            standing on a doorway, it will consider the area on the side of\n            the door you were last moving towards.\n\n            Filtering can also be changed when getting a location with  the\n            \"getpos.filter\" key.\n\n          whatis_menu\n            When  getting  a  location on the map, and using a key to cycle\n            through next and previous targets, use a menu instead to pick a\n            target.  (default off)\n\n          whatis_moveskip\n            When  getting a location on the map, and using shifted movement\n            keys or meta-digit keys to fast-move, instead of moving 8 units\n            at a time, move by skipping the same glyphs.  (default off)\n\n          windowtype\n            When the program has been built to support multiple interfaces,\n            select which one to use, such as \"tty\" or  \"X11\"  (default  de-\n            pends on build-time settings; use \"#version\" to check).  Cannot\n            be set with the `O' command.\n\n            When used, it should be the first option set  since  its  value\n            might  enable  or disable the availability of various other op-\n            tions.  For multiple lines in a configuration file, that  would\n            be  the  first non-comment line.  For a comma-separated list in\n            NETHACKOPTIONS or an OPTIONS line in a configuration file, that\n            would be the rightmost option in the list.\n\n          wizweight\n            Augment object descriptions with their objects' weight (default\n            off).  Debug mode only.\n\n          zerocomp\n            When writing out a save file, perform zero-comp compression  of\n            the  contents.  Not all ports support zero-comp compression. It\n            has no effect on reading an existing save file.\n\n          9.5.  Window Port Customization options\n\n               Here are explanations of the various options that  are  used\n          to  customize  and  change  the characteristics of the windowtype\n          that you have chosen.  Character strings that are too long may be\n          truncated.   Not  all  window  ports will adjust for all settings\n          listed here.  You can safely add any of  these  options  to  your\n          configuration  file, and if the window port is capable of adjust-\n          ing to suit your preferences, it will attempt to  do  so.  If  it\n          can't  it will silently ignore it.  You can find out if an option\n          is supported by the window port that you are currently  using  by\n          checking to see if it shows up in the Options list.  Some options\n          are dynamic and can be specified during the  game  with  the  `O'\n          command.\n\n          align_message\n            Where  to align or place the message window (top, bottom, left,\n            or right)\n\n          align_status\n            Where to align or place the status window (top,  bottom,  left,\n            or right).\n\n          ascii_map\n            If  NetHack can, it should display an ascii character map if it\n            can.\n\n          color\n            If NetHack can, it should display color if it can for different\n            monsters, objects, and dungeon features.\n\n          eight_bit_tty\n            If  NetHack can, it should pass eight-bit character values (for\n            example, specified with the traps option) straight  through  to\n            your terminal (default off).\n\n          font_map\n            if NetHack can, it should use a font by the chosen name for the\n            map window.\n\n          font_menu\n            If NetHack can, it should use a font by  the  chosen  name  for\n            menu windows.\n\n          font_message\n            If NetHack can, it should use a font by the chosen name for the\n            message window.\n\n          font_status\n            If NetHack can, it should use a font by the chosen name for the\n            status window.\n\n          font_text\n            If  NetHack  can,  it  should use a font by the chosen name for\n            text windows.\n\n          font_size_map\n            If NetHack can, it should use this size font for the  map  win-\n            dow.\n\n          font_size_menu\n            If NetHack can, it should use this size font for menu windows.\n\n          font_size_message\n            If  NetHack  can,  it should use this size font for the message\n            window.\n\n          font_size_status\n            If NetHack can, it should use this size  font  for  the  status\n            window.\n\n          font_size_text\n            If NetHack can, it should use this size font for text windows.\n\n          fullscreen\n            If  NetHack can, it should try and display on the entire screen\n            rather than in a window.\n\n          guicolor\n            Use color text and/or highlighting attributes  when  displaying\n            some  non-map data (such as menu selector letters).  Curses in-\n            terface only; default is on.\n\n          large_font\n            If NetHack can, it should use a large font.\n\n          map_mode\n            If NetHack can, it should display the map in the manner  speci-\n            fied.\n\n          player_selection\n            If  NetHack  can, it should pop up dialog boxes, or use prompts\n            for character selection.\n\n          popup_dialog\n            If NetHack can, it should pop up dialog boxes for input.\n\n          preload_tiles\n            If NetHack can, it should preload tiles into memory.  For exam-\n            ple,  in  the  protected  mode  MS-DOS version, control whether\n            tiles get pre-loaded into RAM at the start of the game.   Doing\n            so  enhances  performance  of  the tile graphics, but uses more\n            memory. (default on).  Cannot be set with the `O' command.\n\n          scroll_amount\n            If NetHack can, it should scroll the display by this number  of\n            cells when the hero reaches the scroll_margin.\n\n          scroll_margin\n            If  NetHack  can, it should scroll the display when the hero or\n            cursor is this number of cells away from the edge of  the  win-\n            dow.\n\n          selectsaved\n            If  NetHack  can,  it  should  display a menu of existing saved\n            games for the player to choose from at game startup, if it can.\n            Not all ports support this option.\n\n          softkeyboard\n            Display  an  onscreen  keyboard.   Handhelds are most likely to\n            support this option.\n\n          splash_screen\n            If NetHack can, it should display an opening splash screen when\n            it starts up (default yes).\n\n          statuslines\n            Number  of  lines for traditional below-the-map status display.\n\n            Acceptable values are 2 and 3 (default is 2).  Curses  and  tty\n            interfaces only.\n\n          term_cols  and  term_rows\n            Curses  interface  only.  Number of columns and rows to use for\n            the display.  Curses will attempt to resize to the values spec-\n            ified  but  will  settle for smaller sizes if they are too big.\n            Default is the current window size.\n\n          tiled_map\n            If NetHack can, it should display a tiled map if it can.\n\n          tile_file\n            Specify the name of an alternative tile file  to  override  the\n            default.\n\n          tile_height\n            Specify  the  preferred  height  of each tile in a tile capable\n            port.\n\n          tile_width\n            Specify the preferred width of each tile in a tile capable port\n\n          use_darkgray\n            Use bold black instead of blue for black glyphs (TTY only).\n\n          use_inverse\n            If NetHack can, it should display inverse when the game  speci-\n            fies it.\n\n          vary_msgcount\n            If  NetHack can, it should display this number of messages at a\n            time in the message window.\n\n          windowborders\n            Whether to draw boxes around  the  map,  status  area,  message\n            area,  and  persistent inventory window if enabled.  Curses in-\n            terface only.  Acceptable values are\n\n                 0 - off, never show borders\n                 1 - on, always show borders\n                 2 - auto, on if display is at least (24+2)x(80+2)  (default)\n\n            (The 26x82 size threshold for `2' refers to number of rows  and\n            columns  of  the  display.   A  width  of  at least 110 columns\n            (80+2+26+2) is needed for align_status set to left or right.)\n\n          windowcolors\n            If NetHack can, it should display windows  with  the  specified\n            foreground/background colors. Windows GUI only. The format is\n\n               OPTION=windowcolors:wintype foreground/background\n\n               where  wintype  is  one  of  \"menu\", \"message\", \"status\", or\n          \"text\", and foreground and background are colors, either a  hexa-\n          decimal  \\'#rrggbb',  one of the named colors (black, red, green,\n          brown, blue, magenta, cyan, orange, brightgreen, yellow,  bright-\n          blue,  brightmagenta, brightcyan, white, trueblack, gray, purple,\n          silver, maroon, fuchsia, lime, olive, navy, teal, aqua),  or  one\n          of  Windows UI colors (activeborder, activecaption, appworkspace,\n          background, btnface, btnshadow, btntext,  captiontext,  graytext,\n          greytext,  highlight, highlighttext, inactiveborder, inactivecap-\n          tion, menu, menutext,  scrollbar,  window,  windowframe,  window-\n          text).\n\n          wraptext\n            If NetHack can, it should wrap long lines of text if they don't\n            fit in the visible area of the window.\n=== 플랫폼별 커스터마이징 ===\n          9.6.  Platform-specific Customization options\n\n               Here are explanations of options that are used  by  specific\n          platforms or ports to customize and change the port behavior.\n\n          altkeyhandler\n            Select  an  alternate  keystroke handler dll to load (Win32 tty\n            NetHack only).  The name of the handler  is  specified  without\n            the .dll extension and without any path information.  Cannot be\n            set with the `O' command.\n\n          altmeta\n            On Amiga, this option controls whether typing \"Alt\" plus anoth-\n            er key functions as a meta-shift for that key (default on).\n\n          altmeta\n            On other (non-Amiga) systems where this option is available, it\n            can be set to tell NetHack to convert a two character  sequence\n            beginning  with  ESC  into a meta-shifted version of the second\n            character (default off).\n\n            This conversion is only done for commands, not for other  input\n            prompts.  Note that typing one or more digits as a count prefix\n            prior to a command -- preceded by n if the number_pad option is\n            set  --  is  also  subject to this conversion, so attempting to\n            abort the count by typing ESC will leave  NetHack  waiting  for\n            another character to complete the two character sequence.  Type\n            a second ESC to finish  cancelling  such  a  count.   At  other\n            prompts a single ESC suffices.\n\n          BIOS\n            Use BIOS calls to update the screen display quickly and to read\n            the keyboard (allowing the use of arrow keys to  move)  on  ma-\n            chines  with  an IBM PC compatible BIOS ROM (default off, OS/2,\n            PC, and ST NetHack only).\n\n          flush\n            (default off, Amiga NetHack only).\n\n          MACgraphics\n            (default on, Mac NetHack only).\n\n          page_wait\n            (default on, Mac NetHack only).\n\n          rawio\n            Force raw (non-cbreak) mode for faster output and more  bullet-\n            proof  input  (MS-DOS sometimes treats `^P' as a printer toggle\n            without it) (default off,  OS/2,  PC,  and  ST  NetHack  only).\n            Note:   DEC  Rainbows hang if this is turned on.  Cannot be set\n            with the `O' command.\n\n          soundcard\n            (default on, PC NetHack only).  Cannot be set with the `O' com-\n            mand.\n\n          subkeyvalue\n            (Win32  tty  NetHack  only).  May be used to alter the value of\n            keystrokes that the operating system returns to NetHack to help\n            compensate  for international keyboard issues.  OPTIONS=subkey-\n            value:171/92 will return 92 to NetHack, if 171  was  originally\n            going  to be returned.  You can use multiple subkeyvalue state-\n            ments in the configuration file if needed.  Cannot be set  with\n            the `O' command.\n\n          video\n            Set the video mode used (PC NetHack only).  Values are \"autode-\n            tect\", \"default\", or \"vga\".   Setting  \"vga\"  (or  \"autodetect\"\n            with  vga  hardware  present)  will  cause  the game to display\n            tiles.  Cannot be set with the `O' command.\n\n          videocolors\n            Set the color palette for PC systems  using  NO_TERMS  (default\n            4-2-6-1-5-3-15-12-10-14-9-13-11,  (PC NetHack only).  The order\n            of  colors  is  red,  green,  brown,   blue,   magenta,   cyan,\n            bright.white,  bright.red,  bright.green,  yellow, bright.blue,\n            bright.magenta, and bright.cyan.  Cannot be set  with  the  `O'\n            command.\n\n          videoshades\n            Set the intensity level of the three gray scales available (de-\n            fault dark normal light, PC NetHack only).  If the game display\n            is  difficult to read, try adjusting these scales; if this does\n            not correct the problem, try !color.  Cannot be  set  with  the\n            `O' command.\n=== Regular Expressions ===\n          9.7.  Regular Expressions\n\n               Regular  expressions are normally POSIX extended regular ex-\n          pressions. It is possible  to  compile  NetHack  without  regular\n          expression  support  on  a platform where there is no regular ex-\n          pression library. While this is not true of any modern  platform,\n          if  your  NetHack  was  built this way, patterns are instead glob\n          patterns. This applies to Autopickup exceptions,  Message  types,\n          Menu colors, and User sounds.\n=== Autopickup 예외 설정하기 ===\n          9.8.  Configuring Autopickup Exceptions\n\n               You can further refine the behavior of the autopickup option\n          beyond what is available through the pickup_types option.\n\n               By placing autopickup_exception lines in your  configuration\n          file,  you  can  define  patterns  to be checked when the game is\n          about to autopickup something.\n\n          autopickup_exception\n            Sets an exception to the pickup_types  option.   The  autopick-\n            up_exception  option should be followed by a regular expression\n            to be used as a pattern to match against the singular  form  of\n            the description of an object at your location.\n\n            In  addition, some characters are treated specially if they oc-\n            cur as the first character in the pattern, specifically:\n\n                 < - always pickup an object that matches rest of pattern;\n                 > - never pickup an object that matches rest of pattern.\n\n            The autopickup_exception rules are processed in  the  order  in\n            which  they  appear in your configuration file, thus allowing a\n            later rule to override an earlier rule.\n\n            Exceptions can be set with the `O' command,  but  because  they\n            are  not  included in your configuration file, they won't be in\n            effect if you save and then restore your game.   autopickup_ex-\n            ception rules and not saved with the game.\n\n          Here are some examples:\n\n                 autopickup_exception=\"<*arrow\"\n                 autopickup_exception=\">*corpse\"\n                 autopickup_exception=\">* cursed*\"\n\n               The  first  example  above  will result in autopickup of any\n          type of arrow.  The second example results in  the  exclusion  of\n          any  corpse from autopickup.  The last example results in the ex-\n          clusion of items known to be cursed from autopickup.\n=== 키 설정 바꾸기 ===\n          9.9.  Changing Key Bindings\n\n               It is possible to change the default key  bindings  of  some\n          special  commands,  menu accelerator keys, and extended commands,\n          by using BIND stanzas in the configuration file.  Format is  key,\n          followed  by  the  command to bind to, separated by a colon.  The\n          key can be a single character (\"x\"), a control key (\"^X\", \"C-x\"), a meta key (\"M-x\"), or a three-digit decimal ASCII code.\n\n               For example:\n\n               BIND=^X:getpos.autodescribe\n               BIND={:menu_first_page\n               BIND=v:loot\n\n          Extended command keys\n            You  can  bind multiple keys to the same extended command.  Un-\n            bind a key by using \"nothing\" as the extended command  to  bind\n            to.   You  can  also bind the \"<esc>\", \"<enter>\", and \"<space>\"\n            keys.\n\n          Menu accelerator keys\n            The menu control or accelerator keys can also  be  rebound  via\n            OPTIONS  lines  in the configuration file.  You cannot bind ob-\n            ject symbols into menu accelerators.\n\n          Special command keys\n            Below are the special commands you can rebind.   Some  of  them\n            can  be  bound to same keys with no problems, others are in the\n            same \"context\", and if bound to same keys, only  one  of  those\n            commands  will be available.  Special command can only be bound\n            to a single key.\n\n          count\n            Prefix key to start a count, to  repeat  a  command  this  many\n            times.  With number_pad only.  Default is `n'.\n\n          doinv\n            Show inventory.  With number_pad only.  Default is `0'.\n\n          fight\n            Prefix key to force fight a direction.  Default is `F'.\n\n          fight.numpad\n            Prefix  key  to force fight a direction.  With number_pad only.\n            Default is `-'.\n\n          getdir.help\n            When asked for a direction, the key to show the help.   Default\n            is `?'.\n\n          getdir.self\n            When  asked  for  a direction, the key to target yourself.  De-\n            fault is `.'.\n\n          getdir.self2\n            When asked for a direction, the key to  target  yourself.   De-\n            fault is `s'.\n\n          getpos.autodescribe\n            When  asked  for  a  location,  the key to toggle autodescribe.\n            Default is `#'.\n\n          getpos.all.next\n            When asked for a location, the key to go to next closest inter-\n            esting thing.  Default is `a'.\n\n          getpos.all.prev\n            When  asked  for  a location, the key to go to previous closest\n            interesting thing.  Default is `A'.\n\n          getpos.door.next\n            When asked for a location, the key to go to next  closest  door\n            or doorway.  Default is `d'.\n\n          getpos.door.prev\n            When  asked  for  a location, the key to go to previous closest\n            door or doorway.  Default is `D'.\n\n          getpos.help\n            When asked for a location, the key to show  help.   Default  is\n            `?'.\n\n          getpos.mon.next\n            When  asked  for a location, the key to go to next closest mon-\n            ster.  Default is `m'.\n\n          getpos.mon.prev\n            When asked for a location, the key to go  to  previous  closest\n            monster.  Default is `M'.\n\n          getpos.obj.next\n            When  asked  for  a location, the key to go to next closest ob-\n            ject.  Default is `o'.\n\n          getpos.obj.prev\n            When asked for a location, the key to go  to  previous  closest\n            object.  Default is `O'.\n\n          getpos.menu\n            When  asked for a location, and using one of the next or previ-\n            ous keys to cycle through targets, toggle showing  a  menu  in-\n            stead.  Default is `!'.\n\n          getpos.moveskip\n            When  asked for a location, and using the shifted movement keys\n            or meta-digit keys to fast-move around, move  by  skipping  the\n            same glyphs instead of by 8 units.  Default is `*'.\n\n          getpos.filter\n            When asked for a location, change the filtering mode when using\n            one of the next or previous  keys  to  cycle  through  targets.\n            Toggles  between  no  filtering,  in view only, and in the same\n            area only.  Default is `\"'.\n\n          getpos.pick\n            When asked for a location, the key to choose the location,  and\n            possibly ask for more info.  Default is `.'.\n\n          getpos.pick.once\n            When  asked for a location, the key to choose the location, and\n            skip asking for more info.  Default is `,'.\n\n          getpos.pick.quick\n            When asked for a location, the key to choose the location, skip\n            asking  for  more info, and exit the location asking loop.  De-\n            fault is `;'.\n\n          getpos.pick.verbose\n            When asked for a location, the key to choose the location,  and\n            show more info without asking.  Default is `:'.\n\n          getpos.self\n            When asked for a location, the key to go to your location.  De-\n            fault is `@'.\n\n          getpos.unexplored.next\n            When asked for a location, the key to go to next closest  unex-\n            plored location.  Default is `x'.\n\n          getpos.unexplored.prev\n            When  asked  for  a location, the key to go to previous closest\n            unexplored location.  Default is `X'.\n\n          getpos.valid\n            When asked for a location, the key to go to show  valid  target\n            locations.  Default is `$'.\n\n          getpos.valid.next\n            When  asked for a location, the key to go to next closest valid\n            location.  Default is `z'.\n\n          getpos.valid.prev\n            When asked for a location, the key to go  to  previous  closest\n            valid location.  Default is `Z'.\n\n          nopickup\n            Prefix key to move without picking up items.  Default is `m'.\n\n          redraw\n            Key to redraw the screen.  Default is `^R'.\n\n          redraw.numpad\n            Key  to  redraw  the screen.  With number_pad only.  Default is\n            `^L'.\n\n          repeat\n            Key to repeat previous command.  Default is `^A'.\n\n          reqmenu\n            Prefix key to request menu from some commands.  Default is `m'.\n\n          run\n            Prefix key to run towards a direction.  Default is `G'.\n\n          run.nopickup\n            Prefix key to run towards a direction without picking up  items\n            on the way.  Default is `M'.\n\n          run.numpad\n            Prefix  key  to run towards a direction.  With number_pad only.\n            Default is `5'.\n\n          rush\n            Prefix key to rush towards a direction.  Default is `g'.\n=== 메시지 타입 설정 ===\n          9.10.  Configuring Message Types\n\n               You can change the way the messages are shown in the message\n          area, when the message matches a user-defined pattern.\n\n               In  general,  the configuration file entries to describe the\n          message types look like this: MSGTYPE=type \"pattern\"\n\n          type    - how the message should be shown;\n          pattern - the pattern to match.\n\n            The pattern should be a regular expression.\n\n            Allowed types are:\n\n            show  - show message normally;\n            hide  - never show the message;\n            stop  - wait for user with more-prompt;\n            norep - show the message once, but not again if no  other  mes-\n                    sage is shown in between.\n\n            Here's  an  example  of  message types using NetHack's internal\n            pattern matching facility:\n\n                 MSGTYPE=stop \"You feel hungry.\"\n                 MSGTYPE=hide \"You displaced *.\"\n\n            specifies that whenever a message \"You feel hungry\"  is  shown,\n            the  user  is prompted with more-prompt, and a message matching\n            \"You displaced <something>.\" is not shown at all.\n\n            The order of the defined MSGTYPE lines is important;  the  last\n            matching  rule  is used. Put the general case first, exceptions\n            below them.\n\n=== 메뉴 색 설정하기 ===\n          9.11.  Configuring Menu Colors\n\n               Some platforms allow you to define colors used in menu lines\n          when  the  line matches a user-defined pattern.  At this time the\n          tty, curses, win32tty and win32gui interfaces support this.\n\n               In general, the configuration file entries to  describe  the\n          menu color mappings look like this:\n\n               MENUCOLOR=\"pattern\"=color&attribute\n\n                 pattern    - the pattern to match;\n                 color      - the  color to use for lines matching the pat-\n                              tern;\n                 attribute  - the attribute to use for lines  matching  the\n                              pattern.  The  attribute  is optional, and if\n                              left out, you must also leave out the preced-\n                              ing  ampersand.   If no attribute is defined,\n                              no attribute is used.\n\n            The pattern should be a regular expression.\n\n            Allowed colors are black, red,  green,  brown,  blue,  magenta,\n            cyan,  gray, orange, light-green, yellow, light-blue, light-ma-\n            genta, light-cyan, and white.  And no-color, the default  fore-\n            ground  color,  which  isn't necessarily the same as any of the\n            other colors.\n\n            Allowed attributes are none, bold, dim, underline,  blink,  and\n            inverse.   \"Normal\"  is  a  synonym  for \"none\".  Note that the\n            platform used may interpret the attributes any way it wants.\n\n            Here's an example of menu colors using NetHack's internal  pat-\n            tern matching facility:\n\n                 MENUCOLOR=\"* blessed *\"=green\n                 MENUCOLOR=\"* cursed *\"=red\n                 MENUCOLOR=\"* cursed *(being worn)\"=red&underline\n\n            specifies  that  any menu line with \" blessed \" contained in it\n            will be shown in green color, lines  with  \" cursed \"  will  be\n            shown  in  red,  and  lines with \" cursed \" followed by \"(being\n            worn)\" on the same line will be shown in red color  and  under-\n            lined.  You can have multiple MENUCOLOR entries in your config-\n            uration file, and the last MENUCOLOR line that matches  a  menu\n            line will be used for the line.\n\n               Note that if you intend to have one or more color specifica-\n          tions match \" uncursed \", you will probably want to turn the  im-\n          plicit_uncursed option off so that all items known to be uncursed\n          are actually displayed with the \"uncursed\" description.\n\n=== 유저 사운드 설정하기 ===\n          9.12.  Configuring User Sounds\n\n               Some platforms allow you to define sound files to be  played\n          when  a  message that matches a user-defined pattern is delivered\n          to the message window.  At this time the Qt port and the win32tty\n          and win32gui ports support the use of user sounds.\n\n               The  following  configuration  file  entries are relevant to\n          mapping user sounds to messages:\n\n          SOUNDDIR\n            The directory that houses the sound files to be played.\n\n          SOUND\n            An entry that maps a sound file  to  a  user-specified  message\n            pattern.   Each  SOUND  entry is broken down into the following\n            parts:\n\n            MESG       - message window mapping (the only one supported  in\n                         3.6);\n            pattern    - the pattern to match;\n            sound file - the sound file to play;\n            volume     - the volume to be set while playing the sound file.\n\n            The pattern should be a POSIX extended regular expression.\n=== 상태 강조 설정하기 ===\n          9.13.  Configuring Status Hilites\n\n               Your copy of NetHack may have been compiled with support for\n          \"Status Hilites\".  If so, you can customize your game display  by\n          setting thresholds to change the color or appearance of fields in\n          the status display.\n\n               The format for defining status colors is:\n\n          OPTION=hilite_status:field-name/behavior/color&attributes\n\n               For example, the following line in your  configuration  file\n          will  cause  the  hitpoints  field to display in the color red if\n          your hitpoints drop to or below a threshold of 30%:\n\n          OPTION=hilite_status:hitpoints/<=30%/red/normal\n\n          (That example is actually specifying red&normal for <=30% and no-\n          color&normal for >30%.)\n\n               For  another  example, the following line in your configura-\n          tion file will cause wisdom to be displayed red if it  drops  and\n          green if it rises:\n\n          OPTION=hilite_status:wisdom/down/red/up/green\n\n               Allowed  colors are black, red, green, brown, blue, magenta,\n          cyan,  gray,  orange,  light-green,  yellow,  light-blue,  light-\n          magenta,  light-cyan,  and  white.   And  \"no-color\", the default\n          foreground color on the display, which  is  not  necessarily  the\n          same as black or white or any of the other colors.\n\n               Allowed  attributes  are  none, bold, dim, underline, blink,\n          and inverse.  \"Normal\" is a synonym for \"none\"; they  should  not\n          be used in combination with any of the other attributes.\n\n               To specify both a color and an attribute, use `&' to combine\n          them.  To specify multiple attributes, use `+' to combine  those.\n          For example: \"magenta&inverse+dim\".\n\n               Note  that  the  display may substitute or ignore particular\n          attributes depending upon its capabilities, and  in  general  may\n          interpret  the attributes any way it wants.  For example, on some\n          display systems a request for bold might yield blink or vice ver-\n          sa.  On others, issuing an attribute request while another is al-\n          ready set up will replace the earlier attribute rather than  com-\n          bine  with  it.   Since NetHack issues attribute requests sequen-\n          tially (at least with the tty interface) rather than all at once,\n          the only way a situation like that can be controlled is to speci-\n          fy just one attribute.\n\n               You can  adjust  the  appearance  of  the  following  status\n          fields:\n                     title       dungeon-level   experience-level\n                    strength         gold           experience\n                   dexterity       hitpoints            HD\n                  constitution   hitpoints-max         time\n                  intelligence       power            hunger\n                     wisdom        power-max     carrying-capacity\n                    charisma      armor-class        condition\n                   alignment                           score\n\n            The  pseudo-field  \"characteristics\" can be used to set all six\n            of Str, Dex, Con, Int, Wis, and Cha  at  once.   \"HD\"  is  \"hit\n            dice\",  an  approximation  of  experience  level displayed when\n            polymorphed.  \"experience\", \"time\", and \"score\" are  condition-\n            ally displayed depending upon your other option settings.\n\n            Instead  of  a behavior, \"condition\" takes the following condi-\n            tion flags: stone, slime,  strngl,  foodpois,  termill,  blind,\n            deaf,  stun, conf, hallu, lev, fly, and ride.  You can use \"ma-\n            jor_troubles\" as an  alias  for  stone  through  termill,  \"mi-\n            nor_troubles\" for blind through hallu, \"movement\" for lev, fly,\n            and ride, and \"all\" for every condition.\n\n            Allowed behaviors are \"always\", \"up\", \"down\", \"changed\", a per-\n            centage or absolute number threshold, or text to match against.\n\n               * \"always\" will set the default attributes for that field.\n\n               * \"up\",  \"down\"  set the field attributes for when the field\n                 value changes upwards or downwards.  This attribute  times\n                 out after statushilites turns.\n\n               * \"changed\" sets the field attribute for when the field val-\n                 ue changes.  This attribute times out after  statushilites\n                 turns.   (If a field has both a \"changed\" rule and an \"up\"\n                 or \"down\" rule which matches a change in the field's  val-\n                 ue, the \"up\" or \"down\" one takes precedence.)\n\n               * percentage  sets  the field attribute when the field value\n                 matches the percentage.  It is specified as a  number  be-\n                 tween  0  and 100, followed by `%' (percent sign).  If the\n                 percentage is prefixed with `<=' or `>=', it also  matches\n                 when  value  is below or above the percentage.  Use prefix\n                 `<' or `>' to match when strictly below  or  above.   (The\n                 numeric  limit  is  relaxed  slightly  for those: >-1% and\n                 <101% are allowed.)  Only four fields  support  percentage\n                 rules.    Percentages  for  \"hitpoints\"  and  \"power\"  are\n                 straightforward; they're based on the corresponding  maxi-\n                 mum  field.   Percentage  highlight rules are also allowed\n                 for \"experience level\" and \"experience points\" (valid when\n                 the showexp option is enabled).  For those, the percentage\n                 is based on the progress from the start of the current ex-\n                 perience level to the start of the next level.  So if lev-\n                 el 2 starts at 20 points and level 3 starts at 40  points,\n                 having  30  points  is  50% and 35 points is 75%.  100% is\n                 unattainable for experience because you'll  gain  a  level\n                 and the calculations will be reset for that new level, but\n                 a rule for =100% is allowed and matches the  special  case\n                 of being exactly 1 experience point short of the next lev-\n                 el.\n\n               * absolute value sets the attribute  when  the  field  value\n                 matches  that number.  The number must be 0 or higher, ex-\n                 cept for \"armor-class' which allows negative  values,  and\n                 may  optionally be preceded by `='.  If the number is pre-\n                 ceded by `<=' or `>=' instead, it also matches when  value\n                 is  below  or  above.   If  the prefix is `<' or `>', only\n                 match when strictly above or below.\n\n               * text match sets the attribute when the field value matches\n                 the  text.  Text matches can only be used for \"alignment\",\n                 \"carrying-capacity\", \"hunger\", \"dungeon-level\",  and  \"ti-\n                 tle\".   For  title,  only the role's rank title is tested;\n                 the character's name is ignored.\n\n               The in-game options menu can help you determine the  correct\n          syntax for a configuration file.\n\n               The  whole  feature  can  be disabled by setting option sta-\n          tushilites to 0.\n\n               Example hilites:\n\n               OPTION=hilite_status: gold/up/yellow/down/brown\n               OPTION=hilite_status: characteristics/up/green/down/red\n               OPTION=hilite_status: hitpoints/100%/gray&normal\n               OPTION=hilite_status: hitpoints/<100%/green&normal\n               OPTION=hilite_status: hitpoints/<66%/yellow&normal\n               OPTION=hilite_status: hitpoints/<50%/orange&normal\n               OPTION=hilite_status: hitpoints/<33%/red&bold\n               OPTION=hilite_status: hitpoints/<15%/red&inverse\n               OPTION=hilite_status: condition/major/orange&inverse\n               OPTION=hilite_status: condition/lev+fly/red&inverse\n=== NetHack 문자 변경하기 ===\n9.14.  Modifying NetHack Symbols\n\nNetHack can load entire symbol sets from the symbol file.\n\nThe options that are used to select a particular symbol  set\nfrom the symbol file are:\n\n * symset\n Set the name of the symbol set that you want to load.\n\n * roguesymset\nSet  the  name of the symbol set that you want to load for dis-\nplay on the rogue level.\n\nYou can also override one or more symbols using the  SYMBOLS\nand  ROGUESYMBOLS configuration file options.  Symbols are speci-\nfied as name:value pairs.  Note that NetHack escape-processes the\nvalue  string  in conventional C fashion.  This means that \\ is a\n prefix to take the following character literally.  Thus  \\  needs\nto  be represented as \\\\.  The special prefix form \\m switches on\nthe meta bit in the symbol value, and the  ^  prefix  causes  the\nfollowing character to be treated as a control character.\n\nNetHack의 문자들\n{{{#!folding [ 펼치기 · 접기 ]\n|| Symbol || Name || Description ||\n|| || S_air || (air) ||\n|| _ || S_altar || (altar) ||\n|| \" || S_amulet || (amulet) ||\n|| A || S_angel || (angelic being) ||\n|| a || S_ant || (ant or other insect) ||\n|| ^ || S_anti_magic_trap || (anti-magic field) ||\n|| [ || S_armor || (suit or piece of armor) ||\n|| [ || S_armour || (suit or piece of armor) ||\n|| ^ || S_arrow_trap || (arrow trap) ||\n|| 0 || S_ball || (iron ball) ||\n|| # || S_bars || (iron bars) ||\n|| B || S_bat || (bat or bird) ||\n|| ^ || S_bear_trap || (bear trap) ||\n|| - || S_blcorn || (bottom left corner) ||\n|| b || S_blob || (blob) ||\n|| + || S_book || (spellbook) ||\n|| ) || S_boomleft || (boomerang open left) ||\n|| ( || S_boomright || (boomerang open right) ||\n|| ` || S_boulder || (boulder) ||\n|| - || S_brcorn || (bottom right corner) ||\n|| C || S_centaur || (centaur) ||\n|| _ || S_chain || (iron chain) ||\n|| # || S_cloud || (cloud) ||\n|| c || S_cockatrice || (cockatrice) ||\n|| $ || S_coin || (pile of coins) ||\n|| # || S_corr || (corridor) ||\n|| - || S_crwall || (wall) ||\n|| # || S_darkroom || (dark room) ||\n|| ^ || S_dart_trap || (dart trap) ||\n|| & || S_demon || (major demon) ||\n|| * || S_digbeam || (dig beam) ||\n|| >  || S_dnladder || (ladder down) ||\n|| > || S_dnstair || (staircase down) ||\n|| d || S_dog || (dog or other canine) ||\n|| D || S_dragon || (dragon) ||\n|| ; || S_eel || (sea monster) ||\n|| E || S_elemental || (elemental) ||\n|| / || S_explode1 || (explosion top left) ||\n|| - || S_explode2 || (explosion top center) ||\n|| \\ || S_explode3 || (explosion top right) ||\n|| | || S_explode4 || (explosion middle left) ||\n|| || S_explode5 || (explosion middle center) ||\n|| | || S_explode6 || (explosion middle right) ||\n|| \\ || S_explode7 || (explosion bottom left) ||\n|| - || S_explode8 || (explosion bottom center) ||\n|| / || S_explode9 || (explosion bottom right) ||\n|| e || S_eye || (eye or sphere) ||\n|| ^ || S_falling_rock_trap || (falling rock trap) ||\n|| f || S_feline || (cat or other feline) ||\n|| ^ || S_fire_trap || (fire trap) ||\n|| ! || S_flashbeam || (flash beam) ||\n|| % || S_food || (piece of food) ||\n|| { || S_fountain || (fountain) ||\n|| F || S_fungus || (fungus or mold) ||\n|| * || S_gem || (gem or rock) ||\n|| || S_ghost || (ghost) ||\n|| H || S_giant || (giant humanoid) ||\n|| G || S_gnome || (gnome) ||\n|| ' || S_golem || (golem) ||\n|| | || S_grave || (grave) ||\n|| g || S_gremlin || (gremlin) ||\n|| - || S_hbeam || (horizontal beam [zap animation]) ||\n|| # || S_hcdbridge || (horizontal raised drawbridge) ||\n|| + || S_hcdoor || (closed door in horizontal wall) ||\n|| . || S_hodbridge || (horizontal lowered drawbridge) ||\n|| | || S_hodoor || (open door in horizontal wall) ||\n|| ^ || S_hole || (hole) ||\n|| @ || S_human || (human or elf) ||\n|| h || S_humanoid || (humanoid) ||\n|| - || S_hwall || (horizontal wall) ||\n|| . || S_ice || (ice) ||\n|| i || S_imp || (imp or minor demon) ||\n|| I || S_invisible || (invisible monster) ||\n|| J || S_jabberwock || (jabberwock) ||\n|| j || S_jelly || (jelly) ||\n|| k || S_kobold || (kobold) ||\n|| K || S_kop || (Keystone Kop) ||\n|| ^ || S_land_mine || (land mine) ||\n|| } || S_lava || (molten lava) ||\n|| l || S_leprechaun || (leprechaun) ||\n|| ^ || S_level_teleporter || (level teleporter) ||\n|| L || S_lich || (lich) ||\n|| y || S_light || (light) ||\n|| # || S_litcorr || (lit corridor) ||\n|| : || S_lizard || (lizard) ||\n|| \\ || S_lslant || (diagonal beam [zap animation]) ||\n|| ^ || S_magic_portal || (magic portal) ||\n|| ^ || S_magic_trap || (magic trap) ||\n|| m || S_mimic || (mimic) ||\n|| ] || S_mimic_def || (mimic) ||\n|| M || S_mummy || (mummy) ||\n|| N || S_naga || (naga) ||\n|| . || S_ndoor || (doorway without door) ||\n|| n || S_nymph || (nymph) ||\n|| O || S_ogre || (ogre) ||\n|| o || S_orc || (orc) ||\n|| p || S_piercer || (piercer) ||\n|| ^ || S_pit || (pit) ||\n|| # || S_poisoncloud || (poison cloud) ||\n|| ^ || S_polymorph_trap || (polymorph trap) ||\n|| } || S_pool || (water) ||\n|| ! || S_potion || (potion) ||\n|| P || S_pudding || (pudding or ooze) ||\n|| q || S_quadruped || (quadruped) ||\n|| Q || S_quantmech || (quantum mechanic) ||\n|| \\= || S_ring || (ring) ||\n|| ` || S_rock || (boulder or statue) ||\n|| r || S_rodent || (rodent) ||\n|| ^ || S_rolling_boulder_trap || (rolling boulder trap) ||\n|| . || S_room || (floor of a room) ||\n|| / || S_rslant || (diagonal beam [zap animation]) ||\n|| ^ || S_rust_trap || (rust trap) ||\n|| R || S_rustmonst || (rust monster or disenchanter) ||\n|| ? || S_scroll || (scroll) ||\n|| # || S_sink || (sink) ||\n|| ^ || S_sleeping_gas_trap || (sleeping gas trap) ||\n|| S || S_snake || (snake) ||\n|| s || S_spider || (arachnid or centipede) ||\n|| ^ || S_spiked_pit || (spiked pit) ||\n|| ^ || S_squeaky_board || (squeaky board) ||\n|| 0 || S_ss1 || (magic shield 1 of 4) ||\n|| # || S_ss2 || (magic shield 2 of 4) ||\n|| @ || S_ss3 || (magic shield 3 of 4) ||\n|| * || S_ss4 || (magic shield 4 of 4) ||\n|| ^ || S_statue_trap || (statue trap) ||\n|| || S_stone || (solid rock or unexplored terrain or dark part of a room) ||\n|| ] || S_strange_obj || (strange object) ||\n|| - || S_sw_bc || (swallow bottom center) ||\n|| \\ || S_sw_bl || (swallow bottom left) ||\n|| / || S_sw_br || (swallow bottom right) ||\n|| | || S_sw_ml || (swallow middle left) ||\n|| | || S_sw_mr || (swallow middle right) ||\n|| - || S_sw_tc || (swallow top center) ||\n|| / || S_sw_tl || (swallow top left) ||\n|| \\ || S_sw_tr || (swallow top right) ||\n|| - || S_tdwall || (wall) ||\n|| ^ || S_teleportation_trap || (teleportation trap) ||\n|| \\ || S_throne || (opulent throne) ||\n|| - || S_tlcorn || (top left corner) ||\n|| | || S_tlwall || (wall) ||\n|| ( || S_tool || (useful item (pick-axe, key, lamp...) ||\n|| ^ || S_trap_door || (trap door) ||\n|| t || S_trapper || (trapper or lurker above) ||\n|| - || S_trcorn || (top right corner) ||\n|| # || S_tree || (tree) ||\n|| T || S_troll || (troll) ||\n|| | || S_trwall || (wall) ||\n|| - || S_tuwall || (wall) ||\n|| U || S_umber || (umber hulk) ||\n|| u || S_unicorn || (unicorn or horse) ||\n|| < || S_upladder || (ladder up) ||\n|| < || S_upstair || (staircase up) ||\n|| V || S_vampire || (vampire) ||\n|| | || S_vbeam || (vertical beam [zap animation]) ||\n|| # || S_vcdbridge || (vertical raised drawbridge) ||\n|| + || S_vcdoor || (closed door in vertical wall) ||\n|| . || S_venom || (splash of venom) ||\n|| ^ || S_vibrating_square || (vibrating square) ||\n|| . || S_vodbridge || (vertical lowered drawbridge) ||\n|| - || S_vodoor || (open door in vertical wall) ||\n|| v || S_vortex || (vortex) ||\n|| | || S_vwall || (vertical wall) ||\n|| / || S_wand || (wand) ||\n|| } || S_water || (water) ||\n|| ) || S_weapon || (weapon) ||\n|| \" || S_web || (web) ||\n|| w || S_worm || (worm) ||\n|| ~ || S_worm_tail || (long worm tail) ||\n|| W || S_wraith || (wraith) ||\n|| x || S_xan || (xan or other extraordinary insect) ||\n|| X || S_xorn || (xorn) ||\n|| Y || S_yeti || (apelike creature) ||\n|| Z || S_zombie || (zombie) ||\n|| z || S_zruty || (zruty) ||\n|| || S_pet_override || (any pet if ACCESSIBILITY=1 is set) ||\n|| || S_hero_override || (hero if ACCESSIBILITY=1 is set) ||\n}}}\n          Notes:\n\n          * Several symbols in this table appear to be blank.  They are the\n            space character, except for S_pet_override and  S_hero_override\n            which  don't have any default value and can only be used if en-\n            abled in the \"sysconf\" file.\n\n          * S_rock is misleadingly  named;  rocks  and  stones  use  S_gem.\n            Statues  and boulders are the rock being referred to, but since\n            version 3.6.0, statues are displayed as the  monster  they  de-\n            pict.   So S_rock is only used for boulders and not used at all\n            if overridden by the more specific S_boulder.\n=== 시각장애인용 NetHack 설정 ===\n          9.15.  Configuring NetHack for Play by the Blind\n\n               NetHack can be set up to use only standard ASCII  characters\n          for  making  maps of the dungeons. This makes the MS-DOS versions\n          of NetHack completely accessible to  the  blind  who  use  speech\n          and/or  Braille access technologies.  Players will require a good\n          working knowledge of their screen-reader's review  features,  and\n          will  have  to  know  how to navigate horizontally and vertically\n          character by character. They will also find the search  capabili-\n          ties  of their screen-readers to be quite valuable. Be certain to\n          examine this Guidebook before playing so you have  an  idea  what\n          the  screen layout is like. You'll also need to be able to locate\n          the PC cursor. It is always  where  your  character  is  located.\n          Merely  searching for an @-sign will not always find your charac-\n          ter since there are other humanoids represented by the same sign.\n          Your  screen-reader  should  also have a function which gives you\n          the row and column of your  review  cursor  and  the  PC  cursor.\n          These  co-ordinates  are  often useful in giving players a better\n          sense of the overall location of items on the screen.\n\n               NetHack can also be compiled with support  for  sending  the\n          game  messages  to  an external program, such as a text-to-speech\n          synthesizer.  If the \"#version\" extended command shows  \"external\n          program  as  a  message  handler\", your NetHack has been compiled\n          with the capability.  When compiling NetHack from source on Linux\n          and  other POSIX systems, define MSGHANDLER to enable it.  To use\n          the capability, set the environment  variable  NETHACK_MSGHANDLER\n          to an executable, which will be executed with the game message as\n          the program's only parameter.\n\n               While it is not difficult for experienced users to edit  the\n          defaults.nh  file  to accomplish this, novices may find this task\n          somewhat daunting.  Included within the \"symbols\" file of all of-\n          ficial distributions of NetHack is a symset called NHAccess.  Se-\n          lecting that symset in your configuration  file  will  cause  the\n          game  to run in a manner accessible to the blind.  After you have\n          gained some experience with the game and with editing files,  you\n          may want to alter settings via SYMBOLS= and ROGUESYMBOLS= in your\n          configuration file to better suit your preferences.  See the pre-\n          vious  section  for the special symbols S_pet_override to force a\n          consistent symbol for all pets and  S_hero_override  to  force  a\n          unique  symbol  for  the player character if accessibility is en-\n          abled in the sysconf file.\n\n               The most crucial settings to make the game  more  accessible\n          are:\n\n          symset:NHAccess\n            Load a symbol set appropriate for use by blind players.\n\n          roguesymset:NHAccess\n            Load  a  symbol set for the rogue level that is appropriate for\n            use by blind players.\n\n          menustyle:traditional\n            This will assist in the interface to speech synthesizers.\n\n          nomenu_overlay\n            Show menus on a cleared screen and aligned to the left edge.\n\n          number_pad\n            A lot of speech access programs use the  number-pad  to  review\n            the screen.  If this is the case, disable the number_pad option\n            and use the traditional Rogue-like commands.\n\n          autodescribe\n            Automatically describe the terrain under the cursor  when  tar-\n            geting.\n\n          mention_walls\n            Give  feedback  messages  when  walking  towards a wall or when\n            travel command was interrupted.\n\n          whatis_coord:compass\n            When targeting with cursor, describe the cursor  position  with\n            coordinates relative to your character.\n\n          whatis_filter:area\n            When  targeting  with cursor, filter possible locations so only\n            those in the same area (eg. same room, or  same  corridor)  are\n            considered.\n\n          whatis_moveskip\n            When  targeting  with cursor and using fast-move, skip the same\n            glyphs instead of moving 8 units at a time.\n\n          nostatus_updates\n            Prevent updates to the  status  lines  at  the  bottom  of  the\n            screen,  if  your screen-reader reads those lines. The same in-\n            formation can be seen via the \"#attributes\" command.\n=== 시스템 관리자용 범용 설정 ===\n9.16.  Global Configuration for System Administrators\n\nIf NetHack is compiled with the SYSCF option, a  system  ad-\nministrator  should set up a global configuration; this is a file\nin the same format as the traditional per-user configuration file\n(see above).  This file should be named sysconf and placed in the\nsame directory as the other NetHack support files.   The  options\nrecognized in this file are listed below.  Any option not set us-\nes a compiled-in default (which may not be appropriate  for  your\nsystem).\n\n            WIZARDS = A  space-separated list of user names who are allowed\n            to play in debug mode (commonly referred to as wizard mode).  A\n            value of a single asterisk (*) allows anyone to start a game in\n            debug mode.\n\n            SHELLERS = A list of users who are allowed to use the shell es-\n            cape command (!).  The syntax is the same as WIZARDS.\n\n            EXPLORERS = A  list of users who are allowed to use the explore\n            mode.  The syntax is the same as WIZARDS.\n\n            MAXPLAYERS = Limit the maximum number of games that can be run-\n            ning at the same time.\n\n            SUPPORT = A  string explaining how to get local support (no de-\n            fault value).\n\n            RECOVER = A string explaining how to recover  a  game  on  this\n            system (no default value).\n\n            SEDUCE = 0  or 1 to disable or enable, respectively, the SEDUCE\n            option.  When disabled, incubi and succubi behave like nymphs.\n\n            CHECK_PLNAME = Setting this to 1 will make the EXPLORERS,  WIZ-\n            ARDS, and SHELLERS check for the player name instead of the us-\n            er's login name.\n\n            CHECK_SAVE_UID = 0 or 1 to disable or enable, respectively, the\n            UID  (used  identification  number) checking for save files (to\n            verify that the user who is  restoring  is  the  same  one  who\n            saved).\n\n               The following options affect the score file:\n\n            PERSMAX = Maximum number of entries for one person.\n\n            ENTRYMAX = Maximum number of entries in the score file.\n\n            POINTSMIN = Minimum  number  of  points  to get an entry in the\n            score file.\n\n            PERS_IS_UID = 0 or 1 to use user names or numeric userids,  re-\n            spectively, to identify unique people for the score file.\n\n            MAX_STATUENAME_RANK = Maximum  number  of score file entries to\n            use for random statue names (default is 10).\n\n            ACCESSIBILITY = 0 or 1 to disable or enable, respectively,  the\n            ability  for  players to set S_pet_override and S_hero_override\n            symbols in their configuration file.\n\n            PORTABLE_DEVICE_PATHS = 0 or 1 Windows OS only, the  game  will\n            look  for  all  of  its external files, and write to all of its\n            output files in one place rather than  at  the  standard  loca-\n            tions.\n\n            DUMPLOGFILE = A  filename  where  the  end-of-game  dumplog  is\n            saved.  Not defining this will prevent dumplog from being  cre-\n            ated. Only available if your game is compiled with DUMPLOG. Al-\n            lows the following placeholders:\n\n            %% - literal `%'\n            %v - version (eg. \"3.6.3-0\")\n            %u - game UID\n            %t - game start time, UNIX timestamp format\n            %T - current time, UNIX timestamp format\n            %d - game start time, YYYYMMDDhhmmss format\n            %D - current time, YYYYMMDDhhmmss format\n            %n - player name\n            %N - first character of player name\n== 스코어링 ==\n10.  Scoring\n\nNetHack maintains a list of the top  scores  or  scorers  on\nyour machine, depending on how it is set up.  In the latter case,\neach account on the machine can post only one  non-winning  score\non  this  list.   If  you  score higher than someone else on this\nlist, or better your previous score, you will be inserted in  the\nproper  place  under your current name.  How many scores are kept\ncan also be set up when NetHack is compiled.\n\nYour score is chiefly based upon  how  much  experience  you\ngained, how much loot you accumulated, how deep you explored, and\nhow the game ended.  If you quit the game, you escape with all of\nyour  gold  intact.   If, however, you get killed in the Mazes of\nMenace, the guild will only hear about 90% of your gold when your\ncorpse  is  discovered  (adventurers  have  been known to collect\nfinder's fees).  So, consider whether you want to take  one  last\nhit  at  that  monster  and  possibly live, or quit and stop with\nwhatever you have.  If you quit, you keep all your gold,  but  if\nyou swing and live, you might find more.\n\nIf  you  just want to see what the current top players/games\nlist is, you can type nethack -s all on most versions.\n== 탐사 모드 ==\n11.  Explore mode\n\nNetHack is an intricate and difficult game.   Novices  might\nfalter in fear, aware of their ignorance of the means to survive.\nWell, fear not.  Your dungeon comes equipped with an \"explore\" or\n\"discovery\"  mode  that  enables  you  to keep old save files and\ncheat death, at the paltry cost of not getting on the high  score\nlist.\n\n탐사 모드를 활성화시키는 데에는 2가지 방법이 있습니다. \n하나는 게임을 -X 명령줄 스위치로 시작하는 것이고, \n다른 하나는 playmode:explore 옵션을 활성화시키는 것입니다.\n이외에도 게임을 플레이 도중에 확장 명령어 \"#exploremode\"를 실행하는 법도 있습니다.\n탐사 모드에서 새 게임을 시작할 경우, 당신의 초기 소지품에 소원의 지팡이가 제공됩니다; 플레이 도중에 탐사 모드로 넘어갈 경우에는 주어지지 않습니다. 탐사 모드의 다른 이점들은 한번 여러분이 발견해 보십시오.\n=== 디버그 모드 ===\n          11.1.  Debug mode\n\n               Debug mode, also known as wizard mode, is undocumented aside\n          from  this  brief  description  and the various \"debug mode only\"\n          commands listed among the command descriptions.  It  is  intended\n          for tracking down problems within the program rather than to pro-\n          vide god-like powers to your character, and players  who  attempt\n          debugging  are  expected  to figure out how to use it themselves.\n          It is initiated by starting the game  with  the  -D  command-line\n          switch or with the playmode:debug option.\n\n               For  some systems, the player must be logged in under a par-\n          ticular user name to be allowed to use debug  mode;  for  others,\n          the  hero  must  be given a particular character name (but may be\n          any role; there's no connection between  \"wizard  mode\"  and  the\n          Wizard  role).  Attempting to start a game in debug mode when not\n          allowed or not available will result in falling back  to  explore\n          mode instead.\n== 크레딧 ==\n          12.  Credits\n\n               The  original  hack  game  was  modeled on the Berkeley UNIX\n          rogue game.   Large  portions  of  this  paper  were  shamelessly\n          cribbed  from  A Guide to the Dungeons of Doom, by Michael C. Toy\n          and Kenneth C. R. C. Arnold.  Small portions  were  adapted  from\n          Further Exploration of the Dungeons of Doom, by Ken Arromdee.\n\n               NetHack is the product of literally dozens of people's work.\n          Main events in the course of the game development  are  described\n          below:\n\n               Jay  Fenlason  wrote the original Hack, with help from Kenny\n          Woodland, Mike Thome and Jon Payne.\n\n               Andries Brouwer did a major re-write, transforming Hack into\n          a  very  different  game, and published (at least) three versions\n          (1.0.1, 1.0.2, and 1.0.3) for UNIX machines to the Usenet.\n\n               Don G. Kneller ported Hack 1.0.3 to Microsoft C and  MS-DOS,\n          producing  PC  HACK 1.01e, added support for DEC Rainbow graphics\n          in version 1.03g, and went on to produce at least four more  ver-\n          sions (3.0, 3.2, 3.51, and 3.6).\n\n               R.  Black  ported  PC  HACK  3.51 to Lattice C and the Atari\n          520/1040ST, producing ST Hack 1.03.\n\n               Mike Stephenson merged these various versions back together,\n          incorporating  many  of  the added features, and produced NetHack\n          1. 4.  He then coordinated a cast of thousands  in  enhancing  and\n          debugging NetHack 1.4 and released NetHack versions 2.2 and 2.3.\n\n               Later, Mike coordinated a major rewrite of the game, heading\n          a team which included Ken Arromdee, Jean-Christophe Collet, Steve\n          Creps, Eric Hendrickson, Izchak Miller, John Rupley, Mike Threep-\n          oint, and Janet Walz, to produce NetHack 3.0c.\n\n               NetHack 3.0 was ported to the Atari by  Eric  R.  Smith,  to\n          OS/2  by  Timo Hakulinen, and to VMS by David Gentzel.  The three\n          of them and Kevin Darcy later joined the main NetHack Development\n          Team to produce subsequent revisions of 3.0.\n\n               Olaf  Seibert ported NetHack 2.3 and 3.0 to the Amiga.  Norm\n          Meluch, Stephen Spackman and Pierre  Martineau  designed  overlay\n          code  for  PC  NetHack 3.0.  Johnny Lee ported NetHack 3.0 to the\n          Macintosh.  Along with various other Dungeoneers, they  continued\n          to  enhance  the PC, Macintosh, and Amiga ports through the later\n          revisions of 3.0.\n\n               Headed by Mike Stephenson and coordinated by  Izchak  Miller\n          and  Janet  Walz, the NetHack Development Team which now included\n          Ken Arromdee, David Cohrs, Jean-Christophe Collet,  Kevin  Darcy,\n          Matt  Day, Timo Hakulinen, Steve Linhart, Dean Luick, Pat Rankin,\n          Eric Raymond, and Eric Smith undertook a radical revision of 3.0.\n          They re-structured the game's design, and re-wrote major parts of\n          the code.  They added multiple dungeons, a new  display,  special\n          individual  character  quests,  a  new endgame and many other new\n          features, and produced NetHack 3.1.\n\n               Ken Lorber, Gregg Wonderly and Greg Olson,  with  help  from\n          Richard  Addison,  Mike  Passaretti,  and Olaf Seibert, developed\n          NetHack 3.1 for the Amiga.\n\n               Norm Meluch and Kevin Smolkowski, with help from Carl  Sche-\n          lin, Stephen Spackman, Steve VanDevender, and Paul Winner, ported\n          NetHack 3.1 to the PC.\n\n               Jon W{tte and Hao-yang Wang, with help from Ross Brown, Mike\n          Engber,  David  Hairston, Michael Hamel, Jonathan Handler, Johnny\n          Lee, Tim Lennan, Rob Menke, and Andy Swanson,  developed  NetHack\n          3.1  for  the  Macintosh,  porting it for MPW.  Building on their\n          development, Bart House added a Think C port.\n\n               Timo Hakulinen ported NetHack 3.1 to OS/2.  Eric Smith port-\n          ed  NetHack  3.1 to the Atari.  Pat Rankin, with help from Joshua\n          Delahunty, was responsible for the VMS version  of  NetHack  3.1.\n          Michael Allison ported NetHack 3.1 to Windows NT.\n\n               Dean  Luick,  with  help from David Cohrs, developed NetHack\n          3.1 for X11.  Warwick Allison wrote a tiled  version  of  NetHack\n          for  the Atari; he later contributed the tiles to the NetHack De-\n          velopment Team and tile support was then  added  to  other  plat-\n          forms.\n\n               The 3.2 NetHack Development Team, comprised of Michael Alli-\n          son, Ken Arromdee, David Cohrs, Jessie Collet, Steve Creps, Kevin\n          Darcy, Timo Hakulinen, Steve Linhart, Dean Luick, Pat Rankin, Er-\n          ic Smith, Mike Stephenson, Janet Walz, and Paul Winner,  released\n          version 3.2 in April of 1996.\n\n               Version 3.2 marked the tenth anniversary of the formation of\n          the development team.  In a testament to their dedication to  the\n          game,  all  thirteen  members of the original NetHack Development\n          Team remained on the team at the start of work on  that  release.\n          During  the interval between the release of 3.1.3 and 3.2, one of\n          the founding members of the NetHack Development Team, Dr.  Izchak\n          Miller,  was diagnosed with cancer and passed away.  That release\n          of the game was dedicated to him by the development  and  porting\n          teams.\n\n               During the lifespan of NetHack 3.1 and 3.2, several enthusi-\n          asts of the game added their own modifications to  the  game  and\n          made these \"variants\" publicly available:\n\n               Tom  Proudfoot  and  Yuval Oren created NetHack++, which was\n          quickly renamed NetHack--.  Working independently, Stephen  White\n          wrote  NetHack Plus.  Tom Proudfoot later merged NetHack Plus and\n          his own NetHack-- to produce SLASH.  Larry Stewart-Zerba and War-\n          wick  Allison  improved  the spell casting system with the Wizard\n          Patch.  Warwick Allison also ported NetHack to use the Qt  inter-\n          face.\n\n               Warren  Cheung  combined SLASH with the Wizard Patch to pro-\n          duce Slash'EM, and with the help of Kevin Hugo, added  more  fea-\n          tures.   Kevin  later joined the NetHack Development Team and in-\n          corporated the best of these ideas in NetHack 3.3.\n\n               The final update to 3.2 was the bug fix release 3.2.3, which\n          was  released  simultaneously with 3.3.0 in December 1999 just in\n          time for the Year 2000.\n\n               The 3.3 NetHack Development Team, consisting of Michael  Al-\n          lison,  Ken  Arromdee,  David  Cohrs, Jessie Collet, Steve Creps,\n          Kevin Darcy, Timo Hakulinen, Kevin Hugo, Steve Linhart, Ken  Lor-\n          ber,  Dean  Luick, Pat Rankin, Eric Smith, Mike Stephenson, Janet\n          Walz, and Paul Winner, released 3.3.0 in December 1999 and  3.3.1\n          in August of 2000.\n\n               Version 3.3 offered many firsts. It was the first version to\n          separate race and profession. The Elf class was removed in  pref-\n          erence to an elf race, and the races of dwarves, gnomes, and orcs\n          made their first appearance in the game  alongside  the  familiar\n          human  race.  Monk and Ranger roles joined Archeologists, Barbar-\n          ians,  Cavemen,  Healers,  Knights,  Priests,  Rogues,   Samurai,\n          Tourists,  Valkyries  and  of  course,  Wizards.  It was also the\n          first version to allow you to ride a steed,  and  was  the  first\n          version  to  have  a  publicly available web-site listing all the\n          bugs that had been discovered.  Despite that  constantly  growing\n          bug  list,  3.3 proved stable enough to last for more than a year\n          and a half.\n\n               The 3.4 NetHack  Development  Team  initially  consisted  of\n          Michael  Allison, Ken Arromdee, David Cohrs, Jessie Collet, Kevin\n          Hugo, Ken Lorber, Dean Luick, Pat Rankin, Mike Stephenson,  Janet\n          Walz,  and Paul Winner, with  Warwick Allison joining just before\n          the release of NetHack 3.4.0 in March 2002.\n\n               As with version 3.3, various people contributed to the  game\n          as a whole as well as supporting ports on the different platforms\n          that NetHack runs on:\n\n               Pat Rankin maintained 3.4 for VMS.\n\n               Michael Allison maintained NetHack 3.4 for the MS-DOS  plat-\n          form.  Paul Winner and Yitzhak Sapir provided encouragement.\n\n               Dean  Luick, Mark Modrall, and Kevin Hugo maintained and en-\n          hanced the Macintosh port of 3.4.\n\n               Michael Allison, David Cohrs, Alex  Kompel,  Dion  Nicolaas,\n          and  Yitzhak  Sapir maintained and enhanced 3.4 for the Microsoft\n          Windows platform.  Alex Kompel contributed a new graphical inter-\n          face  for  the Windows port.  Alex Kompel also contributed a Win-\n          dows CE port for 3.4.1.\n\n               Ron Van Iwaarden was the sole maintainer of NetHack for OS/2\n          the  past several releases. Unfortunately Ron's last OS/2 machine\n          stopped working in early 2006. A great many  thanks  to  Ron  for\n          keeping NetHack alive on OS/2 all these years.\n\n               Janne  Salmijarvi  and  Teemu Suikki maintained and enhanced\n          the Amiga port of 3.4 after Janne Salmijarvi resurrected  it  for\n          3.3.1.\n\n               Christian \"Marvin\" Bressler maintained 3.4 for the Atari af-\n          ter he resurrected it for 3.3.1.\n\n               The release of NetHack 3.4.3 in December 2003 marked the be-\n          ginning of a long release hiatus. 3.4.3 proved to be a remarkably\n          stable version that provided continued enjoyment by the community\n          for  more  than a decade. The NetHack Development Team slowly and\n          quietly continued to work on the game behind  the  scenes  during\n          the  tenure of 3.4.3. It was during that same period that several\n          new  variants  emerged  within  the  NetHack  community.  Notably\n          sporkhack by Derek S. Ray, unnethack by Patric Mueller, nitrohack\n          and its successors originally by Daniel Thaler and then  by  Alex\n          Smith,  and  Dynahack by Tung Nguyen. Some of those variants con-\n          tinue to be developed, maintained, and enjoyed by  the  community\n          to this day.\n\n               In September 2014, an interim snapshot of the code under de-\n          velopment was released publicly by other parties. Since that code\n          was  a  work-in-progress  and had not gone through the process of\n          debugging it as a suitable release, it was decided that the  ver-\n          sion  numbers  present on that code snapshot would be retired and\n          never used in an official NetHack release.  An  announcement  was\n          posted  on  the  NetHack  Development Team's official nethack.org\n          website to that effect, stating  that  there  would  never  be  a\n          3.4.4, 3.5, or 3.5.0 official release version.\n\n               In  January  2015,  preparation  began  for  the  release of\n          .\n\n               At the beginning of development for  what  would  eventually\n          get  released as 3.6.0, the NetHack Development Team consisted of\n          Warwick Allison, Michael  Allison,  Ken  Arromdee,  David  Cohrs,\n          Jessie  Collet, Ken Lorber, Dean Luick, Pat Rankin, Mike Stephen-\n          son, Janet Walz, and Paul Winner.  In early 2015,  ahead  of  the\n          release of 3.6.0, new members Sean Hunt, Pasi Kallinen, and Derek\n          S. Ray joined the NetHack Development Team.\n\n               Near the end of the development of 3.6.0, one of the signif-\n          icant  inspirations  for  many  of  the humorous and fun features\n          found in the game, author Terry Pratchett, passed  away.  NetHack\n          3.6.0 introduced a tribute to him.\n\n               3.6.0 was released in December 2015, and merged work done by\n          the development team since the release of 3.4.3 with some of  the\n          beloved community patches. Many bugs were fixed and some code was\n          restructured.\n\n               The NetHack Development Team, as well as  Steve  VanDevender\n          and Kevin Smolkowski, ensured that  continued to oper-\n          ate on various UNIX flavors and maintained the X11 interface.\n\n               Ken Lorber, Haoyang Wang, Pat Rankin, and Dean  Luick  main-\n          tained the port of  for Mac OSX.\n\n               Michael  Allison,  David  Cohrs,  Bart House, Pasi Kallinen,\n          Alex Kompel, Dion Nicolaas, Derek S. Ray and Yitzhak Sapir  main-\n          tained the port of  for Microsoft Windows.\n\n               Pat  Rankin  attempted  to  keep  the  VMS  port running for\n          , hindered by limited access. Kevin Smolkowski has up-\n          dated  and tested it for the most recent version of OpenVMS (V8.4\n          as of this writing) on Alpha and Integrity (aka Itanium aka IA64)\n          but not VAX.\n\n               Ray  Chason  resurrected the msdos port for 3.6 and contrib-\n          uted the necessary updates to the community at large.\n\n               In late April 2018, several hundred bug fixes for 3.6.0  and\n          some  new  features were assembled and released as .1.\n          The NetHack Development Team at the time of release of 3.6.1 con-\n          sisted  of  Warwick Allison, Michael Allison, Ken Arromdee, David\n          Cohrs, Jessie Collet, Pasi  Kallinen,  Ken  Lorber,  Dean  Luick,\n          Patric  Mueller,  Pat  Rankin,  Derek  S.  Ray,  Alex Smith, Mike\n          Stephenson, Janet Walz, and Paul Winner.\n\n               In early May 2019, another 320 bug fixes along with some en-\n          hancements  and  the adopted curses window port, were released as\n          3.6.2.\n\n               Bart House, who had contributed to the  game  as  a  porting\n          team participant for decades, joined the NetHack Development Team\n          in late May 2019.\n\n               .3 was released on December  5,  2019  containing\n          over 190 bug fixes to .2.\n\n               .4 was released on December 18, 2019 containing a\n          security fix and a few bug fixes.\n\n               .5 was released on January  27,  2020  containing\n          some security fixes and a small number of bug fixes.\n\n               .6 was released on  containing a se-\n          curity fix and some bug fixes.\n\n               The official NetHack web site is maintained by Ken Lorber at\n          https://www.nethack.org/.\n=== SPECIAL THANKS ===\n12.1.  SPECIAL THANKS\n\nOn behalf of the NetHack community, thank you very much once\nagain to M. Drew Streib and Pasi Kallinen for providing a  public\nNetHack  server  at  nethack.alt.org. Thanks to Keith Simpson and\nAndy Thomson for hardfought.org. Thanks to all those unnamed dun-\ngeoneers  who  invest  their  time and effort into annual NetHack\ntournaments such as Junethack, The  November  NetHack  Tournament\nand in days past, devnull.net (gone for now, but not forgotten).\n\n                                 - - - - - - - - - -\n\n               From  time  to  time,  some depraved individual out there in\n          netland sends a particularly intriguing modification to help  out\n          with the game.  The NetHack Development Team sometimes makes note\n          of the names of the worst of these miscreants in this,  the  list\n          of Dungeoneers:\n               Adam Aronow           J. Ali Harlow          Mikko Juola\n               Alex Kompel             Janet Walz           Nathan Eady\n               Alex Smith           Janne Salmijarvi        Norm Meluch\n              Andreas Dorn       Jean-Christophe Collet     Olaf Seibert\n               Andy Church            Jeff Bailey          Pasi Kallinen\n              Andy Swanson           Jochen Erwied           Pat Rankin\n              Andy Thomson            John Kallen          Patric Mueller\n              Ari Huttunen            John Rupley           Paul Winner\n               Bart House             John S. Bien        Pierre Martineau\n           Benson I. Margulies         Johnny Lee            Ralf Brown\n                Bill Dyer              Jon W{tte             Ray Chason\n            Boudewijn Waijers       Jonathan Handler      Richard Addison\n                Bruce Cox           Joshua Delahunty       Richard Beigel\n             Bruce Holloway          Karl Garrison       Richard P. Hughey\n             Bruce Mewborne          Keizo Yamamoto          Rob Menke\n              Carl Schelin           Keith Simpson          Robin Bandy\n               Chris Russo             Ken Arnold          Robin Johnson\n               David Cohrs            Ken Arromdee       Roderick Schertler\n             David Damerell            Ken Lorber          Roland McGrath\n              David Gentzel          Ken Washikita        Ron Van Iwaarden\n             David Hairston           Kevin Darcy          Ronnen Miller\n               Dean Luick              Kevin Hugo            Ross Brown\n                Del Lamb              Kevin Sitze         Sascha Wostmann\n              Derek S. Ray          Kevin Smolkowski        Scott Bigham\n              Deron Meranda           Kevin Sweet         Scott R. Turner\n              Dion Nicolaas           Lars Huttar            Sean Hunt\n             Dylan O'Donnell          Leon Arnott         Stephen Spackman\n               Eric Backus           M. Drew Streib      Stefan Thielscher\n            Eric Hendrickson          Malcolm Ryan         Stephen White\n              Eric R. Smith          Mark Gooderum          Steve Creps\n             Eric S. Raymond          Mark Modrall         Steve Linhart\n              Erik Andersen         Marvin Bressler      Steve VanDevender\n            Fredrik Ljungdahl         Matthew Day           Teemu Suikki\n            Frederick Roeber          Merlyn LeRoy           Tim Lennan\n               Gil Neiger           Michael Allison        Timo Hakulinen\n               Greg Laskin            Michael Feir            Tom Almy\n               Greg Olson            Michael Hamel            Tom West\n             Gregg Wonderly         Michael Sokolov        Warren Cheung\n              Hao-yang Wang           Mike Engber         Warwick Allison\n              Helge Hafting           Mike Gallop          Yitzhak Sapir\n          Irina Rempt-Drijfhout     Mike Passaretti\n              Izchak Miller         Mike Stephenson\n\nBrand  and product names are trademarks or registered trade-\nmarks of their respective holders.\n[[분류:넷핵]]"
}